Index: configure
===================================================================
--- configure	(revision 36094)
+++ configure	(revision 43814)
@@ -7753,16 +7753,18 @@
 # env. variable. 
 if [ "$PLATFORM_MAC" = "yes" ] && [ "$CFG_MAC_XARCH" != "no" ] ; then
     if echo "$CFG_MAC_ARCHS" | grep '\<x86\>' > /dev/null 2>&1; then
-        QMakeVar add QMAKE_CFLAGS "-Xarch_i386 -mmacosx-version-min=10.4"
-        QMakeVar add QMAKE_CXXFLAGS "-Xarch_i386 -mmacosx-version-min=10.4"
-        QMakeVar add QMAKE_LFLAGS "-Xarch_i386 -mmacosx-version-min=10.4"
-        QMakeVar add QMAKE_OBJECTIVE_CFLAGS_X86 "-arch i386 -Xarch_i386 -mmacosx-version-min=10.4"
+		# Orig = 10.4
+        QMakeVar add QMAKE_CFLAGS "-Xarch_i386 -mmacosx-version-min=10.5"
+        QMakeVar add QMAKE_CXXFLAGS "-Xarch_i386 -mmacosx-version-min=10.5"
+        QMakeVar add QMAKE_LFLAGS "-Xarch_i386 -mmacosx-version-min=10.5"
+        QMakeVar add QMAKE_OBJECTIVE_CFLAGS_X86 "-arch i386 -Xarch_i386 -mmacosx-version-min=10.5"
     fi
     if echo "$CFG_MAC_ARCHS" | grep '\<ppc\>' > /dev/null 2>&1; then
-        QMakeVar add QMAKE_CFLAGS "-Xarch_ppc -mmacosx-version-min=10.4"
-        QMakeVar add QMAKE_CXXFLAGS "-Xarch_ppc -mmacosx-version-min=10.4"
-        QMakeVar add QMAKE_LFLAGS "-Xarch_ppc -mmacosx-version-min=10.4"
-        QMakeVar add QMAKE_OBJECTIVE_CFLAGS_PPC "-arch ppc -Xarch_ppc -mmacosx-version-min=10.4"
+		# Orig = 10.4
+        QMakeVar add QMAKE_CFLAGS "-Xarch_ppc -mmacosx-version-min=10.5"
+        QMakeVar add QMAKE_CXXFLAGS "-Xarch_ppc -mmacosx-version-min=10.5"
+        QMakeVar add QMAKE_LFLAGS "-Xarch_ppc -mmacosx-version-min=10.5"
+        QMakeVar add QMAKE_OBJECTIVE_CFLAGS_PPC "-arch ppc -Xarch_ppc -mmacosx-version-min=10.5"
     fi
     if echo "$CFG_MAC_ARCHS" | grep '\<x86_64\>' > /dev/null 2>&1; then
         QMakeVar add QMAKE_CFLAGS "-Xarch_x86_64 -mmacosx-version-min=10.5"
Index: src/corelib/global/qglobal.h
===================================================================
--- src/corelib/global/qglobal.h	(revision 36094)
+++ src/corelib/global/qglobal.h	(revision 43814)
@@ -1603,6 +1603,7 @@
         MV_10_5 = 0x0007,
         MV_10_6 = 0x0008,
         MV_10_7 = 0x0009,
+        MV_10_8 = 0x0010,
 
         /* codenames */
         MV_CHEETAH = MV_10_0,
@@ -1612,7 +1613,8 @@
         MV_TIGER = MV_10_4,
         MV_LEOPARD = MV_10_5,
         MV_SNOWLEOPARD = MV_10_6,
-        MV_LION = MV_10_7
+        MV_LION = MV_10_7,
+        MV_MOUNTAINLION = MV_10_8,
     };
     static const MacVersion MacintoshVersion;
 #endif
@@ -2769,6 +2771,7 @@
     && !(defined(Q_WS_QPA))
 #  define QT_NO_RAWFONT
 #endif
+#undef QT_NO_RAWFONT
 
 namespace QtPrivate {
 //like std::enable_if
Index: src/corelib/kernel/qeventdispatcher_unix.cpp
===================================================================
--- src/corelib/kernel/qeventdispatcher_unix.cpp	(revision 36094)
+++ src/corelib/kernel/qeventdispatcher_unix.cpp	(revision 43814)
@@ -476,6 +476,9 @@
 
 void QTimerInfoList::registerTimer(int timerId, int interval, QObject *object)
 {
+    updateCurrentTime();
+    repairTimersIfNeeded();
+
     QTimerInfo *t = new QTimerInfo;
     t->id = timerId;
     t->interval.tv_sec  = interval / 1000;
Index: src/corelib/tools/qharfbuzz.cpp
===================================================================
--- src/corelib/tools/qharfbuzz.cpp	(revision 36094)
+++ src/corelib/tools/qharfbuzz.cpp	(revision 43814)
@@ -130,6 +130,22 @@
     HB_FreeFace(face);
 }
 
+HB_Error qHB_GSUB_Select_Script(HB_GSUBHeader*  gsub,
+				 HB_UInt         script_tag,
+				 HB_UShort*       script_index)
+{
+    return HB_GSUB_Select_Script(gsub, script_tag, script_index);
+}
+
+HB_Error qHB_GSUB_Select_Feature(HB_GSUBHeader*  gsub,
+				  HB_UInt         feature_tag,
+				  HB_UShort        script_index,
+				  HB_UShort        language_index,
+				  HB_UShort*       feature_index)
+{
+    return HB_GSUB_Select_Feature(gsub, feature_tag, script_index, language_index, feature_index);
+}
+
 void qGetCharAttributes(const HB_UChar16 *string, hb_uint32 stringLength,
                         const HB_ScriptItem *items, hb_uint32 numItems,
                         HB_CharAttributes *attributes)
@@ -137,4 +153,35 @@
     HB_GetCharAttributes(string, stringLength, items, numItems, attributes);
 }
 
+
+HB_Error qHBBufferNew(HB_Buffer *buffer)
+{
+    return hb_buffer_new(buffer);
+}
+
+HB_Error qHBBufferAddGlyph(HB_Buffer buffer,
+                           HB_UInt glyph_index,
+                           HB_UInt properties,
+                           HB_UInt cluster )
+{
+    return hb_buffer_add_glyph(buffer, glyph_index, properties, cluster);
+}
+
+HB_Error qHB_GSUB_Add_Feature(HB_GSUBHeader* gsub,
+                               HB_UShort feature_index,
+                               HB_UInt property)
+{
+    return HB_GSUB_Add_Feature(gsub, feature_index, property);
+}
+
+HB_Error qHB_GSUB_Clear_Features(HB_GSUBHeader* gsub)
+{
+ return HB_GSUB_Clear_Features(gsub);
+}
+
+HB_Error qHB_GSUB_Apply_String(HB_GSUBHeader* gsub, HB_Buffer buffer)
+{
+    return HB_GSUB_Apply_String(gsub, buffer);
+}
+
 QT_END_NAMESPACE
Index: src/corelib/tools/qlocale_mac.mm
===================================================================
--- src/corelib/tools/qlocale_mac.mm	(revision 36094)
+++ src/corelib/tools/qlocale_mac.mm	(revision 43814)
@@ -439,8 +439,12 @@
                  kCFPreferencesAnyApplication,
                  kCFPreferencesCurrentUser,
                  kCFPreferencesAnyHost);
+        QStringList result;
+        if (languages == NULL) {
+            result.append(QString::fromUtf8(getMacLocaleName().constData()));
+            return QVariant(result);
+        }
         const int cnt = CFArrayGetCount(languages);
-        QStringList result;
         result.reserve(cnt);
         for (int i = 0; i < cnt; ++i) {
             const QString lang = QCFString::toQString(
Index: src/corelib/tools/qlocale_win.cpp
===================================================================
--- src/corelib/tools/qlocale_win.cpp	(revision 36094)
+++ src/corelib/tools/qlocale_win.cpp	(revision 43814)
@@ -525,7 +525,7 @@
 QVariant QSystemLocalePrivate::uiLanguages()
 {
     if (QSysInfo::windowsVersion() >= QSysInfo::WV_VISTA) {
-        typedef BOOL (*GetUserPreferredUILanguagesFunc) (
+        typedef BOOL (WINAPI *GetUserPreferredUILanguagesFunc) (
                     DWORD dwFlags,
                     PULONG pulNumLanguages,
                     PWSTR pwszLanguagesBuffer,
Index: src/corelib/tools/qdatetime.cpp
===================================================================
--- src/corelib/tools/qdatetime.cpp	(revision 36094)
+++ src/corelib/tools/qdatetime.cpp	(revision 43814)
@@ -1656,10 +1656,16 @@
 #if defined(Q_OS_WINCE)
     startTick = NullTime;
 #endif
+
+	while (ms>999) {
+		ms = ms/10;
+	}
+
     if (!isValid(h,m,s,ms)) {
         mds = NullTime;                // make this invalid
         return false;
-    }
+	}
+
     mds = (h*SECS_PER_HOUR + m*SECS_PER_MIN + s)*1000 + ms;
     return true;
 }
@@ -1935,7 +1941,7 @@
 
 bool QTime::isValid(int h, int m, int s, int ms)
 {
-    return (uint)h < 24 && (uint)m < 60 && (uint)s < 60 && (uint)ms < 1000;
+	return (uint)h < 24 && (uint)m < 60 && (uint)s < 60 && (uint)ms < 1000;
 }
 
 
@@ -4360,7 +4366,7 @@
                                    // 23 for the stepBy case.
     case MinuteSection:
     case SecondSection: return 59;
-    case MSecSection: return 999;
+    case MSecSection: return 9999999;
     case YearSection2Digits:
     case YearSection: return 9999; // sectionMaxSize will prevent
                                    // people from typing in a larger
@@ -4586,7 +4592,8 @@
 
             case 'z':
                 if (parserType != QVariant::Date) {
-                    const SectionNode sn = { MSecSection, i - add, countRepeat(newFormat, i, 3) < 3 ? 1 : 3 };
+                    int count = countRepeat(newFormat, i, 7);
+                    const SectionNode sn = { MSecSection, i - add, count < 3 ? 1 : count };
                     newSectionNodes.append(sn);
                     appendSeparator(&newSeparators, newFormat, index, i - index, lastQuote);
                     i += sn.count - 1;
@@ -4759,7 +4766,7 @@
             return ret;
         }
 #endif
-    case MSecSection: return 3;
+    case MSecSection: return 7;
     case YearSection: return 4;
     case YearSection2Digits: return 2;
 
@@ -4983,7 +4990,10 @@
                 } else if (num > absMax) {
                     state = Intermediate;
                 } else if (!done && (fi & (FixedWidth|Numeric)) == (FixedWidth|Numeric)) {
-                    if (skipToNextSection(sectionIndex, currentValue, digitsStr)) {
+                    // If we have a field that has to be of a fixed length, 
+                    // and the number of digits already parsed matches the size specified by the format, we're done
+                    bool validTextSize = (sectiontextSize == sn.count);
+                    if (validTextSize || skipToNextSection(sectionIndex, currentValue, digitsStr)) {
                         state = Acceptable;
                         const int missingZeroes = sectionmaxsize - digitsStr.size();
                         text.insert(index, QString().fill(QLatin1Char('0'), missingZeroes));
@@ -5591,7 +5601,7 @@
     const SectionNode &sn = sectionNode(index);
     switch (sn.type) {
         // Time. unit is msec
-    case MSecSection: return 999;
+    case MSecSection: return 9999999;
     case SecondSection: return 59 * 1000;
     case MinuteSection: return 59 * 60 * 1000;
     case Hour24Section: case Hour12Section: return 59 * 60 * 60 * 1000;
Index: src/corelib/tools/qharfbuzz_p.h
===================================================================
--- src/corelib/tools/qharfbuzz_p.h	(revision 36094)
+++ src/corelib/tools/qharfbuzz_p.h	(revision 43814)
@@ -69,6 +69,30 @@
 Q_CORE_EXPORT HB_Face qHBNewFace(void *font, HB_GetFontTableFunc tableFunc);
 Q_CORE_EXPORT void qHBFreeFace(HB_Face);
 
+Q_CORE_EXPORT HB_Error qHB_GSUB_Select_Script(HB_GSUBHeader*  gsub,
+				 HB_UInt         script_tag,
+				 HB_UShort*       script_index);
+
+Q_CORE_EXPORT HB_Error qHB_GSUB_Select_Feature(HB_GSUBHeader* gsub,
+				                               HB_UInt feature_tag,
+				                               HB_UShort script_index,
+				                               HB_UShort language_index,
+				                               HB_UShort* feature_index);
+
+Q_CORE_EXPORT HB_Error qHB_GSUB_Add_Feature(HB_GSUBHeader* gsub,
+                                            HB_UShort feature_index,
+                                            HB_UInt property);
+
+Q_CORE_EXPORT HB_Error qHBBufferNew(HB_Buffer *buffer);
+Q_CORE_EXPORT HB_Error qHBBufferAddGlyph(HB_Buffer buffer,
+                                         HB_UInt glyph_index,
+                                         HB_UInt properties,
+                                         HB_UInt cluster );
+
+Q_CORE_EXPORT HB_Error qHB_GSUB_Clear_Features(HB_GSUBHeader* gsub);
+
+Q_CORE_EXPORT HB_Error qHB_GSUB_Apply_String(HB_GSUBHeader* gsub, HB_Buffer buffer);
+
 Q_DECLARE_TYPEINFO(HB_GlyphAttributes, Q_PRIMITIVE_TYPE);
 Q_DECLARE_TYPEINFO(HB_FixedPoint, Q_PRIMITIVE_TYPE);
 
Index: src/corelib/io/qsettings_mac.cpp
===================================================================
--- src/corelib/io/qsettings_mac.cpp	(revision 36094)
+++ src/corelib/io/qsettings_mac.cpp	(revision 43814)
@@ -46,6 +46,10 @@
 #include "qvarlengtharray.h"
 #include "private/qcore_mac_p.h"
 
+#ifndef QT_NO_QOBJECT
+#include "qcoreapplication.h"
+#endif
+
 QT_BEGIN_NAMESPACE
 
 static const CFStringRef hostNames[2] = { kCFPreferencesCurrentHost, kCFPreferencesAnyHost };
@@ -580,7 +584,37 @@
                                            const QString &application)
 {
     if (format == QSettings::NativeFormat) {
-        return new QMacSettingsPrivate(scope, organization, application);
+        QString org = organization;
+        QString app = application;
+#if 0
+        static int forAppStore = -1;
+        if (forAppStore == -1) {
+            // Check for a Key called "QtForAppStore" in Info.plist
+            forAppStore = 0;
+            CFBundleRef mainBundle;
+            mainBundle = CFBundleGetMainBundle();
+            CFStringRef key = QCFString::toCFStringRef(QLatin1String("QtForAppStore"));
+            CFTypeRef val = CFBundleGetValueForInfoDictionaryKey(mainBundle, key);
+            if (CFGetTypeID(val) == CFStringGetTypeID()
+                    && !QCFString::toQString((CFStringRef)val).compare(QLatin1String("yes"), Qt::CaseInsensitive)) {
+                // The value for "QtForAppStore"' is "Yes"
+                forAppStore = 1;
+            }
+            //Release the variables
+        }
+        // Check whether to apply AppStore folder restrictions.
+        if (forAppStore) {
+            CFBundleRef mainBundle;
+            mainBundle = CFBundleGetMainBundle();
+            QString identifier = QCFString::toQString(CFBundleGetIdentifier(mainBundle));
+            QStringList parts = identifier.split(QChar('.'));
+            if (parts.count() >= 3) {
+                app = QStringList(parts.mid(2)).join(".");
+                org = parts[1] + QLatin1Char('.') +parts[0];
+            }
+	}
+#endif
+        return new QMacSettingsPrivate(scope, org, app);
     } else {
         return new QConfFileSettingsPrivate(format, scope, organization, application);
     }
Index: src/corelib/io/qurl.cpp
===================================================================
--- src/corelib/io/qurl.cpp	(revision 36094)
+++ src/corelib/io/qurl.cpp	(revision 43814)
@@ -5433,7 +5433,19 @@
         if (key == QByteArray::fromRawData(query + pos, valuedelim - pos)) {
             if (end < d->query.size())
                 ++end; // remove additional '%'
-            d->query.remove(pos, end - pos);
+
+	    if (pos != 0 && query[pos-1] == d->pairDelimiter)
+	    {
+		    if (end == d->query.size()) {
+			d->query.remove(pos - 1, end - pos + 1);
+		    } else {
+			d->query.remove(pos - 1, end - pos);
+		    }
+
+	    } else {
+		    d->query.remove(pos, end - pos);
+	    }
+
             return;
         }
         pos = end + 1;
Index: src/plugins/graphicssystems/opengl/opengl.pro
===================================================================
--- src/plugins/graphicssystems/opengl/opengl.pro	(revision 36094)
+++ src/plugins/graphicssystems/opengl/opengl.pro	(revision 43814)
@@ -11,3 +11,6 @@
 INSTALLS += target
 
 symbian: TARGET.UID3 = 0x2002131B
+
+INCLUDEPATH += ../../../3rdparty/accessplugin
+HEADERS += ../../../../3rdparty/accessplugin/accessplugininterface.h
Index: src/plugins/graphicssystems/trace/trace.pro
===================================================================
--- src/plugins/graphicssystems/trace/trace.pro	(revision 36094)
+++ src/plugins/graphicssystems/trace/trace.pro	(revision 43814)
@@ -10,4 +10,6 @@
 
 target.path += $$[QT_INSTALL_PLUGINS]/graphicssystems
 INSTALLS += target
-INCLUDEPATH += ../../../3rdparty/harfbuzz/src
+INCLUDEPATH += ../../../3rdparty/harfbuzz/src \
+               ../../../3rdparty/accessplugin
+HEADERS += ../../../3rdparty/accessplugin/accessplugininterface.h
Index: src/declarative/declarative.pro
===================================================================
--- src/declarative/declarative.pro	(revision 36094)
+++ src/declarative/declarative.pro	(revision 43814)
@@ -39,5 +39,5 @@
 linux-g++-maemo:DEFINES += QDECLARATIVEVIEW_NOBACKGROUND
 
 DEFINES += QT_NO_OPENTYPE
-INCLUDEPATH += ../3rdparty/harfbuzz/src
+INCLUDEPATH += ../3rdparty/harfbuzz/src ../3rdparty/accessplugin ../corelib/tools
 
Index: src/gui/kernel/qgesturemanager.cpp
===================================================================
--- src/gui/kernel/qgesturemanager.cpp	(revision 36094)
+++ src/gui/kernel/qgesturemanager.cpp	(revision 43814)
@@ -48,6 +48,7 @@
 #include "private/qapplication_p.h"
 #include "qgesture.h"
 #include "qevent.h"
+#include "qmenu.h"
 #include "qgraphicsitem.h"
 
 #ifdef Q_WS_MAC
@@ -479,7 +480,7 @@
         }
     }
     // find all gesture contexts for the widget tree
-    w = w->isWindow() ? 0 : w->parentWidget();
+    //w = w->isWindow() ? 0 : w->parentWidget();
     while (w)
     {
         for (ContextIterator it = w->d_func()->gestureContext.begin(),
@@ -616,6 +617,15 @@
                 if (context->isWidgetType())
                     target = static_cast<QWidget *>(context);
             }
+
+			// Found nothing, let's send the gesture to some top-level widget anyway!
+			if (!target)
+				target = QApplication::activeModalWidget();
+			if (!target)
+				target = QApplication::activePopupWidget();
+			if (!target)
+				target = QApplication::activeWindow();
+
             if (target)
                 m_gestureTargets.insert(gesture, target);
         }
Index: src/gui/kernel/qwidget.cpp
===================================================================
--- src/gui/kernel/qwidget.cpp	(revision 36094)
+++ src/gui/kernel/qwidget.cpp	(revision 43814)
@@ -5636,6 +5636,17 @@
 #endif
                                 , sharedPainter, backingStore);
     }
+    
+    if(q->property("inverted").toBool())
+    {
+        QPainter p(pdev);
+        QBrush brush(Qt::white);
+        toBePainted.translate(offset.x(),offset.y());
+        p.setClipRegion(toBePainted);
+        p.setBrush(brush);
+        p.setCompositionMode(QPainter::CompositionMode_Difference);
+        p.drawRect(offset.x(),offset.y(),q->width(),q->height());
+    }
 }
 
 void QWidgetPrivate::render(QPaintDevice *target, const QPoint &targetOffset,
Index: src/gui/kernel/qcursor_qws.cpp
===================================================================
--- src/gui/kernel/qcursor_qws.cpp	(revision 36094)
+++ src/gui/kernel/qcursor_qws.cpp	(revision 43814)
@@ -116,6 +116,9 @@
 
 QPoint QCursor::pos()
 {
+#if defined (QT_NO_QWS_CURSOR)
+    return QPoint(0, 0);
+#endif
     // This doesn't know about hotspots yet so we disable it
     //qt_accel_update_cursor();
     if (qt_last_x)
Index: src/gui/kernel/qapplication.cpp
===================================================================
--- src/gui/kernel/qapplication.cpp	(revision 36094)
+++ src/gui/kernel/qapplication.cpp	(revision 43814)
@@ -5807,6 +5807,12 @@
             }
 
             if (!widget) {
+                if (!window)
+                    window = QApplication::activeModalWidget();
+                if (!window)
+                    window = QApplication::activePopupWidget();
+                if (!window)
+                    window = QApplication::activeWindow();
                 // determine which widget this event will go to
                 if (!window)
                     window = QApplication::topLevelAt(touchPoint.screenPos().toPoint());
@@ -5817,14 +5823,26 @@
                     widget = window;
             }
 
+			/* This little bit doesn't look like it makes sense for our modality scheme, because closestWidget will return
+			 * whatever is below the the touch point.
+			 *
             if (deviceType == QTouchEvent::TouchScreen) {
                 int closestTouchPointId = d->findClosestTouchPointId(touchPoint.screenPos());
                 QWidget *closestWidget = d->widgetForTouchPointId.value(closestTouchPointId).data();
+
+                if (!closestWidget || (closestWidget == QApplication::activeWindow()) || (closestWidget == QApplication::activePopupWidget()))
+                    closestWidget = QApplication::activeModalWidget();
+                if (!closestWidget || (closestWidget == QApplication::activeWindow()))
+                    closestWidget = QApplication::activePopupWidget();
+                if (!closestWidget)
+                    closestWidget = QApplication::activeWindow();
+
                 if (closestWidget
                     && (widget.data()->isAncestorOf(closestWidget) || closestWidget->isAncestorOf(widget.data()))) {
                     widget = closestWidget;
                 }
             }
+            */
 
             d->widgetForTouchPointId[touchPoint.id()] = widget;
             touchPoint.d->startScreenPos = touchPoint.screenPos();
Index: src/gui/image/qimage.cpp
===================================================================
--- src/gui/image/qimage.cpp	(revision 36094)
+++ src/gui/image/qimage.cpp	(revision 43814)
@@ -6652,6 +6652,7 @@
         if (mode == Qt::SmoothTransformation) {
             p.setRenderHint(QPainter::Antialiasing);
             p.setRenderHint(QPainter::SmoothPixmapTransform);
+            p.setRenderHint(QPainter::Dithering);
         }
         p.setTransform(mat);
         p.drawImage(QPoint(0, 0), *this);
Index: src/gui/image/qpicture.cpp
===================================================================
--- src/gui/image/qpicture.cpp	(revision 36094)
+++ src/gui/image/qpicture.cpp	(revision 43814)
@@ -916,6 +916,8 @@
                                    bool(ul & QPainter::Antialiasing));
             painter->setRenderHint(QPainter::SmoothPixmapTransform,
                                    bool(ul & QPainter::SmoothPixmapTransform));
+            painter->setRenderHint(QPainter::Dithering,
+                                   bool(ul & QPainter::Dithering));
             break;
         case QPicturePrivate::PdcSetCompositionMode:
             s >> ul;
Index: src/gui/image/image.pri
===================================================================
--- src/gui/image/image.pri	(revision 36094)
+++ src/gui/image/image.pri	(revision 43814)
@@ -113,3 +113,6 @@
 NEON_SOURCES += image/qimage_neon.cpp
 SSE2_SOURCES += image/qimage_sse2.cpp
 SSSE3_SOURCES += image/qimage_ssse3.cpp
+
+HEADERS += ../3rdparty/accessplugin/accessplugininterface.h
+INCLUDEPATH += ../3rdparty/accessplugin
Index: src/gui/styles/qstylesheetstyle.cpp
===================================================================
--- src/gui/styles/qstylesheetstyle.cpp	(revision 36094)
+++ src/gui/styles/qstylesheetstyle.cpp	(revision 43814)
@@ -1569,8 +1569,8 @@
             parser.init(wid->styleSheet());
             if (!parser.parse(&ss)) {
                 parser.init(QLatin1String("* {") + wid->styleSheet() + QLatin1Char('}'));
-                if (!parser.parse(&ss))
-                   qWarning("Could not parse stylesheet of widget %p", wid);
+                if (!parser.parse(&ss)) 
+                   qWarning() << "Could not parse stylesheet of widget " << wid;
             }
             ss.origin = StyleSheetOrigin_Inline;
             styleSheetCaches->styleSheetCache.insert(wid, ss);
Index: src/gui/text/qglyphrun_p.h
===================================================================
--- src/gui/text/qglyphrun_p.h	(revision 36094)
+++ src/gui/text/qglyphrun_p.h	(revision 43814)
@@ -1,122 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
-** All rights reserved.
-** Contact: Nokia Corporation (qt-info@nokia.com)
-**
-** This file is part of the QtGui module of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef QGLYPHRUN_P_H
-#define QGLYPHRUN_P_H
-
-//
-//  W A R N I N G
-//  -------------
-//
-// This file is not part of the Qt API.  It exists for the convenience
-// of internal files.  This header file may change from version to version
-// without notice, or even be removed.
-//
-// We mean it.
-//
-
-#include "qglyphrun.h"
-#include "qrawfont.h"
-
-#include <qfont.h>
-
-#if !defined(QT_NO_RAWFONT)
-
-QT_BEGIN_HEADER
-
-QT_BEGIN_NAMESPACE
-
-class QGlyphRunPrivate: public QSharedData
-{
-public:
-    QGlyphRunPrivate()
-        : overline(false)
-        , underline(false)
-        , strikeOut(false)
-        , glyphIndexData(glyphIndexes.constData())
-        , glyphIndexDataSize(0)
-        , glyphPositionData(glyphPositions.constData())
-        , glyphPositionDataSize(0)
-    {
-    }
-
-    QGlyphRunPrivate(const QGlyphRunPrivate &other)
-      : QSharedData(other)
-      , glyphIndexes(other.glyphIndexes)
-      , glyphPositions(other.glyphPositions)
-      , rawFont(other.rawFont)
-      , overline(other.overline)
-      , underline(other.underline)
-      , strikeOut(other.strikeOut)
-      , glyphIndexData(other.glyphIndexData)
-      , glyphIndexDataSize(other.glyphIndexDataSize)
-      , glyphPositionData(other.glyphPositionData)
-      , glyphPositionDataSize(other.glyphPositionDataSize)
-    {
-    }
-
-    QVector<quint32> glyphIndexes;
-    QVector<QPointF> glyphPositions;
-    QRawFont rawFont;
-
-    uint overline  : 1;
-    uint underline : 1;
-    uint strikeOut : 1;
-
-    const quint32 *glyphIndexData;
-    int glyphIndexDataSize;
-
-    const QPointF *glyphPositionData;
-    int glyphPositionDataSize;
-
-    static QGlyphRunPrivate *get(const QGlyphRun &glyphRun)
-    {
-        return glyphRun.d.data();
-    }
-};
-
-QT_END_NAMESPACE
-
-QT_END_HEADER
-
-#endif // QGLYPHS_P_H
-
-#endif // QT_NO_RAWFONT
Index: src/gui/text/qglyphrun.h
===================================================================
--- src/gui/text/qglyphrun.h	(revision 36094)
+++ src/gui/text/qglyphrun.h	(revision 43814)
@@ -1,113 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
-** All rights reserved.
-** Contact: Nokia Corporation (qt-info@nokia.com)
-**
-** This file is part of the QtGui module of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef QGLYPHRUN_H
-#define QGLYPHRUN_H
-
-#include <QtCore/qsharedpointer.h>
-#include <QtCore/qvector.h>
-#include <QtCore/qpoint.h>
-#include <QtGui/qrawfont.h>
-
-#if !defined(QT_NO_RAWFONT)
-
-QT_BEGIN_HEADER
-
-QT_BEGIN_NAMESPACE
-
-QT_MODULE(Gui)
-
-class QGlyphRunPrivate;
-class Q_GUI_EXPORT QGlyphRun
-{
-public:
-    QGlyphRun();
-    QGlyphRun(const QGlyphRun &other);
-    ~QGlyphRun();
-
-    QRawFont rawFont() const;
-    void setRawFont(const QRawFont &rawFont);
-
-    void setRawData(const quint32 *glyphIndexArray,
-                    const QPointF *glyphPositionArray,
-                    int size);
-
-    QVector<quint32> glyphIndexes() const;
-    void setGlyphIndexes(const QVector<quint32> &glyphIndexes);
-
-    QVector<QPointF> positions() const;
-    void setPositions(const QVector<QPointF> &positions);
-
-    void clear();
-
-    QGlyphRun &operator=(const QGlyphRun &other);
-
-    bool operator==(const QGlyphRun &other) const;
-    inline bool operator!=(const QGlyphRun &other) const
-    { return !operator==(other); }
-
-    void setOverline(bool overline);
-    bool overline() const;
-
-    void setUnderline(bool underline);
-    bool underline() const;
-
-    void setStrikeOut(bool strikeOut);
-    bool strikeOut() const;
-
-private:
-    friend class QGlyphRunPrivate;
-    friend class QTextLine;
-
-    QGlyphRun operator+(const QGlyphRun &other) const;
-    QGlyphRun &operator+=(const QGlyphRun &other);
-
-    void detach();
-    QExplicitlySharedDataPointer<QGlyphRunPrivate> d;
-};
-
-QT_END_NAMESPACE
-
-QT_END_HEADER
-
-#endif // QT_NO_RAWFONT
-
-#endif // QGLYPHS_H
Index: src/gui/text/qglyphrun.cpp
===================================================================
--- src/gui/text/qglyphrun.cpp	(revision 36094)
+++ src/gui/text/qglyphrun.cpp	(revision 43814)
@@ -1,358 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
-** All rights reserved.
-** Contact: Nokia Corporation (qt-info@nokia.com)
-**
-** This file is part of the QtGui module of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#include "qglobal.h"
-
-#if !defined(QT_NO_RAWFONT)
-
-#include "qglyphrun.h"
-#include "qglyphrun_p.h"
-
-QT_BEGIN_NAMESPACE
-
-/*!
-    \class QGlyphRun
-    \brief The QGlyphRun class provides direct access to the internal glyphs in a font.
-    \since 4.8
-
-    \ingroup text
-    \mainclass
-
-    When Qt displays a string of text encoded in Unicode, it will first convert the Unicode points
-    into a list of glyph indexes and a list of positions based on one or more fonts. The Unicode
-    representation of the text and the QFont object will in this case serve as a convenient
-    abstraction that hides the details of what actually takes place when displaying the text
-    on-screen. For instance, by the time the text actually reaches the screen, it may be represented
-    by a set of fonts in addition to the one specified by the user, e.g. in case the originally
-    selected font did not support all the writing systems contained in the text.
-
-    Under certain circumstances, it can be useful as an application developer to have more low-level
-    control over which glyphs in a specific font are drawn to the screen. This could for instance
-    be the case in applications that use an external font engine and text shaper together with Qt.
-    QGlyphRun provides an interface to the raw data needed to get text on the screen. It
-    contains a list of glyph indexes, a position for each glyph and a font.
-
-    It is the user's responsibility to ensure that the selected font actually contains the
-    provided glyph indexes.
-
-    QTextLayout::glyphRuns() or QTextFragment::glyphRuns() can be used to convert unicode encoded
-    text into a list of QGlyphRun objects, and QPainter::drawGlyphRun() can be used to draw the
-    glyphs.
-
-    \note Please note that QRawFont is considered local to the thread in which it is constructed.
-    This in turn means that a new QRawFont will have to be created and set on the QGlyphRun if it is
-    moved to a different thread. If the QGlyphRun contains a reference to a QRawFont from a different
-    thread than the current, it will not be possible to draw the glyphs using a QPainter, as the
-    QRawFont is considered invalid and inaccessible in this case.
-*/
-
-
-/*!
-    Constructs an empty QGlyphRun object.
-*/
-QGlyphRun::QGlyphRun() : d(new QGlyphRunPrivate)
-{
-}
-
-/*!
-    Constructs a QGlyphRun object which is a copy of \a other.
-*/
-QGlyphRun::QGlyphRun(const QGlyphRun &other)
-{
-    d = other.d;
-}
-
-/*!
-    Destroys the QGlyphRun.
-*/
-QGlyphRun::~QGlyphRun()
-{
-    // Required for QExplicitlySharedDataPointer
-}
-
-/*!
-    \internal
-*/
-void QGlyphRun::detach()
-{
-    if (d->ref != 1)
-        d.detach();
-}
-
-/*!
-    Assigns \a other to this QGlyphRun object.
-*/
-QGlyphRun &QGlyphRun::operator=(const QGlyphRun &other)
-{
-    d = other.d;
-    return *this;
-}
-
-/*!
-    Compares \a other to this QGlyphRun object. Returns true if the list of glyph indexes,
-    the list of positions and the font are all equal, otherwise returns false.
-*/
-bool QGlyphRun::operator==(const QGlyphRun &other) const
-{
-    if (d == other.d)
-        return true;
-
-    if ((d->glyphIndexDataSize != other.d->glyphIndexDataSize)
-     || (d->glyphPositionDataSize != other.d->glyphPositionDataSize)) {
-        return false;
-    }
-
-    if (d->glyphIndexData != other.d->glyphIndexData) {
-        for (int i = 0; i < d->glyphIndexDataSize; ++i) {
-            if (d->glyphIndexData[i] != other.d->glyphIndexData[i])
-               return false;
-        }
-    }
-    if (d->glyphPositionData != other.d->glyphPositionData) {
-        for (int i = 0; i < d->glyphPositionDataSize; ++i) {
-            if (d->glyphPositionData[i] != other.d->glyphPositionData[i])
-               return false;
-        }
-    }
-
-    return (d->overline == other.d->overline
-            && d->underline == other.d->underline
-            && d->strikeOut == other.d->strikeOut
-            && d->rawFont == other.d->rawFont);
-}
-
-/*!
-    \fn bool QGlyphRun::operator!=(const QGlyphRun &other) const
-
-    Compares \a other to this QGlyphRun object. Returns true if any of the list of glyph
-    indexes, the list of positions or the font are different, otherwise returns false.
-*/
-
-/*!
-    Returns the font selected for this QGlyphRun object.
-
-    \sa setRawFont()
-*/
-QRawFont QGlyphRun::rawFont() const
-{
-    return d->rawFont;
-}
-
-/*!
-    Sets the font specified by \a rawFont to be the font used to look up the
-    glyph indexes.
-
-    \sa rawFont(), setGlyphIndexes()
-*/
-void QGlyphRun::setRawFont(const QRawFont &rawFont)
-{
-    detach();
-    d->rawFont = rawFont;
-}
-
-/*!
-    Returns the glyph indexes for this QGlyphRun object.
-
-    \sa setGlyphIndexes(), setPositions()
-*/
-QVector<quint32> QGlyphRun::glyphIndexes() const
-{
-    if (d->glyphIndexes.constData() == d->glyphIndexData) {
-        return d->glyphIndexes;
-    } else {
-        QVector<quint32> indexes(d->glyphIndexDataSize);
-        qMemCopy(indexes.data(), d->glyphIndexData, d->glyphIndexDataSize * sizeof(quint32));
-        return indexes;
-    }
-}
-
-/*!
-    Set the glyph indexes for this QGlyphRun object to \a glyphIndexes. The glyph indexes must
-    be valid for the selected font.
-*/
-void QGlyphRun::setGlyphIndexes(const QVector<quint32> &glyphIndexes)
-{
-    detach();
-    d->glyphIndexes = glyphIndexes; // Keep a reference to the QVector to avoid copying
-    d->glyphIndexData = glyphIndexes.constData();
-    d->glyphIndexDataSize = glyphIndexes.size();
-}
-
-/*!
-    Returns the position of the edge of the baseline for each glyph in this set of glyph indexes.
-*/
-QVector<QPointF> QGlyphRun::positions() const
-{
-    if (d->glyphPositions.constData() == d->glyphPositionData) {
-        return d->glyphPositions;
-    } else {
-        QVector<QPointF> glyphPositions(d->glyphPositionDataSize);
-        qMemCopy(glyphPositions.data(), d->glyphPositionData,
-                 d->glyphPositionDataSize * sizeof(QPointF));
-        return glyphPositions;
-    }
-}
-
-/*!
-    Sets the positions of the edge of the baseline for each glyph in this set of glyph indexes to
-    \a positions.
-*/
-void QGlyphRun::setPositions(const QVector<QPointF> &positions)
-{
-    detach();
-    d->glyphPositions = positions; // Keep a reference to the vector to avoid copying
-    d->glyphPositionData = positions.constData();
-    d->glyphPositionDataSize = positions.size();
-}
-
-/*!
-    Clears all data in the QGlyphRun object.
-*/
-void QGlyphRun::clear()
-{
-    detach();
-    d->rawFont = QRawFont();
-    d->strikeOut = false;
-    d->overline = false;
-    d->underline = false;
-
-    setPositions(QVector<QPointF>());
-    setGlyphIndexes(QVector<quint32>());
-}
-
-/*!
-    Sets the glyph indexes and positions of this QGlyphRun to use the first \a size
-    elements in the arrays \a glyphIndexArray and \a glyphPositionArray. The data is
-    \e not copied. The caller must guarantee that the arrays are not deleted as long
-    as this QGlyphRun and any copies of it exists.
-
-    \sa setGlyphIndexes(), setPositions()
-*/
-void QGlyphRun::setRawData(const quint32 *glyphIndexArray, const QPointF *glyphPositionArray,
-                           int size)
-{
-    detach();
-    d->glyphIndexes.clear();
-    d->glyphPositions.clear();
-
-    d->glyphIndexData = glyphIndexArray;
-    d->glyphPositionData = glyphPositionArray;
-    d->glyphIndexDataSize = d->glyphPositionDataSize = size;
-}
-
-/*!
-   Returns true if this QGlyphRun should be painted with an overline decoration.
-
-   \sa setOverline()
-*/
-bool QGlyphRun::overline() const
-{
-    return d->overline;
-}
-
-/*!
-  Indicates that this QGlyphRun should be painted with an overline decoration if \a overline is true.
-  Otherwise the QGlyphRun should be painted with no overline decoration.
-
-  \sa overline()
-*/
-void QGlyphRun::setOverline(bool overline)
-{
-    if (d->overline == overline)
-        return;
-
-    detach();
-    d->overline = overline;
-}
-
-/*!
-   Returns true if this QGlyphRun should be painted with an underline decoration.
-
-   \sa setUnderline()
-*/
-bool QGlyphRun::underline() const
-{
-    return d->underline;
-}
-
-/*!
-  Indicates that this QGlyphRun should be painted with an underline decoration if \a underline is
-  true. Otherwise the QGlyphRun should be painted with no underline decoration.
-
-  \sa underline()
-*/
-void QGlyphRun::setUnderline(bool underline)
-{
-    if (d->underline == underline)
-        return;
-
-    detach();
-    d->underline = underline;
-}
-
-/*!
-   Returns true if this QGlyphRun should be painted with a strike out decoration.
-
-   \sa setStrikeOut()
-*/
-bool QGlyphRun::strikeOut() const
-{
-    return d->strikeOut;
-}
-
-/*!
-  Indicates that this QGlyphRun should be painted with an strike out decoration if \a strikeOut is
-  true. Otherwise the QGlyphRun should be painted with no strike out decoration.
-
-  \sa strikeOut()
-*/
-void QGlyphRun::setStrikeOut(bool strikeOut)
-{
-    if (d->strikeOut == strikeOut)
-        return;
-
-    detach();
-    d->strikeOut = strikeOut;
-}
-
-QT_END_NAMESPACE
-
-#endif // QT_NO_RAWFONT
Index: src/gui/text/qtextoption.cpp
===================================================================
--- src/gui/text/qtextoption.cpp	(revision 36094)
+++ src/gui/text/qtextoption.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -60,6 +60,7 @@
     : align(Qt::AlignLeft),
       wordWrap(QTextOption::WordWrap),
       design(false),
+      orientation(0),
       unused(0),
       f(0),
       tab(-1),
@@ -77,6 +78,7 @@
     : align(alignment),
       wordWrap(QTextOption::WordWrap),
       design(false),
+      orientation(0),
       unused(0),
       f(0),
       tab(-1),
@@ -103,6 +105,7 @@
       wordWrap(o.wordWrap),
       design(o.design),
       direction(o.direction),
+      orientation(o.orientation),
       unused(o.unused),
       f(o.f),
       tab(o.tab),
@@ -132,6 +135,7 @@
     align = o.align;
     wordWrap = o.wordWrap;
     design = o.design;
+    orientation = o.orientation;
     direction = o.direction;
     unused = o.unused;
     f = o.f;
Index: src/gui/text/qtextdocumentwriter.cpp
===================================================================
--- src/gui/text/qtextdocumentwriter.cpp	(revision 36094)
+++ src/gui/text/qtextdocumentwriter.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qzipwriter_p.h
===================================================================
--- src/gui/text/qzipwriter_p.h	(revision 36094)
+++ src/gui/text/qzipwriter_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfontdatabase_s60.cpp
===================================================================
--- src/gui/text/qfontdatabase_s60.cpp	(revision 36094)
+++ src/gui/text/qfontdatabase_s60.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -47,7 +47,7 @@
 #include "qdesktopservices.h"
 #include "qtemporaryfile.h"
 #include "qtextcodec.h"
-#include <private/qpixmap_raster_symbian_p.h>
+#include <private/qpixmap_s60_p.h>
 #include <private/qt_s60_p.h>
 #include "qendian.h"
 #include <private/qcore_symbian_p.h>
@@ -58,22 +58,8 @@
 #endif // SYMBIAN_ENABLE_SPLIT_HEADERS
 #endif // QT_NO_FREETYPE
 
-#if !defined(SYMBIAN_VERSION_9_4) && !defined(SYMBIAN_VERSION_9_3) && !defined(SYMBIAN_VERSION_9_2)
-#define SYMBIAN_LINKEDFONTS_SUPPORTED
-#endif // !SYMBIAN_VERSION_9_4
-
 QT_BEGIN_NAMESPACE
 
-bool qt_symbian_isLinkedFont(const TDesC &typefaceName) // Also used in qfont_s60.cpp
-{
-    bool isLinkedFont = false;
-#ifdef SYMBIAN_LINKEDFONTS_SUPPORTED
-    const QString name((const QChar*)typefaceName.Ptr(), typefaceName.Length());
-    isLinkedFont = name.endsWith(QLatin1String("LF")) && name == name.toUpper();
-#endif // SYMBIAN_LINKEDFONTS_SUPPORTED
-    return isLinkedFont;
-}
-
 QStringList qt_symbian_fontFamiliesOnFontServer() // Also used in qfont_s60.cpp
 {
     QStringList result;
@@ -166,6 +152,7 @@
     COpenFontRasterizer *m_rasterizer;
     mutable QList<const QSymbianTypeFaceExtras *> m_extras;
 
+    mutable QHash<QString, const QSymbianTypeFaceExtras *> m_extrasHash;
     mutable QSet<QString> m_applicationFontFamilies;
 };
 
@@ -268,9 +255,8 @@
             static_cast<const QSymbianFontDatabaseExtrasImplementation*>(db->symbianExtras);
     if (!dbExtras)
         return; // initializeDb() has never been called
-    QSymbianTypeFaceExtrasHash &extrasHash = S60->fontData();
     if (QSymbianTypeFaceExtras::symbianFontTableApiAvailable()) {
-        qDeleteAll(extrasHash);
+        qDeleteAll(dbExtras->m_extrasHash);
     } else {
         typedef QList<const QSymbianTypeFaceExtras *>::iterator iterator;
         for (iterator p = dbExtras->m_extras.begin(); p != dbExtras->m_extras.end(); ++p) {
@@ -279,16 +265,11 @@
         }
         dbExtras->m_extras.clear();
     }
-    extrasHash.clear();
+    dbExtras->m_extrasHash.clear();
 }
 
 void qt_cleanup_symbianFontDatabase()
 {
-    static bool cleanupDone = false;
-    if (cleanupDone)
-        return;
-    cleanupDone = true;
-
     QFontDatabasePrivate *db = privateDb();
     if (!db)
         return;
@@ -339,12 +320,9 @@
 const QSymbianTypeFaceExtras *QSymbianFontDatabaseExtrasImplementation::extras(const QString &aTypeface,
                                                                                bool bold, bool italic) const
 {
-    QSymbianTypeFaceExtrasHash &extrasHash = S60->fontData();
-    if (extrasHash.isEmpty() && QThread::currentThread() != QApplication::instance()->thread())
-        S60->addThreadLocalReleaseFunc(clear);
     const QString typeface = qt_symbian_fontNameWithAppFontMarker(aTypeface);
     const QString searchKey = typeface + QString::number(int(bold)) + QString::number(int(italic));
-    if (!extrasHash.contains(searchKey)) {
+    if (!m_extrasHash.contains(searchKey)) {
         TFontSpec searchSpec(qt_QString2TPtrC(typeface), 1);
         if (bold)
             searchSpec.iFontStyle.SetStrokeWeight(EStrokeWeightBold);
@@ -358,7 +336,7 @@
             QScopedPointer<CFont, CFontFromScreenDeviceReleaser> sFont(font);
             QSymbianTypeFaceExtras *extras = new QSymbianTypeFaceExtras(font);
             sFont.take();
-            extrasHash.insert(searchKey, extras);
+            m_extrasHash.insert(searchKey, extras);
         } else {
             const TInt err = m_store->GetNearestFontToDesignHeightInPixels(font, searchSpec);
             Q_ASSERT(err == KErrNone && font);
@@ -372,20 +350,20 @@
             const TOpenFontFaceAttrib* const attrib = openFont->FaceAttrib();
             const QString foundKey =
                     QString((const QChar*)attrib->FullName().Ptr(), attrib->FullName().Length());
-            if (!extrasHash.contains(foundKey)) {
+            if (!m_extrasHash.contains(foundKey)) {
                 QScopedPointer<CFont, CFontFromFontStoreReleaser> sFont(font);
                 QSymbianTypeFaceExtras *extras = new QSymbianTypeFaceExtras(font, openFont);
                 sFont.take();
                 m_extras.append(extras);
-                extrasHash.insert(searchKey, extras);
-                extrasHash.insert(foundKey, extras);
+                m_extrasHash.insert(searchKey, extras);
+                m_extrasHash.insert(foundKey, extras);
             } else {
                 m_store->ReleaseFont(font);
-                extrasHash.insert(searchKey, extrasHash.value(foundKey));
+                m_extrasHash.insert(searchKey, m_extrasHash.value(foundKey));
             }
         }
     }
-    return extrasHash.value(searchKey);
+    return m_extrasHash.value(searchKey);
 }
 
 void QSymbianFontDatabaseExtrasImplementation::removeAppFontData(
@@ -491,11 +469,8 @@
                                      const QSymbianFontDatabaseExtrasImplementation *dbExtras)
 {
     TTypefaceSupport typefaceSupport;
-    S60->screenDevice()->TypefaceSupport(typefaceSupport, screenDeviceFontIndex);
+        S60->screenDevice()->TypefaceSupport(typefaceSupport, screenDeviceFontIndex);
 
-    if (qt_symbian_isLinkedFont(typefaceSupport.iTypeface.iName))
-        return false;
-
     QString familyName((const QChar*)typefaceSupport.iTypeface.iName.Ptr(), typefaceSupport.iTypeface.iName.Length());
     if (qt_symbian_fontNameHasAppFontMarker(familyName)) {
         const QString &marker = QSymbianFontDatabaseExtrasImplementation::appFontMarker();
@@ -525,7 +500,7 @@
     QtFontFamily *family = privateDb()->family(familyName, true);
     family->fixedPitch = faceAttrib.IsMonoWidth();
     QtFontFoundry *foundry = family->foundry(QString(), true);
-    QtFontStyle *style = foundry->style(styleKey, QString(), true);
+    QtFontStyle *style = foundry->style(styleKey, true);
     style->smoothScalable = typefaceSupport.iIsScalable;
     style->pixelSize(0, true);
 
@@ -981,7 +956,7 @@
 
 bool QFontDatabase::supportsThreadedFontRendering()
 {
-    return QSymbianTypeFaceExtras::symbianFontTableApiAvailable();
+    return false;
 }
 
 static
Index: src/gui/text/qfont_win.cpp
===================================================================
--- src/gui/text/qfont_win.cpp	(revision 36094)
+++ src/gui/text/qfont_win.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfontengine_ft.cpp
===================================================================
--- src/gui/text/qfontengine_ft.cpp	(revision 36094)
+++ src/gui/text/qfontengine_ft.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -44,6 +44,7 @@
 #include "qtextstream.h"
 #include "qvariant.h"
 #include "qfontengine_ft_p.h"
+#include <dlfcn.h>
 
 #ifndef QT_NO_FREETYPE
 
@@ -61,6 +62,7 @@
 #include FT_TRUETYPE_TABLES_H
 #include FT_TYPE1_TABLES_H
 #include FT_GLYPH_H
+#include FT_BITMAP_H
 
 #if defined(FT_LCD_FILTER_H)
 #include FT_LCD_FILTER_H
@@ -78,10 +80,6 @@
 #include FT_ERRORS_H
 #endif
 
-#if !defined(QT_MAX_CACHED_GLYPH_SIZE)
-#  define QT_MAX_CACHED_GLYPH_SIZE 64
-#endif
-
 QT_BEGIN_NAMESPACE
 
 /*
@@ -99,7 +97,7 @@
 
 /* FreeType 2.1.10 starts to provide FT_GlyphSlot_Embolden */
 #if (FREETYPE_MAJOR*10000+FREETYPE_MINOR*100+FREETYPE_PATCH) >= 20110
-#define Q_FT_GLYPHSLOT_EMBOLDEN(slot)   FT_GlyphSlot_Embolden(slot)
+#define Q_FT_GLYPHSLOT_EMBOLDEN(slot)   GlyphSlot_Embolden(slot)
 #else
 #define Q_FT_GLYPHSLOT_EMBOLDEN(slot)
 #endif
@@ -109,6 +107,73 @@
 #define TRUNC(x)    ((x) >> 6)
 #define ROUND(x)    (((x)+32) & -64)
 
+/* FreeType 2.1.10 starts to provide FT_GlyphSlot_Embolden */
+#if (FREETYPE_MAJOR*10000+FREETYPE_MINOR*100+FREETYPE_PATCH) >= 20110
+/* see FT_GlyphSlot_Embolden@freetype/src/base/ftsynth.c */
+static void
+GlyphSlot_Embolden(FT_GlyphSlot slot)
+{
+    FT_Library  library = slot->library;
+    FT_Face     face    = slot->face;
+    FT_Error    error;
+    FT_Pos      xstr, ystr;
+
+    if (slot->format != FT_GLYPH_FORMAT_OUTLINE
+        && slot->format != FT_GLYPH_FORMAT_BITMAP)
+        return;
+
+    /* some reasonable strength */
+    xstr = FT_MulFix(face->units_per_EM,
+                     face->size->metrics.y_scale) / 24;
+    ystr = xstr;
+
+    if (slot->format == FT_GLYPH_FORMAT_OUTLINE) {
+        error = FT_Outline_Embolden(&slot->outline, xstr);
+        /* ignore error */
+
+        /* this is more than enough for most glyphs; if you need accurate */
+        /* values, you have to call FT_Outline_Get_CBox                   */
+        xstr = xstr * 2;
+        ystr = xstr;
+    } else if (slot->format == FT_GLYPH_FORMAT_BITMAP) {
+        /* round to full pixels */
+        xstr &= ~63;
+        if (xstr == 0)
+            xstr = 1 << 6;
+        ystr &= ~63;
+
+        error = FT_GlyphSlot_Own_Bitmap(slot);
+        if (error)
+            return;
+
+        error = FT_Bitmap_Embolden(library, &slot->bitmap, xstr, ystr);
+        if (error)
+            return;
+    }
+
+    if (slot->advance.x)
+        slot->advance.x += xstr;
+    else
+        slot->advance.x = (face->glyph->linearHoriAdvance>>10) + xstr;
+
+    if (slot->advance.y)
+        slot->advance.y += ystr;
+    else
+        slot->advance.y = (face->glyph->linearVertAdvance>>10) + ystr;
+
+    slot->metrics.width        += xstr;
+    slot->metrics.height       += ystr;
+    slot->metrics.horiBearingY += ystr;
+    slot->metrics.horiAdvance  += xstr;
+    slot->metrics.vertBearingX -= xstr / 2;
+    slot->metrics.vertBearingY += ystr;
+    slot->metrics.vertAdvance  += ystr;
+
+    if (slot->format == FT_GLYPH_FORMAT_BITMAP)
+        slot->bitmap_top += ystr >> 6;
+}
+#endif
+
 static HB_Error hb_getSFntTable(void *font, HB_Tag tableTag, HB_Byte *buffer, HB_UInt *length)
 {
 #if (FREETYPE_MAJOR*10000 + FREETYPE_MINOR*100 + FREETYPE_PATCH) > 20103
@@ -231,11 +296,15 @@
                 newFreetype->fontData = qt_fontdata_from_index(idx.toInt(&ok));
                 if (!ok)
                     newFreetype->fontData = QByteArray();
-            } else if (!(file.fileEngine()->fileFlags(QAbstractFileEngine::FlagsMask) & QAbstractFileEngine::LocalDiskFlag)) {
+            } else if ((file.fileEngine()->fileFlags(QAbstractFileEngine::FlagsMask) & QAbstractFileEngine::LocalDiskFlag)) {
                 if (!file.open(QIODevice::ReadOnly)) {
                     return 0;
                 }
-                newFreetype->fontData = file.readAll();
+                if (QFontDatabase::decryptFontData != NULL) {
+                    newFreetype->fontData = QFontDatabase::decryptFontData(file);
+                } else {
+                    newFreetype->fontData = file.readAll();
+                }
             }
         } else {
             newFreetype->fontData = fontData;
@@ -260,6 +329,14 @@
         newFreetype->matrix.yx = 0;
         newFreetype->unicode_map = 0;
         newFreetype->symbol_map = 0;
+
+
+        newFreetype->csmSharpnessOffset = 0;
+        newFreetype->csmSharpnessSlope = 0;
+        newFreetype->csmThicknessOffset = 0;
+        newFreetype->csmThicknessSlope = 0;
+
+   
 #ifndef QT_NO_FONTCONFIG
         newFreetype->charset = 0;
 #endif
@@ -289,6 +366,12 @@
 
         if (!FT_IS_SCALABLE(newFreetype->face) && newFreetype->face->num_fixed_sizes == 1)
             FT_Set_Char_Size (face, X_SIZE(newFreetype->face, 0), Y_SIZE(newFreetype->face, 0), 0, 0);
+            
+#if 0
+        if (!FT_IS_SCALABLE(newFreetype->face) && newFreetype->face->num_fixed_sizes == 1)
+            FT_Set_CSM_Adjustments (face,newFreetype->csmSharpnessOffset, newFreetype->csmSharpnessSlope, newFreetype->csmThicknessOffset, newFreetype->csmThicknessSlope); 
+#endif
+
 # if 0
         FcChar8 *name;
         FcPatternGetString(pattern, FC_FAMILY, 0, &name);
@@ -377,7 +460,7 @@
                 *xsize = *ysize = 0;
         }
     } else {
-        *outline_drawing = (*xsize > (QT_MAX_CACHED_GLYPH_SIZE<<6) || *ysize > (QT_MAX_CACHED_GLYPH_SIZE<<6));
+        *outline_drawing = (*xsize > (64<<6) || *ysize > (64<<6));
     }
 }
 
@@ -762,8 +845,6 @@
     }
 #endif
 
-    fontDef.styleName = QString::fromUtf8(face->style_name);
-
     unlockFace();
 
     fsType = freetype->fsType();
@@ -783,6 +864,8 @@
     int load_target = default_hint_style == HintLight
                       ? FT_LOAD_TARGET_LIGHT
                       : FT_LOAD_TARGET_NORMAL;
+    if (flags & HB_ShaperFlag_VerticalWriting)
+        load_flags |= FT_LOAD_VERTICAL_LAYOUT;
 
     if (format == Format_Mono) {
         load_target = FT_LOAD_TARGET_MONO;
@@ -801,7 +884,7 @@
     if (set && set->outline_drawing)
         load_flags = FT_LOAD_NO_BITMAP;
 
-    if (default_hint_style == HintNone || (flags & HB_ShaperFlag_UseDesignMetrics) || (set && set->outline_drawing))
+    if (default_hint_style == HintNone || (flags & HB_ShaperFlag_UseDesignMetrics))
         load_flags |= FT_LOAD_NO_HINTING;
     else
         load_flags |= load_target;
@@ -809,10 +892,109 @@
     return load_flags;
 }
 
+QFontEngineFT::Glyph *QFontEngineFT::loadGlyphMetrics(QGlyphSet *set, uint glyph, GlyphFormat format) const
+{
+    Glyph *g = set->getGlyph(glyph);
+    if (g && g->format == format)
+        return g;
+
+    bool hsubpixel = false;
+    int vfactor = 1;
+    int load_flags = loadFlags(set, format, 0, hsubpixel, vfactor);
+
+    // apply our matrix to this, but note that the metrics will not be affected by this.
+    FT_Face face = lockFace();
+    FT_Matrix matrix = this->matrix;
+    FT_Matrix_Multiply(&set->transformationMatrix, &matrix);
+    FT_Set_Transform(face, &matrix, 0);
+    freetype->matrix = matrix;
+
+    bool transform = matrix.xx != 0x10000 || matrix.yy != 0x10000 || matrix.xy != 0 || matrix.yx != 0;
+    if (transform)
+        load_flags |= FT_LOAD_NO_BITMAP;
+
+    FT_Error err = FT_Load_Glyph(face, glyph, load_flags);
+    if (err && (load_flags & FT_LOAD_NO_BITMAP)) {
+        load_flags &= ~FT_LOAD_NO_BITMAP;
+        err = FT_Load_Glyph(face, glyph, load_flags);
+    }
+    if (err == FT_Err_Too_Few_Arguments) {
+        // this is an error in the bytecode interpreter, just try to run without it
+        load_flags |= FT_LOAD_FORCE_AUTOHINT;
+        err = FT_Load_Glyph(face, glyph, load_flags);
+    }
+    if (err != FT_Err_Ok)
+        qWarning("load glyph failed err=%x face=%p, glyph=%d", err, face, glyph);
+
+    unlockFace();
+    if (set->outline_drawing)
+        return 0;
+
+    if (!g) {
+        g = new Glyph;
+        g->uploadedToServer = false;
+        g->data = 0;
+    }
+
+    FT_GlyphSlot slot = face->glyph;
+    if (embolden) Q_FT_GLYPHSLOT_EMBOLDEN(slot);
+    int left  = slot->metrics.horiBearingX;
+    int right = slot->metrics.horiBearingX + slot->metrics.width;
+    int top    = slot->metrics.horiBearingY;
+    int bottom = slot->metrics.horiBearingY - slot->metrics.height;
+
+
+#if 0
+    /* possibly adjust glyph image size for Edge outside cutoff value */
+    if( (face->glyph->outline.flags & FT_OUTLINE_FROM_ITYPE_DRV) ) {
+        FT_Outline *outline = &face->glyph->outline;
+        FT_Raster_User_Params_ITC *itc_params;
+        itc_params = (FT_Raster_User_Params_ITC *)&outline->points[outline->n_points];
+
+        if (itc_params) {
+            if (itc_params->useEdge) {
+                FT_Pos delta = (FT_CeilFix((-itc_params->outsideCutoff))) >> 16;
+                /* need to expand the image to account for Edge tuning */
+                right += delta << 1; 
+                top   -= delta << 1; 
+            } 
+        } 
+    }
+#endif
+
+
+
+    if (transform && slot->format != FT_GLYPH_FORMAT_BITMAP) { // freetype doesn't apply the transformation on the metrics
+        FT_BBox bbox;
+
+        FT_Outline_Get_CBox(&slot->outline, &bbox);
+
+        left   = bbox.xMin;
+        right  = bbox.xMax;
+        top    = bbox.yMax;
+        bottom = bbox.yMin;
+    }
+    left = FLOOR(left);
+    right = CEIL(right);
+    bottom = FLOOR(bottom);
+    top = CEIL(top);
+
+    g->width = TRUNC(right-left);
+    g->height = TRUNC(top-bottom);
+    g->x = TRUNC(left);
+    g->y = TRUNC(top);
+    g->advanceX = TRUNC(ROUND(slot->advance.x ? slot->advance.x : face->glyph->linearHoriAdvance>>10));
+    g->advanceY = TRUNC(ROUND(slot->advance.y ? slot->advance.y : face->glyph->linearVertAdvance>>10));
+    g->format = Format_None;
+
+    return g;
+}
+
 QFontEngineFT::Glyph *QFontEngineFT::loadGlyph(QGlyphSet *set, uint glyph,
                                                QFixed subPixelPosition,
                                                GlyphFormat format,
-                                               bool fetchMetricsOnly) const
+                                               bool fetchMetricsOnly,
+                                               bool vertical) const
 {
 //     Q_ASSERT(freetype->lock == 1);
 
@@ -828,7 +1010,7 @@
     }
 
     Glyph *g = set->getGlyph(glyph, subPixelPosition);
-    if (g && g->format == format) {
+    if (g && g->format == format && g->vertical == vertical) {
         if (uploadToServer && !g->uploadedToServer) {
             set->setGlyph(glyph, subPixelPosition, 0);
             delete g;
@@ -843,7 +1025,9 @@
     Q_ASSERT(format != Format_None);
     bool hsubpixel = false;
     int vfactor = 1;
-    int load_flags = loadFlags(set, format, 0, hsubpixel, vfactor);
+    int load_flags = loadFlags(set, format,
+                               vertical ? HB_ShaperFlag_VerticalWriting : 0,
+                               hsubpixel, vfactor);
 
 #ifndef Q_WS_QWS
     if (format != Format_Mono && !embeddedbitmap)
@@ -861,11 +1045,28 @@
 
     FT_Face face = freetype->face;
 
+
     FT_Vector v;
     v.x = format == Format_Mono ? 0 : FT_Pos(subPixelPosition.toReal() * 64);
     v.y = 0;
     FT_Set_Transform(face, &freetype->matrix, &v);
 
+    static bool initialized = false;
+    static FT_Error (*FT_Set_CSM_Adjustments)(FT_Face, FT_Fixed, FT_Fixed, FT_Fixed, FT_Fixed) = NULL;
+    if (!initialized) {
+        initialized = true;
+        void *ft = dlopen("libfreetype.so", RTLD_LAZY);
+        FT_Set_CSM_Adjustments = (FT_Error (*)(FT_Face, FT_Fixed, FT_Fixed, FT_Fixed, FT_Fixed)) dlsym(ft, "FT_Set_CSM_Adjustments");
+        qDebug() << "Loading iType.. " << (FT_Set_CSM_Adjustments ? "YES" : "NO");
+    }
+
+    if (FT_Set_CSM_Adjustments) {
+        FT_Set_CSM_Adjustments(freetype->face, (QFixed::fromReal(fontDef.csmSharpnessOffset).value()),
+                                               (QFixed::fromReal(fontDef.csmSharpnessSlope).value()),
+                                               (QFixed::fromReal(fontDef.csmThicknessOffset).value()),
+                                               (QFixed::fromReal(fontDef.csmThicknessSlope).value()));
+    }
+
     FT_Error err = FT_Load_Glyph(face, glyph, load_flags);
     if (err && (load_flags & FT_LOAD_NO_BITMAP)) {
         load_flags &= ~FT_LOAD_NO_BITMAP;
@@ -879,15 +1080,19 @@
     if (err != FT_Err_Ok)
         qWarning("load glyph failed err=%x face=%p, glyph=%d", err, face, glyph);
 
+
+#if 0
+// BMC removed this to fix the > 64 spacing problem
     if (set->outline_drawing && fetchMetricsOnly)
-        return 0;
+       return 0;
+#endif
 
     FT_GlyphSlot slot = face->glyph;
     if (embolden) Q_FT_GLYPHSLOT_EMBOLDEN(slot);
     FT_Library library = qt_getFreetype();
 
-    info.xOff = TRUNC(ROUND(slot->advance.x));
-    info.yOff = 0;
+    info.xOff = TRUNC(ROUND(slot->advance.x ? slot->advance.x : face->glyph->linearHoriAdvance>>10));
+    info.yOff = TRUNC(ROUND(slot->advance.y ? slot->advance.y : face->glyph->linearVertAdvance>>10));
 
     uchar *glyph_buffer = 0;
     int glyph_buffer_size = 0;
@@ -926,40 +1131,36 @@
     int right = slot->metrics.horiBearingX + slot->metrics.width;
     int top    = slot->metrics.horiBearingY;
     int bottom = slot->metrics.horiBearingY - slot->metrics.height;
-    if(transform && slot->format != FT_GLYPH_FORMAT_BITMAP) {
-        int l, r, t, b;
-        FT_Vector vector;
-        vector.x = left;
-        vector.y = top;
-        FT_Vector_Transform(&vector, &matrix);
-        l = r = vector.x;
-        t = b = vector.y;
-        vector.x = right;
-        vector.y = top;
-        FT_Vector_Transform(&vector, &matrix);
-        if (l > vector.x) l = vector.x;
-        if (r < vector.x) r = vector.x;
-        if (t < vector.y) t = vector.y;
-        if (b > vector.y) b = vector.y;
-        vector.x = right;
-        vector.y = bottom;
-        FT_Vector_Transform(&vector, &matrix);
-        if (l > vector.x) l = vector.x;
-        if (r < vector.x) r = vector.x;
-        if (t < vector.y) t = vector.y;
-        if (b > vector.y) b = vector.y;
-        vector.x = left;
-        vector.y = bottom;
-        FT_Vector_Transform(&vector, &matrix);
-        if (l > vector.x) l = vector.x;
-        if (r < vector.x) r = vector.x;
-        if (t < vector.y) t = vector.y;
-        if (b > vector.y) b = vector.y;
-        left = l;
-        right = r;
-        top = t;
-        bottom = b;
+
+
+#if 0
+    /* possibly adjust glyph image size for Edge outside cutoff value */
+    if( (face->glyph->outline.flags & FT_OUTLINE_FROM_ITYPE_DRV) ) {
+        FT_Outline *outline = &face->glyph->outline;
+        FT_Raster_User_Params_ITC *itc_params;
+        itc_params = (FT_Raster_User_Params_ITC *)&outline->points[outline->n_points];
+
+        if (itc_params) {
+            if (itc_params->useEdge) {
+                FT_Pos delta = (FT_CeilFix((-itc_params->outsideCutoff))) >> 16;
+                /* need to expand the image to account for Edge tuning */
+                right += delta << 1; 
+                top   -= delta << 1; 
+            } 
+        } 
     }
+#endif
+
+   if(transform && slot->format != FT_GLYPH_FORMAT_BITMAP) {
+        FT_BBox bbox;
+
+        FT_Outline_Get_CBox(&slot->outline, &bbox);
+
+        left   = bbox.xMin;
+        right  = bbox.xMax;
+        top    = bbox.yMax;
+        bottom = bbox.yMin;
+    }
     left = FLOOR(left);
     right = CEIL(right);
     bottom = FLOOR(bottom);
@@ -1098,15 +1299,16 @@
         g->data = 0;
     }
 
-    g->linearAdvance = slot->linearHoriAdvance >> 10;
     g->width = info.width;
     g->height = info.height;
     g->x = -info.x;
     g->y = info.y;
-    g->advance = info.xOff;
+    g->advanceX = info.xOff;
+    g->advanceY = info.yOff;
     g->format = format;
     delete [] g->data;
     g->data = glyph_buffer;
+    g->vertical = vertical;
 
     if (uploadToServer) {
         uploadGlyphToServer(set, glyph, g, &info, glyph_buffer_size);
@@ -1321,7 +1523,7 @@
 
     if (!gs) {
         // don't try to load huge fonts
-        bool draw_as_outline = fontDef.pixelSize * qSqrt(qAbs(matrix.det())) >= QT_MAX_CACHED_GLYPH_SIZE;
+        bool draw_as_outline = fontDef.pixelSize * qSqrt(qAbs(matrix.det())) >= 64;
         if (draw_as_outline)
             return 0;
 
@@ -1362,14 +1564,14 @@
 
 bool QFontEngineFT::loadGlyphs(QGlyphSet *gs, const glyph_t *glyphs, int num_glyphs,
                                const QFixedPoint *positions,
-                               GlyphFormat format)
+                               GlyphFormat format, bool vertical)
 {
     FT_Face face = 0;
 
     for (int i = 0; i < num_glyphs; ++i) {
         QFixed spp = subPixelPositionForX(positions[i].x);
         Glyph *glyph = gs->getGlyph(glyphs[i], spp);
-        if (glyph == 0 || glyph->format != format) {
+        if (glyph == 0 || glyph->format != format || glyph->vertical != vertical) {
             if (!face) {
                 face = lockFace();
                 FT_Matrix m = matrix;
@@ -1377,7 +1579,7 @@
                 FT_Set_Transform(face, &m, 0);
                 freetype->matrix = m;
             }
-            if (!loadGlyph(gs, glyphs[i], spp, format)) {
+            if (!loadGlyph(gs, glyphs[i], spp, format, false, vertical)) {
                 unlockFace();
                 return false;
             }
@@ -1410,6 +1612,7 @@
     metrics->x = QFixed::fromFixed(left);
     metrics->y = QFixed::fromFixed(-top);
     metrics->xoff = QFixed::fromFixed(face->glyph->advance.x);
+    metrics->yoff = QFixed::fromFixed(face->glyph->advance.y);
 
     if (!FT_IS_SCALABLE(freetype->face))
         QFreetypeFace::addBitmapToPath(face->glyph, p, path);
@@ -1422,12 +1625,15 @@
 
 static inline unsigned int getChar(const QChar *str, int &i, const int len)
 {
-    uint ucs4 = str[i].unicode();
-    if (str[i].isHighSurrogate() && i < len-1 && str[i+1].isLowSurrogate()) {
-        ++i;
-        ucs4 = QChar::surrogateToUcs4(ucs4, str[i].unicode());
+    unsigned int uc = str[i].unicode();
+    if (uc >= 0xd800 && uc < 0xdc00 && i < len-1) {
+        uint low = str[i+1].unicode();
+       if (low >= 0xdc00 && low < 0xe000) {
+            uc = (uc - 0xd800)*0x400 + (low - 0xdc00) + 0x10000;
+            ++i;
+        }
     }
-    return ucs4;
+    return uc;
 }
 
 bool QFontEngineFT::canRender(const QChar *string, int len)
@@ -1600,21 +1806,31 @@
     FT_Face face = 0;
     bool design = (default_hint_style == HintNone ||
                    default_hint_style == HintLight ||
-                   (flags & HB_ShaperFlag_UseDesignMetrics)) && FT_IS_SCALABLE(freetype->face);
+                   (flags & HB_ShaperFlag_UseDesignMetrics));
+    bool vertical = flags & QTextEngine::TopToBottom;
+    QFixed advance;
     for (int i = 0; i < glyphs->numGlyphs; i++) {
         Glyph *g = defaultGlyphSet.getGlyph(glyphs->glyphs[i]);
-        if (g) {
-            glyphs->advances_x[i] = design ? QFixed::fromFixed(g->linearAdvance) : QFixed(g->advance);
-        } else {
+        if (!g) {
             if (!face)
                 face = lockFace();
-            g = loadGlyph(glyphs->glyphs[i], 0, Format_None, true);
-            glyphs->advances_x[i] = design ? QFixed::fromFixed(face->glyph->linearHoriAdvance >> 10)
-                                           : QFixed::fromFixed(face->glyph->metrics.horiAdvance).round();
+            g = loadGlyph(glyphs->glyphs[i], 0, Format_None, true, vertical);
         }
-        if (fontDef.styleStrategy & QFont::ForceIntegerMetrics)
+        if (g) {
+            glyphs->advances_x[i] = QFixed(g->advanceX);
+            glyphs->advances_y[i] = QFixed(g->advanceY);
+        } else {
+            advance = design ? QFixed::fromFixed(face->glyph->linearHoriAdvance >> 10)
+                             : QFixed::fromFixed(face->glyph->metrics.horiAdvance).round();
+            glyphs->advances_x[i] = advance;
+            advance = design ? QFixed::fromFixed(face->glyph->linearVertAdvance >> 10)
+                             : QFixed::fromFixed(face->glyph->metrics.vertAdvance).round();
+            glyphs->advances_y[i] = advance;
+        }
+        if (fontDef.styleStrategy & QFont::ForceIntegerMetrics) {
             glyphs->advances_x[i] = glyphs->advances_x[i].round();
-        glyphs->advances_y[i] = 0;
+            glyphs->advances_y[i] = glyphs->advances_y[i].round();
+        }
     }
     if (face)
         unlockFace();
@@ -1646,7 +1862,11 @@
             overall.y = qMin(overall.y, y);
             xmax = qMax(xmax, x + g->width);
             ymax = qMax(ymax, y + g->height);
-            overall.xoff += qRound(g->advance);
+            if (g->vertical) {
+                overall.yoff += qRound(g->advanceY);
+            } else {
+                overall.xoff += qRound(g->advanceX);
+            }
         } else {
             int left  = FLOOR(face->glyph->metrics.horiBearingX);
             int right = CEIL(face->glyph->metrics.horiBearingX + face->glyph->metrics.width);
@@ -1659,7 +1879,12 @@
             overall.y = qMin(overall.y, y);
             xmax = qMax(xmax, x + TRUNC(right - left));
             ymax = qMax(ymax, y + TRUNC(top - bottom));
-            overall.xoff += qRound(TRUNC(ROUND(face->glyph->advance.x)));
+            
+            if (g->vertical) {
+                overall.yoff += qRound(TRUNC(ROUND(face->glyph->advance.y)));
+            } else {
+                overall.xoff += qRound(TRUNC(ROUND(face->glyph->advance.x)));
+            }
         }
     }
     overall.height = qMax(overall.height, ymax - overall.y);
@@ -1685,9 +1910,12 @@
         overall.y = -g->y;
         overall.width = g->width;
         overall.height = g->height;
-        overall.xoff = g->advance;
-        if (fontDef.styleStrategy & QFont::ForceIntegerMetrics)
+        overall.xoff = g->advanceX;
+        overall.yoff = g->advanceY;
+        if (fontDef.styleStrategy & QFont::ForceIntegerMetrics) {
             overall.xoff = overall.xoff.round();
+            overall.yoff = overall.yoff.round();
+        }
     } else {
         int left  = FLOOR(face->glyph->metrics.horiBearingX);
         int right = CEIL(face->glyph->metrics.horiBearingX + face->glyph->metrics.width);
@@ -1699,6 +1927,7 @@
         overall.x = TRUNC(left);
         overall.y = -TRUNC(top);
         overall.xoff = TRUNC(ROUND(face->glyph->advance.x));
+        overall.yoff = TRUNC(ROUND(face->glyph->advance.y));
     }
     if (face)
         unlockFace();
@@ -1768,7 +1997,8 @@
         overall.y = -g->y;
         overall.width = g->width;
         overall.height = g->height;
-        overall.xoff = g->advance;
+        overall.xoff = g->advanceX;
+        overall.yoff = g->advanceY;
     } else {
         int left  = FLOOR(face->glyph->metrics.horiBearingX);
         int right = CEIL(face->glyph->metrics.horiBearingX + face->glyph->metrics.width);
@@ -1780,6 +2010,7 @@
         overall.x = TRUNC(left);
         overall.y = -TRUNC(top);
         overall.xoff = TRUNC(ROUND(face->glyph->advance.x));
+        overall.yoff = TRUNC(ROUND(face->glyph->advance.y));
     }
     if (face)
         unlockFace();
Index: src/gui/text/qfontengine_x11.cpp
===================================================================
--- src/gui/text/qfontengine_x11.cpp	(revision 36094)
+++ src/gui/text/qfontengine_x11.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -358,7 +358,9 @@
     QVarLengthArray<ushort> _s(len);
     QChar *str = (QChar *)_s.data();
     for (int i = 0; i < len; ++i) {
-        if (s[i].isHighSurrogate() && i < len-1 && s[i+1].isLowSurrogate()) {
+        if (i < len - 1
+            && s[i].unicode() >= 0xd800 && s[i].unicode() < 0xdc00
+            && s[i+1].unicode() >= 0xdc00 && s[i].unicode() < 0xe000) {
             *str = QChar();
             ++i;
         } else {
@@ -861,8 +863,11 @@
 // Multi FT engine
 // ------------------------------------------------------------------
 
-static QFontEngine *engineForPattern(FcPattern *match, const QFontDef &request, int screen)
+static QFontEngine *engineForPattern(FcPattern *pattern, const QFontDef &request,
+                                     int screen)
 {
+    FcResult res;
+    FcPattern *match = FcFontMatch(0, pattern, &res);
     QFontEngineX11FT *engine = new QFontEngineX11FT(match, request, screen);
     if (!engine->invalid())
         return engine;
@@ -874,9 +879,9 @@
 }
 
 QFontEngineMultiFT::QFontEngineMultiFT(QFontEngine *fe, FcPattern *matchedPattern, FcPattern *p, int s, const QFontDef &req)
-    : QFontEngineMulti(2), request(req), pattern(p), fontSet(0), screen(s)
+    : QFontEngineMulti(2), request(req), pattern(p), firstEnginePattern(matchedPattern), fontSet(0), screen(s)
 {
-    firstEnginePattern = FcPatternDuplicate(matchedPattern);
+
     engines[0] = fe;
     engines.at(0)->ref.ref();
     fontDef = engines[0]->fontDef;
@@ -902,6 +907,8 @@
     extern QMutex *qt_fontdatabase_mutex();
     QMutexLocker locker(qt_fontdatabase_mutex());
 
+    extern void qt_addPatternProps(FcPattern *pattern, int screen, int script,
+                                   const QFontDef &request);
     extern QFontDef qt_FcPatternToQFontDef(FcPattern *pattern, const QFontDef &);
     extern FcFontSet *qt_fontSetForPattern(FcPattern *pattern, const QFontDef &request);
 
@@ -933,18 +940,22 @@
     Q_ASSERT(at < engines.size());
     Q_ASSERT(engines.at(at) == 0);
 
-    FcPattern *match = FcFontRenderPrepare(NULL, pattern, fontSet->fonts[at + firstFontIndex - 1]);
-    QFontDef fontDef = qt_FcPatternToQFontDef(match, this->request);
+    FcPattern *pattern = FcPatternDuplicate(fontSet->fonts[at + firstFontIndex - 1]);
+    qt_addPatternProps(pattern, screen, QUnicodeTables::Common, request);
 
+    QFontDef fontDef = qt_FcPatternToQFontDef(pattern, this->request);
+
     // note: we use -1 for the script to make sure that we keep real
     // FT engines separate from Multi engines in the font cache
     QFontCache::Key key(fontDef, -1, screen);
     QFontEngine *fontEngine = QFontCache::instance()->findEngine(key);
     if (!fontEngine) {
-        fontEngine = engineForPattern(match, request, screen);
+        FcConfigSubstitute(0, pattern, FcMatchPattern);
+        FcDefaultSubstitute(pattern);
+        fontEngine = engineForPattern(pattern, request, screen);
         QFontCache::instance()->insertEngine(key, fontEngine);
     }
-    FcPatternDestroy(match);
+    FcPatternDestroy(pattern);
     fontEngine->ref.ref();
     engines[at] = fontEngine;
 }
@@ -1112,14 +1123,17 @@
     }
 #endif
 
-    if (!init(face_id, antialias, defaultFormat))
+    if (!init(face_id, antialias, defaultFormat)) {
+        FcPatternDestroy(pattern);
         return;
+    }
 
     if (!freetype->charset) {
         FcCharSet *cs;
         FcPatternGetCharSet (pattern, FC_CHARSET, 0, &cs);
         freetype->charset = FcCharSetCopy(cs);
     }
+    FcPatternDestroy(pattern);
 }
 
 QFontEngineX11FT::~QFontEngineX11FT()
Index: src/gui/text/qrawfont.h
===================================================================
--- src/gui/text/qrawfont.h	(revision 36094)
+++ src/gui/text/qrawfont.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -70,10 +70,10 @@
 
     QRawFont();
     QRawFont(const QString &fileName,
-             qreal pixelSize,
+             int pixelSize,
              QFont::HintingPreference hintingPreference = QFont::PreferDefaultHinting);
     QRawFont(const QByteArray &fontData,
-             qreal pixelSize,
+             int pixelSize,
              QFont::HintingPreference hintingPreference = QFont::PreferDefaultHinting);
     QRawFont(const QRawFont &other);
     ~QRawFont();
@@ -81,60 +81,56 @@
     bool isValid() const;
 
     QRawFont &operator=(const QRawFont &other);
-
     bool operator==(const QRawFont &other) const;
-    inline bool operator!=(const QRawFont &other) const
-    { return !operator==(other); }
 
     QString familyName() const;
-    QString styleName() const;
 
     QFont::Style style() const;
     int weight() const;
 
     QVector<quint32> glyphIndexesForString(const QString &text) const;
     QVector<QPointF> advancesForGlyphIndexes(const QVector<quint32> &glyphIndexes) const;
-    bool glyphIndexesForChars(const QChar *chars, int numChars, quint32 *glyphIndexes, int *numGlyphs) const;
-    bool advancesForGlyphIndexes(const quint32 *glyphIndexes, QPointF *advances, int numGlyphs) const;
 
     QImage alphaMapForGlyph(quint32 glyphIndex,
                             AntialiasingType antialiasingType = SubPixelAntialiasing,
                             const QTransform &transform = QTransform()) const;
     QPainterPath pathForGlyph(quint32 glyphIndex) const;
 
-    void setPixelSize(qreal pixelSize);
-    qreal pixelSize() const;
+    void setPixelSize(int pixelSize);
+    int pixelSize() const;
 
     QFont::HintingPreference hintingPreference() const;
 
     qreal ascent() const;
     qreal descent() const;
-    qreal leading() const;
-    qreal xHeight() const;
-    qreal averageCharWidth() const;
-    qreal maxCharWidth() const;
 
     qreal unitsPerEm() const;
 
     void loadFromFile(const QString &fileName,
-                      qreal pixelSize,
+                      int pixelSize,
                       QFont::HintingPreference hintingPreference);
 
     void loadFromData(const QByteArray &fontData,
-                      qreal pixelSize,
+                      int pixelSize,
                       QFont::HintingPreference hintingPreference);
 
     bool supportsCharacter(quint32 ucs4) const;
-    bool supportsCharacter(QChar character) const;
+    bool supportsCharacter(const QChar &character) const;
     QList<QFontDatabase::WritingSystem> supportedWritingSystems() const;
 
     QByteArray fontTable(const char *tagName) const;
 
+    int substituteWithVerticalVariants(quint32* glyphs, const unsigned length) const;
+    bool hasVerticalGlyphs() const;
+
     static QRawFont fromFont(const QFont &font,
                              QFontDatabase::WritingSystem writingSystem = QFontDatabase::Any);
 
 private:
     friend class QRawFontPrivate;
+
+    void detach();
+
     QExplicitlySharedDataPointer<QRawFontPrivate> d;
 };
 
Index: src/gui/text/qfontengine_qws.cpp
===================================================================
--- src/gui/text/qfontengine_qws.cpp	(revision 36094)
+++ src/gui/text/qfontengine_qws.cpp	(revision 43814)
@@ -7,39 +7,40 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
 
 #include "qfontengine_p.h"
+#include <private/qunicodetables_p.h>
 #include <qwsdisplay_qws.h>
 #include <qvarlengtharray.h>
 #include <private/qpainter_p.h>
@@ -50,17 +51,15 @@
 
 #include <qdebug.h>
 
+
 #ifndef QT_NO_QWS_QPF
 
-#include "qplatformdefs.h"
 #include "qfile.h"
+#include "qdir.h"
 
+#define QT_USE_MMAP
 #include <stdlib.h>
 
-#if !defined(Q_OS_INTEGRITY)
-#define QT_USE_MMAP
-#endif
-
 #ifdef QT_USE_MMAP
 // for mmap
 #include <unistd.h>
@@ -70,25 +69,33 @@
 #include <fcntl.h>
 #include <errno.h>
 
-#ifndef MAP_FILE
-#  define MAP_FILE 0
+#  if defined(QT_LINUXBASE) && !defined(MAP_FILE)
+     // LSB 3.2 does not define MAP_FILE
+#    define MAP_FILE 0
+#  endif
+
 #endif
-#ifndef MAP_FAILED
-#  define MAP_FAILED (void *)-1
-#endif
 
-#endif // QT_USE_MMAP
+#endif // QT_NO_QWS_QPF
 
 QT_BEGIN_NAMESPACE
 
+#ifndef QT_NO_QWS_QPF
+QT_BEGIN_INCLUDE_NAMESPACE
+#include "qplatformdefs.h"
+QT_END_INCLUDE_NAMESPACE
+
 static inline unsigned int getChar(const QChar *str, int &i, const int len)
 {
-    uint ucs4 = str[i].unicode();
-    if (str[i].isHighSurrogate() && i < len-1 && str[i+1].isLowSurrogate()) {
-        ++i;
-        ucs4 = QChar::surrogateToUcs4(ucs4, str[i].unicode());
+    unsigned int uc = str[i].unicode();
+    if (uc >= 0xd800 && uc < 0xdc00 && i < len-1) {
+        uint low = str[i+1].unicode();
+       if (low >= 0xdc00 && low < 0xe000) {
+            uc = (uc - 0xd800)*0x400 + (low - 0xdc00) + 0x10000;
+            ++i;
+        }
     }
-    return ucs4;
+    return uc;
 }
 
 #define FM_SMOOTH 1
@@ -154,10 +161,17 @@
     QPFGlyphTree* more;
     QPFGlyph* glyph;
 public:
+#ifdef QT_USE_MMAP
     QPFGlyphTree(uchar*& data)
     {
         read(data);
     }
+#else
+    QPFGlyphTree(QIODevice& f)
+    {
+        read(f);
+    }
+#endif
 
     ~QPFGlyphTree()
     {
@@ -223,6 +237,7 @@
     {
     }
 
+#ifdef QT_USE_MMAP
     void read(uchar*& data)
     {
         // All node data first
@@ -232,7 +247,19 @@
         // Then all video data
         readData(data);
     }
+#else
+    void read(QIODevice& f)
+    {
+        // All node data first
+        readNode(f);
+        // Then all non-video data
+        readMetrics(f);
+        // Then all video data
+        readData(f);
+    }
+#endif
 
+#ifdef QT_USE_MMAP
     void readNode(uchar*& data)
     {
         uchar rw = *data++;
@@ -258,7 +285,38 @@
         if ( more )
             more->readNode(data);
     }
+#else
+    void readNode(QIODevice& f)
+    {
+        char rw;
+        char cl;
+        f.getChar(&rw);
+        f.getChar(&cl);
+        min = (rw << 8) | cl;
+        f.getChar(&rw);
+        f.getChar(&cl);
+        max = (rw << 8) | cl;
+        char flags;
+        f.getChar(&flags);
+        if ( flags & 1 )
+            less = new QPFGlyphTree;
+        else
+            less = 0;
+        if ( flags & 2 )
+            more = new QPFGlyphTree;
+        else
+            more = 0;
+        int n = max-min+1;
+        glyph = new QPFGlyph[n];
 
+        if ( less )
+            less->readNode(f);
+        if ( more )
+            more->readNode(f);
+    }
+#endif
+
+#ifdef QT_USE_MMAP
     void readMetrics(uchar*& data)
     {
         int n = max-min+1;
@@ -271,7 +329,22 @@
         if ( more )
             more->readMetrics(data);
     }
+#else
+    void readMetrics(QIODevice& f)
+    {
+        int n = max-min+1;
+        for (int i=0; i<n; i++) {
+            glyph[i].metrics = new QPFGlyphMetrics;
+            f.read((char*)glyph[i].metrics, sizeof(QPFGlyphMetrics));
+        }
+        if ( less )
+            less->readMetrics(f);
+        if ( more )
+            more->readMetrics(f);
+    }
+#endif
 
+#ifdef QT_USE_MMAP
     void readData(uchar*& data)
     {
         int n = max-min+1;
@@ -286,6 +359,24 @@
         if ( more )
             more->readData(data);
     }
+#else
+    void readData(QIODevice& f)
+    {
+        int n = max-min+1;
+        for (int i=0; i<n; i++) {
+            QSize s( glyph[i].metrics->width, glyph[i].metrics->height );
+            //############### s = qt_screen->mapToDevice( s );
+            uint datasize = glyph[i].metrics->linestep * s.height();
+            glyph[i].data = new uchar[datasize]; // ### deleted?
+            f.read((char*)glyph[i].data, datasize);
+        }
+        if ( less )
+            less->readData(f);
+        if ( more )
+            more->readData(f);
+    }
+#endif
+
 };
 
 class QFontEngineQPF1Data
@@ -293,58 +384,73 @@
 public:
     QPFFontMetrics fm;
     QPFGlyphTree *tree;
-    uchar *mmapStart;
+    void *mmapStart;
     size_t mmapLength;
-#ifdef QT_USE_MMAP
-    bool used_mmap;
-#endif
 };
 
+#if defined(Q_OS_INTEGRITY)
+static void *qt_mmap(void *start, size_t length, int /*prot*/, int /*flags*/, int fd, off_t offset)
+{
+    // INTEGRITY cannot mmap local files - load it into a local buffer
+    if (::lseek(fd, offset, SEEK_SET) == -1) {
+#  if defined(DEBUG_FONTENGINE)
+        perror("lseek failed");
+#  endif
+    }
+    void *buf = malloc(length);
+    if (::read(fd, buf, length) != (ssize_t)length) {
+#  if defined(DEBUG_FONTENGINE)
+        perror("read failed");
+#  endif
+    }
+
+    return buf;
+}
+#else
+static inline void *qt_mmap(void *start, size_t length, int prot, int flags, int fd, off_t offset)
+{
+    return mmap(start, length, prot, flags, fd, offset);
+}
+#endif
+
+
+
 QFontEngineQPF1::QFontEngineQPF1(const QFontDef&, const QString &fn)
 {
     cache_cost = 1;
 
-    int fd = QT_OPEN(QFile::encodeName(fn).constData(), O_RDONLY, 0);
-    if (fd == -1)
-        qFatal("Failed to open '%s'", QFile::encodeName(fn).constData());
-
+    int f = QT_OPEN( QFile::encodeName(fn), O_RDONLY, 0);
+    Q_ASSERT(f>=0);
     QT_STATBUF st;
-    if (QT_FSTAT(fd, &st) != 0)
-        qFatal("Failed to stat '%s'", QFile::encodeName(fn).constData());
+    if ( QT_FSTAT( f, &st ) )
+        qFatal("Failed to stat %s",QFile::encodeName(fn).data());
+    uchar* data = (uchar*)qt_mmap( 0, // any address
+                                st.st_size, // whole file
+                                PROT_READ, // read-only memory
+#if defined(Q_OS_INTEGRITY)
+	                        0,
+#elif !defined(Q_OS_SOLARIS) && !defined(Q_OS_QNX4) && !defined(Q_OS_VXWORKS)
+                                MAP_FILE | MAP_PRIVATE, // swap-backed map from file
+#else
+                                MAP_PRIVATE,
+#endif
+                                f, 0 ); // from offset 0 of f
+#if !defined(MAP_FAILED) && (defined(Q_OS_QNX4) || defined(Q_OS_INTEGRITY))
+#define MAP_FAILED ((void *)-1)
+#endif
+    if ( !data || data == (uchar*)MAP_FAILED )
+        qFatal("Failed to mmap %s",QFile::encodeName(fn).data());
+    QT_CLOSE(f);
 
     d = new QFontEngineQPF1Data;
-    d->mmapStart = 0;
+    d->mmapStart = data;
     d->mmapLength = st.st_size;
+    memcpy(reinterpret_cast<char*>(&d->fm),data,sizeof(d->fm));
 
-#ifdef QT_USE_MMAP
-    d->used_mmap = true;
-    d->mmapStart = (uchar *)::mmap(0, st.st_size,             // any address, whole file
-                                   PROT_READ,                 // read-only memory
-                                   MAP_FILE | MAP_PRIVATE,    // swap-backed map from file
-                                   fd, 0);                   // from offset 0 of fd
-    if (d->mmapStart == (uchar *)MAP_FAILED)
-        d->mmapStart = 0;
-#endif
-
-    if (!d->mmapStart) {
-#ifdef QT_USE_MMAP
-        d->used_mmap = false;
-#endif
-        d->mmapStart = new uchar[d->mmapLength];
-        if (QT_READ(fd, d->mmapStart, d->mmapLength) != d->mmapLength)
-            qFatal("Failed to read '%s'", QFile::encodeName(fn).constData());
-    }
-    QT_CLOSE(fd);
-
-    if (d->mmapStart) {
-        uchar* data = d->mmapStart;
-
-        memcpy(reinterpret_cast<char*>(&d->fm), data, sizeof(d->fm));
-        data += sizeof(d->fm);
-
-        d->tree = new QPFGlyphTree(data);
-        glyphFormat = (d->fm.flags & FM_SMOOTH) ? QFontEngineGlyphCache::Raster_A8
-                                                : QFontEngineGlyphCache::Raster_Mono;
+    data += sizeof(d->fm);
+    d->tree = new QPFGlyphTree(data);
+    glyphFormat = (d->fm.flags & FM_SMOOTH) ? QFontEngineGlyphCache::Raster_A8
+                  : QFontEngineGlyphCache::Raster_Mono;
 #if 0
     qDebug() << "font file" << fn
              << "ascent" << d->fm.ascent << "descent" << d->fm.descent
@@ -356,19 +462,12 @@
              << "underlinepos" << d->fm.underlinepos
              << "underlinewidth" << d->fm.underlinewidth;
 #endif
-    }
 }
 
 QFontEngineQPF1::~QFontEngineQPF1()
 {
-    if (d->mmapStart) {
-#if defined(QT_USE_MMAP)
-        if (d->used_mmap)
-            ::munmap(d->mmapStart, d->mmapLength);
-        else
-#endif
-            delete [] d->mmapStart;
-    }
+    if (d->mmapStart)
+        munmap(d->mmapStart, d->mmapLength);
     delete d->tree;
     delete d;
 }
Index: src/gui/text/qfontenginedirectwrite_p.h
===================================================================
--- src/gui/text/qfontenginedirectwrite_p.h	(revision 36094)
+++ src/gui/text/qfontenginedirectwrite_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -86,10 +86,6 @@
 
     glyph_metrics_t boundingBox(const QGlyphLayout &glyphs);
     glyph_metrics_t boundingBox(glyph_t g);
-    glyph_metrics_t alphaMapBoundingBox(glyph_t glyph,
-                                        QFixed subPixelPosition,
-                                        const QTransform &matrix,
-                                        GlyphFormat format);
 
     QFixed ascent() const;
     QFixed descent() const;
@@ -101,7 +97,7 @@
 
     bool supportsSubPixelPositions() const;
 
-    QImage alphaMapForGlyph(glyph_t, QFixed subPixelPosition, const QTransform &t);
+    QImage alphaMapForGlyph(glyph_t glyph, QFixed subPixelPosition);
     QImage alphaRGBMapForGlyph(glyph_t t, QFixed subPixelPosition, int margin,
                                const QTransform &xform);
 
Index: src/gui/text/qfontinfo.h
===================================================================
--- src/gui/text/qfontinfo.h	(revision 36094)
+++ src/gui/text/qfontinfo.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -61,7 +61,6 @@
     QFontInfo &operator=(const QFontInfo &);
 
     QString family() const;
-    QString styleName() const;
     int pixelSize() const;
     int pointSize() const;
     qreal pointSizeF() const;
Index: src/gui/text/qtexttable.cpp
===================================================================
--- src/gui/text/qtexttable.cpp	(revision 36094)
+++ src/gui/text/qtexttable.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qstatictext.cpp
===================================================================
--- src/gui/text/qstatictext.cpp	(revision 36094)
+++ src/gui/text/qstatictext.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the test suite of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -427,17 +427,14 @@
     public:
         DrawTextItemRecorder(bool untransformedCoordinates, bool useBackendOptimizations)
                 : m_dirtyPen(false), m_useBackendOptimizations(useBackendOptimizations),
-                  m_untransformedCoordinates(untransformedCoordinates), m_currentColor(Qt::black)
+                  m_untransformedCoordinates(untransformedCoordinates)
         {
         }
 
         virtual void updateState(const QPaintEngineState &newState)
         {
-            if (newState.state() & QPaintEngine::DirtyPen
-                && newState.pen().color() != m_currentColor) {
+            if (newState.state() & QPaintEngine::DirtyPen)
                 m_dirtyPen = true;
-                m_currentColor = newState.pen().color();
-            }
         }
 
         virtual void drawTextItem(const QPointF &position, const QTextItem &textItem)
@@ -453,7 +450,7 @@
             currentItem.positionOffset = m_glyphs.size(); // Offset into position pool
             currentItem.useBackendOptimizations = m_useBackendOptimizations;
             if (m_dirtyPen)
-                currentItem.color = m_currentColor;
+                currentItem.color = state->pen().color();
 
             QTransform matrix = m_untransformedCoordinates ? QTransform() : state->transform();
             matrix.translate(position.x(), position.y());
@@ -524,7 +521,6 @@
         bool m_dirtyPen;
         bool m_useBackendOptimizations;
         bool m_untransformedCoordinates;
-        QColor m_currentColor;
     };
 
     class DrawTextItemDevice: public QPaintDevice
Index: src/gui/text/qfontengine.cpp
===================================================================
--- src/gui/text/qfontengine.cpp	(revision 36094)
+++ src/gui/text/qfontengine.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -49,6 +49,7 @@
 #include <qmath.h>
 #include <qendian.h>
 #include <private/qharfbuzz_p.h>
+#include "accessplugininterface.h"
 
 QT_BEGIN_NAMESPACE
 
@@ -103,9 +104,16 @@
         qglyphs.glyphs[i] = glyphs[i];
 
     fe->recalcAdvances(&qglyphs, flags & HB_ShaperFlag_UseDesignMetrics ? QFlags<QTextEngine::ShaperFlag>(QTextEngine::DesignMetrics) : QFlags<QTextEngine::ShaperFlag>(0));
+    int shaperFlags = 0;
+    bool vertical = flags & HB_ShaperFlag_VerticalWriting;
+    if (flags & HB_ShaperFlag_UseDesignMetrics)
+        shaperFlags |= QTextEngine::DesignMetrics;
+    if (vertical)
+        shaperFlags |= QTextEngine::TopToBottom;
+    fe->recalcAdvances(&qglyphs, QFlags<QTextEngine::ShaperFlag>(shaperFlags));
 
     for (hb_uint32 i = 0; i < numGlyphs; ++i)
-        advances[i] = qglyphs.advances_x[i].value();
+        advances[i] = vertical ? qglyphs.advances_y[i].value() : qglyphs.advances_x[i].value();
 }
 
 static HB_Bool hb_canRender(HB_Font font, const HB_UChar16 *string, hb_uint32 length)
@@ -170,6 +178,7 @@
 QFontEngine::QFontEngine()
     : QObject()
 {
+    loadPlugin();
     ref = 0;
     cache_count = 0;
     fsType = 0;
@@ -237,6 +246,21 @@
     return metrics;
 }
 
+glyph_metrics_t QFontEngine::boundingBox(const QGlyphLayout &glyphs, Qt::Orientation orientation)
+{
+    // default implementation simply ignores orientation
+    Q_UNUSED(orientation);
+    return boundingBox(glyphs);
+}
+
+glyph_metrics_t QFontEngine::boundingBox(glyph_t glyph, Qt::Orientation orientation)
+{
+    // default implementation simply ignores orientation
+    Q_UNUSED(orientation);
+    return boundingBox(glyph);
+}
+
+
 QFixed QFontEngine::xHeight() const
 {
     QGlyphLayoutArray<8> glyphs;
@@ -280,10 +304,12 @@
         int i = glyphs.numGlyphs;
         int totalKashidas = 0;
         while(i--) {
-            if (glyphs.attributes[i].dontPrint)
-                continue;
-            xpos += glyphs.advances_x[i] + QFixed::fromFixed(glyphs.justifications[i].space_18d6);
-            ypos += glyphs.advances_y[i];
+            if (flags & QTextItem::TopToBottom) {
+                // TODO justifications ??
+                ypos += glyphs.advances_y[i];
+            } else {
+                xpos += glyphs.advances_x[i] + QFixed::fromFixed(glyphs.justifications[i].space_18d6);   
+            }
             totalKashidas += glyphs.justifications[i].nKashidas;
         }
         positions.resize(glyphs.numGlyphs+totalKashidas);
@@ -295,8 +321,11 @@
                 ++i;
                 continue;
             }
-            xpos -= glyphs.advances_x[i];
-            ypos -= glyphs.advances_y[i];
+            if (flags & QTextItem::TopToBottom) {
+                ypos -= glyphs.advances_y[i];
+            } else {
+                xpos -= glyphs.advances_x[i];   
+            }
 
             QFixed gpos_x = xpos + glyphs.offsets[i].x;
             QFixed gpos_y = ypos + glyphs.offsets[i].y;
@@ -316,8 +345,11 @@
                 int nglyphs = 7;
                 stringToCMap(&ch, 1, &g, &nglyphs, 0);
                 for (uint k = 0; k < glyphs.justifications[i].nKashidas; ++k) {
-                    xpos -= g.advances_x[0];
-                    ypos -= g.advances_y[0];
+                    if (flags & QTextItem::TopToBottom) {
+                        ypos -= g.advances_y[0];
+                    } else {
+                        xpos -= g.advances_x[0];
+                    }
 
                     QFixed gpos_x = xpos + glyphs.offsets[i].x;
                     QFixed gpos_y = ypos + glyphs.offsets[i].y;
@@ -347,8 +379,13 @@
                     positions[current].x = xpos + glyphs.offsets[i].x;
                     positions[current].y = ypos + glyphs.offsets[i].y;
                     glyphs_out[current] = glyphs.glyphs[i];
-                    xpos += glyphs.advances_x[i] + QFixed::fromFixed(glyphs.justifications[i].space_18d6);
-                    ypos += glyphs.advances_y[i];
+
+                    if (flags & QTextItem::TopToBottom) {
+                        // TODO justifications ??
+                        ypos += glyphs.advances_y[i];
+                    } else {
+                        xpos += glyphs.advances_x[i] + QFixed::fromFixed(glyphs.justifications[i].space_18d6);   
+                    }
                     ++current;
                 }
                 ++i;
@@ -363,8 +400,12 @@
                     positions[current].x = QFixed::fromReal(gpos.x());
                     positions[current].y = QFixed::fromReal(gpos.y());
                     glyphs_out[current] = glyphs.glyphs[i];
-                    xpos += glyphs.advances_x[i] + QFixed::fromFixed(glyphs.justifications[i].space_18d6);
-                    ypos += glyphs.advances_y[i];
+                    if (flags & QTextItem::TopToBottom) {
+                        // TODO justifications ??
+                        ypos += glyphs.advances_y[i];
+                    } else {
+                        xpos += glyphs.advances_x[i] + QFixed::fromFixed(glyphs.justifications[i].space_18d6);   
+                    }
                     ++current;
                 }
                 ++i;
@@ -381,9 +422,9 @@
     glyph_metrics_t gi = boundingBox(glyph);
     bool isValid = gi.isValid();
     if (leftBearing != 0)
-        *leftBearing = isValid ? gi.x.toReal() : qreal(0.0);
+        *leftBearing = isValid ? gi.x.toReal() : 0.0;
     if (rightBearing != 0)
-        *rightBearing = isValid ? (gi.xoff - gi.x - gi.width).toReal() : qreal(0.0);
+        *rightBearing = isValid ? (gi.xoff - gi.x - gi.width).toReal() : 0.0;
 }
 
 glyph_metrics_t QFontEngine::tightBoundingBox(const QGlyphLayout &glyphs)
@@ -423,6 +464,24 @@
     addGlyphsToPath(positioned_glyphs.data(), positions.data(), positioned_glyphs.size(), path, flags);
 }
 
+int QFontEngine::substituteWithVerticalVariants(quint32* glyphs, const unsigned length)
+{
+#if defined(Q_OS_LINUX)
+    if (pluginInterface != NULL)
+        return pluginInterface->substituteWithVerticalVariants(harfbuzzFace(), glyphs, length);
+#endif
+    return glyphs[0];
+}
+
+bool QFontEngine::hasVerticalGlyphs() const
+{
+#if defined(Q_OS_LINUX)
+    if (pluginInterface != NULL)
+        return pluginInterface->hasVerticalGlyphs(harfbuzzFace());
+#endif
+    return false;
+}
+
 #define GRID(x, y) grid[(y)*(w+1) + (x)]
 #define SET(x, y) (*(image_data + (y)*bpl + ((x) >> 3)) & (0x80 >> ((x) & 7)))
 
@@ -1337,7 +1396,8 @@
 
     int glyph_pos = 0;
     for (int i = 0; i < len; ++i) {
-        bool surrogate = (str[i].isHighSurrogate() && i < len-1 && str[i+1].isLowSurrogate());
+        bool surrogate = (str[i].unicode() >= 0xd800 && str[i].unicode() < 0xdc00 && i < len-1
+                          && str[i+1].unicode() >= 0xdc00 && str[i+1].unicode() < 0xe000);
 
         if (glyphs->glyphs[glyph_pos] == 0 && str[i].category() != QChar::Separator_Line) {
             QGlyphLayoutInstance tmp = glyphs->instance(glyph_pos);
@@ -1377,58 +1437,30 @@
     return true;
 }
 
-glyph_metrics_t QFontEngineMulti::boundingBox(const QGlyphLayout &glyphs)
+void QFontEngineMulti::processBoundingBoxForRange(const QGlyphLayout &glyphs,
+                                                  Qt::Orientation orientation,
+                                                  int start, int end, int which,
+                                                  glyph_metrics_t& overall)
 {
-    if (glyphs.numGlyphs <= 0)
-        return glyph_metrics_t();
-
-    glyph_metrics_t overall;
-
-    int which = highByte(glyphs.glyphs[0]);
-    int start = 0;
-    int end, i;
-    for (end = 0; end < glyphs.numGlyphs; ++end) {
-        const int e = highByte(glyphs.glyphs[end]);
-        if (e == which)
-            continue;
-
-        // set the high byte to zero
-        for (i = start; i < end; ++i)
-            glyphs.glyphs[i] = stripped(glyphs.glyphs[i]);
-
-        // merge the bounding box for this run
-        const glyph_metrics_t gm = engine(which)->boundingBox(glyphs.mid(start, end - start));
-
-        overall.x = qMin(overall.x, gm.x);
-        overall.y = qMin(overall.y, gm.y);
-        overall.width = overall.xoff + gm.width;
-        overall.height = qMax(overall.height + overall.y, gm.height + gm.y) -
-                         qMin(overall.y, gm.y);
-        overall.xoff += gm.xoff;
-        overall.yoff += gm.yoff;
-
-        // reset the high byte for all glyphs
-        const int hi = which << 24;
-        for (i = start; i < end; ++i)
-            glyphs.glyphs[i] = hi | glyphs.glyphs[i];
-
-        // change engine
-        start = end;
-        which = e;
-    }
-
+    int i;
     // set the high byte to zero
     for (i = start; i < end; ++i)
         glyphs.glyphs[i] = stripped(glyphs.glyphs[i]);
 
     // merge the bounding box for this run
-    const glyph_metrics_t gm = engine(which)->boundingBox(glyphs.mid(start, end - start));
+    const glyph_metrics_t gm = engine(which)->boundingBox(glyphs.mid(start, end - start), orientation);
 
     overall.x = qMin(overall.x, gm.x);
     overall.y = qMin(overall.y, gm.y);
-    overall.width = overall.xoff + gm.width;
-    overall.height = qMax(overall.height + overall.y, gm.height + gm.y) -
-                     qMin(overall.y, gm.y);
+    if (orientation == Qt::Vertical) {
+        overall.width = qMax(overall.width + overall.x, gm.width + gm.x) -
+                        qMin(overall.x, gm.x);
+        overall.height = overall.yoff + gm.height;
+    } else {
+        overall.width = overall.xoff + gm.width;
+        overall.height = qMax(overall.height + overall.y, gm.height + gm.y) -
+                         qMin(overall.y, gm.y);
+    }
     overall.xoff += gm.xoff;
     overall.yoff += gm.yoff;
 
@@ -1436,10 +1468,37 @@
     const int hi = which << 24;
     for (i = start; i < end; ++i)
         glyphs.glyphs[i] = hi | glyphs.glyphs[i];
+}
 
+glyph_metrics_t QFontEngineMulti::boundingBox(const QGlyphLayout &glyphs, Qt::Orientation orientation)
+{
+    if (glyphs.numGlyphs <= 0)
+        return glyph_metrics_t();
+
+    glyph_metrics_t overall;
+
+    int which = highByte(glyphs.glyphs[0]);
+    int start = 0;
+    int end;
+    for (end = 0; end < glyphs.numGlyphs; ++end) {
+        const int e = highByte(glyphs.glyphs[end]);
+        if (e == which)
+            continue;
+        processBoundingBoxForRange(glyphs, orientation, start, end, which, overall);
+        // change engine
+        start = end;
+        which = e;
+    }
+    processBoundingBoxForRange(glyphs, orientation, start, end, which, overall);
     return overall;
 }
 
+glyph_metrics_t QFontEngineMulti::boundingBox(const QGlyphLayout &glyphs)
+{
+    return boundingBox(glyphs, Qt::Horizontal);
+}
+
+
 void QFontEngineMulti::getGlyphBearings(glyph_t glyph, qreal *leftBearing, qreal *rightBearing)
 {
     int which = highByte(glyph);
@@ -1601,9 +1660,14 @@
 
 glyph_metrics_t QFontEngineMulti::boundingBox(glyph_t glyph)
 {
+    return boundingBox(glyph, Qt::Horizontal);
+}
+
+glyph_metrics_t QFontEngineMulti::boundingBox(glyph_t glyph, Qt::Orientation orientation)
+{
     const int which = highByte(glyph);
     Q_ASSERT(which < engines.size());
-    return engine(which)->boundingBox(stripped(glyph));
+    return engine(which)->boundingBox(stripped(glyph), orientation);
 }
 
 QFixed QFontEngineMulti::ascent() const
@@ -1681,5 +1745,28 @@
     return QImage();
 }
 
+QFontEngineInterface *QFontEngine::pluginInterface = NULL;
+bool QFontEngine::loadPlugin()
+{
+    if (pluginInterface != NULL)
+        return true;
+    static bool checked = false;
+    if (!checked) {
+        ACCESSPlugin p;
+        for (QObject *plugin = p.next(); plugin; plugin = p.next()) {
+            if (plugin) {
+                ACCESSPluginInterface *i = qobject_cast<ACCESSPluginInterface *>(plugin);
+                if (i) {
+                    qDebug("loadPlugin: loaded plugin for QFontEngine");
+                    pluginInterface = i->fontEnginePlugin();
+                    return true;
+                }
+            }
+        }
+        checked = true;
+    }
 
+    return false;
+}
+
 QT_END_NAMESPACE
Index: src/gui/text/qfontengine_win_p.h
===================================================================
--- src/gui/text/qfontengine_win_p.h	(revision 36094)
+++ src/gui/text/qfontengine_win_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfontmetrics.cpp
===================================================================
--- src/gui/text/qfontmetrics.cpp	(revision 36094)
+++ src/gui/text/qfontmetrics.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -442,10 +442,7 @@
 }
 
 /*!
-   \fn bool QFontMetrics::inFontUcs4(uint character) const
-   \since 4.8
-
-   Returns true if the given \a character encoded in UCS-4/UTF-32 is a valid
+   Returns true if the character encoded in UCS-4/UTF-32 is a valid
    character in the font; otherwise returns false.
 */
 bool QFontMetrics::inFontUcs4(uint ucs4) const
@@ -1332,11 +1329,8 @@
 }
 
 /*!
-    \fn bool QFontMetricsF::inFontUcs4(uint ch) const
-    \since 4.8
-
-    Returns true if the character given by \a ch, encoded in UCS-4/UTF-32,
-    is a valid character in the font; otherwise returns false.
+   Returns true if the character encoded in UCS-4/UTF-32 is a valid
+   character in the font; otherwise returns false.
 */
 bool QFontMetricsF::inFontUcs4(uint ucs4) const
 {
Index: src/gui/text/qfontengine_qpa.cpp
===================================================================
--- src/gui/text/qfontengine_qpa.cpp	(revision 36094)
+++ src/gui/text/qfontengine_qpa.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -226,12 +226,15 @@
 
 static inline unsigned int getChar(const QChar *str, int &i, const int len)
 {
-    uint ucs4 = str[i].unicode();
-    if (str[i].isHighSurrogate() && i < len-1 && str[i+1].isLowSurrogate()) {
-        ++i;
-        ucs4 = QChar::surrogateToUcs4(ucs4, str[i].unicode());
+    unsigned int uc = str[i].unicode();
+    if (uc >= 0xd800 && uc < 0xdc00 && i < len-1) {
+        uint low = str[i+1].unicode();
+       if (low >= 0xdc00 && low < 0xe000) {
+            uc = (uc - 0xd800)*0x400 + (low - 0xdc00) + 0x10000;
+            ++i;
+        }
     }
-    return ucs4;
+    return uc;
 }
 
 QFontEngineQPA::QFontEngineQPA(const QFontDef &def, const QByteArray &data)
Index: src/gui/text/qfontengine_qpf.cpp
===================================================================
--- src/gui/text/qfontengine_qpf.cpp	(revision 36094)
+++ src/gui/text/qfontengine_qpf.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -251,8 +251,8 @@
 {
     QList<QByteArray> removedFonts;
     QDir dir(qws_fontCacheDir(), QLatin1String("*.qsf"));
-    foreach (const QFileInfo &fi, dir.entryInfoList()) {
-        const QByteArray fileName = QFile::encodeName(fi.absoluteFilePath());
+    for (int i = 0; i < int(dir.count()); ++i) {
+        const QByteArray fileName = QFile::encodeName(dir.absoluteFilePath(dir[i]));
 
         int fd = QT_OPEN(fileName.constData(), O_RDONLY, 0);
         if (fd >= 0) {
@@ -278,12 +278,15 @@
 
 static inline unsigned int getChar(const QChar *str, int &i, const int len)
 {
-    uint ucs4 = str[i].unicode();
-    if (str[i].isHighSurrogate() && i < len-1 && str[i+1].isLowSurrogate()) {
-        ++i;
-        ucs4 = QChar::surrogateToUcs4(ucs4, str[i].unicode());
+    unsigned int uc = str[i].unicode();
+    if (uc >= 0xd800 && uc < 0xdc00 && i < len-1) {
+        uint low = str[i+1].unicode();
+       if (low >= 0xdc00 && low < 0xe000) {
+            uc = (uc - 0xd800)*0x400 + (low - 0xdc00) + 0x10000;
+            ++i;
+        }
     }
-    return ucs4;
+    return uc;
 }
 #ifdef QT_FONTS_ARE_RESOURCES
 QFontEngineQPF::QFontEngineQPF(const QFontDef &def, const uchar *bytes, int size)
@@ -318,7 +321,9 @@
             return;
 
         fileName = fontDef.family.toLower() + QLatin1Char('_')
-                   + QString::number(fontDef.pixelSize)
+                   + QString::number(fontDef.pixelSize) + QLatin1Char('_')
+                   + QString::number(fontDef.csmThicknessOffset) + QLatin1Char('_')
+                   + QString::number(fontDef.csmSharpnessOffset)
                    + QLatin1Char('_') + QString::number(fontDef.weight)
                    + (fontDef.style != QFont::StyleNormal ?
                       QLatin1String("_italic") : QLatin1String(""))
@@ -339,14 +344,14 @@
                 fd = QT_OPEN(encodedFileName, O_RDONLY);
                 if (fd == -1) {
 #if defined(DEBUG_FONTENGINE)
-                    qErrnoWarning("QFontEngineQPF: unable to open %s", encodedFileName.constData());
+                    qErrnoWarning("QFontEngineQPF: unable to open %s", encodedName.constData());
 #endif
                     return;
                 }
             }
             if (fd == -1) {
 #if defined(DEBUG_FONTENGINE)
-                qWarning("QFontEngineQPF: insufficient access rights to %s", encodedFileName.constData());
+                qWarning("QFontEngineQPF: insufficient access rights to %s", encodedName.constData());
 #endif
                 return;
             }
@@ -358,7 +363,7 @@
                 fd = QT_OPEN(encodedFileName, O_RDWR | O_EXCL | O_CREAT, 0644);
                 if (fd == -1) {
 #if defined(DEBUG_FONTENGINE)
-                    qErrnoWarning(errno, "QFontEngineQPF: open() failed for %s", encodedFileName.constData());
+                    qErrnoWarning(errno, "QFontEngineQPF: open() failed for %s", encodedName.constData());
 #endif
                     return;
                 }
@@ -371,7 +376,7 @@
                 const QByteArray &data = buffer.data();
                 if (QT_WRITE(fd, data.constData(), data.size()) == -1) {
 #if defined(DEBUG_FONTENGINE)
-                    qErrnoWarning(errno, "QFontEngineQPF: write() failed for %s", encodedFileName.constData());
+                    qErrnoWarning(errno, "QFontEngineQPF: write() failed for %s", encodedName.constData());
 #endif
                     return;
                 }
@@ -616,8 +621,8 @@
             glyphs->glyphs[i] = 0;
             continue;
         }
-        glyphs->advances_x[i] = g->advance;
-        glyphs->advances_y[i] = 0;
+        glyphs->advances_x[i] = g->advanceX;
+        glyphs->advances_y[i] = g->advanceY;
     }
 }
 
@@ -705,7 +710,9 @@
         overall.y = qMin(overall.y, y);
         xmax = qMax(xmax, x + g->width);
         ymax = qMax(ymax, y + g->height);
-        overall.xoff += g->advance;
+        overall.xoff += g->advanceX;
+        // TODO overall.yoff
+        //overall.yoff += g->advanceY;
     }
     overall.height = qMax(overall.height, ymax - overall.y);
     overall.width = xmax - overall.x;
@@ -730,7 +737,8 @@
     overall.y = g->y;
     overall.width = g->width;
     overall.height = g->height;
-    overall.xoff = g->advance;
+    overall.xoff = g->advanceX;
+    overall.yoff = g->advanceY;
     return overall;
 }
 
@@ -942,7 +950,8 @@
     g.bytesPerLine = img.bytesPerLine();
     g.x = qRound(metrics.x);
     g.y = qRound(metrics.y);
-    g.advance = qRound(metrics.xoff);
+    g.advanceX = qRound(metrics.xoff);
+    g.advanceY = qRound(metrics.yoff);
 
     QT_WRITE(fd, &g, sizeof(g));
     QT_WRITE(fd, img.bits(), img.byteCount());
Index: src/gui/text/qfontengine_mac.mm
===================================================================
--- src/gui/text/qfontengine_mac.mm	(revision 36094)
+++ src/gui/text/qfontengine_mac.mm	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -257,8 +257,10 @@
 #if !defined(QT_NO_DEBUG)
         int surrogates = 0;
         const QChar *str = item->string;
-        for (int i = item->from; i < item->from + item->length - 1; ++i)
-            surrogates += (str[i].isHighSurrogate() && str[i+1].isLowSurrogate());
+        for (int i = item->from; i < item->from + item->length - 1; ++i) {
+            surrogates += (str[i].unicode() >= 0xd800 && str[i].unicode() < 0xdc00
+                           && str[i+1].unicode() >= 0xdc00 && str[i+1].unicode() < 0xe000);
+        }
 #endif
         for (nextCharStop = item->from; nextCharStop < item->from + item->length; ++nextCharStop)
             if (item->charAttributes[nextCharStop].charStop)
@@ -326,8 +328,10 @@
             if (charOffset < item->length - 1) {
                 QChar current = item->string[item->from + charOffset];
                 QChar next = item->string[item->from + charOffset + 1];
-                if (current.isHighSurrogate() && next.isLowSurrogate())
+                if (current.unicode() >= 0xd800 && current.unicode() < 0xdc00
+                    && next.unicode() >= 0xdc00 && next.unicode() < 0xe000) {
                     item->log_clusters[charOffset + 1] = currentClusterGlyph;
+                }
             }
         }
     }
@@ -369,7 +373,7 @@
 
 bool QFontEngineMacMulti::stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs, int *nglyphs, QTextEngine::ShaperFlags flags) const
 {
-    return stringToCMap(str, len, glyphs, nglyphs, flags, /*logClusters=*/0, /*charAttributes=*/0, /*si=*/0);
+    return stringToCMap(str, len, glyphs, nglyphs, flags, /*logClusters=*/0, /*charAttributes=*/0);
 }
 
 bool QFontEngineMacMulti::stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs, int *nglyphs, QTextEngine::ShaperFlags flags,
@@ -734,12 +738,15 @@
 
 static inline unsigned int getChar(const QChar *str, int &i, const int len)
 {
-    uint ucs4 = str[i].unicode();
-    if (str[i].isHighSurrogate() && i < len-1 && str[i+1].isLowSurrogate()) {
-        ++i;
-        ucs4 = QChar::surrogateToUcs4(ucs4, str[i].unicode());
+    unsigned int uc = str[i].unicode();
+    if (uc >= 0xd800 && uc < 0xdc00 && i < len-1) {
+        uint low = str[i+1].unicode();
+       if (low >= 0xdc00 && low < 0xe000) {
+            uc = (uc - 0xd800)*0x400 + (low - 0xdc00) + 0x10000;
+            ++i;
+        }
     }
-    return ucs4;
+    return uc;
 }
 
 // Not used directly for shaping, only used to calculate m_averageCharWidth
Index: src/gui/text/qplatformfontdatabase_qpa.h
===================================================================
--- src/gui/text/qplatformfontdatabase_qpa.h	(revision 36094)
+++ src/gui/text/qplatformfontdatabase_qpa.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextdocument_p.h
===================================================================
--- src/gui/text/qtextdocument_p.h	(revision 36094)
+++ src/gui/text/qtextdocument_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qrawfont_ft.cpp
===================================================================
--- src/gui/text/qrawfont_ft.cpp	(revision 36094)
+++ src/gui/text/qrawfont_ft.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -45,9 +45,8 @@
 
 #include "qrawfont_p.h"
 #include "qfontengine_ft_p.h"
-#include "quuid.h"
 
-#if defined(Q_WS_X11) && !defined(QT_NO_FONTCONFIG)
+#if defined(Q_WS_X11)
 #  include "qfontengine_x11_p.h"
 #endif
 
@@ -55,7 +54,7 @@
 
 class QFontEngineFTRawFont
 
-#if defined(Q_WS_X11) && !defined(QT_NO_FONTCONFIG)
+#if defined(Q_WS_X11)
         : public QFontEngineX11FT
 #else
         : public QFontEngineFT
@@ -64,7 +63,7 @@
 {
 public:
     QFontEngineFTRawFont(const QFontDef &fontDef)
-#if defined(Q_WS_X11) && !defined(QT_NO_FONTCONFIG)
+#if defined(Q_WS_X11)
         : QFontEngineX11FT(fontDef)
 #else
         : QFontEngineFT(fontDef)
@@ -88,7 +87,6 @@
         FaceId faceId;
         faceId.filename = "";
         faceId.index = 0;
-        faceId.uuid = QUuid::createUuid().toByteArray();
 
         return init(faceId, true, Format_None, fontData);
     }
@@ -100,7 +98,7 @@
     // Font engine handles all resources
 }
 
-void QRawFontPrivate::platformLoadFromData(const QByteArray &fontData, qreal pixelSize,
+void QRawFontPrivate::platformLoadFromData(const QByteArray &fontData, int pixelSize,
                                            QFont::HintingPreference hintingPreference)
 {
     Q_ASSERT(fontEngine == 0);
Index: src/gui/text/qsyntaxhighlighter.h
===================================================================
--- src/gui/text/qsyntaxhighlighter.h	(revision 36094)
+++ src/gui/text/qsyntaxhighlighter.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextengine.cpp
===================================================================
--- src/gui/text/qtextengine.cpp	(revision 36094)
+++ src/gui/text/qtextengine.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -319,27 +319,7 @@
     start = stop;
 }
 
-static QChar::Direction skipBoundryNeutrals(QScriptAnalysis *analysis,
-                                            const ushort *unicode, int length,
-                                            int &sor, int &eor, QBidiControl &control)
-{
-    QChar::Direction dir = control.basicDirection();
-    int level = sor > 0 ? analysis[sor - 1].bidiLevel : control.level;
-    while (sor < length) {
-        dir = QChar::direction(unicode[sor]);
-        // Keep skipping DirBN as if it doesn't exist
-        if (dir != QChar::DirBN)
-            break;
-        analysis[sor++].bidiLevel = level;
-    }
 
-    eor = sor;
-    if (eor == length)
-        dir = control.basicDirection();
-
-    return dir;
-}
-
 // creates the next QScript items.
 static bool bidiItemize(QTextEngine *engine, QScriptAnalysis *analysis, QBidiControl &control)
 {
@@ -450,7 +430,8 @@
                 case QChar::DirAN:
                     if (eor >= 0) {
                         appendItems(analysis, sor, eor, control, dir);
-                        status.eor = dir = skipBoundryNeutrals(analysis, unicode, length, sor, eor, control);
+                        dir = eor < length ? QChar::direction(unicode[eor]) : control.basicDirection();
+                        status.eor = dir;
                     } else {
                         eor = current; status.eor = dir;
                     }
@@ -474,7 +455,8 @@
                             }
                             eor = current - 1;
                             appendItems(analysis, sor, eor, control, dir);
-                            status.eor = dir = skipBoundryNeutrals(analysis, unicode, length, sor, eor, control);
+                            dir = eor < length ? QChar::direction(unicode[eor]) : control.basicDirection();
+                            status.eor = dir;
                         } else {
                             if(status.eor != QChar::DirL) {
                                 appendItems(analysis, sor, eor, control, dir);
@@ -837,6 +819,8 @@
     QTextEngine::ShaperFlags shaperFlags(QTextEngine::GlyphIndicesOnly);
     if (item->item.bidiLevel % 2)
         shaperFlags |= QTextEngine::RightToLeft;
+    if (item->shaperFlags & HB_ShaperFlag_VerticalWriting)
+        shaperFlags |= QTextEngine::TopToBottom;
 
     bool result = fontEngine->stringToCMap(reinterpret_cast<const QChar *>(item->string + item->item.pos), item->item.length, glyphs, &nGlyphs, shaperFlags);
     item->num_glyphs = nGlyphs;
@@ -874,7 +858,7 @@
     }
 }
 
-#if !defined(QT_ENABLE_HARFBUZZ_FOR_MAC) && defined(Q_WS_MAC)
+#if !defined(QT_ENABLE_HARFBUZZ_FOR_MAC)
 static bool enableHarfBuzz()
 {
     static enum { Yes, No, Unknown } status = Unknown;
@@ -968,7 +952,7 @@
     }
 
     for (int i = 0; i < si.num_glyphs; ++i)
-        si.width += glyphs.advances_x[i] * !glyphs.attributes[i].dontPrint;
+        si.width += glyphs.advances_x[i];
 }
 
 static inline bool hasCaseChange(const QScriptItem &si)
@@ -993,7 +977,8 @@
 
     int glyph_pos = 0;
     for (int i = 0; i < length; i++) {
-        if (uc[i].isHighSurrogate() && i < length-1 && uc[i+1].isLowSurrogate()) {
+        if (uc[i].unicode() >= 0xd800 && uc[i].unicode() < 0xdc00 && i < length-1
+            && uc[i+1].unicode() >= 0xdc00 && uc[i+1].unicode() < 0xe000) {
             logClusters[i] = glyph_pos;
             logClusters[++i] = glyph_pos;
         } else {
@@ -1213,6 +1198,9 @@
         entire_shaper_item.shaperFlags |= HB_ShaperFlag_NoKerning;
     if (option.useDesignMetrics())
         entire_shaper_item.shaperFlags |= HB_ShaperFlag_UseDesignMetrics;
+    bool vertical = option.textOrientation() == Qt::Vertical;
+    if (vertical)
+        entire_shaper_item.shaperFlags |= HB_ShaperFlag_VerticalWriting;
 
     entire_shaper_item.num_glyphs = qMax(layoutData->glyphLayout.numGlyphs - layoutData->used, int(entire_shaper_item.item.length));
     if (! ensureSpace(entire_shaper_item.num_glyphs)) {
@@ -1315,7 +1303,7 @@
 
             shaper_item.glyphs = g.glyphs;
             shaper_item.attributes = g.attributes;
-            shaper_item.advances = reinterpret_cast<HB_Fixed *>(g.advances_x);
+            shaper_item.advances = reinterpret_cast<HB_Fixed *>(vertical ? g.advances_y : g.advances_x);
             shaper_item.offsets = reinterpret_cast<HB_FixedPoint *>(g.offsets);
 
             if (shaper_item.glyphIndicesPresent) {
@@ -1386,7 +1374,6 @@
     if (!stackEngine)
         delete layoutData;
     delete specialData;
-    resetFontEngineCache();
 }
 
 const HB_CharAttributes *QTextEngine::attributes() const
@@ -1447,13 +1434,6 @@
     }
 }
 
-void QTextEngine::resetFontEngineCache()
-{
-    releaseCachedFontEngine(feCache.prevFontEngine);
-    releaseCachedFontEngine(feCache.prevScaledFontEngine);
-    feCache.reset();
-}
-
 void QTextEngine::invalidate()
 {
     freeMemory();
@@ -1462,7 +1442,9 @@
     if (specialData)
         specialData->resolvedFormatIndices.clear();
 
-    resetFontEngineCache();
+    releaseCachedFontEngine(feCache.prevFontEngine);
+    releaseCachedFontEngine(feCache.prevScaledFontEngine);
+    feCache.reset();
 }
 
 void QTextEngine::clearLineData()
@@ -1537,38 +1519,33 @@
     const ushort *e = uc + length;
     int lastScript = QUnicodeTables::Common;
     while (uc < e) {
-        switch (*uc) {
-        case QChar::ObjectReplacementCharacter:
+        int script = QUnicodeTables::script(*uc);
+        if (script == QUnicodeTables::Inherited)
+            script = lastScript;
+        analysis->flags = QScriptAnalysis::None;
+        if (*uc == QChar::ObjectReplacementCharacter) {
+            if (analysis->bidiLevel % 2)
+                --analysis->bidiLevel;
             analysis->script = QUnicodeTables::Common;
             analysis->flags = QScriptAnalysis::Object;
-            break;
-        case QChar::LineSeparator:
+        } else if (*uc == QChar::LineSeparator) {
             if (analysis->bidiLevel % 2)
                 --analysis->bidiLevel;
             analysis->script = QUnicodeTables::Common;
             analysis->flags = QScriptAnalysis::LineOrParagraphSeparator;
             if (option.flags() & QTextOption::ShowLineAndParagraphSeparators)
                 *const_cast<ushort*>(uc) = 0x21B5; // visual line separator
-            break;
-        case 9: // Tab
+        } else if (*uc == 9) {
             analysis->script = QUnicodeTables::Common;
             analysis->flags = QScriptAnalysis::Tab;
             analysis->bidiLevel = control.baseLevel();
-            break;
-        case 32: // Space
-        case QChar::Nbsp:
-            if (option.flags() & QTextOption::ShowTabsAndSpaces) {
-                analysis->script = QUnicodeTables::Common;
-                analysis->flags = QScriptAnalysis::Space;
-                analysis->bidiLevel = control.baseLevel();
-                break;
-            }
-        // fall through
-        default:
-            int script = QUnicodeTables::script(*uc);
-            analysis->script = script == QUnicodeTables::Inherited ? lastScript : script;
-            analysis->flags = QScriptAnalysis::None;
-            break;
+        } else if ((*uc == 32 || *uc == QChar::Nbsp)
+                   && (option.flags() & QTextOption::ShowTabsAndSpaces)) {
+            analysis->script = QUnicodeTables::Common;
+            analysis->flags = QScriptAnalysis::Space;
+            analysis->bidiLevel = control.baseLevel();
+        } else {
+            analysis->script = script;
         }
         lastScript = analysis->script;
         ++uc;
@@ -1642,13 +1619,19 @@
 int QTextEngine::findItem(int strPos) const
 {
     itemize();
-
-    int item;
-    for (item = layoutData->items.size()-1; item > 0; --item) {
-        if (layoutData->items[item].position <= strPos)
-            break;
+    int left = 0;
+    int right = layoutData->items.size()-1;
+    while(left <= right) {
+        int middle = ((right-left)/2)+left;
+        if (strPos > layoutData->items[middle].position)
+            left = middle+1;
+        else if(strPos < layoutData->items[middle].position)
+            right = middle-1;
+        else {
+            return middle;
+        }
     }
-    return item;
+    return right;
 }
 
 QFixed QTextEngine::width(int from, int len) const
@@ -2092,8 +2075,7 @@
         }
     }
 
-    QFixed leading = leadingSpaceWidth(line);
-    QFixed need = line.width - line.textWidth - leading;
+    QFixed need = line.width - line.textWidth;
     if (need < 0) {
         // line overflows already!
         const_cast<QScriptLine &>(line).justified = true;
@@ -2437,7 +2419,7 @@
    between the text that gets truncated and the ellipsis. This is important to get
    correctly shaped results for arabic text.
 */
-static inline bool nextCharJoins(const QString &string, int pos)
+static bool nextCharJoins(const QString &string, int pos)
 {
     while (pos < string.length() && string.at(pos).category() == QChar::Mark_NonSpacing)
         ++pos;
@@ -2446,14 +2428,13 @@
     return string.at(pos).joining() != QChar::OtherJoining;
 }
 
-static inline bool prevCharJoins(const QString &string, int pos)
+static bool prevCharJoins(const QString &string, int pos)
 {
     while (pos > 0 && string.at(pos - 1).category() == QChar::Mark_NonSpacing)
         --pos;
     if (pos == 0)
         return false;
-    QChar::Joining joining = string.at(pos - 1).joining();
-    return (joining == QChar::Dual || joining == QChar::Center);
+    return (string.at(pos - 1).joining() == QChar::Dual || string.at(pos - 1).joining() == QChar::Center);
 }
 
 QString QTextEngine::elidedText(Qt::TextElideMode mode, const QFixed &width, int flags) const
@@ -2663,7 +2644,7 @@
         QFixed w = 0;
         const QGlyphLayout g = shapedGlyphs(&oldItem);
         for(int j = 0; j < breakGlyph; ++j)
-            w += g.advances_x[j] * !g.attributes[j].dontPrint;
+            w += g.advances_x[j];
 
         newItem.width = oldItem.width - w;
         oldItem.width = w;
@@ -2814,7 +2795,7 @@
         if (align & Qt::AlignRight)
             x = line.width - (line.textAdvance + leadingSpaceWidth(line));
         else if (align & Qt::AlignHCenter)
-            x = (line.width - line.textAdvance)/2 - leadingSpaceWidth(line);
+            x = (line.width - (line.textAdvance + leadingSpaceWidth(line)))/2;
     }
     return x;
 }
@@ -2849,76 +2830,6 @@
     return 0;
 }
 
-// Scan in logClusters[from..to-1] for glyph_pos
-int QTextEngine::getClusterLength(unsigned short *logClusters,
-                                  const HB_CharAttributes *attributes,
-                                  int from, int to, int glyph_pos, int *start)
-{
-    int clusterLength = 0;
-    for (int i = from; i < to; i++) {
-        if (logClusters[i] == glyph_pos && attributes[i].charStop) {
-            if (*start < 0)
-                *start = i;
-            clusterLength++;
-        }
-        else if (clusterLength)
-            break;
-    }
-    return clusterLength;
-}
-
-int QTextEngine::positionInLigature(const QScriptItem *si, int end,
-                                    QFixed x, QFixed edge, int glyph_pos,
-                                    bool cursorOnCharacter)
-{
-    unsigned short *logClusters = this->logClusters(si);
-    int clusterStart = -1;
-    int clusterLength = 0;
-
-    if (si->analysis.script != QUnicodeTables::Common &&
-        si->analysis.script != QUnicodeTables::Greek) {
-        if (glyph_pos == -1)
-            return si->position + end;
-        else {
-            int i;
-            for (i = 0; i < end; i++)
-                if (logClusters[i] == glyph_pos)
-                    break;
-            return si->position + i;
-        }
-    }
-
-    if (glyph_pos == -1 && end > 0)
-        glyph_pos = logClusters[end - 1];
-    else {
-        if (x <= edge)
-            glyph_pos--;
-    }
-
-    const HB_CharAttributes *attrs = attributes();
-    logClusters = this->logClusters(si);
-    clusterLength = getClusterLength(logClusters, attrs, 0, end, glyph_pos, &clusterStart);
-
-    if (clusterLength) {
-        const QGlyphLayout &glyphs = shapedGlyphs(si);
-        QFixed glyphWidth = glyphs.effectiveAdvance(glyph_pos);
-        // the approximate width of each individual element of the ligature
-        QFixed perItemWidth = glyphWidth / clusterLength;
-        QFixed left = x > edge ? edge : edge - glyphWidth;
-        int n = ((x - left) / perItemWidth).floor().toInt();
-        QFixed dist = x - left - n * perItemWidth;
-        int closestItem = dist > (perItemWidth / 2) ? n + 1 : n;
-        if (cursorOnCharacter && closestItem > 0)
-            closestItem--;
-        int pos = si->position + clusterStart + closestItem;
-        // Jump to the next charStop
-        while (!attrs[pos].charStop && pos < end)
-            pos++;
-        return pos;
-    }
-    return si->position + end;
-}
-
 int QTextEngine::previousLogicalPosition(int oldPos) const
 {
     const HB_CharAttributes *attrs = attributes();
@@ -2956,7 +2867,7 @@
         return lines.size() - 1;
     for (int i = 0; i < lines.size(); ++i) {
         const QScriptLine& line = lines[i];
-        if (line.from + line.length + line.trailingSpaces > pos)
+        if (line.from + line.length > pos)
             return i;
     }
     return -1;
@@ -3058,22 +2969,6 @@
     : justified(false), underlineStyle(QTextCharFormat::NoUnderline), charFormat(format),
       num_chars(0), chars(0), logClusters(0), f(0), fontEngine(0)
 {
-    f = font;
-    fontEngine = f->d->engineForScript(si.analysis.script);
-    Q_ASSERT(fontEngine);
-
-    initWithScriptItem(si);
-}
-
-QTextItemInt::QTextItemInt(const QGlyphLayout &g, QFont *font, const QChar *chars_, int numChars, QFontEngine *fe, const QTextCharFormat &format)
-    : flags(0), justified(false), underlineStyle(QTextCharFormat::NoUnderline), charFormat(format),
-      num_chars(numChars), chars(chars_), logClusters(0), f(font),  glyphs(g), fontEngine(fe)
-{
-}
-
-// Fix up flags and underlineStyle with given info
-void QTextItemInt::initWithScriptItem(const QScriptItem &si)
-{
     // explicitly initialize flags so that initFontAttributes can be called
     // multiple times on the same TextItem
     flags = 0;
@@ -3081,10 +2976,13 @@
         flags |= QTextItem::RightToLeft;
     ascent = si.ascent;
     descent = si.descent;
+    f = font;
+    fontEngine = f->d->engineForScript(si.analysis.script);
+    Q_ASSERT(fontEngine);
 
-    if (charFormat.hasProperty(QTextFormat::TextUnderlineStyle)) {
-        underlineStyle = charFormat.underlineStyle();
-    } else if (charFormat.boolProperty(QTextFormat::FontUnderline)
+    if (format.hasProperty(QTextFormat::TextUnderlineStyle)) {
+        underlineStyle = format.underlineStyle();
+    } else if (format.boolProperty(QTextFormat::FontUnderline)
                || f->d->underline) {
         underlineStyle = QTextCharFormat::SingleUnderline;
     }
@@ -3093,12 +2991,18 @@
     if (underlineStyle == QTextCharFormat::SingleUnderline)
         flags |= QTextItem::Underline;
 
-    if (f->d->overline || charFormat.fontOverline())
+    if (f->d->overline || format.fontOverline())
         flags |= QTextItem::Overline;
-    if (f->d->strikeOut || charFormat.fontStrikeOut())
+    if (f->d->strikeOut || format.fontStrikeOut())
         flags |= QTextItem::StrikeOut;
 }
 
+QTextItemInt::QTextItemInt(const QGlyphLayout &g, QFont *font, const QChar *chars_, int numChars, QFontEngine *fe)
+    : flags(0), justified(false), underlineStyle(QTextCharFormat::NoUnderline),
+      num_chars(numChars), chars(chars_), logClusters(0), f(font),  glyphs(g), fontEngine(fe)
+{
+}
+
 QTextItemInt QTextItemInt::midItem(QFontEngine *fontEngine, int firstGlyphIndex, int numGlyphs) const
 {
     QTextItemInt ti = *this;
@@ -3174,6 +3078,7 @@
       selection(_selection)
 {
     pos_x = x = QFixed::fromReal(pos.x());
+    y = QFixed::fromReal(pos.y());
 
     x += line.x;
 
@@ -3189,6 +3094,7 @@
 QScriptItem &QTextLineItemIterator::next()
 {
     x += itemWidth;
+    y += itemHeight;
 
     ++logicalItem;
     item = visualOrder[logicalItem] + firstItem;
@@ -3198,7 +3104,10 @@
         eng->shape(item);
 
     if (si->analysis.flags >= QScriptAnalysis::TabOrObject) {
-        itemWidth = si->width;
+        if (eng->option.textOrientation() == Qt::Vertical)
+            itemHeight = si->width;
+        else
+            itemWidth = si->width;
         return *si;
     }
 
@@ -3220,8 +3129,11 @@
         glyphs.attributes[glyphsEnd - 1].dontPrint = false;
 
     itemWidth = 0;
-    for (int g = glyphsStart; g < glyphsEnd; ++g)
+    itemWidth = itemHeight = 0;
+    for (int g = glyphsStart; g < glyphsEnd; ++g) {
         itemWidth += glyphs.effectiveAdvance(g);
+        itemHeight += glyphs.effectiveVerticalAdvance(g);
+    }
 
     return *si;
 }
Index: src/gui/text/qtextobject.cpp
===================================================================
--- src/gui/text/qtextobject.cpp	(revision 36094)
+++ src/gui/text/qtextobject.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -891,6 +891,11 @@
     Returns true if this text block is valid; otherwise returns false.
 */
 
+bool QTextBlock::isValid() const
+{
+    return p != 0 && p->blockMap().isValid(n);
+}
+
 /*!
     \fn QTextBlock &QTextBlock::operator=(const QTextBlock &other)
 
@@ -1488,7 +1493,7 @@
 */
 QTextBlock QTextBlock::next() const
 {
-    if (!isValid() || !p->blockMap().isValid(n))
+    if (!isValid())
         return QTextBlock();
 
     return QTextBlock(p, p->blockMap().next(n));
@@ -1659,25 +1664,25 @@
     Returns the glyphs of this text fragment. The positions of the glyphs are
     relative to the position of the QTextBlock's layout.
 
-    \sa QGlyphRun, QTextBlock::layout(), QTextLayout::position(), QPainter::drawGlyphRun()
+    \sa QGlyphs, QTextBlock::layout(), QTextLayout::position(), QPainter::drawGlyphs()
 */
 #if !defined(QT_NO_RAWFONT)
-QList<QGlyphRun> QTextFragment::glyphRuns() const
+QList<QGlyphs> QTextFragment::glyphs() const
 {
     if (!p || !n)
-        return QList<QGlyphRun>();
+        return QList<QGlyphs>();
 
     int pos = position();
     int len = length();
     if (len == 0)
-        return QList<QGlyphRun>();
+        return QList<QGlyphs>();
 
     int blockNode = p->blockMap().findNode(pos);
 
     const QTextBlockData *blockData = p->blockMap().fragment(blockNode);
     QTextLayout *layout = blockData->layout;
 
-    QList<QGlyphRun> ret;
+    QList<QGlyphs> ret;
     for (int i=0; i<layout->lineCount(); ++i) {
         QTextLine textLine = layout->lineAt(i);
         ret += textLine.glyphs(pos, len);
Index: src/gui/text/qrawfont.cpp
===================================================================
--- src/gui/text/qrawfont.cpp	(revision 36094)
+++ src/gui/text/qrawfont.cpp	(revision 43814)
@@ -7,47 +7,54 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
 
 #include "qglobal.h"
+#include <qdebug.h>
 
 #if !defined(QT_NO_RAWFONT)
 
 #include "qrawfont.h"
 #include "qrawfont_p.h"
 
+#include <QtCore/qthread.h>
 #include <QtCore/qendian.h>
 
+#include <QPluginLoader>
+#include <QDir>
+#include "qrawfontinterface.h"
+#include "accessplugininterface.h"
+
 QT_BEGIN_NAMESPACE
 
 /*!
@@ -76,8 +83,8 @@
 
    A QRawFont object represents a single, physical instance of a given font in a given pixel size.
    I.e. in the typical case it represents a set of TrueType or OpenType font tables and uses a
-   user specified pixel size to convert metrics into logical pixel units. It can be used in
-   combination with the QGlyphRun class to draw specific glyph indexes at specific positions, and
+   user specified pixel size to convert metrics into logical pixel units. In can be used in
+   combination with the QGlyphs class to draw specific glyph indexes at specific positions, and
    also have accessors to some relevant data in the physical font.
 
    QRawFont only provides support for the main font technologies: GDI and DirectWrite on Windows
@@ -86,16 +93,16 @@
 
    QRawFont can be constructed in a number of ways:
    \list
-   \o It can be constructed by calling QTextLayout::glyphs() or QTextFragment::glyphs(). The
-      returned QGlyphs objects will contain QRawFont objects which represent the actual fonts
-      used to render each portion of the text.
-   \o It can be constructed by passing a QFont object to QRawFont::fromFont(). The function
-      will return a QRawFont object representing the font that will be selected as response to
-      the QFont query and the selected writing system.
-   \o It can be constructed by passing a file name or QByteArray directly to the QRawFont
-      constructor, or by calling loadFromFile() or loadFromData(). In this case, the
-      font will not be registered in QFontDatabase, and it will not be available as part of
-      regular font selection.
+   \o \l It can be constructed by calling QTextLayout::glyphs() or QTextFragment::glyphs(). The
+         returned QGlyphs objects will contain QRawFont objects which represent the actual fonts
+         used to render each portion of the text.
+   \o \l It can be constructed by passing a QFont object to QRawFont::fromFont(). The function
+         will return a QRawFont object representing the font that will be selected as response to
+         the QFont query and the selected writing system.
+   \o \l It can be constructed by passing a file name or QByteArray directly to the QRawFont
+         constructor, or by calling loadFromFile() or loadFromData(). In this case, the
+         font will not be registered in QFontDatabase, and it will not be available as part of
+         regular font selection.
    \endlist
 
    QRawFont is considered local to the thread in which it is constructed (either using a
@@ -128,35 +135,35 @@
 QRawFont::QRawFont()
     : d(new QRawFontPrivate)
 {
+    d->loadPlugin();
 }
 
 /*!
-   Constructs a QRawFont representing the font contained in the file referenced
-   by \a fileName for the size (in pixels) given by \a pixelSize, and using the
-   hinting preference specified by \a hintingPreference.
+   Constructs a QRawFont representing the font contained in the file referenced by \a fileName,
+   with \a pixelSize size in pixels, and the selected \a hintingPreference.
 
    \note The referenced file must contain a TrueType or OpenType font.
 */
 QRawFont::QRawFont(const QString &fileName,
-                   qreal pixelSize,
+                   int pixelSize,
                    QFont::HintingPreference hintingPreference)
     : d(new QRawFontPrivate)
 {
+    d->loadPlugin();
     loadFromFile(fileName, pixelSize, hintingPreference);
 }
 
 /*!
-   Constructs a QRawFont representing the font contained in the supplied
-   \a fontData for the size (in pixels) given by \a pixelSize, and using the
-   hinting preference specified by \a hintingPreference.
+   Constructs a QRawFont representing the font contained in \a fontData.
 
    \note The data must contain a TrueType or OpenType font.
 */
 QRawFont::QRawFont(const QByteArray &fontData,
-                   qreal pixelSize,
+                   int pixelSize,
                    QFont::HintingPreference hintingPreference)
     : d(new QRawFontPrivate)
 {
+    d->loadPlugin();
     loadFromData(fontData, pixelSize, hintingPreference);
 }
 
@@ -165,6 +172,7 @@
 */
 QRawFont::QRawFont(const QRawFont &other)
 {
+    d->loadPlugin();
     d = other.d;
 }
 
@@ -189,20 +197,19 @@
 */
 bool QRawFont::isValid() const
 {
-    return d->isValid();
+    Q_ASSERT(d->thread == 0 || d->thread == QThread::currentThread());
+    return d->fontEngine != 0;
 }
 
 /*!
-   Replaces the current QRawFont with the contents of the file referenced
-   by \a fileName for the size (in pixels) given by \a pixelSize, and using the
-   hinting preference specified by \a hintingPreference.
+   Replaces the current QRawFont with the contents of the file references by \a fileName.
 
    The file must reference a TrueType or OpenType font.
 
    \sa loadFromData()
 */
 void QRawFont::loadFromFile(const QString &fileName,
-                            qreal pixelSize,
+                            int pixelSize,
                             QFont::HintingPreference hintingPreference)
 {
     QFile file(fileName);
@@ -211,19 +218,17 @@
 }
 
 /*!
-   Replaces the current QRawFont with the font contained in the supplied
-   \a fontData for the size (in pixels) given by \a pixelSize, and using the
-   hinting preference specified by \a hintingPreference.
+   Replaces the current QRawFont with the contents of \a fontData.
 
    The \a fontData must contain a TrueType or OpenType font.
 
    \sa loadFromFile()
 */
 void QRawFont::loadFromData(const QByteArray &fontData,
-                            qreal pixelSize,
+                            int pixelSize,
                             QFont::HintingPreference hintingPreference)
 {
-    d.detach();
+    detach();
     d->cleanUp();
     d->hintingPreference = hintingPreference;
     d->thread = QThread::currentThread();
@@ -231,28 +236,26 @@
 }
 
 /*!
-   This function returns a rasterized image of the glyph at the given
-   \a glyphIndex in the underlying font, using the \a transform specified.
-   If the QRawFont is not valid, this function will return an invalid QImage.
+   This function returns a rasterized image of the glyph at a given \a glyphIndex in the underlying
+   font, if the QRawFont is valid, otherwise it will return an invalid QImage.
 
    If \a antialiasingType is set to QRawFont::SubPixelAntialiasing, then the resulting image will be
    in QImage::Format_RGB32 and the RGB values of each pixel will represent the subpixel opacities of
    the pixel in the rasterization of the glyph. Otherwise, the image will be in the format of
-   QImage::Format_Indexed8 and each pixel will contain the opacity of the pixel in the
-   rasterization.
+   QImage::Format_A8 and each pixel will contain the opacity of the pixel in the rasterization.
 
-   \sa pathForGlyph(), QPainter::drawGlyphRun()
+   \sa pathForGlyph(), QPainter::drawGlyphs()
 */
 QImage QRawFont::alphaMapForGlyph(quint32 glyphIndex, AntialiasingType antialiasingType,
                                   const QTransform &transform) const
 {
-    if (!d->isValid())
+    if (!isValid())
         return QImage();
 
     if (antialiasingType == SubPixelAntialiasing)
         return d->fontEngine->alphaRGBMapForGlyph(glyphIndex, QFixed(), 0, transform);
-
-    return d->fontEngine->alphaMapForGlyph(glyphIndex, QFixed(), transform);
+    else
+        return d->fontEngine->alphaMapForGlyph(glyphIndex, QFixed(), transform);
 }
 
 /*!
@@ -265,7 +268,7 @@
 */
 QPainterPath QRawFont::pathForGlyph(quint32 glyphIndex) const
 {
-    if (!d->isValid())
+    if (!isValid())
         return QPainterPath();
 
     QFixedPoint position;
@@ -283,19 +286,16 @@
 }
 
 /*!
-    \fn bool QRawFont::operator!=(const QRawFont &other) const
-
-    Returns true if this QRawFont is not equal to \a other. Otherwise, returns false.
-*/
-
-/*!
    Returns the ascent of this QRawFont in pixel units.
 
    \sa QFontMetricsF::ascent()
 */
 qreal QRawFont::ascent() const
 {
-    return d->isValid() ? d->fontEngine->ascent().toReal() : 0.0;
+    if (!isValid())
+        return 0.0;
+
+    return d->fontEngine->ascent().toReal();
 }
 
 /*!
@@ -305,59 +305,25 @@
 */
 qreal QRawFont::descent() const
 {
-    return d->isValid() ? d->fontEngine->descent().toReal() : 0.0;
-}
+    if (!isValid())
+        return 0.0;
 
-/*!
-   Returns the xHeight of this QRawFont in pixel units.
-
-   \sa QFontMetricsF::xHeight()
-*/
-qreal QRawFont::xHeight() const
-{
-    return d->isValid() ? d->fontEngine->xHeight().toReal() : 0.0;
+    return d->fontEngine->descent().toReal();
 }
 
 /*!
-   Returns the leading of this QRawFont in pixel units.
-
-   \sa QFontMetricsF::leading()
-*/
-qreal QRawFont::leading() const
-{
-    return d->isValid() ? d->fontEngine->leading().toReal() : 0.0;
-}
-
-/*!
-   Returns the average character width of this QRawFont in pixel units.
-
-   \sa QFontMetricsF::averageCharWidth()
-*/
-qreal QRawFont::averageCharWidth() const
-{
-    return d->isValid() ? d->fontEngine->averageCharWidth().toReal() : 0.0;
-}
-
-/*!
-   Returns the width of the widest character in the font.
-
-   \sa QFontMetricsF::maxWidth()
-*/
-qreal QRawFont::maxCharWidth() const
-{
-    return d->isValid() ? d->fontEngine->maxCharWidth() : 0.0;
-}
-
-/*!
    Returns the pixel size set for this QRawFont. The pixel size affects how glyphs are
    rasterized, the size of glyphs returned by pathForGlyph(), and is used to convert
    internal metrics from design units to logical pixel units.
 
    \sa setPixelSize()
 */
-qreal QRawFont::pixelSize() const
+int QRawFont::pixelSize() const
 {
-    return d->isValid() ? d->fontEngine->fontDef.pixelSize : 0.0;
+    if (!isValid())
+        return -1;
+
+    return d->fontEngine->fontDef.pixelSize;
 }
 
 /*!
@@ -370,7 +336,10 @@
 */
 qreal QRawFont::unitsPerEm() const
 {
-    return d->isValid() ? d->fontEngine->emSquareSize().toReal() : 0.0;
+    if (!isValid())
+        return 0.0;
+
+    return d->fontEngine->emSquareSize().toReal();
 }
 
 /*!
@@ -378,17 +347,10 @@
 */
 QString QRawFont::familyName() const
 {
-    return d->isValid() ? d->fontEngine->fontDef.family : QString();
-}
+    if (!isValid())
+        return QString();
 
-/*!
-   Returns the style name of this QRawFont.
-
-   \sa QFont::styleName()
-*/
-QString QRawFont::styleName() const
-{
-    return d->isValid() ? d->fontEngine->fontDef.styleName : QString();
+    return d->fontEngine->fontDef.family;
 }
 
 /*!
@@ -398,7 +360,10 @@
 */
 QFont::Style QRawFont::style() const
 {
-    return d->isValid() ? QFont::Style(d->fontEngine->fontDef.style) : QFont::StyleNormal;
+    if (!isValid())
+        return QFont::StyleNormal;
+
+    return QFont::Style(d->fontEngine->fontDef.style);
 }
 
 /*!
@@ -408,32 +373,33 @@
 */
 int QRawFont::weight() const
 {
-    return d->isValid() ? int(d->fontEngine->fontDef.weight) : -1;
+    if (!isValid())
+        return -1;
+
+    return int(d->fontEngine->fontDef.weight);
 }
 
 /*!
-   Converts the string of unicode points given by \a text to glyph indexes
-   using the CMAP table in the underlying font, and returns a vector containing
-   the result.
+   Converts a string of unicode points to glyph indexes using the CMAP table in the
+   underlying font. Note that in cases where there are other tables in the font that affect the
+   shaping of the text, the returned glyph indexes will not correctly represent the rendering
+   of the text. To get the correctly shaped text, you can use QTextLayout to lay out and shape the
+   text, and then call QTextLayout::glyphs() to get the set of glyph index list and QRawFont pairs.
 
-   Note that, in cases where there are other tables in the font that affect the
-   shaping of the text, the returned glyph indexes will not correctly represent
-   the rendering of the text. To get the correctly shaped text, you can use
-   QTextLayout to lay out and shape the text, then call QTextLayout::glyphs()
-   to get the set of glyph index list and QRawFont pairs.
-
-   \sa advancesForGlyphIndexes(), glyphIndexesForChars(), QGlyphRun, QTextLayout::glyphRuns(), QTextFragment::glyphRuns()
+   \sa advancesForGlyphIndexes(), QGlyphs, QTextLayout::glyphs(), QTextFragment::glyphs()
 */
 QVector<quint32> QRawFont::glyphIndexesForString(const QString &text) const
 {
-    if (!d->isValid())
+    if (!isValid())
         return QVector<quint32>();
 
     int nglyphs = text.size();
     QVarLengthGlyphLayoutArray glyphs(nglyphs);
-    if (!glyphIndexesForChars(text.data(), text.size(), glyphs.glyphs, &nglyphs)) {
+    if (!d->fontEngine->stringToCMap(text.data(), text.size(), &glyphs, &nglyphs,
+                                  QTextEngine::GlyphIndicesOnly)) {
         glyphs.resize(nglyphs);
-        if (!glyphIndexesForChars(text.data(), text.size(), glyphs.glyphs, &nglyphs)) {
+        if (!d->fontEngine->stringToCMap(text.data(), text.size(), &glyphs, &nglyphs,
+                                      QTextEngine::GlyphIndicesOnly)) {
             Q_ASSERT_X(false, Q_FUNC_INFO, "stringToCMap shouldn't fail twice");
             return QVector<quint32>();
         }
@@ -447,27 +413,6 @@
 }
 
 /*!
-   Converts a string of unicode points to glyph indexes using the CMAP table in the
-   underlying font. The function works like glyphIndexesForString() except it take
-   an array (\a chars), the results will be returned though \a glyphIndexes array
-   and number of glyphs will be set in \a numGlyphs. The size of \a glyphIndexes array
-   must be at least \a numChars, if that's still not enough, this function will return
-   false, then you can resize \a glyphIndexes from the size returned in \a numGlyphs.
-
-   \sa glyphIndexesForString(), advancesForGlyphIndexes(), QGlyphRun,
-       QTextLayout::glyphRuns(), QTextFragment::glyphRuns()
-*/
-bool QRawFont::glyphIndexesForChars(const QChar *chars, int numChars, quint32 *glyphIndexes, int *numGlyphs) const
-{
-    if (!d->isValid())
-        return false;
-
-    QGlyphLayout glyphs;
-    glyphs.glyphs = glyphIndexes;
-    return d->fontEngine->stringToCMap(chars, numChars, &glyphs, numGlyphs, QTextEngine::GlyphIndicesOnly);
-}
-
-/*!
    Returns the QRawFont's advances for each of the \a glyphIndexes in pixel units. The advances
    give the distance from the position of a given glyph to where the next glyph should be drawn
    to make it appear as if the two glyphs are unspaced.
@@ -476,7 +421,7 @@
 */
 QVector<QPointF> QRawFont::advancesForGlyphIndexes(const QVector<quint32> &glyphIndexes) const
 {
-    if (!d->isValid())
+    if (!isValid())
         return QVector<QPointF>();
 
     int numGlyphs = glyphIndexes.size();
@@ -493,43 +438,16 @@
 }
 
 /*!
-   Returns the QRawFont's advances for each of the \a glyphIndexes in pixel units. The advances
-   give the distance from the position of a given glyph to where the next glyph should be drawn
-   to make it appear as if the two glyphs are unspaced. The glyph indexes are given with the
-   array \a glyphIndexes while the results are returned through \a advances, both of them must
-   have \a numGlyphs elements.
-
-   \sa QTextLine::horizontalAdvance(), QFontMetricsF::width()
-*/
-bool QRawFont::advancesForGlyphIndexes(const quint32 *glyphIndexes, QPointF *advances, int numGlyphs) const
-{
-    if (!d->isValid())
-        return false;
-
-    QGlyphLayout glyphs;
-    glyphs.glyphs = const_cast<HB_Glyph *>(glyphIndexes);
-    glyphs.numGlyphs = numGlyphs;
-    QVarLengthArray<QFixed> advances_x(numGlyphs);
-    QVarLengthArray<QFixed> advances_y(numGlyphs);
-    glyphs.advances_x = advances_x.data();
-    glyphs.advances_y = advances_y.data();
-
-    d->fontEngine->recalcAdvances(&glyphs, 0);
-
-    for (int i=0; i<numGlyphs; ++i)
-        advances[i] = QPointF(glyphs.advances_x[i].toReal(), glyphs.advances_y[i].toReal());
-
-    return true;
-}
-
-/*!
    Returns the hinting preference used to construct this QRawFont.
 
    \sa QFont::hintingPreference()
 */
 QFont::HintingPreference QRawFont::hintingPreference() const
 {
-    return d->isValid() ? d->hintingPreference : QFont::PreferDefaultHinting;
+    if (!isValid())
+        return QFont::PreferDefaultHinting;
+
+    return d->hintingPreference;
 }
 
 /*!
@@ -540,7 +458,7 @@
 */
 QByteArray QRawFont::fontTable(const char *tagName) const
 {
-    if (!d->isValid())
+    if (!isValid())
         return QByteArray();
 
     const quint32 *tagId = reinterpret_cast<const quint32 *>(tagName);
@@ -563,9 +481,9 @@
 */
 QList<QFontDatabase::WritingSystem> QRawFont::supportedWritingSystems() const
 {
-    if (d->isValid()) {
+    if (isValid()) {
         QByteArray os2Table = fontTable("OS/2");
-        if (os2Table.size() > 86) {
+        if (!os2Table.isEmpty() && os2Table.size() > 86) {
             char *data = os2Table.data();
             quint32 *bigEndianUnicodeRanges = reinterpret_cast<quint32 *>(data + 42);
             quint32 *bigEndianCodepageRanges = reinterpret_cast<quint32 *>(data + 78);
@@ -591,31 +509,26 @@
 
     \sa supportedWritingSystems()
 */
-bool QRawFont::supportsCharacter(QChar character) const
+bool QRawFont::supportsCharacter(const QChar &character) const
 {
-    return d->isValid() && d->fontEngine->canRender(&character, 1);
+    if (!isValid())
+        return false;
+
+    return d->fontEngine->canRender(&character, 1);
 }
 
 /*!
-    \overload
    Returns true if the font has a glyph that corresponds to the UCS-4 encoded character \a ucs4.
 
    \sa supportedWritingSystems()
 */
 bool QRawFont::supportsCharacter(quint32 ucs4) const
 {
-    QChar str[2];
-    int len;
-    if (!QChar::requiresSurrogates(ucs4)) {
-        str[0] = QChar(ucs4);
-        len = 1;
-    } else {
-        str[0] = QChar(QChar::highSurrogate(ucs4));
-        str[1] = QChar(QChar::lowSurrogate(ucs4));
-        len = 2;
-    }
+    if (!isValid())
+        return false;
 
-    return d->isValid() && d->fontEngine->canRender(str, len);
+    QString str = QString::fromUcs4(&ucs4, 1);
+    return d->fontEngine->canRender(str.constData(), str.size());
 }
 
 // qfontdatabase.cpp
@@ -627,23 +540,24 @@
 */
 QRawFont QRawFont::fromFont(const QFont &font, QFontDatabase::WritingSystem writingSystem)
 {
-    QRawFont rawFont;
 #if defined(Q_WS_MAC)
     QTextLayout layout(QFontDatabase::writingSystemSample(writingSystem), font);
     layout.beginLayout();
     QTextLine line = layout.createLine();
     layout.endLayout();
-    QList<QGlyphRun> list = layout.glyphRuns();
+    QList<QGlyphs> list = layout.glyphs();
     if (list.size()) {
         // Pick the one matches the family name we originally requested,
         // if none of them match, just pick the first one
         for (int i = 0; i < list.size(); i++) {
-            rawFont = list.at(i).rawFont();
-            if (rawFont.familyName() == font.family())
-                return rawFont;
+            QGlyphs glyphs = list.at(i);
+            QRawFont rawfont = glyphs.font();
+            if (rawfont.familyName() == font.family())
+                return rawfont;
         }
-        return list.at(0).rawFont();
+        return list.at(0).font();
     }
+    return QRawFont();
 #else
     QFontPrivate *font_d = QFontPrivate::get(font);
     int script = qt_script_for_writing_system(writingSystem);
@@ -659,23 +573,28 @@
     }
 
     if (fe != 0) {
+        QRawFont rawFont;
         rawFont.d.data()->fontEngine = fe;
         rawFont.d.data()->fontEngine->ref.ref();
         rawFont.d.data()->hintingPreference = font.hintingPreference();
+	rawFont.d.data()->fontEngine->fontDef.csmThicknessOffset = font.csmThicknessOffset();
+	rawFont.d.data()->fontEngine->fontDef.csmSharpnessOffset = font.csmSharpnessOffset();
+        return rawFont;
+    } else {
+        return QRawFont();
     }
 #endif
-    return rawFont;
 }
 
 /*!
    Sets the pixel size with which this font should be rendered to \a pixelSize.
 */
-void QRawFont::setPixelSize(qreal pixelSize)
+void QRawFont::setPixelSize(int pixelSize)
 {
     if (d->fontEngine == 0)
         return;
 
-    d.detach();
+    detach();
     QFontEngine *oldFontEngine = d->fontEngine;
 
     d->fontEngine = d->fontEngine->cloneWithSize(pixelSize);
@@ -687,9 +606,33 @@
         delete oldFontEngine;
 }
 
+int QRawFont::substituteWithVerticalVariants(quint32* glyphs, const unsigned length) const
+{
+    if (d->pluginInterface != NULL) 
+        return d->pluginInterface->substituteWithVerticalVariants(d, glyphs, length);
+    return glyphs[0];
+}
+
+bool QRawFont::hasVerticalGlyphs() const
+{
+    if (d->pluginInterface != NULL) {
+        return d->pluginInterface->hasVerticalGlyphs(d);
+    }
+    return false;
+}
+
 /*!
     \internal
 */
+void QRawFont::detach()
+{
+    if (d->ref != 1)
+        d.detach();
+}
+
+/*!
+    \internal
+*/
 void QRawFontPrivate::cleanUp()
 {
     platformCleanUp();
@@ -702,6 +645,35 @@
     hintingPreference = QFont::PreferDefaultHinting;
 }
 
+
+/*!
+    \internal
+*/
+QRawFontInterface *QRawFontPrivate::pluginInterface = NULL;
+bool QRawFontPrivate::loadPlugin()
+{
+    if (pluginInterface != NULL)
+        return true;
+
+    static bool checked = false;
+    if (!checked) {
+        ACCESSPlugin p;
+        for (QObject *plugin = p.next(); plugin; plugin = p.next()) {
+            if (plugin) {
+                ACCESSPluginInterface *i = qobject_cast<ACCESSPluginInterface *>(plugin);
+                if (i) {
+                    qDebug("loadPlugin: loaded plugin for QRawFont");
+                    pluginInterface = i->rawFontPlugin();
+                    return true;
+                }
+            }
+        }
+        checked = true;
+    }
+
+    return false;
+}
+
 #endif // QT_NO_RAWFONT
 
 QT_END_NAMESPACE
Index: src/gui/text/qrawfont_qpa.cpp
===================================================================
--- src/gui/text/qrawfont_qpa.cpp	(revision 36094)
+++ src/gui/text/qrawfont_qpa.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -53,7 +53,7 @@
 {
 }
 
-void QRawFontPrivate::platformLoadFromData(const QByteArray &fontData, qreal pixelSize,
+void QRawFontPrivate::platformLoadFromData(const QByteArray &fontData, int pixelSize,
                                            QFont::HintingPreference hintingPreference)
 {
     Q_ASSERT(fontEngine == 0);
Index: src/gui/text/qtextformat_p.h
===================================================================
--- src/gui/text/qtextformat_p.h	(revision 36094)
+++ src/gui/text/qtextformat_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextoption.h
===================================================================
--- src/gui/text/qtextoption.h	(revision 36094)
+++ src/gui/text/qtextoption.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -99,6 +99,15 @@
     inline void setTextDirection(Qt::LayoutDirection aDirection) { this->direction = aDirection; }
     inline Qt::LayoutDirection textDirection() const { return Qt::LayoutDirection(direction); }
 
+    inline void setTextOrientation(Qt::Orientation aOrientation)
+    {
+        orientation = (aOrientation == Qt::Horizontal ? 0 : 1);
+    }
+    inline Qt::Orientation textOrientation() const
+    {
+        return orientation == 0 ? Qt::Horizontal : Qt::Vertical;
+    }
+
     enum WrapMode {
         NoWrap,
         WordWrap,
@@ -137,7 +146,8 @@
     uint wordWrap : 4;
     uint design : 1;
     uint direction : 2;
-    uint unused : 18;
+    uint orientation : 1;
+    uint unused : 17;
     uint f;
     qreal tab;
     QTextOptionPrivate *d;
Index: src/gui/text/qfontdatabase_x11.cpp
===================================================================
--- src/gui/text/qfontdatabase_x11.cpp	(revision 36094)
+++ src/gui/text/qfontdatabase_x11.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -680,7 +680,7 @@
         family->fontFileIndex = -1;
         family->symbol_checked = true;
         QtFontFoundry *foundry = family->foundry(QLatin1String(foundryName), true);
-        QtFontStyle *style = foundry->style(styleKey, QString(), true);
+        QtFontStyle *style = foundry->style(styleKey, true);
 
         delete [] style->weightName;
         style->weightName = qstrdup(tokens[Weight]);
@@ -1034,14 +1034,13 @@
     FcChar8 *file_value;
     int index_value;
     FcChar8 *foundry_value;
-    FcChar8 *style_value;
     FcBool scalable;
 
     {
         FcObjectSet *os = FcObjectSetCreate();
         FcPattern *pattern = FcPatternCreate();
         const char *properties [] = {
-            FC_FAMILY, FC_STYLE, FC_WEIGHT, FC_SLANT,
+            FC_FAMILY, FC_WEIGHT, FC_SLANT,
             FC_SPACING, FC_FILE, FC_INDEX,
             FC_LANG, FC_CHARSET, FC_FOUNDRY, FC_SCALABLE, FC_PIXEL_SIZE, FC_WEIGHT,
             FC_WIDTH,
@@ -1086,8 +1085,6 @@
 	    scalable = FcTrue;
         if (FcPatternGetString(fonts->fonts[i], FC_FOUNDRY, 0, &foundry_value) != FcResultMatch)
 	    foundry_value = 0;
-        if (FcPatternGetString(fonts->fonts[i], FC_STYLE, 0, &style_value) != FcResultMatch)
-            style_value = 0;
         QtFontFamily *family = db->family(familyName, true);
 
         FcLangSet *langset = 0;
@@ -1145,7 +1142,6 @@
         family->fontFileIndex = index_value;
 
         QtFontStyle::Key styleKey;
-        QString styleName = style_value ? QString::fromUtf8((const char *) style_value) : QString();
         styleKey.style = (slant_value == FC_SLANT_ITALIC)
                          ? QFont::StyleItalic
                          : ((slant_value == FC_SLANT_OBLIQUE)
@@ -1160,7 +1156,7 @@
 
         QtFontFoundry *foundry
             = family->foundry(foundry_value ? QString::fromUtf8((const char *)foundry_value) : QString(), true);
-        QtFontStyle *style = foundry->style(styleKey, styleName, true);
+        QtFontStyle *style = foundry->style(styleKey, true);
 
         if (spacing_value < FC_MONO)
             family->fixedPitch = false;
@@ -1212,7 +1208,7 @@
         for (int i = 0; i < 4; ++i) {
             styleKey.style = (i%2) ? QFont::StyleNormal : QFont::StyleItalic;
             styleKey.weight = (i > 1) ? QFont::Bold : QFont::Normal;
-            QtFontStyle *style = foundry->style(styleKey, QString(), true);
+            QtFontStyle *style = foundry->style(styleKey, true);
             style->smoothScalable = true;
             QtFontSize *size = style->pixelSize(SMOOTH_SCALABLE, true);
             QtFontEncoding *enc = size->encodingID(-1, 0, 0, 0, 0, true);
@@ -1360,8 +1356,7 @@
                 if (equiv) continue;
 
                 // let's fake one...
-                equiv = foundry->style(key, QString(), true);
-                equiv->styleName = styleStringHelper(key.weight, QFont::Style(key.style));
+                equiv = foundry->style(key, true);
                 equiv->smoothScalable = true;
 
                 QtFontSize *equiv_size = equiv->pixelSize(SMOOTH_SCALABLE, true);
@@ -1457,35 +1452,6 @@
 
 void qt_addPatternProps(FcPattern *pattern, int screen, int script, const QFontDef &request)
 {
-    double size_value = qMax(qreal(1.), request.pixelSize);
-    FcPatternDel(pattern, FC_PIXEL_SIZE);
-    FcPatternAddDouble(pattern, FC_PIXEL_SIZE, size_value);
-
-    if (X11->display && QX11Info::appDepth(screen) <= 8) {
-        FcPatternDel(pattern, FC_ANTIALIAS);
-        // can't do antialiasing on 8bpp
-        FcPatternAddBool(pattern, FC_ANTIALIAS, false);
-    } else if (request.styleStrategy & (QFont::PreferAntialias|QFont::NoAntialias)) {
-        FcPatternDel(pattern, FC_ANTIALIAS);
-        FcPatternAddBool(pattern, FC_ANTIALIAS,
-                         !(request.styleStrategy & QFont::NoAntialias));
-    }
-
-    if (script != QUnicodeTables::Common && *specialLanguages[script] != '\0') {
-        Q_ASSERT(script < QUnicodeTables::ScriptCount);
-        FcLangSet *ls = FcLangSetCreate();
-        FcLangSetAdd(ls, (const FcChar8*)specialLanguages[script]);
-        FcPatternDel(pattern, FC_LANG);
-        FcPatternAddLangSet(pattern, FC_LANG, ls);
-        FcLangSetDestroy(ls);
-    }
-
-    if (!request.styleName.isEmpty()) {
-        QByteArray cs = request.styleName.toUtf8();
-        FcPatternAddString(pattern, FC_STYLE, (const FcChar8 *) cs.constData());
-        return;
-    }
-
     int weight_value = FC_WEIGHT_BLACK;
     if (request.weight == 0)
         weight_value = FC_WEIGHT_MEDIUM;
@@ -1508,11 +1474,34 @@
     FcPatternDel(pattern, FC_SLANT);
     FcPatternAddInteger(pattern, FC_SLANT, slant_value);
 
+    double size_value = qMax(qreal(1.), request.pixelSize);
+    FcPatternDel(pattern, FC_PIXEL_SIZE);
+    FcPatternAddDouble(pattern, FC_PIXEL_SIZE, size_value);
+
     int stretch = request.stretch;
     if (!stretch)
         stretch = 100;
     FcPatternDel(pattern, FC_WIDTH);
     FcPatternAddInteger(pattern, FC_WIDTH, stretch);
+
+    if (X11->display && QX11Info::appDepth(screen) <= 8) {
+        FcPatternDel(pattern, FC_ANTIALIAS);
+        // can't do antialiasing on 8bpp
+        FcPatternAddBool(pattern, FC_ANTIALIAS, false);
+    } else if (request.styleStrategy & (QFont::PreferAntialias|QFont::NoAntialias)) {
+        FcPatternDel(pattern, FC_ANTIALIAS);
+        FcPatternAddBool(pattern, FC_ANTIALIAS,
+                         !(request.styleStrategy & QFont::NoAntialias));
+    }
+
+    if (script != QUnicodeTables::Common && *specialLanguages[script] != '\0') {
+        Q_ASSERT(script < QUnicodeTables::ScriptCount);
+        FcLangSet *ls = FcLangSetCreate();
+        FcLangSetAdd(ls, (const FcChar8*)specialLanguages[script]);
+        FcPatternDel(pattern, FC_LANG);
+        FcPatternAddLangSet(pattern, FC_LANG, ls);
+        FcLangSetDestroy(ls);
+    }
 }
 
 static bool preferScalable(const QFontDef &request)
@@ -1571,8 +1560,9 @@
 
     qt_addPatternProps(pattern, fp->screen, script, request);
 
-    FcConfigSubstitute(0, pattern, FcMatchPattern);
     FcDefaultSubstitute(pattern);
+    FcConfigSubstitute(0, pattern, FcMatchPattern);
+    FcConfigSubstitute(0, pattern, FcMatchFont);
 
     // these should only get added to the pattern _after_ substitution
     // append the default fallback font for the specified script
@@ -1610,20 +1600,35 @@
         memmove(fs->fonts + at, fs->fonts + at + 1, len);
 }
 
-static QFontEngine *tryPatternLoad(FcPattern *match, int screen,
-                                   const QFontDef &request, int script)
+static QFontEngine *tryPatternLoad(FcPattern *p, int screen,
+                                   const QFontDef &request, int script, FcPattern **matchedPattern = 0)
 {
 #ifdef FONT_MATCH_DEBUG
     FcChar8 *fam;
-    FcPatternGetString(match, FC_FAMILY, 0, &fam);
+    FcPatternGetString(p, FC_FAMILY, 0, &fam);
     FM_DEBUG("==== trying %s\n", fam);
 #endif
     FM_DEBUG("passes charset test\n");
+    FcPattern *pattern = FcPatternDuplicate(p);
+    // add properties back in as the font selected from the
+    // list doesn't contain them.
+    qt_addPatternProps(pattern, screen, script, request);
 
+    FcConfigSubstitute(0, pattern, FcMatchPattern);
+    FcDefaultSubstitute(pattern);
+    FcResult res;
+    FcPattern *match = FcFontMatch(0, pattern, &res);
+
+    if (matchedPattern)
+	*matchedPattern = 0;
+
     QFontEngineX11FT *engine = 0;
     if (!match) // probably no fonts available.
         goto done;
 
+    if (matchedPattern)
+	*matchedPattern = FcPatternDuplicate(match);
+
     if (script != QUnicodeTables::Common) {
         // skip font if it doesn't support the language we want
         if (specialChars[script]) {
@@ -1662,6 +1667,11 @@
         }
     }
 done:
+    FcPatternDestroy(pattern);
+    if (!engine && matchedPattern && *matchedPattern) {
+        FcPatternDestroy(*matchedPattern);
+        *matchedPattern = 0;
+    }
     return engine;
 }
 
@@ -1710,26 +1720,14 @@
 #endif
 
     QFontEngine *fe = 0;
-    FcResult res;
-    FcPattern *match = FcFontMatch(0, pattern, &res);
-    fe = tryPatternLoad(match, fp->screen, request, script);
+    FcPattern *matchedPattern = 0;
+    fe = tryPatternLoad(pattern, fp->screen, request, script, &matchedPattern);
     if (!fe) {
         FcFontSet *fs = qt_fontSetForPattern(pattern, request);
 
-        if (match) {
-            FcPatternDestroy(match);
-            match = 0;
-        }
-
         if (fs) {
-            for (int i = 0; !fe && i < fs->nfont; ++i) {
-                match = FcFontRenderPrepare(NULL, pattern, fs->fonts[i]);
-                fe = tryPatternLoad(match, fp->screen, request, script);
-                if (fe)
-                    break;
-                FcPatternDestroy(match);
-                match = 0;
-            }
+            for (int i = 0; !fe && i < fs->nfont; ++i)
+                fe = tryPatternLoad(fs->fonts[i], fp->screen, request, script, &matchedPattern);
             FcFontSetDestroy(fs);
         }
         FM_DEBUG("engine for script %d is %s\n", script, fe ? fe->fontDef.family.toLatin1().data(): "(null)");
@@ -1737,11 +1735,11 @@
     if (fe
         && script == QUnicodeTables::Common
         && !(request.styleStrategy & QFont::NoFontMerging) && !fe->symbol) {
-        fe = new QFontEngineMultiFT(fe, match, pattern, fp->screen, request);
+        fe = new QFontEngineMultiFT(fe, matchedPattern, pattern, fp->screen, request);
     } else {
         FcPatternDestroy(pattern);
-        if (match)
-            FcPatternDestroy(match);
+        if (matchedPattern)
+            FcPatternDestroy(matchedPattern);
     }
     return fe;
 }
@@ -1998,11 +1996,6 @@
     QFontCache::instance()->insertEngine(key, fe);
 }
 
-// Needed for fontconfig version < 2.2.97
-#ifndef FC_FAMILYLANG
-#define FC_FAMILYLANG "familylang"
-#endif
-
 static void registerFont(QFontDatabasePrivate::ApplicationFont *fnt)
 {
 #if defined(QT_NO_FONTCONFIG)
@@ -2051,8 +2044,7 @@
             return;
 
         FcPatternDel(pattern, FC_FILE);
-        QByteArray cs = fnt->fileName.toUtf8();
-        FcPatternAddString(pattern, FC_FILE, (const FcChar8 *) cs.constData());
+        FcPatternAddString(pattern, FC_FILE, (const FcChar8 *)fnt->fileName.toUtf8().constData());
 
         FcChar8 *fam = 0, *familylang = 0;
         int i, n = 0;
@@ -2138,8 +2130,7 @@
     if (!pattern)
         return family;
 
-    QByteArray cs = family.toUtf8();
-    FcPatternAddString(pattern, FC_FAMILY, (const FcChar8 *) cs.constData());
+    FcPatternAddString(pattern, FC_FAMILY, (const FcChar8 *) family.toUtf8().data());
     FcConfigSubstitute(0, pattern, FcMatchPattern);
     FcDefaultSubstitute(pattern);
 
Index: src/gui/text/qtextlist.h
===================================================================
--- src/gui/text/qtextlist.h	(revision 36094)
+++ src/gui/text/qtextlist.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextimagehandler.cpp
===================================================================
--- src/gui/text/qtextimagehandler.cpp	(revision 36094)
+++ src/gui/text/qtextimagehandler.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextcontrol.cpp
===================================================================
--- src/gui/text/qtextcontrol.cpp	(revision 36094)
+++ src/gui/text/qtextcontrol.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -408,6 +408,7 @@
     setContent(format, text, document);
 
     doc->setUndoRedoEnabled(interactionFlags & Qt::TextEditable);
+    q->setCursorWidth(-1);
 }
 
 void QTextControlPrivate::setContent(Qt::TextFormat format, const QString &text, QTextDocument *document)
@@ -676,33 +677,23 @@
 
     const qreal wordEndX = line.cursorToX(curs.position() - blockPos) + blockCoordinates.x();
 
-    if (!wordSelectionEnabled && (mouseXPosition < wordStartX || mouseXPosition > wordEndX))
+    if (mouseXPosition < wordStartX || mouseXPosition > wordEndX)
         return;
 
-    if (wordSelectionEnabled) {
-        if (suggestedNewPosition < selectedWordOnDoubleClick.position()) {
-            cursor.setPosition(selectedWordOnDoubleClick.selectionEnd());
-            setCursorPosition(wordStartPos, QTextCursor::KeepAnchor);
-        } else {
-            cursor.setPosition(selectedWordOnDoubleClick.selectionStart());
-            setCursorPosition(wordEndPos, QTextCursor::KeepAnchor);
-        }
-    } else {
-        // keep the already selected word even when moving to the left
-        // (#39164)
-        if (suggestedNewPosition < selectedWordOnDoubleClick.position())
-            cursor.setPosition(selectedWordOnDoubleClick.selectionEnd());
-        else
-            cursor.setPosition(selectedWordOnDoubleClick.selectionStart());
+    // keep the already selected word even when moving to the left
+    // (#39164)
+    if (suggestedNewPosition < selectedWordOnDoubleClick.position())
+        cursor.setPosition(selectedWordOnDoubleClick.selectionEnd());
+    else
+        cursor.setPosition(selectedWordOnDoubleClick.selectionStart());
 
-        const qreal differenceToStart = mouseXPosition - wordStartX;
-        const qreal differenceToEnd = wordEndX - mouseXPosition;
+    const qreal differenceToStart = mouseXPosition - wordStartX;
+    const qreal differenceToEnd = wordEndX - mouseXPosition;
 
-        if (differenceToStart < differenceToEnd)
-            setCursorPosition(wordStartPos, QTextCursor::KeepAnchor);
-        else
-            setCursorPosition(wordEndPos, QTextCursor::KeepAnchor);
-    }
+    if (differenceToStart < differenceToEnd)
+        setCursorPosition(wordStartPos, QTextCursor::KeepAnchor);
+    else
+        setCursorPosition(wordEndPos, QTextCursor::KeepAnchor);
 
     if (interactionFlags & Qt::TextSelectableByMouse) {
 #ifndef QT_NO_CLIPBOARD
@@ -1588,10 +1579,8 @@
             emit q->cursorPositionChanged();
         _q_updateCurrentCharFormatAndSelection();
     } else {
-        if (cursor.position() != oldCursorPos) {
+        if (cursor.position() != oldCursorPos)
             emit q->cursorPositionChanged();
-            emit q->microFocusChanged();
-        }
         selectionChanged();
     }
     repaintOldAndNewSelection(oldSelection);
@@ -1637,13 +1626,16 @@
         return;
     }
 
+    if (!mousePressed)
+        return;
+
     const qreal mouseX = qreal(mousePos.x());
 
     int newCursorPos = q->hitTest(mousePos, Qt::FuzzyHit);
     if (newCursorPos == -1)
         return;
 
-    if (mousePressed && wordSelectionEnabled && !selectedWordOnDoubleClick.hasSelection()) {
+    if (wordSelectionEnabled && !selectedWordOnDoubleClick.hasSelection()) {
         selectedWordOnDoubleClick = cursor;
         selectedWordOnDoubleClick.select(QTextCursor::WordUnderCursor);
     }
@@ -1652,7 +1644,7 @@
         extendBlockwiseSelection(newCursorPos);
     else if (selectedWordOnDoubleClick.hasSelection())
         extendWordwiseSelection(newCursorPos, mouseX);
-    else if (mousePressed)
+    else
         setCursorPosition(newCursorPos, QTextCursor::KeepAnchor);
 
     if (interactionFlags & Qt::TextEditable) {
@@ -1671,10 +1663,8 @@
 #endif //QT_NO_IM
     } else {
         //emit q->visibilityRequest(QRectF(mousePos, QSizeF(1, 1)));
-        if (cursor.position() != oldCursorPos) {
+        if (cursor.position() != oldCursorPos)
             emit q->cursorPositionChanged();
-            emit q->microFocusChanged();
-        }
     }
     selectionChanged(true);
     repaintOldAndNewSelection(oldSelection);
@@ -1718,10 +1708,8 @@
 
     repaintOldAndNewSelection(oldSelection);
 
-    if (cursor.position() != oldCursorPos) {
+    if (cursor.position() != oldCursorPos)
         emit q->cursorPositionChanged();
-        emit q->microFocusChanged();
-    }
 
     if (interactionFlags & Qt::LinksAccessibleByMouse) {
         if (!(button & Qt::LeftButton))
@@ -2029,7 +2017,10 @@
 #endif
             ))) {
 #endif
-            setBlinkingCursorEnabled(interactionFlags & (Qt::TextEditable | Qt::TextSelectableByKeyboard));
+        cursorOn = (interactionFlags & Qt::TextSelectableByKeyboard);
+        if (interactionFlags & Qt::TextEditable) {
+            setBlinkingCursorEnabled(true);
+        }
 #ifdef QT_KEYPAD_NAVIGATION
         }
 #endif
@@ -2232,10 +2223,7 @@
 {
 #ifndef QT_NO_PROPERTIES
     Q_D(const QTextControl);
-    int width = d->doc->documentLayout()->property("cursorWidth").toInt();
-    if (width == -1)
-        width = QApplication::style()->pixelMetric(QStyle::PM_TextCursorWidth);
-    return width;
+    return d->doc->documentLayout()->property("cursorWidth").toInt();
 #else
     return 1;
 #endif
@@ -2247,6 +2235,8 @@
 #ifdef QT_NO_PROPERTIES
     Q_UNUSED(width);
 #else
+    if (width == -1)
+        width = QApplication::style()->pixelMetric(QStyle::PM_TextCursorWidth);
     d->doc->documentLayout()->setProperty("cursorWidth", width);
 #endif
     d->repaintCursor();
@@ -2805,7 +2795,7 @@
     d->interactionFlags = flags;
 
     if (d->hasFocus)
-        d->setBlinkingCursorEnabled(flags & (Qt::TextEditable | Qt::TextSelectableByKeyboard));
+        d->setBlinkingCursorEnabled(flags & Qt::TextEditable);
 }
 
 Qt::TextInteractionFlags QTextControl::textInteractionFlags() const
Index: src/gui/text/qfontdatabase_qws.cpp
===================================================================
--- src/gui/text/qfontdatabase_qws.cpp	(revision 36094)
+++ src/gui/text/qfontdatabase_qws.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -75,11 +75,6 @@
 #include <qresource.h>
 #endif
 
-#ifdef Q_OS_QNX
-// ### using QFontEngineQPF leads to artifacts on QNX
-#  define QT_NO_QWS_SHARE_FONTS
-#endif
-
 QT_BEGIN_NAMESPACE
 
 #ifndef QT_NO_LIBRARY
@@ -363,7 +358,7 @@
     }
 
 #ifndef QT_NO_FREETYPE
-    dir.setNameFilters(QStringList() << QLatin1String("*.ttf")
+    dir.setNameFilters(QStringList() << QLatin1String("*.ttf") << QLatin1String("*.otf")
                        << QLatin1String("*.ttc") << QLatin1String("*.pfa")
                        << QLatin1String("*.pfb"));
     dir.refresh();
@@ -764,6 +759,9 @@
     return true;
 }
 
+/*!
+    \internal
+*/
 QFontEngine *
 QFontDatabase::findFont(int script, const QFontPrivate *fp,
                         const QFontDef &request)
Index: src/gui/text/qtexthtmlparser.cpp
===================================================================
--- src/gui/text/qtexthtmlparser.cpp	(revision 36094)
+++ src/gui/text/qtexthtmlparser.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -820,11 +820,15 @@
             if (uc >= 0x80 && uc < 0x80 + (sizeof(windowsLatin1ExtendedCharacters)/sizeof(windowsLatin1ExtendedCharacters[0])))
                 uc = windowsLatin1ExtendedCharacters[uc - 0x80];
             QString str;
-            if (QChar::requiresSurrogates(uc)) {
-                str += QChar(QChar::highSurrogate(uc));
-                str += QChar(QChar::lowSurrogate(uc));
+            if (uc > 0xffff) {
+                // surrogate pair
+                uc -= 0x10000;
+                ushort high = uc/0x400 + 0xd800;
+                ushort low = uc%0x400 + 0xdc00;
+                str.append(QChar(high));
+                str.append(QChar(low));
             } else {
-                str = QChar(uc);
+                str.append(QChar(uc));
             }
             return str;
         }
Index: src/gui/text/qtextlayout.h
===================================================================
--- src/gui/text/qtextlayout.h	(revision 36094)
+++ src/gui/text/qtextlayout.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -49,7 +49,7 @@
 #include <QtCore/qobject.h>
 #include <QtGui/qevent.h>
 #include <QtGui/qtextformat.h>
-#include <QtGui/qglyphrun.h>
+#include <QtGui/qglyphs.h>
 #include <QtGui/qtextcursor.h>
 
 QT_BEGIN_HEADER
@@ -174,7 +174,7 @@
     qreal maximumWidth() const;
 
 #if !defined(QT_NO_RAWFONT)
-    QList<QGlyphRun> glyphRuns() const;
+    QList<QGlyphs> glyphs() const;
 #endif
 
     QTextEngine *engine() const { return d; }
@@ -249,7 +249,7 @@
     void layout_helper(int numGlyphs);
 
 #if !defined(QT_NO_RAWFONT)
-    QList<QGlyphRun> glyphs(int from, int length) const;
+    QList<QGlyphs> glyphs(int from, int length) const;
 #endif
 
     friend class QTextLayout;
Index: src/gui/text/qabstracttextdocumentlayout_p.h
===================================================================
--- src/gui/text/qabstracttextdocumentlayout_p.h	(revision 36094)
+++ src/gui/text/qabstracttextdocumentlayout_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qcssparser_p.h
===================================================================
--- src/gui/text/qcssparser_p.h	(revision 36094)
+++ src/gui/text/qcssparser_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextengine_mac.cpp
===================================================================
--- src/gui/text/qtextengine_mac.cpp	(revision 36094)
+++ src/gui/text/qtextengine_mac.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -575,7 +575,9 @@
     if (si.analysis.bidiLevel % 2)
         flags |= RightToLeft;
     if (option.useDesignMetrics())
-	flags |= DesignMetrics;
+        flags |= DesignMetrics;
+    if (option.textOrientation() == Qt::Vertical)
+        flags |= TopToBottom;
 
     attributes(); // pre-initialize char attributes
 
@@ -605,12 +607,6 @@
     unsigned short *log_clusters = logClusters(&si);
 
     bool stringToCMapFailed = false;
-    // Skip shaping of line or paragraph separators since we are not
-    // going to draw them anyway
-    if (si.analysis.flags == QScriptAnalysis::LineOrParagraphSeparator
-        && !(option.flags() & QTextOption::ShowLineAndParagraphSeparators))
-        goto cleanUp;
-
     if (!fe->stringToCMap(str, len, &g, &num_glyphs, flags, log_clusters, attributes(), &si)) {
         ensureSpace(num_glyphs);
         g = availableGlyphs(&si);
@@ -651,7 +647,6 @@
         }
     }
 
-cleanUp:
     const ushort *uc = reinterpret_cast<const ushort *>(str);
 
     if ((si.analysis.flags == QScriptAnalysis::SmallCaps || si.analysis.flags == QScriptAnalysis::Uppercase
Index: src/gui/text/qfont_p.h
===================================================================
--- src/gui/text/qfont_p.h	(revision 36094)
+++ src/gui/text/qfont_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -72,7 +72,9 @@
         : pointSize(-1.0), pixelSize(-1),
           styleStrategy(QFont::PreferDefault), styleHint(QFont::AnyStyle),
           weight(50), fixedPitch(false), style(QFont::StyleNormal), stretch(100),
-          ignorePitch(true), hintingPreference(QFont::PreferDefaultHinting)
+          ignorePitch(true), hintingPreference(QFont::PreferDefaultHinting),
+          csmThicknessOffset(0), csmThicknessSlope(0),
+          csmSharpnessOffset(0), csmSharpnessSlope(0)
 #ifdef Q_WS_MAC
           ,fixedPitchComputed(false)
 #endif
@@ -80,7 +82,6 @@
     }
 
     QString family;
-    QString styleName;
 
 #ifdef Q_WS_X11
     QString addStyle;
@@ -102,6 +103,11 @@
     uint fixedPitchComputed : 1; // for Mac OS X only
     int reserved   : 14; // for future extensions
 
+    qreal csmThicknessOffset;
+    qreal csmThicknessSlope;
+    qreal csmSharpnessOffset;
+    qreal csmSharpnessSlope;
+
     bool exactMatch(const QFontDef &other) const;
     bool operator==(const QFontDef &other) const
     {
@@ -113,8 +119,13 @@
                     && styleStrategy == other.styleStrategy
                     && ignorePitch == other.ignorePitch && fixedPitch == other.fixedPitch
                     && family == other.family
-                    && (styleName.isEmpty() || other.styleName.isEmpty() || styleName == other.styleName)
                     && hintingPreference == other.hintingPreference
+
+                    && csmThicknessOffset == other.csmThicknessOffset
+                    && csmThicknessSlope == other.csmThicknessSlope
+                    && csmSharpnessOffset == other.csmSharpnessOffset
+                    && csmSharpnessSlope == other.csmSharpnessSlope
+
 #ifdef Q_WS_X11
                     && addStyle == other.addStyle
 #endif
@@ -129,10 +140,13 @@
         if (styleHint != other.styleHint) return styleHint < other.styleHint;
         if (styleStrategy != other.styleStrategy) return styleStrategy < other.styleStrategy;
         if (family != other.family) return family < other.family;
-        if (!styleName.isEmpty() && !other.styleName.isEmpty() && styleName != other.styleName)
-            return styleName < other.styleName;
         if (hintingPreference != other.hintingPreference) return hintingPreference < other.hintingPreference;
 
+        if (csmThicknessOffset != other.csmThicknessOffset) return csmThicknessOffset < other.csmThicknessOffset;
+        if (csmThicknessSlope != other.csmThicknessSlope) return csmThicknessSlope < other.csmThicknessSlope;
+        if (csmSharpnessOffset != other.csmSharpnessOffset) return csmSharpnessOffset < other.csmSharpnessOffset;
+        if (csmSharpnessSlope != other.csmSharpnessSlope) return csmSharpnessSlope < other.csmSharpnessSlope;
+
 #ifdef Q_WS_X11
         if (addStyle != other.addStyle) return addStyle < other.addStyle;
 #endif // Q_WS_X11
Index: src/gui/text/qtextdocumentfragment_p.h
===================================================================
--- src/gui/text/qtextdocumentfragment_p.h	(revision 36094)
+++ src/gui/text/qtextdocumentfragment_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -135,7 +135,7 @@
 
     Table scanTable(int tableNodeIdx);
 
-    enum ProcessNodeResult { ContinueWithNextNode, ContinueWithCurrentNode, ContinueWithNextSibling };
+    enum ProcessNodeResult { ContinueWithNextNode, ContinueWithCurrentNode };
 
     void appendBlock(const QTextBlockFormat &format, QTextCharFormat charFmt = QTextCharFormat());
     bool appendNodeText();
Index: src/gui/text/qfontdatabase.cpp
===================================================================
--- src/gui/text/qfontdatabase.cpp	(revision 36094)
+++ src/gui/text/qfontdatabase.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -89,10 +89,10 @@
 
 #define SMOOTH_SCALABLE 0xffff
 
+QFontDatabase::decryptor QFontDatabase::decryptFontData = NULL;
+
 bool qt_enable_test_font = false;
 
-static QString styleStringHelper(int weight, QFont::Style style);
-
 Q_AUTOTEST_EXPORT void qt_setQtEnableTestFont(bool value)
 {
     qt_enable_test_font = value;
@@ -220,14 +220,16 @@
         Key(const QString &styleString);
         Key() : style(QFont::StyleNormal),
                 weight(QFont::Normal), stretch(0) { }
-        Key(const Key &o) : style(o.style), weight(o.weight), stretch(o.stretch) { }
+        Key(const Key &o) : style(o.style),
+                              weight(o.weight), stretch(o.stretch) { }
         uint style : 2;
         signed int  weight : 8;
         signed int stretch : 12;
 
         bool operator==(const Key & other) {
-            return (style == other.style && weight == other.weight &&
-                    (stretch == 0 || other.stretch == 0 || stretch == other.stretch));
+            return (style == other.style &&
+                     weight == other.weight &&
+                     (stretch == 0 || other.stretch == 0 || stretch == other.stretch));
         }
         bool operator!=(const Key &other) {
             return !operator==(other);
@@ -279,7 +281,6 @@
     bool smoothScalable : 1;
     signed int count    : 30;
     QtFontSize *pixelSizes;
-    QString styleName;
 
 #ifdef Q_WS_X11
     const char *weightName;
@@ -354,26 +355,31 @@
 
     int count;
     QtFontStyle **styles;
-    QtFontStyle *style(const QtFontStyle::Key &, const QString & = QString(), bool = false);
+    QtFontStyle *style(const QtFontStyle::Key &, bool = false);
 };
 
-QtFontStyle *QtFontFoundry::style(const QtFontStyle::Key &key, const QString &styleName, bool create)
+QtFontStyle *QtFontFoundry::style(const QtFontStyle::Key &key, bool create)
 {
     int pos = 0;
-    for (; pos < count; pos++) {
-        bool hasStyleName = !styleName.isEmpty(); // search styleName first if available
-        if (hasStyleName && !styles[pos]->styleName.isEmpty()) {
-            if (styles[pos]->styleName == styleName)
-                return styles[pos];
-        } else {
+    if (count) {
+        int low = 0;
+        int high = count;
+        pos = count / 2;
+        while (high > low) {
             if (styles[pos]->key == key)
                 return styles[pos];
+            if (styles[pos]->key < key)
+                low = pos + 1;
+            else
+                high = pos;
+            pos = (high + low) / 2;
         }
+        pos = low;
     }
     if (!create)
         return 0;
 
-    // qDebug("adding key (weight=%d, style=%d, stretch=%d) at %d", key.weight, key.style, key.stretch, pos);
+//     qDebug("adding key (weight=%d, style=%d, oblique=%d stretch=%d) at %d", key.weight, key.style, key.oblique, key.stretch, pos);
     if (!(count % 8)) {
         QtFontStyle **newStyles = (QtFontStyle **)
                  realloc(styles, (((count+8) >> 3) << 3) * sizeof(QtFontStyle *));
@@ -382,12 +388,13 @@
     }
 
     QtFontStyle *style = new QtFontStyle(key);
-    style->styleName = styleName;
+    memmove(styles + pos + 1, styles + pos, (count-pos)*sizeof(QtFontStyle *));
     styles[pos] = style;
     count++;
     return styles[pos];
 }
 
+
 struct  QtFontFamily
 {
     enum WritingSystemStatus {
@@ -809,7 +816,7 @@
     }
 
     QtFontFoundry *foundry = f->foundry(QString::fromLatin1(foundryname), true);
-    QtFontStyle *style = foundry->style(styleKey, QString(), true);
+    QtFontStyle *style = foundry->style(styleKey,  true);
     style->smoothScalable = (pixelSize == 0);
     style->antialiased = antialiased;
     QtFontSize *size = style->pixelSize(pixelSize?pixelSize:SMOOTH_SCALABLE, true);
@@ -841,10 +848,17 @@
     int index = 0;
     int numFaces = 0;
     do {
+        QByteArray data(fontData);
         FT_Face face;
         FT_Error error;
-        if (!fontData.isEmpty()) {
-            error = FT_New_Memory_Face(library, (const FT_Byte *)fontData.constData(), fontData.size(), index, &face);
+        if (QFontDatabase::decryptFontData != NULL) {
+            QFile f(QString::fromUtf8(file));
+            f.open(QIODevice::ReadOnly);
+            data = QFontDatabase::decryptFontData(f);
+            f.close();
+        }
+        if (!data.isEmpty()) {
+            error = FT_New_Memory_Face(library, (const FT_Byte *)data.constData(), data.size(), index, &face);
         } else {
             error = FT_New_Face(library, file, index, &face);
         }
@@ -874,10 +888,10 @@
             TT_OS2 *os2 = (TT_OS2 *)FT_Get_Sfnt_Table(face, ft_sfnt_os2);
             if (os2) {
                 quint32 unicodeRange[4] = {
-                    static_cast<quint32>(os2->ulUnicodeRange1), static_cast<quint32>(os2->ulUnicodeRange2), static_cast<quint32>(os2->ulUnicodeRange3), static_cast<quint32>(os2->ulUnicodeRange4)
+                    os2->ulUnicodeRange1, os2->ulUnicodeRange2, os2->ulUnicodeRange3, os2->ulUnicodeRange4
                 };
                 quint32 codePageRange[2] = {
-                    static_cast<quint32>(os2->ulCodePageRange1), static_cast<quint32>(os2->ulCodePageRange2)
+                    os2->ulCodePageRange1, os2->ulCodePageRange2
                 };
 
                 writingSystems = qt_determine_writing_systems_from_truetype_bits(unicodeRange, codePageRange);
@@ -1118,17 +1132,15 @@
 #elif defined(Q_OS_SYMBIAN)
 #  include "qfontdatabase_s60.cpp"
 #endif
-QT_END_INCLUDE_NAMESPACE
-
-#if !defined(Q_WS_X11) && !defined(Q_WS_MAC)
+#if !defined(Q_WS_X11)
 QString QFontDatabase::resolveFontFamilyAlias(const QString &family)
 {
     return family;
 }
 #endif
+QT_END_INCLUDE_NAMESPACE
 
-static QtFontStyle *bestStyle(QtFontFoundry *foundry, const QtFontStyle::Key &styleKey,
-                              const QString &styleName = QString())
+static QtFontStyle *bestStyle(QtFontFoundry *foundry, const QtFontStyle::Key &styleKey)
 {
     int best = 0;
     int dist = 0xffff;
@@ -1136,12 +1148,6 @@
     for ( int i = 0; i < foundry->count; i++ ) {
         QtFontStyle *style = foundry->styles[i];
 
-        if (!styleName.isEmpty() && styleName == style->styleName) {
-            dist = 0;
-            best = i;
-            break;
-        }
-
         int d = qAbs( styleKey.weight - style->key.weight );
 
         if ( styleKey.stretch != 0 && style->key.stretch != 0 ) {
@@ -1535,8 +1541,7 @@
 */
 QString QFontDatabase::styleString(const QFont &font)
 {
-    return font.styleName().isEmpty() ? styleStringHelper(font.weight(), font.style())
-                                      : font.styleName();
+    return styleStringHelper(font.weight(), font.style());
 }
 
 /*!
@@ -1546,8 +1551,7 @@
 */
 QString QFontDatabase::styleString(const QFontInfo &fontInfo)
 {
-    return fontInfo.styleName().isEmpty() ? styleStringHelper(fontInfo.weight(), fontInfo.style())
-                                          : fontInfo.styleName();
+    return styleStringHelper(fontInfo.weight(), fontInfo.style());
 }
 
 
@@ -1793,17 +1797,13 @@
             for (int k = 0; k < foundry->count; k++) {
                 QtFontStyle::Key ke(foundry->styles[k]->key);
                 ke.stretch = 0;
-                allStyles.style(ke, foundry->styles[k]->styleName, true);
+                allStyles.style(ke, true);
             }
         }
     }
 
-    for (int i = 0; i < allStyles.count; i++) {
-        l.append(allStyles.styles[i]->styleName.isEmpty() ?
-                 styleStringHelper(allStyles.styles[i]->key.weight,
-                                   (QFont::Style)allStyles.styles[i]->key.style) :
-                 allStyles.styles[i]->styleName);
-    }
+    for (int i = 0; i < allStyles.count; i++)
+        l.append(styleStringHelper(allStyles.styles[i]->key.weight, (QFont::Style)allStyles.styles[i]->key.style));
     return l;
 }
 
@@ -1861,9 +1861,7 @@
         QtFontFoundry *foundry = f->foundries[j];
         if (foundryName.isEmpty() || foundry->name.compare(foundryName, Qt::CaseInsensitive) == 0) {
             for (int k = 0; k < foundry->count; k++)
-                if ((style.isEmpty() ||
-                     foundry->styles[k]->styleName == style ||
-                     foundry->styles[k]->key == styleKey)
+                if ((style.isEmpty() || foundry->styles[k]->key == styleKey)
                     && foundry->styles[k]->bitmapScalable && !foundry->styles[k]->smoothScalable) {
                     bitmapScalable = true;
                     goto end;
@@ -1902,9 +1900,7 @@
         QtFontFoundry *foundry = f->foundries[j];
         if (foundryName.isEmpty() || foundry->name.compare(foundryName, Qt::CaseInsensitive) == 0) {
             for (int k = 0; k < foundry->count; k++)
-                if ((style.isEmpty() ||
-                     foundry->styles[k]->styleName == style ||
-                     foundry->styles[k]->key == styleKey) && foundry->styles[k]->smoothScalable) {
+                if ((style.isEmpty() || foundry->styles[k]->key == styleKey) && foundry->styles[k]->smoothScalable) {
                     smoothScalable = true;
                     goto end;
                 }
@@ -1931,19 +1927,18 @@
 
 
 /*!
-    \fn QList<int> QFontDatabase::pointSizes(const QString &family, const QString &style)
-    Returns a list of the point sizes available for the font with the
-    given \a family and \a style. The list may be empty.
+    Returns a list of the point sizes available for the font that has
+    family \a family and style \a style. The list may be empty.
 
     \sa smoothSizes(), standardSizes()
 */
 QList<int> QFontDatabase::pointSizes(const QString &family,
-                                           const QString &styleName)
+                                           const QString &style)
 {
 #if defined(Q_WS_WIN)
     // windows and macosx are always smoothly scalable
     Q_UNUSED(family);
-    Q_UNUSED(styleName);
+    Q_UNUSED(style);
     return standardSizes();
 #else
     bool smoothScalable = false;
@@ -1954,7 +1949,7 @@
 
     QT_PREPEND_NAMESPACE(load)(familyName);
 
-    QtFontStyle::Key styleKey(styleName);
+    QtFontStyle::Key styleKey(style);
 
     QList<int> sizes;
 
@@ -1971,7 +1966,7 @@
     for (int j = 0; j < fam->count; j++) {
         QtFontFoundry *foundry = fam->foundries[j];
         if (foundryName.isEmpty() || foundry->name.compare(foundryName, Qt::CaseInsensitive) == 0) {
-            QtFontStyle *style = foundry->style(styleKey, styleName);
+            QtFontStyle *style = foundry->style(styleKey);
             if (!style) continue;
 
             if (style->smoothScalable) {
@@ -1982,7 +1977,7 @@
                 const QtFontSize *size = style->pixelSizes + l;
 
                 if (size->pixelSize != 0 && size->pixelSize != USHRT_MAX) {
-                    const uint pointSize = qRound(size->pixelSize * qreal(72.0) / dpi);
+                    const uint pointSize = qRound(size->pixelSize * 72.0 / dpi);
                     if (! sizes.contains(pointSize))
                         sizes.append(pointSize);
                 }
@@ -2022,39 +2017,35 @@
         QtFontFoundry *foundry = f->foundries[j];
         if (foundryName.isEmpty() || foundry->name.compare(foundryName, Qt::CaseInsensitive) == 0) {
             for (int k = 0; k < foundry->count; k++)
-                allStyles.style(foundry->styles[k]->key, foundry->styles[k]->styleName, true);
+                allStyles.style(foundry->styles[k]->key, true);
         }
     }
 
     QtFontStyle::Key styleKey(style);
-    QtFontStyle *s = bestStyle(&allStyles, styleKey, style);
+    QtFontStyle *s = bestStyle(&allStyles, styleKey);
 
     if (!s) // no styles found?
         return QApplication::font();
-
     QFont fnt(family, pointSize, s->key.weight);
     fnt.setStyle((QFont::Style)s->key.style);
-    if (!s->styleName.isEmpty())
-        fnt.setStyleName(s->styleName);
     return fnt;
 }
 
 
 /*!
-    \fn QList<int> QFontDatabase::smoothSizes(const QString &family, const QString &style)
-    Returns the point sizes of a font with the given \a family and \a style
-    that will look attractive. The list may be empty.
+    Returns the point sizes of a font that has family \a family and
+    style \a style that will look attractive. The list may be empty.
     For non-scalable fonts and bitmap scalable fonts, this function
     is equivalent to pointSizes().
 
   \sa pointSizes(), standardSizes()
 */
 QList<int> QFontDatabase::smoothSizes(const QString &family,
-                                            const QString &styleName)
+                                            const QString &style)
 {
 #ifdef Q_WS_WIN
     Q_UNUSED(family);
-    Q_UNUSED(styleName);
+    Q_UNUSED(style);
     return QFontDatabase::standardSizes();
 #else
     bool smoothScalable = false;
@@ -2065,7 +2056,7 @@
 
     QT_PREPEND_NAMESPACE(load)(familyName);
 
-    QtFontStyle::Key styleKey(styleName);
+    QtFontStyle::Key styleKey(style);
 
     QList<int> sizes;
 
@@ -2082,7 +2073,7 @@
     for (int j = 0; j < fam->count; j++) {
         QtFontFoundry *foundry = fam->foundries[j];
         if (foundryName.isEmpty() || foundry->name.compare(foundryName, Qt::CaseInsensitive) == 0) {
-            QtFontStyle *style = foundry->style(styleKey, styleName);
+            QtFontStyle *style = foundry->style(styleKey);
             if (!style) continue;
 
             if (style->smoothScalable) {
@@ -2093,7 +2084,7 @@
                 const QtFontSize *size = style->pixelSizes + l;
 
                 if (size->pixelSize != 0 && size->pixelSize != USHRT_MAX) {
-                    const uint pointSize = qRound(size->pixelSize * qreal(72.0) / dpi);
+                    const uint pointSize = qRound(size->pixelSize * 72.0 / dpi);
                     if (! sizes.contains(pointSize))
                         sizes.append(pointSize);
                 }
@@ -2149,12 +2140,12 @@
         QtFontFoundry *foundry = f->foundries[j];
         if (foundryName.isEmpty() || foundry->name.compare(foundryName, Qt::CaseInsensitive) == 0) {
             for (int k = 0; k < foundry->count; k++)
-                allStyles.style(foundry->styles[k]->key, foundry->styles[k]->styleName, true);
+                allStyles.style(foundry->styles[k]->key, true);
         }
     }
 
     QtFontStyle::Key styleKey(style);
-    QtFontStyle *s = allStyles.style(styleKey, style);
+    QtFontStyle *s = allStyles.style(styleKey);
     return s && s->key.style == QFont::StyleItalic;
 }
 
@@ -2184,12 +2175,12 @@
         if (foundryName.isEmpty() ||
             foundry->name.compare(foundryName, Qt::CaseInsensitive) == 0) {
             for (int k = 0; k < foundry->count; k++)
-                allStyles.style(foundry->styles[k]->key, foundry->styles[k]->styleName, true);
+                allStyles.style(foundry->styles[k]->key, true);
         }
     }
 
     QtFontStyle::Key styleKey(style);
-    QtFontStyle *s = allStyles.style(styleKey, style);
+    QtFontStyle *s = allStyles.style(styleKey);
     return s && s->key.weight >= QFont::Bold;
 }
 
@@ -2220,12 +2211,12 @@
         if (foundryName.isEmpty() ||
             foundry->name.compare(foundryName, Qt::CaseInsensitive) == 0) {
             for (int k = 0; k < foundry->count; k++)
-                allStyles.style(foundry->styles[k]->key, foundry->styles[k]->styleName, true);
+                allStyles.style(foundry->styles[k]->key, true);
         }
     }
 
     QtFontStyle::Key styleKey(style);
-    QtFontStyle *s = allStyles.style(styleKey, style);
+    QtFontStyle *s = allStyles.style(styleKey);
     return s ? s->key.weight : -1;
 }
 
Index: src/gui/text/qfontdatabase_qpa.cpp
===================================================================
--- src/gui/text/qfontdatabase_qpa.cpp	(revision 36094)
+++ src/gui/text/qfontdatabase_qpa.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -73,7 +73,7 @@
         }
 
         QtFontFoundry *foundry = f->foundry(foundryname, true);
-        QtFontStyle *fontStyle = foundry->style(styleKey, QString(), true);
+        QtFontStyle *fontStyle = foundry->style(styleKey,  true);
         fontStyle->smoothScalable = scalable;
         fontStyle->antialiased = antialiased;
         QtFontSize *size = fontStyle->pixelSize(pixelSize?pixelSize:SMOOTH_SCALABLE, true);
Index: src/gui/text/qtextodfwriter_p.h
===================================================================
--- src/gui/text/qtextodfwriter_p.h	(revision 36094)
+++ src/gui/text/qtextodfwriter_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfont_s60.cpp
===================================================================
--- src/gui/text/qfont_s60.cpp	(revision 36094)
+++ src/gui/text/qfont_s60.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -42,13 +42,15 @@
 #include "qfont.h"
 #include "qfont_p.h"
 #include <private/qt_s60_p.h>
-#include <private/qpixmap_raster_symbian_p.h>
+#include <private/qpixmap_s60_p.h>
 #include "qmutex.h"
 
 QT_BEGIN_NAMESPACE
 
 #ifdef QT_NO_FREETYPE
 Q_GLOBAL_STATIC(QMutex, lastResortFamilyMutex);
+#endif // QT_NO_FREETYPE
+
 extern QStringList qt_symbian_fontFamiliesOnFontServer(); // qfontdatabase_s60.cpp
 Q_GLOBAL_STATIC_WITH_INITIALIZER(QStringList, fontFamiliesOnFontServer, {
     // We are only interested in the initial font families. No Application fonts.
@@ -56,25 +58,6 @@
     x->append(qt_symbian_fontFamiliesOnFontServer());
 });
 
-extern bool qt_symbian_isLinkedFont(const TDesC &typefaceName); // qfontdatabase_s60.cpp
-
-static QString classicalSymbianSystemFont()
-{
-    static QString font;
-    if (font.isEmpty()) {
-        static const char* const classicSymbianSystemFonts[] = { "Nokia Sans S60", "Series 60 Sans" };
-        for (int i = 0; i < sizeof classicSymbianSystemFonts / sizeof classicSymbianSystemFonts[0]; ++i) {
-            const QString classicFont = QLatin1String(classicSymbianSystemFonts[i]);
-            if (fontFamiliesOnFontServer()->contains(classicFont)) {
-                font = classicFont;
-                break;
-            }
-        }
-    }
-    return font;
-}
-#endif // QT_NO_FREETYPE
-
 QString QFont::lastResortFont() const
 {
     // Symbian's font Api does not distinguish between font and family.
@@ -102,10 +85,6 @@
         S60->screenDevice()->ReleaseFont(font);
         
         lock.relock();
-
-        // We must not return a Symbian Linked Font. See QTBUG-20007
-        if (qt_symbian_isLinkedFont(spec.iTypeface.iName) && !classicalSymbianSystemFont().isEmpty())
-            family = classicalSymbianSystemFont();
     }
     return family;
 #else // QT_NO_FREETYPE
@@ -138,9 +117,14 @@
 {
 #ifdef QT_NO_FREETYPE
     switch(d->request.styleHint) {
-        case QFont::SansSerif:
-        if (!classicalSymbianSystemFont().isEmpty())
-            return classicalSymbianSystemFont();
+        case QFont::SansSerif: {
+            static const char* const preferredSansSerif[] = {"Nokia Sans S60", "Series 60 Sans"};
+            for (int i = 0; i < sizeof preferredSansSerif / sizeof preferredSansSerif[0]; ++i) {
+                const QString sansSerif = QLatin1String(preferredSansSerif[i]);
+                if (fontFamiliesOnFontServer()->contains(sansSerif))
+                    return sansSerif;
+            }
+        }
         // No break. Intentional fall through.
         default:
             return lastResortFamily();
Index: src/gui/text/qrawfont_mac.cpp
===================================================================
--- src/gui/text/qrawfont_mac.cpp	(revision 36094)
+++ src/gui/text/qrawfont_mac.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the test suite of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -55,7 +55,7 @@
 extern int qt_defaultDpi();
 
 void QRawFontPrivate::platformLoadFromData(const QByteArray &fontData,
-                                           qreal pixelSize,
+                                           int pixelSize,
                                            QFont::HintingPreference hintingPreference)
 {
     // Mac OS X ignores it
Index: src/gui/text/qzip.cpp
===================================================================
--- src/gui/text/qzip.cpp	(revision 36094)
+++ src/gui/text/qzip.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextdocument_p.cpp
===================================================================
--- src/gui/text/qtextdocument_p.cpp	(revision 36094)
+++ src/gui/text/qtextdocument_p.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -540,7 +540,6 @@
 	int n = blocks.next(b);
 	Q_ASSERT((int)blocks.position(n) == pos + 1);
 	blocks.setSize(b, blocks.size(b) + blocks.size(n) - 1);
-        blocks.fragment(b)->userState = blocks.fragment(n)->userState;
 	b = n;
     }
     *blockFormat = blocks.fragment(b)->format;
Index: src/gui/text/qfontenginedirectwrite.cpp
===================================================================
--- src/gui/text/qfontenginedirectwrite.cpp	(revision 36094)
+++ src/gui/text/qfontenginedirectwrite.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -269,12 +269,15 @@
 
 inline unsigned int getChar(const QChar *str, int &i, const int len)
 {
-    uint ucs4 = str[i].unicode();
-    if (str[i].isHighSurrogate() && i < len-1 && str[i+1].isLowSurrogate()) {
-        ++i;
-        ucs4 = QChar::surrogateToUcs4( ucs4, str[i].unicode());
+    unsigned int uc = str[i].unicode();
+    if (uc >= 0xd800 && uc < 0xdc00 && i < len-1) {
+        uint low = str[i+1].unicode();
+       if (low >= 0xdc00 && low < 0xe000) {
+            uc = (uc - 0xd800)*0x400 + (low - 0xdc00) + 0x10000;
+            ++i;
+        }
     }
-    return ucs4;
+    return uc;
 }
 
 bool QFontEngineDirectWrite::stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs,
@@ -387,60 +390,6 @@
     return glyph_metrics_t(0, -m_ascent, w - lastRightBearing(glyphs), m_ascent + m_descent, w, 0);
 }
 
-glyph_metrics_t QFontEngineDirectWrite::alphaMapBoundingBox(glyph_t glyph, QFixed subPixelPosition,
-                                                            const QTransform &matrix,
-                                                            GlyphFormat /*format*/)
-{
-    glyph_metrics_t bbox = QFontEngine::boundingBox(glyph, matrix); // To get transformed advance
-
-    UINT16 glyphIndex = glyph;
-    FLOAT glyphAdvance = 0;
-
-    DWRITE_GLYPH_OFFSET glyphOffset;
-    glyphOffset.advanceOffset = 0;
-    glyphOffset.ascenderOffset = 0;
-
-    DWRITE_GLYPH_RUN glyphRun;
-    glyphRun.fontFace = m_directWriteFontFace;
-    glyphRun.fontEmSize = fontDef.pixelSize;
-    glyphRun.glyphCount = 1;
-    glyphRun.glyphIndices = &glyphIndex;
-    glyphRun.glyphAdvances = &glyphAdvance;
-    glyphRun.isSideways = false;
-    glyphRun.bidiLevel = 0;
-    glyphRun.glyphOffsets = &glyphOffset;
-
-    DWRITE_MATRIX transform;
-    transform.dx = subPixelPosition.toReal();
-    transform.dy = 0;
-    transform.m11 = matrix.m11();
-    transform.m12 = matrix.m12();
-    transform.m21 = matrix.m21();
-    transform.m22 = matrix.m22();
-
-    IDWriteGlyphRunAnalysis *glyphAnalysis = NULL;
-    HRESULT hr = m_directWriteFactory->CreateGlyphRunAnalysis(
-                &glyphRun,
-                1.0f,
-                &transform,
-                DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL_SYMMETRIC,
-                DWRITE_MEASURING_MODE_NATURAL,
-                0.0, 0.0,
-                &glyphAnalysis
-                );
-
-    if (SUCCEEDED(hr)) {
-        RECT rect;
-        glyphAnalysis->GetAlphaTextureBounds(DWRITE_TEXTURE_CLEARTYPE_3x1, &rect);
-        glyphAnalysis->Release();
-
-        return glyph_metrics_t(rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top,
-                               bbox.xoff, bbox.yoff);
-    } else {
-        return glyph_metrics_t();
-    }
-}
-
 glyph_metrics_t QFontEngineDirectWrite::boundingBox(glyph_t g)
 {
     if (m_directWriteFontFace == 0)
@@ -510,10 +459,9 @@
 
 extern uint qt_pow_gamma[256];
 
-QImage QFontEngineDirectWrite::alphaMapForGlyph(glyph_t glyph, QFixed subPixelPosition,
-                                                const QTransform &xform)
+QImage QFontEngineDirectWrite::alphaMapForGlyph(glyph_t glyph, QFixed subPixelPosition)
 {
-    QImage im = imageForGlyph(glyph, subPixelPosition, 0, xform);
+    QImage im = imageForGlyph(glyph, subPixelPosition, 0, QTransform());
 
     QImage indexed(im.width(), im.height(), QImage::Format_Indexed8);
     QVector<QRgb> colors(256);
@@ -544,8 +492,12 @@
                                              int margin,
                                              const QTransform &xform)
 {
+    glyph_metrics_t metrics = QFontEngine::boundingBox(t, xform);
+    int width = (metrics.width + margin * 2 + 4).ceil().toInt() ;
+    int height = (metrics.height + margin * 2 + 4).ceil().toInt();
+
     UINT16 glyphIndex = t;
-    FLOAT glyphAdvance = 0;
+    FLOAT glyphAdvance = metrics.xoff.toReal();
 
     DWRITE_GLYPH_OFFSET glyphOffset;
     glyphOffset.advanceOffset = 0;
@@ -561,9 +513,12 @@
     glyphRun.bidiLevel = 0;
     glyphRun.glyphOffsets = &glyphOffset;
 
+    QFixed x = margin - metrics.x.round() + subPixelPosition;
+    QFixed y = margin - metrics.y.floor();
+
     DWRITE_MATRIX transform;
-    transform.dx = subPixelPosition.toReal();
-    transform.dy = 0;
+    transform.dx = x.toReal();
+    transform.dy = y.toReal();
     transform.m11 = xform.m11();
     transform.m12 = xform.m12();
     transform.m21 = xform.m21();
@@ -582,54 +537,48 @@
 
     if (SUCCEEDED(hr)) {
         RECT rect;
-        glyphAnalysis->GetAlphaTextureBounds(DWRITE_TEXTURE_CLEARTYPE_3x1, &rect);
+        rect.left = 0;
+        rect.top = 0;
+        rect.right = width;
+        rect.bottom = height;
 
-        rect.left -= margin;
-        rect.top -= margin;
-        rect.right += margin;
-        rect.bottom += margin;
-
-        int width = rect.right - rect.left;
-        int height = rect.bottom - rect.top;
-
         int size = width * height * 3;
-        if (size > 0) {
-            BYTE *alphaValues = new BYTE[size];
-            qMemSet(alphaValues, size, 0);
+        BYTE *alphaValues = new BYTE[size];
+        qMemSet(alphaValues, size, 0);
 
-            hr = glyphAnalysis->CreateAlphaTexture(DWRITE_TEXTURE_CLEARTYPE_3x1,
-                                                   &rect,
-                                                   alphaValues,
-                                                   size);
+        hr = glyphAnalysis->CreateAlphaTexture(DWRITE_TEXTURE_CLEARTYPE_3x1,
+                                               &rect,
+                                               alphaValues,
+                                               size);
 
-            if (SUCCEEDED(hr)) {
-                QImage img(width, height, QImage::Format_RGB32);
-                img.fill(0xffffffff);
+        if (SUCCEEDED(hr)) {
+            QImage img(width, height, QImage::Format_RGB32);
+            img.fill(0xffffffff);
 
-                for (int y=0; y<height; ++y) {
-                    uint *dest = reinterpret_cast<uint *>(img.scanLine(y));
-                    BYTE *src = alphaValues + width * 3 * y;
+            for (int y=0; y<height; ++y) {
+                uint *dest = reinterpret_cast<uint *>(img.scanLine(y));
+                BYTE *src = alphaValues + width * 3 * y;
 
-                    for (int x=0; x<width; ++x) {
-                        dest[x] = *(src) << 16
-                                | *(src + 1) << 8
-                                | *(src + 2);
+                for (int x=0; x<width; ++x) {
+                    dest[x] = *(src) << 16
+                            | *(src + 1) << 8
+                            | *(src + 2);
 
-                        src += 3;
-                    }
+                    src += 3;
                 }
+            }
 
-                delete[] alphaValues;
-                glyphAnalysis->Release();
+            delete[] alphaValues;
+            glyphAnalysis->Release();
 
-                return img;
-            } else {
-                delete[] alphaValues;
-                glyphAnalysis->Release();
+            return img;
+        } else {
+            delete[] alphaValues;
+            glyphAnalysis->Release();
 
-                qErrnoWarning("QFontEngineDirectWrite::imageForGlyph: CreateAlphaTexture failed");
-            }
+            qErrnoWarning("QFontEngineDirectWrite::imageForGlyph: CreateAlphaTexture failed");
         }
+
     } else {
         qErrnoWarning("QFontEngineDirectWrite::imageForGlyph: CreateGlyphRunAnalysis failed");
     }
Index: src/gui/text/qfontmetrics.h
===================================================================
--- src/gui/text/qfontmetrics.h	(revision 36094)
+++ src/gui/text/qfontmetrics.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qpfutil.cpp
===================================================================
--- src/gui/text/qpfutil.cpp	(revision 36094)
+++ src/gui/text/qpfutil.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextdocumentlayout_p.h
===================================================================
--- src/gui/text/qtextdocumentlayout_p.h	(revision 36094)
+++ src/gui/text/qtextdocumentlayout_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfontengine_s60_p.h
===================================================================
--- src/gui/text/qfontengine_s60_p.h	(revision 36094)
+++ src/gui/text/qfontengine_s60_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qzipreader_p.h
===================================================================
--- src/gui/text/qzipreader_p.h	(revision 36094)
+++ src/gui/text/qzipreader_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfontengine_win.cpp
===================================================================
--- src/gui/text/qfontengine_win.cpp	(revision 36094)
+++ src/gui/text/qfontengine_win.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -138,11 +138,8 @@
 {
     if (resolvedGetCharWidthI)
         return;
-
-    QSystemLibrary gdi32(QLatin1String("gdi32"));
-    ptrGetCharWidthI = (PtrGetCharWidthI)gdi32.resolve("GetCharWidthI");
-
     resolvedGetCharWidthI = true;
+    ptrGetCharWidthI = (PtrGetCharWidthI)QSystemLibrary::resolve(QLatin1String("gdi32"), "GetCharWidthI");
 }
 #endif // !defined(Q_WS_WINCE)
 
@@ -227,12 +224,15 @@
 
 inline unsigned int getChar(const QChar *str, int &i, const int len)
 {
-    uint ucs4 = str[i].unicode();
-    if (str[i].isHighSurrogate() && i < len-1 && str[i+1].isLowSurrogate()) {
-        ++i;
-        ucs4 = QChar::surrogateToUcs4(ucs4, str[i].unicode());
+    unsigned int uc = str[i].unicode();
+    if (uc >= 0xd800 && uc < 0xdc00 && i < len-1) {
+        uint low = str[i+1].unicode();
+       if (low >= 0xdc00 && low < 0xe000) {
+            uc = (uc - 0xd800)*0x400 + (low - 0xdc00) + 0x10000;
+            ++i;
+        }
     }
-    return ucs4;
+    return uc;
 }
 
 int QFontEngineWin::getGlyphIndexes(const QChar *str, int numChars, QGlyphLayout *glyphs, bool mirrored) const
Index: src/gui/text/qfontdatabase_mac.cpp
===================================================================
--- src/gui/text/qfontdatabase_mac.cpp	(revision 36094)
+++ src/gui/text/qfontdatabase_mac.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -104,15 +104,14 @@
     const int numFonts = CFArrayGetCount(fonts);
     for(int i = 0; i < numFonts; ++i) {
         CTFontDescriptorRef font = (CTFontDescriptorRef)CFArrayGetValueAtIndex(fonts, i);
-        QCFString family_name = (CFStringRef)CTFontDescriptorCopyLocalizedAttribute(font, kCTFontFamilyNameAttribute, NULL);
-        QCFString style_name = (CFStringRef)CTFontDescriptorCopyLocalizedAttribute(font, kCTFontStyleNameAttribute, NULL);
+
+        QCFString family_name = (CFStringRef)CTFontDescriptorCopyAttribute(font, kCTFontFamilyNameAttribute);
         QtFontFamily *family = db->family(family_name, true);
         for(int ws = 1; ws < QFontDatabase::WritingSystemsCount; ++ws)
             family->writingSystems[ws] = QtFontFamily::Supported;
         QtFontFoundry *foundry = family->foundry(foundry_name, true);
 
         QtFontStyle::Key styleKey;
-        QString styleName = style_name;
         if(QCFType<CFDictionaryRef> styles = (CFDictionaryRef)CTFontDescriptorCopyAttribute(font, kCTFontTraitsAttribute)) {
             if(CFNumberRef weight = (CFNumberRef)CFDictionaryGetValue(styles, kCTFontWeightTrait)) {
                 Q_ASSERT(CFNumberIsFloatType(weight));
@@ -133,7 +132,7 @@
             }
         }
 
-        QtFontStyle *style = foundry->style(styleKey, styleName, true);
+        QtFontStyle *style = foundry->style(styleKey, true);
         style->smoothScalable = true;
         if(QCFType<CFNumberRef> size = (CFNumberRef)CTFontDescriptorCopyAttribute(font, kCTFontSizeAttribute)) {
             //qDebug() << "WHEE";
@@ -206,7 +205,7 @@
 
                 QtFontFamily *family = db->family(familyName, true);
                 QtFontFoundry *foundry = family->foundry(QString(), true);
-                QtFontStyle *style = foundry->style(styleKey, QString(), true);
+                QtFontStyle *style = foundry->style(styleKey, true);
                 style->pixelSize(0, true);
                 style->smoothScalable = true;
 
@@ -250,63 +249,6 @@
     return (weight - 50) / 100.0;
 }
 
-static QFontEngine *loadFromDatabase(QFontDef &req, const QFontPrivate *d)
-{
-#if defined(QT_MAC_USE_COCOA)
-    QCFString fontName = NULL;
-#else
-    ATSFontFamilyRef familyRef = 0;
-    ATSFontRef fontRef = 0;
-#endif
-
-    QStringList family_list = familyList(req);
-
-    const char *stylehint = styleHint(req);
-    if (stylehint)
-        family_list << QLatin1String(stylehint);
-
-    // add QFont::defaultFamily() to the list, for compatibility with previous versions
-    family_list << QApplication::font().defaultFamily();
-
-    QMutexLocker locker(fontDatabaseMutex());
-    QFontDatabasePrivate *db = privateDb();
-    if (!db->count)
-        initializeDb();
-    for (int i = 0; i < family_list.size(); ++i) {
-        for (int k = 0; k < db->count; ++k) {
-            if (db->families[k]->name.compare(family_list.at(i), Qt::CaseInsensitive) == 0) {
-                QByteArray family_name = db->families[k]->name.toUtf8();
-#if defined(QT_MAC_USE_COCOA)
-                QCFType<CTFontRef> ctFont = CTFontCreateWithName(QCFString(db->families[k]->name), 12, NULL);
-                if (ctFont) {
-                    fontName = CTFontCopyFullName(ctFont);
-                    goto found;
-                }
-#else
-                familyRef = ATSFontFamilyFindFromName(QCFString(db->families[k]->name), kATSOptionFlagsDefault);
-                if (familyRef) {
-                    fontRef = ATSFontFindFromName(QCFString(db->families[k]->name), kATSOptionFlagsDefault);
-                    goto found;
-                }
-#endif
-            }
-        }
-    }
-found:
-#ifdef QT_MAC_USE_COCOA
-    if (fontName)
-        return new QCoreTextFontEngineMulti(fontName, req, d->kerning);
-#else
-    if (familyRef) {
-        QCFString actualName;
-        if (ATSFontFamilyGetName(familyRef, kATSOptionFlagsDefault, &actualName) == noErr)
-            req.family = actualName;
-        return new QFontEngineMacMulti(familyRef, fontRef, req, d->kerning);
-    }
-#endif
-    return NULL;
-}
-
 void QFontDatabase::load(const QFontPrivate *d, int script)
 {
     // sanity checks
@@ -347,38 +289,69 @@
         return; // the font info and fontdef should already be filled
     }
 
-    QFontEngine *engine = NULL;
-#if defined(QT_MAC_USE_COCOA)
-    // Shortcut to get the font directly without going through the font database
-    if (!req.family.isEmpty() && !req.styleName.isEmpty()) {
-        QCFString expectedFamily = QCFString(req.family);
-        QCFString expectedStyle = QCFString(req.styleName);
+    //find the font
+    QStringList family_list = familyList(req);
 
-        QCFType<CFMutableDictionaryRef> attributes = CFDictionaryCreateMutable(NULL, 0,
-            &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
-        CFDictionaryAddValue(attributes, kCTFontFamilyNameAttribute, expectedFamily);
-        CFDictionaryAddValue(attributes, kCTFontStyleNameAttribute, expectedStyle);
+    const char *stylehint = styleHint(req);
+    if (stylehint)
+        family_list << QLatin1String(stylehint);
 
-        QCFType<CTFontDescriptorRef> descriptor = CTFontDescriptorCreateWithAttributes(attributes);
-        CGAffineTransform transform = qt_transform_from_fontdef(req);
-        QCFType<CTFontRef> ctFont = CTFontCreateWithFontDescriptor(descriptor, req.pixelSize, &transform);
-        if (ctFont) {
-            QCFString familyName = CTFontCopyFamilyName(ctFont);
-            // Only accept the font if the family name is exactly the same as we specified
-            if (CFEqual(expectedFamily, familyName)) {
-                engine = new QCoreTextFontEngineMulti(ctFont, req, d->kerning);
+    // add QFont::defaultFamily() to the list, for compatibility with
+    // previous versions
+    family_list << QApplication::font().defaultFamily();
+
+#if defined(QT_MAC_USE_COCOA)
+    QCFString fontName = NULL, familyName = NULL;
+#else
+    ATSFontFamilyRef familyRef = 0;
+    ATSFontRef fontRef = 0;
+#endif
+
+    QMutexLocker locker(fontDatabaseMutex());
+    QFontDatabasePrivate *db = privateDb();
+    if (!db->count)
+        initializeDb();
+    for(int i = 0; i < family_list.size(); ++i) {
+        for (int k = 0; k < db->count; ++k) {
+            if (db->families[k]->name.compare(family_list.at(i), Qt::CaseInsensitive) == 0) {
+                QByteArray family_name = db->families[k]->name.toUtf8();
+#if defined(QT_MAC_USE_COCOA)
+                QCFType<CTFontRef> ctFont = CTFontCreateWithName(QCFString(db->families[k]->name), 12, NULL);
+                if (ctFont) {
+                    fontName = CTFontCopyFullName(ctFont);
+                    familyName = CTFontCopyFamilyName(ctFont);
+                    goto FamilyFound;
+                }
+#else
+                familyRef = ATSFontFamilyFindFromName(QCFString(db->families[k]->name), kATSOptionFlagsDefault);
+                if (familyRef) {
+                    fontRef = ATSFontFindFromName(QCFString(db->families[k]->name), kATSOptionFlagsDefault);
+                    goto FamilyFound;
+                }
+#endif
             }
         }
     }
-#endif
-    if (!engine)
-        engine = loadFromDatabase(req, d);
+FamilyFound:
+    //fill in the engine's font definition
+    QFontDef fontDef = d->request; //copy..
+    if(fontDef.pointSize < 0)
+        fontDef.pointSize = qt_mac_pointsize(fontDef, d->dpi);
+    else
+        fontDef.pixelSize = qt_mac_pixelsize(fontDef, d->dpi);
 
-    if (engine) {
-        d->engineData->engine = engine;
-        engine->ref.ref();
-        QFontCache::instance()->insertEngine(key, engine);
-    }
+#ifdef QT_MAC_USE_COCOA
+    fontDef.family = familyName;
+    QFontEngine *engine = new QCoreTextFontEngineMulti(fontName, fontDef, d->kerning);
+#else
+    QCFString actualName;
+    if (ATSFontFamilyGetName(familyRef, kATSOptionFlagsDefault, &actualName) == noErr)
+        fontDef.family = actualName;
+    QFontEngine *engine = new QFontEngineMacMulti(familyRef, fontRef, fontDef, d->kerning);
+#endif
+    d->engineData->engine = engine;
+    engine->ref.ref(); //a ref for the engineData->engine
+    QFontCache::instance()->insertEngine(key, engine);
 }
 
 static void registerFont(QFontDatabasePrivate::ApplicationFont *fnt)
@@ -389,6 +362,7 @@
     if(fnt->data.isEmpty()) {
 #if (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
         if (QSysInfo::MacintoshVersion >= QSysInfo::MV_10_5) {
+                extern OSErr qt_mac_create_fsref(const QString &, FSRef *); // qglobal.cpp
                 FSRef ref;
                 if(qt_mac_create_fsref(fnt->fileName, &ref) != noErr)
                     return;
@@ -398,6 +372,7 @@
 #endif
         {
 #ifndef Q_WS_MAC64
+                extern Q_CORE_EXPORT OSErr qt_mac_create_fsspec(const QString &, FSSpec *); // global.cpp
                 FSSpec spec;
                 if(qt_mac_create_fsspec(fnt->fileName, &spec) != noErr)
                     return;
@@ -488,25 +463,4 @@
     return true;
 }
 
-QString QFontDatabase::resolveFontFamilyAlias(const QString &family)
-{
-    QCFString expectedFamily = QCFString(family);
-
-    QCFType<CFMutableDictionaryRef> attributes = CFDictionaryCreateMutable(NULL, 0,
-        &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
-    CFDictionaryAddValue(attributes, kCTFontFamilyNameAttribute, expectedFamily);
-    QCFType<CTFontDescriptorRef> descriptor = CTFontDescriptorCreateWithAttributes(attributes);
-
-    QCFType<CFMutableSetRef> mandatoryAttributes = CFSetCreateMutable(NULL, 0, &kCFTypeSetCallBacks);
-    CFSetAddValue(mandatoryAttributes, kCTFontFamilyNameAttribute);
-
-    QCFType<CTFontRef> font = CTFontCreateWithFontDescriptor(descriptor, 0.0, NULL);
-    QCFType<CTFontDescriptorRef> matched = CTFontDescriptorCreateMatchingFontDescriptor(descriptor, mandatoryAttributes);
-    if (!matched)
-        return family;
-
-    QCFString familyName = (CFStringRef) CTFontDescriptorCopyLocalizedAttribute(matched, kCTFontFamilyNameAttribute, NULL);
-    return familyName;
-}
-
 QT_END_NAMESPACE
Index: src/gui/text/qfont.h
===================================================================
--- src/gui/text/qfont.h	(revision 36094)
+++ src/gui/text/qfont.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -56,6 +56,7 @@
 
 QT_MODULE(Gui)
 
+
 class QFontPrivate;                                     /* don't touch */
 class QStringList;
 class QVariant;
@@ -156,8 +157,7 @@
         LetterSpacingResolved       = 0x2000,
         WordSpacingResolved         = 0x4000,
         HintingPreferenceResolved   = 0x8000,
-        StyleNameResolved           = 0x10000,
-        AllPropertiesResolved       = 0x1ffff
+        AllPropertiesResolved       = 0xffff
     };
 
     QFont();
@@ -169,9 +169,6 @@
     QString family() const;
     void setFamily(const QString &);
 
-    QString styleName() const;
-    void setStyleName(const QString &);
-
     int pointSize() const;
     void setPointSize(int);
     qreal pointSizeF() const;
@@ -180,6 +177,21 @@
     int pixelSize() const;
     void setPixelSize(int);
 
+
+    qreal csmThicknessOffset() const;
+    void  setCSMThicknessOffset(qreal);
+
+    qreal csmThicknessSlope() const;
+    void  setCSMThicknessSlope(qreal);
+
+
+    qreal csmSharpnessOffset() const;
+    void  setCSMSharpnessOffset(qreal);
+
+    qreal csmSharpnessSlope() const;
+    void  setCSMSharpnessSlope(qreal);
+
+
     int weight() const;
     void setWeight(int);
 
@@ -243,7 +255,7 @@
     bool isCopyOf(const QFont &) const;
 #ifdef Q_COMPILER_RVALUE_REFS
     inline QFont &operator=(QFont &&other)
-    { qSwap(d, other.d); qSwap(resolve_mask, other.resolve_mask);  return *this; }
+    { qSwap(d, other.d); return *this; }
 #endif
 
 #ifdef Q_WS_WIN
Index: src/gui/text/qtextobject.h
===================================================================
--- src/gui/text/qtextobject.h	(revision 36094)
+++ src/gui/text/qtextobject.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -44,7 +44,7 @@
 
 #include <QtCore/qobject.h>
 #include <QtGui/qtextformat.h>
-#include <QtGui/qglyphrun.h>
+#include <QtGui/qglyphs.h>
 
 QT_BEGIN_HEADER
 
@@ -205,7 +205,7 @@
     inline QTextBlock(const QTextBlock &o) : p(o.p), n(o.n) {}
     inline QTextBlock &operator=(const QTextBlock &o) { p = o.p; n = o.n; return *this; }
 
-    inline bool isValid() const { return p != 0 && n != 0; }
+    bool isValid() const;
 
     inline bool operator==(const QTextBlock &o) const { return p == o.p && n == o.n; }
     inline bool operator!=(const QTextBlock &o) const { return p != o.p || n != o.n; }
@@ -317,7 +317,7 @@
     QString text() const;
 
 #if !defined(QT_NO_RAWFONT)
-    QList<QGlyphRun> glyphRuns() const;
+    QList<QGlyphs> glyphs() const;
 #endif
 
 private:
Index: src/gui/text/qtextlist.cpp
===================================================================
--- src/gui/text/qtextlist.cpp	(revision 36094)
+++ src/gui/text/qtextlist.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfontsubset_p.h
===================================================================
--- src/gui/text/qfontsubset_p.h	(revision 36094)
+++ src/gui/text/qfontsubset_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextlayout.cpp
===================================================================
--- src/gui/text/qtextlayout.cpp	(revision 36094)
+++ src/gui/text/qtextlayout.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -52,8 +52,8 @@
 #include "qtextformat_p.h"
 #include "qstyleoption.h"
 #include "qpainterpath.h"
-#include "qglyphrun.h"
-#include "qglyphrun_p.h"
+#include "qglyphs.h"
+#include "qglyphs_p.h"
 #include "qrawfont.h"
 #include "qrawfont_p.h"
 #include <limits.h>
@@ -375,7 +375,7 @@
 void QTextLayout::setFont(const QFont &font)
 {
     d->fnt = font;
-    d->resetFontEngineCache();
+    d->feCache.reset();
 }
 
 /*!
@@ -515,7 +515,7 @@
     }
     if (d->block.docHandle())
         d->block.docHandle()->documentChange(d->block.position(), d->block.length());
-    d->resetFontEngineCache();
+    d->feCache.reset();
 }
 
 /*!
@@ -729,11 +729,9 @@
 }
 
 /*!
-    \since 4.8
-
     Returns the cursor position to the right of \a oldPos, next to it.
-    The position is dependent on the visual position of characters, after
-    bi-directional reordering.
+    It's dependent on the visual position of characters, after bi-directional
+    reordering.
 
     \sa leftCursorPosition(), nextCursorPosition()
 */
@@ -745,11 +743,9 @@
 }
 
 /*!
-    \since 4.8
-
     Returns the cursor position to the left of \a oldPos, next to it.
-    The position is dependent on the visual position of characters, after
-    bi-directional reordering.
+    It's dependent on the visual position of characters, after bi-directional
+    reordering.
 
     \sa rightCursorPosition(), previousCursorPosition()
 */
@@ -814,7 +810,7 @@
     if (l && d->lines.at(l-1).length < 0) {
         QTextLine(l-1, d).setNumColumns(INT_MAX);
     }
-    int from = l > 0 ? d->lines.at(l-1).from + d->lines.at(l-1).length + d->lines.at(l-1).trailingSpaces : 0;
+    int from = l > 0 ? d->lines.at(l-1).from + d->lines.at(l-1).length : 0;
     int strlen = d->layoutData->string.length();
     if (l && from >= strlen) {
         if (!d->lines.at(l-1).length || d->layoutData->string.at(strlen - 1) != QChar::LineSeparator)
@@ -826,6 +822,7 @@
     line.length = -1;
     line.justified = false;
     line.gridfitted = false;
+    line.vertical = d->option.textOrientation() == Qt::Vertical;
 
     d->lines.append(line);
     return QTextLine(l, d);
@@ -1002,12 +999,12 @@
 
     \since 4.8
 
-    \sa draw(), QPainter::drawGlyphRun()
+    \sa draw(), QPainter::drawGlyphs()
 */
 #if !defined(QT_NO_RAWFONT)
-QList<QGlyphRun> QTextLayout::glyphRuns() const
+QList<QGlyphs> QTextLayout::glyphs() const
 {
-    QList<QGlyphRun> glyphs;
+    QList<QGlyphs> glyphs;
     for (int i=0; i<d->lines.size(); ++i)
         glyphs += QTextLine(i, d).glyphs(-1, -1);
 
@@ -1219,6 +1216,8 @@
         d->itemize();
 
     QPointF position = pos + d->position;
+    QFixed pos_x = QFixed::fromReal(position.x());
+    QFixed pos_y = QFixed::fromReal(position.y());
 
     cursorPosition = qBound(0, cursorPosition, d->layoutData->string.length());
     int line = d->lineNumberForTextPosition(cursorPosition);
@@ -1591,13 +1590,13 @@
         QFixed minimumRightBearing;
 
         QFontEngine *fontEngine;
-        QFontEngine *previousFontEngine;
         const unsigned short *logClusters;
 
         bool manualWrap;
         bool whiteSpaceOrObject;
 
         bool checkFullOtherwiseExtend(QScriptLine &line);
+        void addNextCluster(int end, QScriptLine &line, const QScriptItem &current);
 
         QFixed calculateNewWidth(const QScriptLine &line) const {
             return line.textWidth + tmpData.textWidth + spaceData.textWidth + softHyphenWidth
@@ -1612,19 +1611,12 @@
             return glyphs.glyphs[logClusters[currentPosition - 1]];
         }
 
-        inline void resetPreviousGlyph()
-        {
-            previousGlyph = 0;
-            previousFontEngine = 0;
-        }
-
         inline void saveCurrentGlyph()
         {
-            resetPreviousGlyph();
+            previousGlyph = 0;
             if (currentPosition > 0 &&
                 logClusters[currentPosition - 1] < glyphs.numGlyphs) {
                 previousGlyph = currentGlyph(); // needed to calculate right bearing later
-                previousFontEngine = fontEngine;
             }
         }
 
@@ -1644,11 +1636,8 @@
 
         inline void adjustPreviousRightBearing()
         {
-            if (previousGlyph > 0 && previousFontEngine) {
-                qreal rb;
-                previousFontEngine->getGlyphBearings(previousGlyph, 0, &rb);
-                rightBearing = qMin(QFixed(), QFixed::fromReal(rb));
-            }
+            if (previousGlyph > 0)
+                adjustRightBearing(previousGlyph);
         }
 
         inline void resetRightBearing()
@@ -1679,21 +1668,27 @@
     return false;
 }
 
-} // anonymous namespace
-
-
-static inline void addNextCluster(int &pos, int end, QScriptLine &line, int &glyphCount,
-                                  const QScriptItem &current, const unsigned short *logClusters,
-                                  const QGlyphLayout &glyphs)
+inline void LineBreakHelper::addNextCluster(int end, QScriptLine &line, const QScriptItem &current)
 {
+    int &pos = currentPosition;
     int glyphPosition = logClusters[pos];
     do { // got to the first next cluster
         ++pos;
         ++line.length;
     } while (pos < end && logClusters[pos] == glyphPosition);
     do { // calculate the textWidth for the rest of the current cluster.
-        if (!glyphs.attributes[glyphPosition].dontPrint)
-            line.textWidth += glyphs.advances_x[glyphPosition];
+        if (!glyphs.attributes[glyphPosition].dontPrint) {
+            line.textWidth += (line.vertical ? glyphs.advances_y[glyphPosition]
+                                             : glyphs.advances_x[glyphPosition]);
+            if (line.vertical) {
+                glyph_metrics_t bb = fontEngine->boundingBox(glyphs.glyphs[glyphPosition], Qt::Vertical);
+                if (bb.width > 0) {
+                    line.descent = qAbs(qMin(-line.descent, bb.x));
+                    line.ascent = qMax(line.ascent, bb.x + bb.width);
+                    LB_DEBUG() << "gp =" << glyphPosition << "x" << bb.x << "w" << bb.width;
+                }
+            }
+        }
         ++glyphPosition;
     } while (glyphPosition < current.num_glyphs && !glyphs.attributes[glyphPosition].clusterStart);
 
@@ -1702,13 +1697,13 @@
     ++glyphCount;
 }
 
+} // anonymous namespace
 
 // fill QScriptLine
 void QTextLine::layout_helper(int maxGlyphs)
 {
     QScriptLine &line = eng->lines[i];
     line.length = 0;
-    line.trailingSpaces = 0;
     line.textWidth = 0;
     line.hasTrailingSpaces = false;
 
@@ -1740,8 +1735,9 @@
     lbh.currentPosition = line.from;
     int end = 0;
     lbh.logClusters = eng->layoutData->logClustersPtr;
-    lbh.resetPreviousGlyph();
+    lbh.previousGlyph = 0;
 
+    bool vertical = eng->option.textOrientation() == Qt::Vertical;
     while (newItem < eng->layoutData->items.size()) {
         lbh.resetRightBearing();
         lbh.softHyphenWidth = 0;
@@ -1772,6 +1768,7 @@
                                                                             current.ascent);
         lbh.tmpData.ascent = qMax(lbh.tmpData.ascent, current.ascent);
         lbh.tmpData.descent = qMax(lbh.tmpData.descent, current.descent);
+        lbh.tmpData.vertical = vertical;
 
         if (current.analysis.flags == QScriptAnalysis::Tab && (alignment & (Qt::AlignLeft | Qt::AlignRight | Qt::AlignCenter | Qt::AlignJustify))) {
             lbh.whiteSpaceOrObject = true;
@@ -1797,8 +1794,7 @@
             if (!line.length && !lbh.tmpData.length)
                 line.setDefaultHeight(eng);
             if (eng->option.flags() & QTextOption::ShowLineAndParagraphSeparators) {
-                addNextCluster(lbh.currentPosition, end, lbh.tmpData, lbh.glyphCount,
-                               current, lbh.logClusters, lbh.glyphs);
+                lbh.addNextCluster(end, lbh.tmpData, current);
             } else {
                 lbh.tmpData.length++;
                 lbh.adjustPreviousRightBearing();
@@ -1821,9 +1817,9 @@
                 goto found;
         } else if (attributes[lbh.currentPosition].whiteSpace) {
             lbh.whiteSpaceOrObject = true;
+            lbh.spaceData.vertical = vertical;
             while (lbh.currentPosition < end && attributes[lbh.currentPosition].whiteSpace)
-                addNextCluster(lbh.currentPosition, end, lbh.spaceData, lbh.glyphCount,
-                               current, lbh.logClusters, lbh.glyphs);
+                lbh.addNextCluster(end, lbh.spaceData, current);
 
             if (!lbh.manualWrap && lbh.spaceData.textWidth > line.width) {
                 lbh.spaceData.textWidth = line.width; // ignore spaces that fall out of the line.
@@ -1834,8 +1830,7 @@
             bool sb_or_ws = false;
             lbh.saveCurrentGlyph();
             do {
-                addNextCluster(lbh.currentPosition, end, lbh.tmpData, lbh.glyphCount,
-                               current, lbh.logClusters, lbh.glyphs);
+                lbh.addNextCluster(end, lbh.tmpData, current);
 
                 if (attributes[lbh.currentPosition].whiteSpace || attributes[lbh.currentPosition-1].lineBreakType != HB_NoBreak) {
                     sb_or_ws = true;
@@ -1932,7 +1927,7 @@
     if (eng->option.flags() & QTextOption::IncludeTrailingSpaces)
         line.textWidth += lbh.spaceData.textWidth;
     if (lbh.spaceData.length) {
-        line.trailingSpaces = lbh.spaceData.length;
+        line.length += lbh.spaceData.length;
         line.hasTrailingSpaces = true;
     }
 
@@ -1996,7 +1991,7 @@
         && eng->block.isValid() && i == eng->lines.count()-1) {
         return eng->lines[i].length - 1;
     }
-    return eng->lines[i].length + eng->lines[i].trailingSpaces;
+    return eng->lines[i].length;
 }
 
 static void drawMenuText(QPainter *p, QFixed x, QFixed y, const QScriptItem &si, QTextItemInt &gf, QTextEngine *eng,
@@ -2113,15 +2108,15 @@
 
     \since 4.8
 
-    \sa QTextLayout::glyphRuns()
+    \sa QTextLayout::glyphs()
 */
 #if !defined(QT_NO_RAWFONT)
-QList<QGlyphRun> QTextLine::glyphs(int from, int length) const
+QList<QGlyphs> QTextLine::glyphs(int from, int length) const
 {
     const QScriptLine &line = eng->lines[i];
 
     if (line.length == 0)
-        return QList<QGlyphRun>();
+        return QList<QGlyphs>();
 
     QHash<QFontEngine *, GlyphInfo> glyphLayoutHash;
 
@@ -2167,9 +2162,6 @@
                     QGlyphLayout subLayout = glyphLayout.mid(start, end - start);
                     glyphLayoutHash.insertMulti(multiFontEngine->engine(which),
                                                 GlyphInfo(subLayout, pos, flags));
-                    for (int i = 0; i < subLayout.numGlyphs; i++)
-                        pos += QPointF(subLayout.advances_x[i].toReal(),
-                                       subLayout.advances_y[i].toReal());
 
                     start = end;
                     which = e;
@@ -2186,7 +2178,7 @@
         }
     }
 
-    QHash<QPair<QFontEngine *, int>, QGlyphRun> glyphsHash;
+    QHash<QPair<QFontEngine *, int>, QGlyphs> glyphsHash;
 
     QList<QFontEngine *> keys = glyphLayoutHash.uniqueKeys();
     for (int i=0; i<keys.size(); ++i) {
@@ -2243,30 +2235,20 @@
                 positions.append(positionsArray.at(i).toPointF() + pos);
             }
 
-            QGlyphRun glyphIndexes;
+            QGlyphs glyphIndexes;
             glyphIndexes.setGlyphIndexes(glyphs);
             glyphIndexes.setPositions(positions);
 
             glyphIndexes.setOverline(flags.testFlag(QTextItem::Overline));
             glyphIndexes.setUnderline(flags.testFlag(QTextItem::Underline));
             glyphIndexes.setStrikeOut(flags.testFlag(QTextItem::StrikeOut));
-            glyphIndexes.setRawFont(font);
+            glyphIndexes.setFont(font);
 
             QPair<QFontEngine *, int> key(fontEngine, int(flags));
-            if (!glyphsHash.contains(key)) {
+            if (!glyphsHash.contains(key))
                 glyphsHash.insert(key, glyphIndexes);
-            } else {
-                QGlyphRun &glyphRun = glyphsHash[key];
-
-                QVector<quint32> indexes = glyphRun.glyphIndexes();
-                QVector<QPointF> positions = glyphRun.positions();
-
-                indexes += glyphIndexes.glyphIndexes();
-                positions += glyphIndexes.positions();
-
-                glyphRun.setGlyphIndexes(indexes);
-                glyphRun.setPositions(positions);
-            }
+            else
+                glyphsHash[key] += glyphIndexes;
         }
     }
 
@@ -2318,7 +2300,7 @@
             && !(eng->option.flags() & QTextOption::ShowLineAndParagraphSeparators))
             continue;
 
-        QFixed itemBaseLine = y;
+        QFixed itemBaseLine = iterator.y + line.y + lineBase;
         QFont f = eng->font(si);
         QTextCharFormat format;
 
@@ -2401,13 +2383,15 @@
         unsigned short *logClusters = eng->logClusters(&si);
         QGlyphLayout glyphs = eng->shapedGlyphs(&si);
 
-        QTextItemInt gf(glyphs.mid(iterator.glyphsStart, iterator.glyphsEnd - iterator.glyphsStart),
-                        &f, eng->layoutData->string.unicode() + iterator.itemStart,
-                        iterator.itemEnd - iterator.itemStart, eng->fontEngine(si), format);
+        QTextItemInt gf(si, &f, format);
+        gf.glyphs = glyphs.mid(iterator.glyphsStart, iterator.glyphsEnd - iterator.glyphsStart);
+        gf.chars = eng->layoutData->string.unicode() + iterator.itemStart;
         gf.logClusters = logClusters + iterator.itemStart - si.position;
+        gf.num_chars = iterator.itemEnd - iterator.itemStart;
         gf.width = iterator.itemWidth;
         gf.justified = line.justified;
-        gf.initWithScriptItem(si);
+        if (eng->option.textOrientation() == Qt::Vertical)
+            gf.flags |= QTextItem::TopToBottom;
 
         Q_ASSERT(gf.fontEngine);
 
@@ -2507,9 +2491,6 @@
 
     int pos = *cursorPos;
     int itm;
-    const HB_CharAttributes *attributes = eng->attributes();
-    while (pos < line.from + line.length && !attributes[pos].charStop)
-        pos++;
     if (pos == line.from + (int)line.length) {
         // end of line ensure we have the last item on the line
         itm = eng->findItem(pos-1);
@@ -2592,8 +2573,8 @@
     } else {
         bool rtl = eng->isRightToLeft();
         bool visual = eng->visualCursorMovement();
-        int end = qMin(lineEnd, si->position + l) - si->position;
         if (reverse) {
+            int end = qMin(lineEnd, si->position + l) - si->position;
             int glyph_end = end == l ? si->num_glyphs : logClusters[end];
             int glyph_start = glyph_pos;
             if (visual && !rtl && !(lastLine && itm == (visualOrder[nItems - 1] + firstItem)))
@@ -2609,12 +2590,9 @@
             for (int i = glyph_start; i <= glyph_end; i++)
                 x += glyphs.effectiveAdvance(i);
         }
-        x += eng->offsetInLigature(si, pos, end, glyph_pos);
+        x += eng->offsetInLigature(si, pos, line.length, glyph_pos);
     }
 
-    if (eng->option.wrapMode() != QTextOption::NoWrap && x > line.width)
-        x = line.width;
-
     *cursorPos = pos + si->position;
     return x.toReal();
 }
@@ -2727,7 +2705,6 @@
             }
 
             int glyph_pos = -1;
-            QFixed edge;
             // has to be inside run
             if (cpos == QTextLine::CursorOnCharacter) {
                 if (si.analysis.bidiLevel % 2) {
@@ -2738,7 +2715,6 @@
                             if (pos < x)
                                 break;
                             glyph_pos = gs;
-                            edge = pos;
                             break;
                         }
                         pos -= glyphs.effectiveAdvance(gs);
@@ -2751,7 +2727,6 @@
                             if (pos > x)
                                 break;
                             glyph_pos = gs;
-                            edge = pos;
                         }
                         pos += glyphs.effectiveAdvance(gs);
                         ++gs;
@@ -2765,7 +2740,6 @@
                         while (gs <= ge) {
                             if (glyphs.attributes[gs].clusterStart && qAbs(x-pos) < dist) {
                                 glyph_pos = gs;
-                                edge = pos;
                                 dist = qAbs(x-pos);
                             }
                             pos -= glyphs.effectiveAdvance(gs);
@@ -2775,7 +2749,6 @@
                         while (ge >= gs) {
                             if (glyphs.attributes[ge].clusterStart && qAbs(x-pos) < dist) {
                                 glyph_pos = ge;
-                                edge = pos;
                                 dist = qAbs(x-pos);
                             }
                             pos += glyphs.effectiveAdvance(ge);
@@ -2787,7 +2760,6 @@
                         while (gs <= ge) {
                             if (glyphs.attributes[gs].clusterStart && qAbs(x-pos) < dist) {
                                 glyph_pos = gs;
-                                edge = pos;
                                 dist = qAbs(x-pos);
                             }
                             pos += glyphs.effectiveAdvance(gs);
@@ -2799,7 +2771,6 @@
                             pos += glyphs.effectiveAdvance(gs);
                             if (glyphs.attributes[gs].clusterStart && qAbs(x-pos) < dist) {
                                 glyph_pos = gs;
-                                edge = pos;
                                 dist = qAbs(x-pos);
                             }
                             ++gs;
@@ -2816,13 +2787,16 @@
                         if (rtl && nchars > 0)
                             return insertionPoints[lastLine ? nchars : nchars - 1];
                     }
-                    return eng->positionInLigature(&si, end, x, pos, -1,
-                                                   cpos == QTextLine::CursorOnCharacter);
+                    return si.position + end;
                 }
             }
             Q_ASSERT(glyph_pos != -1);
-            return eng->positionInLigature(&si, end, x, edge, glyph_pos,
-                                           cpos == QTextLine::CursorOnCharacter);
+            int j;
+            for (j = 0; j < eng->length(item); ++j)
+                if (logClusters[j] == glyph_pos)
+                    break;
+//             qDebug("at pos %d (in run: %d)", si.position + j, j);
+            return si.position + j;
         }
     }
     // right of last item
Index: src/gui/text/qtextdocument.cpp
===================================================================
--- src/gui/text/qtextdocument.cpp	(revision 36094)
+++ src/gui/text/qtextdocument.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -159,7 +159,7 @@
 QString Qt::escape(const QString& plain)
 {
     QString rich;
-    rich.reserve(int(plain.length() * qreal(1.1)));
+    rich.reserve(int(plain.length() * 1.1));
     for (int i = 0; i < plain.length(); ++i) {
         if (plain.at(i) == QLatin1Char('<'))
             rich += QLatin1String("&lt;");
@@ -600,7 +600,7 @@
 /*!
     \since 4.8
 
-    Sets the default cursor movement style to the given \a style.
+    Set the default cursor movement style.
 */
 void QTextDocument::setDefaultCursorMoveStyle(Qt::CursorMoveStyle style)
 {
@@ -2099,10 +2099,6 @@
             html += QLatin1String(" font-size:");
             html += QString::number(defaultCharFormat.fontPointSize());
             html += QLatin1String("pt;");
-        } else if (defaultCharFormat.hasProperty(QTextFormat::FontPixelSize)) {
-            html += QLatin1String(" font-size:");
-            html += QString::number(defaultCharFormat.intProperty(QTextFormat::FontPixelSize));
-            html += QLatin1String("px;");
         }
 
         html += QLatin1String(" font-weight:");
@@ -2183,10 +2179,6 @@
             html += QLatin1Char(';');
             attributesEmitted = true;
         }
-    } else if (format.hasProperty(QTextFormat::FontPixelSize)) {
-        html += QLatin1String(" font-size:");
-        html += QString::number(format.intProperty(QTextFormat::FontPixelSize));
-        html += QLatin1String("px;");
     }
 
     if (format.hasProperty(QTextFormat::FontWeight)
@@ -2709,8 +2701,6 @@
     emitBlockAttributes(block);
 
     html += QLatin1Char('>');
-    if (block.begin().atEnd())
-        html += QLatin1String("<br />");
 
     QTextBlock::Iterator it = block.begin();
     if (fragmentMarkers && !it.atEnd() && block == doc->begin())
Index: src/gui/text/qfragmentmap_p.h
===================================================================
--- src/gui/text/qfragmentmap_p.h	(revision 36094)
+++ src/gui/text/qfragmentmap_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qglyphs_p.h
===================================================================
--- src/gui/text/qglyphs_p.h	(revision 0)
+++ src/gui/text/qglyphs_p.h	(revision 43814)
@@ -0,0 +1,103 @@
+/****************************************************************************
+**
+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
+** All rights reserved.
+** Contact: Nokia Corporation (qt-info@nokia.com)
+**
+** This file is part of the QtGui module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights.  These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
+**
+**
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QGLYPHS_P_H
+#define QGLYPHS_P_H
+
+//
+//  W A R N I N G
+//  -------------
+//
+// This file is not part of the Qt API.  It exists for the convenience
+// of internal files.  This header file may change from version to version
+// without notice, or even be removed.
+//
+// We mean it.
+//
+
+#include "qglyphs.h"
+#include "qrawfont.h"
+
+#include <qfont.h>
+
+#if !defined(QT_NO_RAWFONT)
+
+QT_BEGIN_HEADER
+
+QT_BEGIN_NAMESPACE
+
+class QGlyphsPrivate: public QSharedData
+{
+public:
+    QGlyphsPrivate()
+        : overline(false)
+        , underline(false)
+        , strikeOut(false)
+    {
+    }
+
+    QGlyphsPrivate(const QGlyphsPrivate &other)
+      : QSharedData(other)
+      , glyphIndexes(other.glyphIndexes)
+      , glyphPositions(other.glyphPositions)
+      , font(other.font)
+      , overline(other.overline)
+      , underline(other.underline)
+      , strikeOut(other.strikeOut)
+    {
+    }
+
+    QVector<quint32> glyphIndexes;
+    QVector<QPointF> glyphPositions;
+    QRawFont font;
+
+    uint overline  : 1;
+    uint underline : 1;
+    uint strikeOut : 1;
+};
+
+QT_END_NAMESPACE
+
+QT_END_HEADER
+
+#endif // QGLYPHS_P_H
+
+#endif // QT_NO_RAWFONT
Index: src/gui/text/qfontengine_coretext_p.h
===================================================================
--- src/gui/text/qfontengine_coretext_p.h	(revision 36094)
+++ src/gui/text/qfontengine_coretext_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -44,18 +44,8 @@
 
 #include <private/qfontengine_p.h>
 
-#ifdef QT_NO_CORESERVICES
-#include <CoreText/CoreText.h>
-#include <CoreGraphics/CoreGraphics.h>
-#include <private/qcore_mac_p.h>
-#endif
-
 #if !defined(Q_WS_MAC) || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
 
-QT_BEGIN_HEADER
-
-QT_BEGIN_NAMESPACE
-
 class QRawFontPrivate;
 class QCoreTextFontEngineMulti;
 class QCoreTextFontEngine : public QFontEngine
@@ -70,6 +60,8 @@
 
     virtual glyph_metrics_t boundingBox(const QGlyphLayout &glyphs);
     virtual glyph_metrics_t boundingBox(glyph_t glyph);
+    virtual glyph_metrics_t boundingBox(const QGlyphLayout &glyphs, Qt::Orientation orientation);
+    virtual glyph_metrics_t boundingBox(glyph_t glyph, Qt::Orientation orientation);
 
     virtual QFixed ascent() const;
     virtual QFixed descent() const;
@@ -113,6 +105,9 @@
     int synthesisFlags;
     CGAffineTransform transform;
     QFixed avgCharWidth;
+    qreal ctMaxCharWidth;
+    qreal ctMinLeftBearing;
+    qreal ctMinRightBearing;
     friend class QCoreTextFontEngineMulti;
 };
 
@@ -120,7 +115,7 @@
 {
 public:
     QCoreTextFontEngineMulti(const QCFString &name, const QFontDef &fontDef, bool kerning);
-    QCoreTextFontEngineMulti(CTFontRef ctFontRef, const QFontDef &fontDef, bool kerning);
+    QCoreTextFontEngineMulti(CGFontRef cgFontRef, const QFontDef &fontDef, bool kerning);
     ~QCoreTextFontEngineMulti();
 
     virtual bool stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs, int *nglyphs,
@@ -131,8 +126,6 @@
                       QScriptItem *si) const;
 
     virtual const char *name() const { return "CoreText"; }
-    inline CTFontRef macFontID() const { return ctfont; }
-
 protected:
     virtual void loadEngine(int at);
 
@@ -148,12 +141,6 @@
     friend class QFontDialogPrivate;
 };
 
-CGAffineTransform qt_transform_from_fontdef(const QFontDef &fontDef);
-
-QT_END_NAMESPACE
-
-QT_END_HEADER
-
 #endif// !defined(Q_WS_MAC) || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
 
 #endif // QFONTENGINE_CORETEXT_P_H
Index: src/gui/text/qrawfont_win.cpp
===================================================================
--- src/gui/text/qrawfont_win.cpp	(revision 36094)
+++ src/gui/text/qrawfont_win.cpp	(revision 43814)
@@ -7,42 +7,39 @@
 ** This file is part of the test suite of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
 
 #include "qrawfont_p.h"
-
-#if !defined(QT_NO_RAWFONT)
-
 #include <private/qsystemlibrary_p.h>
 
 #if !defined(QT_NO_DIRECTWRITE)
@@ -50,6 +47,8 @@
 #  include <dwrite.h>
 #endif
 
+#if !defined(QT_NO_RAWFONT)
+
 QT_BEGIN_NAMESPACE
 
 namespace {
@@ -62,16 +61,18 @@
         operator T() const
         {
             T littleEndian = 0;
-            for (int i = 0; i < int(sizeof(T)); ++i)
+            for (int i=0; i<sizeof(T); ++i) {
                 littleEndian |= data[i] << ((sizeof(T) - i - 1) * 8);
+            }
 
             return littleEndian;
         }
 
         BigEndian<T> &operator=(const T &t)
         {
-            for (int i = 0; i < int(sizeof(T)); ++i)
+            for (int i=0; i<sizeof(T); ++i) {
                 data[i] = ((t >> (sizeof(T) - i - 1) * 8) & 0xff);
+            }
 
             return *this;
         }
@@ -156,7 +157,7 @@
     class EmbeddedFont
     {
     public:
-        EmbeddedFont(const QByteArray &fontData) : m_fontData(fontData) {}
+        EmbeddedFont(const QByteArray &fontData);
 
         QString changeFamilyName(const QString &newFamilyName);
         QByteArray data() const { return m_fontData; }
@@ -167,6 +168,10 @@
         QByteArray m_fontData;
     };
 
+    EmbeddedFont::EmbeddedFont(const QByteArray &fontData) : m_fontData(fontData)
+    {
+    }
+
     TableDirectory *EmbeddedFont::tableDirectoryEntry(const QByteArray &tagName)
     {
         Q_ASSERT(tagName.size() == 4);
@@ -209,9 +214,9 @@
                                                         + nameRecord->offset;
 
                     const BigEndian<quint16> *s = reinterpret_cast<const BigEndian<quint16> *>(ptr);
-                    const BigEndian<quint16> *e = s + nameRecord->length / sizeof(quint16);
-                    while (s != e)
-                        name += QChar(*s++);
+                    for (int j=0; j<nameRecord->length / sizeof(quint16); ++j)
+                        name += QChar(s[j]);
+
                     break;
                 }
             }
@@ -520,49 +525,41 @@
 // From qfontdatabase.cpp
 extern QFont::Weight weightFromInteger(int weight);
 
-typedef HANDLE (WINAPI *PtrAddFontMemResourceEx)(PVOID, DWORD, PVOID, DWORD *);
-static PtrAddFontMemResourceEx ptrAddFontMemResourceEx = 0;
-typedef BOOL (WINAPI *PtrRemoveFontMemResourceEx)(HANDLE);
-static PtrRemoveFontMemResourceEx ptrRemoveFontMemResourceEx = 0;
-
-static void resolveGdi32()
+void QRawFontPrivate::platformCleanUp()
 {
-    static bool triedResolve = false;
-    if (!triedResolve) {
-        QSystemLibrary gdi32(QLatin1String("gdi32"));
-        if (gdi32.load()) {
-            ptrAddFontMemResourceEx = (PtrAddFontMemResourceEx)gdi32.resolve("AddFontMemResourceEx");
-            ptrRemoveFontMemResourceEx = (PtrRemoveFontMemResourceEx)gdi32.resolve("RemoveFontMemResourceEx");
+    if (fontHandle != NULL) {
+        if (ptrRemoveFontMemResourceEx == NULL) {
+            void *func = QSystemLibrary::resolve(QLatin1String("gdi32"), "RemoveFontMemResourceEx");
+            ptrRemoveFontMemResourceEx =
+                    reinterpret_cast<QRawFontPrivate::PtrRemoveFontMemResourceEx>(func);
         }
 
-        triedResolve = true;
-    }
-}
-
-void QRawFontPrivate::platformCleanUp()
-{
-    if (fontHandle != NULL) {
-        if (ptrRemoveFontMemResourceEx)
+        if (ptrRemoveFontMemResourceEx == NULL) {
+            qWarning("QRawFont::platformCleanUp: Can't find RemoveFontMemResourceEx in gdi32");
+            fontHandle = NULL;
+        } else {
             ptrRemoveFontMemResourceEx(fontHandle);
-        fontHandle = NULL;
+            fontHandle = NULL;
+        }
     }
 }
 
-void QRawFontPrivate::platformLoadFromData(const QByteArray &fontData,
-                                           qreal pixelSize,
+void QRawFontPrivate::platformLoadFromData(const QByteArray &_fontData,
+                                           int pixelSize,
                                            QFont::HintingPreference hintingPreference)
 {
+    QByteArray fontData(_fontData);
     EmbeddedFont font(fontData);
 
 #if !defined(QT_NO_DIRECTWRITE)
     if (hintingPreference == QFont::PreferDefaultHinting
-        || hintingPreference == QFont::PreferFullHinting)
+     || hintingPreference == QFont::PreferFullHinting)
 #endif
     {
         GUID guid;
         CoCreateGuid(&guid);
 
-        QString uniqueFamilyName = QLatin1Char('f')
+        QString uniqueFamilyName = QString::fromLatin1("f")
                 + QString::number(guid.Data1, 36) + QLatin1Char('-')
                 + QString::number(guid.Data2, 36) + QLatin1Char('-')
                 + QString::number(guid.Data3, 36) + QLatin1Char('-')
@@ -574,13 +571,22 @@
             return;
         }
 
+        if (ptrAddFontMemResourceEx == NULL || ptrRemoveFontMemResourceEx == NULL) {
+            void *func = QSystemLibrary::resolve(QLatin1String("gdi32"), "RemoveFontMemResourceEx");
+            ptrRemoveFontMemResourceEx =
+                    reinterpret_cast<QRawFontPrivate::PtrRemoveFontMemResourceEx>(func);
+
+            func = QSystemLibrary::resolve(QLatin1String("gdi32"), "AddFontMemResourceEx");
+            ptrAddFontMemResourceEx =
+                    reinterpret_cast<QRawFontPrivate::PtrAddFontMemResourceEx>(func);
+        }
+
         Q_ASSERT(fontHandle == NULL);
-        resolveGdi32();
-        if (ptrAddFontMemResourceEx && ptrRemoveFontMemResourceEx) {
+        if (ptrAddFontMemResourceEx != NULL && ptrRemoveFontMemResourceEx != NULL) {
             DWORD count = 0;
-            QByteArray newFontData = font.data();
-            fontHandle = ptrAddFontMemResourceEx((void *)newFontData.constData(), newFontData.size(),
-                                                 0, &count);
+            fontData = font.data();
+            fontHandle = ptrAddFontMemResourceEx(fontData.data(), fontData.size(), 0, &count);
+
             if (count == 0 && fontHandle != NULL) {
                 ptrRemoveFontMemResourceEx(fontHandle);
                 fontHandle = NULL;
Index: src/gui/text/qtextformat.cpp
===================================================================
--- src/gui/text/qtextformat.cpp	(revision 36094)
+++ src/gui/text/qtextformat.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -571,8 +571,6 @@
     \value FontStyleHint        Corresponds to the QFont::StyleHint property
     \value FontStyleStrategy    Corresponds to the QFont::StyleStrategy property
     \value FontKerning          Specifies whether the font has kerning turned on.
-    \value FontHintingPreference Controls the use of hinting according to values
-                                 of the QFont::HintingPreference enum.
 
     \omitvalue FirstFontProperty
     \omitvalue LastFontProperty
@@ -590,13 +588,8 @@
 
     List properties
 
-    \value ListStyle        Specifies the style used for the items in a list,
-                            described by values of the QTextListFormat::Style enum.
-    \value ListIndent       Specifies the amount of indentation used for a list.
-    \value ListNumberPrefix Defines the text which is prepended to item numbers in
-                            numeric lists.
-    \value ListNumberSuffix Defines the text which is appended to item numbers in
-                            numeric lists.
+    \value ListStyle
+    \value ListIndent
 
     Table and frame properties
 
@@ -1270,18 +1263,16 @@
 
     \value AlignNormal  Adjacent characters are positioned in the standard
                         way for text in the writing system in use.
-    \value AlignSuperScript Characters are placed above the base line for
+    \value AlignSuperScript Characters are placed above the baseline for
                             normal text.
-    \value AlignSubScript   Characters are placed below the base line for
+    \value AlignSubScript   Characters are placed below the baseline for
                             normal text.
-    \value AlignMiddle The center of the object is vertically aligned with the
-                       base line. Currently, this is only implemented for
-                       inline objects.
+    \value AlignMiddle The center of the object is vertically aligned with the base line.
+                       Currently, this is only implemented for inline objects.
     \value AlignBottom The bottom edge of the object is vertically aligned with
                        the base line.
     \value AlignTop    The top edge of the object is vertically aligned with
                        the base line.
-    \value AlignBaseline The base lines of the characters are aligned.
 */
 
 /*!
@@ -2145,9 +2136,8 @@
     \fn void QTextBlockFormat::setLineHeight(qreal height, int heightType)
     \since 4.8
 
-    Sets the line height for the paragraph to the value given by \a height
-    which is dependent on \a heightType in the way described by the
-    LineHeightTypes enum.
+    This sets the line height for the paragraph to the value in height
+    which is dependant on heightType, described by the LineHeightTypes enum.
 
     \sa LineHeightTypes, lineHeight(), lineHeightType()
 */
@@ -2157,17 +2147,12 @@
     \fn qreal QTextBlockFormat::lineHeight(qreal scriptLineHeight, qreal scaling) const
     \since 4.8
 
-    Returns the height of the lines in the paragraph based on the height of the
-    script line given by \a scriptLineHeight and the specified \a scaling
-    factor.
+    This returns what the height of the lines in the paragraph will be depending
+    on the given height of the script line and the scaling. The value that is returned
+    is also dependant on the given LineHeightType of the paragraph as well as the LineHeight
+    setting that has been set for the paragraph. The scaling is needed for the heights
+    that include a fixed number of pixels, to scale them appropriately for printing.
 
-    The value that is returned is also dependent on the given LineHeightType of
-    the paragraph as well as the LineHeight setting that has been set for the
-    paragraph.
-
-    The scaling is needed for heights that include a fixed number of pixels, to
-    scale them appropriately for printing.
-
     \sa LineHeightTypes, setLineHeight(), lineHeightType()
 */
 
@@ -2252,13 +2237,6 @@
     numbering scheme used for items in the list. Note that lists that use the
     decimal numbering scheme begin counting at 1 rather than 0.
 
-    Style properties can be set to further configure the appearance of list
-    items; for example, the ListNumberPrefix and ListNumberSuffix properties
-    can be used to customize the numbers used in an ordered list so that they
-    appear as (1), (2), (3), etc.:
-
-    \snippet doc/src/snippets/textdocument-listitemstyles/mainwindow.cpp add a styled, ordered list
-
     \sa QTextList
 */
 
@@ -2350,12 +2328,9 @@
     \fn void QTextListFormat::setNumberPrefix(const QString &numberPrefix)
     \since 4.8
 
-    Sets the list format's number prefix to the string specified by
-    \a numberPrefix. This can be used with all sorted list types. It does not
-    have any effect on unsorted list types.
+    Sets the list format's number prefix. This can be used with all
+    sorted list types. It does not have any effect on unsorted list types.
 
-    The default prefix is an empty string.
-
     \sa numberPrefix()
 */
 
@@ -2372,10 +2347,8 @@
     \fn void QTextListFormat::setNumberSuffix(const QString &numberSuffix)
     \since 4.8
 
-    Sets the list format's number suffix to the string specified by
-    \a numberSuffix. This can be used with all sorted list types. It does not
-    have any effect on unsorted list types.
-
+    Sets the list format's number suffix. This can be used with all
+    sorted list types. It does not have any effect on unsorted list types.
     The default suffix is ".".
 
     \sa numberSuffix()
Index: src/gui/text/qfont_x11.cpp
===================================================================
--- src/gui/text/qfont_x11.cpp	(revision 36094)
+++ src/gui/text/qfont_x11.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfont_qws.cpp
===================================================================
--- src/gui/text/qfont_qws.cpp	(revision 36094)
+++ src/gui/text/qfont_qws.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -131,5 +131,4 @@
     return QString();
 }
 
-
 QT_END_NAMESPACE
Index: src/gui/text/qfontdatabase.h
===================================================================
--- src/gui/text/qfontdatabase.h	(revision 36094)
+++ src/gui/text/qfontdatabase.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -44,6 +44,7 @@
 
 #include <QtGui/qwindowdefs.h>
 #include <QtCore/qstring.h>
+#include <QtCore/qfile.h>
 #include <QtGui/qfont.h>
 #ifdef QT3_SUPPORT
 #include <QtCore/qstringlist.h>
@@ -151,6 +152,9 @@
 
     static bool supportsThreadedFontRendering();
 
+    typedef QByteArray (*decryptor)(QFile &font);
+    static decryptor decryptFontData;
+
 private:
     static void createDatabase();
     static void parseFontName(const QString &name, QString &foundry, QString &family);
Index: src/gui/text/qfontengine_coretext.mm
===================================================================
--- src/gui/text/qfontengine_coretext.mm	(revision 36094)
+++ src/gui/text/qfontengine_coretext.mm	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -52,6 +52,13 @@
 
 static float SYNTHETIC_ITALIC_SKEW = tanf(14 * acosf(0) / 90);
 
+static inline void swapCGSize(CGSize& size)
+{
+    CGFloat height = size.width;
+    size.width = size.height;
+    size.height = height;
+}
+
 static void loadAdvancesForGlyphs(CTFontRef ctfont,
                                   QVarLengthArray<CGGlyph> &cgGlyphs,
                                   QGlyphLayout *glyphs, int len,
@@ -100,12 +107,7 @@
 
     QCFType<CTFontDescriptorRef> descriptor = CTFontDescriptorCreateWithNameAndSize(name, fontDef.pixelSize);
     QCFType<CTFontRef> baseFont = CTFontCreateWithFontDescriptor(descriptor, fontDef.pixelSize, &transform);
-    ctfont = NULL;
-    // There is a side effect in Core Text: if we apply 0 as symbolic traits to a font in normal weight,
-    // we will get the light version of that font (while the way supposed to work doesn't:
-    // setting kCTFontWeightTrait to some value between -1.0 to 0.0 has no effect on font selection)
-    if (fontDef.weight != QFont::Normal || symbolicTraits)
-        ctfont = CTFontCreateCopyWithSymbolicTraits(baseFont, fontDef.pixelSize, &transform, symbolicTraits, symbolicTraits);
+    ctfont = CTFontCreateCopyWithSymbolicTraits(baseFont, fontDef.pixelSize, &transform, symbolicTraits, symbolicTraits);
 
     // CTFontCreateCopyWithSymbolicTraits returns NULL if we ask for a trait that does
     // not exist for the given font. (for example italic)
@@ -116,11 +118,17 @@
     init(kerning);
 }
 
-QCoreTextFontEngineMulti::QCoreTextFontEngineMulti(CTFontRef ctFontRef, const QFontDef &fontDef, bool kerning)
+QCoreTextFontEngineMulti::QCoreTextFontEngineMulti(CGFontRef cgFontRef, const QFontDef &fontDef, bool kerning)
     : QFontEngineMulti(0)
 {
     this->fontDef = fontDef;
-    ctfont = (CTFontRef) CFRetain(ctFontRef);
+
+    transform = CGAffineTransformIdentity;
+    if (fontDef.stretch != 100) {
+        transform = CGAffineTransformMakeScale(float(fontDef.stretch) / float(100), 1);
+    }
+
+    ctfont = CTFontCreateWithGraphicsFont(cgFontRef, fontDef.pixelSize, &transform, NULL);
     init(kerning);
 }
 
@@ -135,7 +143,7 @@
     attributeDict = CFDictionaryCreateMutable(0, 2,
                                        &kCFTypeDictionaryKeyCallBacks,
                                        &kCFTypeDictionaryValueCallBacks);
-    CFDictionaryAddValue(attributeDict, kCTFontAttributeName, ctfont);
+    CFDictionaryAddValue(attributeDict, NSFontAttributeName, ctfont);
     if (!kerning) {
         float zero = 0.0;
         QCFType<CFNumberRef> noKern = CFNumberCreate(kCFAllocatorDefault, kCFNumberFloatType, &zero);
@@ -143,9 +151,6 @@
     }
 
     QCoreTextFontEngine *fe = new QCoreTextFontEngine(ctfont, fontDef);
-    fontDef.family = fe->fontDef.family;
-    fontDef.styleName = fe->fontDef.styleName;
-    transform = fe->transform;
     fe->ref.ref();
     engines.append(fe);
 }
@@ -172,6 +177,11 @@
     QCFType<CFStringRef> cfstring = CFStringCreateWithCharactersNoCopy(0,
                                                                reinterpret_cast<const UniChar *>(str),
                                                                len, kCFAllocatorNull);
+    bool vertical = (flags & QTextEngine::TopToBottom);
+    CTFontOrientation orientation = vertical ? kCTFontVerticalOrientation : kCTFontHorizontalOrientation;
+    if (vertical)
+        CFDictionaryAddValue(attributeDict, kCTVerticalFormsAttributeName, kCFBooleanTrue);
+
     QCFType<CFAttributedStringRef> attributedString = CFAttributedStringCreate(0, cfstring, attributeDict);
     QCFType<CTTypesetterRef> typeSetter;
 
@@ -189,6 +199,8 @@
 #endif
         typeSetter = CTTypesetterCreateWithAttributedString(attributedString);
 
+    if (vertical)
+        CFDictionaryRemoveValue(attributeDict, kCTVerticalFormsAttributeName);
     CFRange range = {0, 0};
     QCFType<CTLineRef> line = CTTypesetterCreateLine(typeSetter, range);
     CFArrayRef array = CTLineGetGlyphRuns(line);
@@ -257,7 +269,7 @@
             //NSLog(@"Dictionary %@", runAttribs);
             if (!runAttribs)
                 runAttribs = attributeDict;
-            CTFontRef runFont = static_cast<CTFontRef>(CFDictionaryGetValue(runAttribs, kCTFontAttributeName));
+            CTFontRef runFont = static_cast<CTFontRef>(CFDictionaryGetValue(runAttribs, NSFontAttributeName));
             uint fontIndex = fontIndexForFont(runFont);
             const QFontEngine *engine = engineAt(fontIndex);
             fontIndex <<= 24;
@@ -329,13 +341,23 @@
                 }
             }
             CGSize lastGlyphAdvance;
-            CTFontGetAdvancesForGlyphs(runFont, kCTFontHorizontalOrientation, tmpGlyphs + glyphCount - 1, &lastGlyphAdvance, 1);
+            CTFontGetAdvancesForGlyphs(runFont, orientation, tmpGlyphs + glyphCount - 1, &lastGlyphAdvance, 1);
 
             outGlyphs[rtl ? 0 : (glyphCount - 1)] = tmpGlyphs[glyphCount - 1] | fontIndex;
+            // advances returned from CTFontGetAdvancesForGlyphs() put y-axis advances in
+            // lastGlyphAdvance.width even if we specified kCTFontVerticalOrientation, so
+            // we need to swap the width and height here.
+            if (vertical)
+                swapCGSize(lastGlyphAdvance);
+
             outAdvances_x[rtl ? 0 : (glyphCount - 1)] =
                     (fontDef.styleStrategy & QFont::ForceIntegerMetrics)
                     ? QFixed::fromReal(lastGlyphAdvance.width).round()
                     : QFixed::fromReal(lastGlyphAdvance.width);
+            outAdvances_y[rtl ? 0 : (glyphCount - 1)] =
+                    (fontDef.styleStrategy & QFont::ForceIntegerMetrics)
+                    ? QFixed::fromReal(lastGlyphAdvance.height).round()
+                    : QFixed::fromReal(lastGlyphAdvance.height);
 
             if (endWithPDF) {
                 logClusters[stringRange.location + stringRange.length - 1] = glyphCount + prepend;
@@ -402,7 +424,7 @@
 
 extern int qt_antialiasing_threshold; // from qapplication.cpp
 
-CGAffineTransform qt_transform_from_fontdef(const QFontDef &fontDef)
+static inline CGAffineTransform transformFromFontDef(const QFontDef &fontDef)
 {
     CGAffineTransform transform = CGAffineTransformIdentity;
     if (fontDef.stretch != 100)
@@ -413,7 +435,7 @@
 QCoreTextFontEngine::QCoreTextFontEngine(CTFontRef font, const QFontDef &def)
 {
     fontDef = def;
-    transform = qt_transform_from_fontdef(fontDef);
+    transform = transformFromFontDef(fontDef);
     ctfont = font;
     CFRetain(ctfont);
     cgFont = CTFontCopyGraphicsFont(font, NULL);
@@ -423,7 +445,7 @@
 QCoreTextFontEngine::QCoreTextFontEngine(CGFontRef font, const QFontDef &def)
 {
     fontDef = def;
-    transform = qt_transform_from_fontdef(fontDef);
+    transform = transformFromFontDef(fontDef);
     cgFont = font;
     // Keep reference count balanced
     CFRetain(cgFont);
@@ -461,9 +483,6 @@
     QCFString family = CTFontCopyFamilyName(ctfont);
     fontDef.family = family;
 
-    QCFString styleName = (CFStringRef) CTFontCopyAttribute(ctfont, kCTFontStyleNameAttribute);
-    fontDef.styleName = styleName;
-
     synthesisFlags = 0;
     CTFontSymbolicTraits traits = CTFontGetSymbolicTraits(ctfont);
     if (traits & kCTFontItalicTrait)
@@ -492,6 +511,17 @@
         avgCharWidth = QFixed::fromReal(width * fontDef.pixelSize / emSize);
     } else
         avgCharWidth = QFontEngine::averageCharWidth();
+
+    ctMaxCharWidth = ctMinLeftBearing = ctMinRightBearing = 0;
+    QByteArray hheaTable = getSfntTable(MAKE_TAG('h', 'h', 'e', 'a'));
+    if (hheaTable.size() >= 16) {
+        quint16 width = qFromBigEndian<quint16>(reinterpret_cast<const uchar *>(hheaTable.constData() + 10));
+        ctMaxCharWidth = width * fontDef.pixelSize / emSize;
+        qint16 bearing = qFromBigEndian<qint16>(reinterpret_cast<const uchar *>(hheaTable.constData() + 12));
+        ctMinLeftBearing = bearing * fontDef.pixelSize / emSize;
+        bearing = qFromBigEndian<qint16>(reinterpret_cast<const uchar *>(hheaTable.constData() + 14));
+        ctMinRightBearing = bearing * fontDef.pixelSize / emSize;
+    }
 }
 
 bool QCoreTextFontEngine::stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs,
@@ -526,11 +556,33 @@
     return glyph_metrics_t(0, -(ascent()), w - lastRightBearing(glyphs, round), ascent()+descent(), w, 0);
 }
 
+glyph_metrics_t QCoreTextFontEngine::boundingBox(const QGlyphLayout &glyphs, Qt::Orientation orientation)
+{
+    if (orientation == Qt::Horizontal)
+        return boundingBox(glyphs);
+
+    CGRect rect = CTFontGetBoundingRectsForGlyphs(ctfont,
+                                                  kCTFontVerticalOrientation,
+                                                  (const CGGlyph *) glyphs.glyphs,
+                                                  NULL, glyphs.numGlyphs);
+    return glyph_metrics_t(QFixed::fromReal(rect.origin.x),
+                           QFixed::fromReal(rect.origin.y),
+                           QFixed::fromReal(rect.size.width),
+                           QFixed::fromReal(rect.size.height), 0, 0);
+}
+
 glyph_metrics_t QCoreTextFontEngine::boundingBox(glyph_t glyph)
 {
+    return boundingBox(glyph, Qt::Horizontal);
+}
+
+glyph_metrics_t QCoreTextFontEngine::boundingBox(glyph_t glyph, Qt::Orientation orientation)
+{
     glyph_metrics_t ret;
     CGGlyph g = glyph;
-    CGRect rect = CTFontGetBoundingRectsForGlyphs(ctfont, kCTFontHorizontalOrientation, &g, 0, 1);
+    CTFontOrientation ctOrientation = orientation == Qt::Vertical ? kCTFontVerticalOrientation
+                                                                  : kCTFontHorizontalOrientation;
+    CGRect rect = CTFontGetBoundingRectsForGlyphs(ctfont, ctOrientation, &g, 0, 1);
     if (synthesisFlags & QFontEngine::SynthesizedItalic) {
         rect.size.width += rect.size.height * SYNTHETIC_ITALIC_SKEW;
     }
@@ -539,7 +591,9 @@
     ret.x = QFixed::fromReal(rect.origin.x);
     ret.y = -QFixed::fromReal(rect.origin.y) - ret.height;
     CGSize advances[1];
-    CTFontGetAdvancesForGlyphs(ctfont, kCTFontHorizontalOrientation, &g, advances, 1);
+    CTFontGetAdvancesForGlyphs(ctfont, ctOrientation, &g, advances, 1);
+    if (orientation == Qt::Vertical)
+        swapCGSize(advances[0]);
     ret.xoff = QFixed::fromReal(advances[0].width);
     ret.yoff = QFixed::fromReal(advances[0].height);
 
@@ -547,6 +601,7 @@
         ret.xoff = ret.xoff.round();
         ret.yoff = ret.yoff.round();
     }
+
     return ret;
 }
 
@@ -587,17 +642,20 @@
 
 qreal QCoreTextFontEngine::maxCharWidth() const
 {
-    return 0;
+    return (fontDef.styleStrategy & QFont::ForceIntegerMetrics)
+            ? qRound(ctMaxCharWidth) : ctMaxCharWidth;
 }
 
 qreal QCoreTextFontEngine::minLeftBearing() const
 {
-    return 0;
+    return (fontDef.styleStrategy & QFont::ForceIntegerMetrics)
+            ? qRound(ctMinLeftBearing) : ctMinLeftBearing;
 }
 
 qreal QCoreTextFontEngine::minRightBearing() const
 {
-    return 0;
+    return (fontDef.styleStrategy & QFont::ForceIntegerMetrics)
+            ? qRound(ctMinRightBearing) : ctMinLeftBearing;
 }
 
 void QCoreTextFontEngine::draw(CGContextRef ctx, qreal x, qreal y, const QTextItemInt &ti, int paintDeviceHeight)
@@ -715,19 +773,13 @@
     }
 }
 
-QImage QCoreTextFontEngine::imageForGlyph(glyph_t glyph, QFixed subPixelPosition, int margin, bool aa)
+QImage QCoreTextFontEngine::imageForGlyph(glyph_t glyph, QFixed subPixelPosition, int /*margin*/, bool aa)
 {
-    Q_UNUSED(margin);
     const glyph_metrics_t br = boundingBox(glyph);
-    QImage im(qRound(br.width) + 2, qRound(br.height) + 2, QImage::Format_RGB32);
+    QImage im(qRound(br.width)+2, qRound(br.height)+2, QImage::Format_RGB32);
     im.fill(0);
 
-    CGColorSpaceRef colorspace =
-#ifdef Q_WS_MAC
-            CGColorSpaceCreateWithName(kCGColorSpaceGenericRGB);
-#else
-            CGColorSpaceCreateDeviceRGB();
-#endif
+    CGColorSpaceRef colorspace = CGColorSpaceCreateWithName(kCGColorSpaceGenericRGB);
     uint cgflags = kCGImageAlphaNoneSkipFirst;
 #ifdef kCGBitmapByteOrder32Host //only needed because CGImage.h added symbols in the minor version
     cgflags |= kCGBitmapByteOrder32Host;
@@ -736,8 +788,9 @@
                                              8, im.bytesPerLine(), colorspace,
                                              cgflags);
     CGContextSetFontSize(ctx, fontDef.pixelSize);
-    CGContextSetShouldAntialias(ctx, (aa || fontDef.pointSize > qt_antialiasing_threshold)
-                                 && !(fontDef.styleStrategy & QFont::NoAntialias));
+    CGContextSetShouldAntialias(ctx, aa ||
+                                (fontDef.pointSize > qt_antialiasing_threshold
+                                 && !(fontDef.styleStrategy & QFont::NoAntialias)));
     CGContextSetShouldSmoothFonts(ctx, aa);
     CGAffineTransform oldTextMatrix = CGContextGetTextMatrix(ctx);
     CGAffineTransform cgMatrix = CGAffineTransformMake(1, 0, 0, 1, 0, 0);
@@ -755,8 +808,8 @@
 
     CGContextSetFont(ctx, cgFont);
 
-    qreal pos_x = -br.x.truncate() + subPixelPosition.toReal();
-    qreal pos_y = im.height() + br.y.toReal();
+    qreal pos_x = -br.x.toReal() + subPixelPosition.toReal();
+    qreal pos_y = im.height() + br.y.toReal() - 1;
     CGContextSetTextPosition(ctx, pos_x, pos_y);
 
     CGSize advance;
@@ -866,7 +919,7 @@
     newFontDef.pixelSize = pixelSize;
     newFontDef.pointSize = pixelSize * 72.0 / qt_defaultDpi();
 
-    return new QCoreTextFontEngine(cgFont, newFontDef);
+    return new QCoreTextFontEngine(cgFont, fontDef);
 }
 
 QT_END_NAMESPACE
Index: src/gui/text/qcssscanner.cpp
===================================================================
--- src/gui/text/qcssscanner.cpp	(revision 36094)
+++ src/gui/text/qcssscanner.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qabstractfontengine_p.h
===================================================================
--- src/gui/text/qabstractfontengine_p.h	(revision 36094)
+++ src/gui/text/qabstractfontengine_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qcssparser.cpp
===================================================================
--- src/gui/text/qcssparser.cpp	(revision 36094)
+++ src/gui/text/qcssparser.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qabstracttextdocumentlayout.cpp
===================================================================
--- src/gui/text/qabstracttextdocumentlayout.cpp	(revision 36094)
+++ src/gui/text/qabstracttextdocumentlayout.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfont.cpp
===================================================================
--- src/gui/text/qfont.cpp	(revision 36094)
+++ src/gui/text/qfont.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -147,7 +147,6 @@
             && weight        == other.weight
             && style        == other.style
             && this_family   == other_family
-            && (styleName.isEmpty() || other.styleName.isEmpty() || styleName == other.styleName)
             && (this_foundry.isEmpty()
                 || other_foundry.isEmpty()
                 || this_foundry == other_foundry)
@@ -349,12 +348,14 @@
     if (! (mask & QFont::FamilyResolved))
         request.family = other->request.family;
 
-    if (! (mask & QFont::StyleNameResolved))
-        request.styleName = other->request.styleName;
-
     if (! (mask & QFont::SizeResolved)) {
         request.pointSize = other->request.pointSize;
         request.pixelSize = other->request.pixelSize;
+
+        request.csmThicknessOffset = other->request.csmThicknessOffset;
+        request.csmThicknessSlope = other->request.csmThicknessSlope;
+        request.csmSharpnessOffset = other->request.csmSharpnessOffset;
+        request.csmSharpnessSlope = other->request.csmSharpnessSlope;
     }
 
     if (! (mask & QFont::StyleHintResolved))
@@ -901,39 +902,6 @@
 }
 
 /*!
-    \since 4.8
-
-    Returns the requested font style name, it will be used to match the
-    font with irregular styles (that can't be normalized in other style
-    properties). It depends on system font support, thus only works for
-    Mac OS X and X11 so far. On Windows irregular styles will be added
-    as separate font families so there is no need for this.
-
-    \sa setFamily() setStyle()
-*/
-QString QFont::styleName() const
-{
-    return d->request.styleName;
-}
-
-/*!
-    \since 4.8
-
-    Sets the style name of the font to the given \a styleName.
-    When set, other style properties like style() and weight() will be ignored
-    for font matching.
-
-    \sa styleName()
-*/
-void QFont::setStyleName(const QString &styleName)
-{
-    detach();
-
-    d->request.styleName = styleName;
-    resolve_mask |= QFont::StyleNameResolved;
-}
-
-/*!
     Returns the point size of the font. Returns -1 if the font size
     was specified in pixels.
 
@@ -1791,6 +1759,11 @@
                 && f.d->letterSpacingIsAbsolute == d->letterSpacingIsAbsolute
                 && f.d->letterSpacing == d->letterSpacing
                 && f.d->wordSpacing == d->wordSpacing
+
+                && f.d->request.csmThicknessOffset == d->request.csmThicknessOffset
+                && f.d->request.csmThicknessSlope == d->request.csmThicknessSlope
+                && f.d->request.csmSharpnessOffset == d->request.csmSharpnessOffset
+                && f.d->request.csmSharpnessSlope == d->request.csmSharpnessSlope
             ));
 }
 
@@ -1829,6 +1802,12 @@
     if (f.d->letterSpacing != d->letterSpacing) return f.d->letterSpacing < d->letterSpacing;
     if (f.d->wordSpacing != d->wordSpacing) return f.d->wordSpacing < d->wordSpacing;
 
+
+    if (r1.csmThicknessOffset != r2.csmThicknessOffset) return r1.csmThicknessOffset < r2.csmThicknessOffset;
+    if (r1.csmThicknessSlope != r2.csmThicknessSlope) return r1.csmThicknessSlope < r2.csmThicknessSlope;
+    if (r1.csmSharpnessOffset != r2.csmSharpnessOffset) return r1.csmSharpnessOffset < r2.csmSharpnessOffset;
+    if (r1.csmSharpnessSlope != r2.csmSharpnessSlope) return r1.csmSharpnessSlope < r2.csmSharpnessSlope;
+
     int f1attrs = (f.d->underline << 3) + (f.d->overline << 2) + (f.d->strikeOut<<1) + f.d->kerning;
     int f2attrs = (d->underline << 3) + (d->overline << 2) + (d->strikeOut<<1) + d->kerning;
     return f1attrs < f2attrs;
@@ -2238,7 +2217,9 @@
         QString::number((int) underline()) + comma +
         QString::number((int) strikeOut()) + comma +
         QString::number((int)fixedPitch()) + comma +
-        QString::number((int)   rawMode());
+        QString::number((int)   rawMode()) + comma +
+        QString::number(csmSharpnessOffset()) + comma +
+        QString::number(csmThicknessOffset());
 }
 
 
@@ -2263,7 +2244,7 @@
     setFamily(l[0]);
     if (count > 1 && l[1].toDouble() > 0.0)
         setPointSizeF(l[1].toDouble());
-    if (count == 9) {
+    if (count == 11) {
         setStyleHint((StyleHint) l[2].toInt());
         setWeight(qMax(qMin(99, l[3].toInt()), 0));
         setItalic(l[4].toInt());
@@ -2271,6 +2252,8 @@
         setStrikeOut(l[6].toInt());
         setFixedPitch(l[7].toInt());
         setRawMode(l[8].toInt());
+        setCSMSharpnessOffset(l[9].toFloat());
+        setCSMThicknessOffset(l[10].toFloat());
     } else if (count == 10) {
         if (l[2].toInt() > 0)
             setPixelSize(l[2].toInt());
@@ -2546,21 +2529,6 @@
 }
 
 /*!
-    \since 4.8
-
-    Returns the style name of the matched window system font on
-    system that supports it.
-
-    \sa QFont::styleName()
-*/
-QString QFontInfo::styleName() const
-{
-    QFontEngine *engine = d->engineForScript(QUnicodeTables::Common);
-    Q_ASSERT(engine != 0);
-    return engine->fontDef.styleName;
-}
-
-/*!
     Returns the point size of the matched window system font.
 
     \sa pointSizeF() QFont::pointSize()
@@ -3237,4 +3205,104 @@
 }
 #endif
 
+
+
+
+
+
+
+
+
+void QFont::setCSMThicknessOffset(qreal thicknessOffset)
+ {
+    qreal offsetMax =  1.0;
+    qreal offsetMin = -1.0;
+
+    if ((thicknessOffset < offsetMin) || (thicknessOffset > offsetMax)) {
+        qWarning("QFont::setCSMThicknessOffset: thicknessOffset <= 0 (%g)", thicknessOffset);
+        return;
+    }
+
+    detach();
+    d->request.csmThicknessOffset = thicknessOffset;
+    resolve_mask |= QFont::SizeResolved;
+}
+
+qreal QFont::csmThicknessOffset() const
+{
+    return d->request.csmThicknessOffset;
+}
+
+
+
+void QFont::setCSMThicknessSlope(qreal thicknessSlope)
+{
+#if 0
+    if (thicknessSlope <= 0) {
+        qWarning("QFont::setCSMThicknessSlope: thicknessSlope <= 0 (%g)", thicknessSlope);
+        return;
+    }
+
+    detach();
+    d->request.csmThicknessSlope = thicknessSlope;
+    resolve_mask |= QFont::SizeResolved;
+#endif
+}
+
+qreal QFont::csmThicknessSlope() const
+{
+#if 0
+    return d->request.csmThicknessSlope;
+#else
+    return 0;
+#endif
+}
+
+
+
+void QFont::setCSMSharpnessOffset(qreal sharpnessOffset)
+{
+    qreal offsetMax =  1.0;
+    qreal offsetMin = -1.0;
+
+    if ((sharpnessOffset < offsetMin) || (sharpnessOffset > offsetMax)) {
+        qWarning("QFont::setCSMSharpnessOffset: sharpnessOffset <= 0 (%g)", sharpnessOffset);
+        return;
+    }
+
+    detach();
+    d->request.csmSharpnessOffset = sharpnessOffset;
+    resolve_mask |= QFont::SizeResolved;
+}
+
+qreal QFont::csmSharpnessOffset() const
+{
+    return d->request.csmSharpnessOffset;
+}
+
+
+
+void QFont::setCSMSharpnessSlope(qreal sharpnessSlope)
+{
+#if 0
+    if (sharpnessSlope <= 0) {
+        qWarning("QFont::setCSMSharpnessSlope: sharpnessSlope <= 0 (%g)", sharpnessSlope);
+        return;
+    }
+
+    detach();
+    d->request.csmSharpnessSlope = sharpnessSlope;
+    resolve_mask |= QFont::SizeResolved;
+#endif
+}
+
+qreal QFont::csmSharpnessSlope() const
+{
+#if 0
+    return d->request.csmSharpnessSlope;
+#else
+    return 0;
+#endif
+}
+
 QT_END_NAMESPACE
Index: src/gui/text/qfont_qpa.cpp
===================================================================
--- src/gui/text/qfont_qpa.cpp	(revision 36094)
+++ src/gui/text/qfont_qpa.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextdocumentfragment.cpp
===================================================================
--- src/gui/text/qtextdocumentfragment.cpp	(revision 36094)
+++ src/gui/text/qtextdocumentfragment.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -545,13 +545,8 @@
         }
 
         if (currentNode->isBlock()) {
-            QTextHtmlImporter::ProcessNodeResult result = processBlockNode();
-            if (result == ContinueWithNextNode) {
+            if (processBlockNode() == ContinueWithNextNode)
                 continue;
-            } else if (result == ContinueWithNextSibling) {
-                currentNodeIdx += currentNode->children.size();
-                continue;
-            }
         }
 
         if (currentNode->charFormat.isAnchor() && !currentNode->charFormat.anchorName().isEmpty()) {
@@ -1162,7 +1157,7 @@
 
     if (currentNode->isEmptyParagraph) {
         hasBlock = false;
-        return ContinueWithNextSibling;
+        return ContinueWithNextNode;
     }
 
     hasBlock = true;
Index: src/gui/text/qfontengineglyphcache_p.h
===================================================================
--- src/gui/text/qfontengineglyphcache_p.h	(revision 36094)
+++ src/gui/text/qfontengineglyphcache_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfontdatabase_win.cpp
===================================================================
--- src/gui/text/qfontdatabase_win.cpp	(revision 36094)
+++ src/gui/text/qfontdatabase_win.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -284,7 +284,7 @@
             family->english_name = getEnglishName(familyName);
 
         QtFontFoundry *foundry = family->foundry(foundryName, true);
-        QtFontStyle *style = foundry->style(styleKey, QString(), true);
+        QtFontStyle *style = foundry->style(styleKey, true);
         style->smoothScalable = scalable;
         style->pixelSize( size, TRUE);
 
@@ -292,14 +292,14 @@
         if (styleKey.weight <= QFont::DemiBold) {
             QtFontStyle::Key key(styleKey);
             key.weight = QFont::Bold;
-            QtFontStyle *style = foundry->style(key, QString(), true);
+            QtFontStyle *style = foundry->style(key, true);
             style->smoothScalable = scalable;
             style->pixelSize( size, TRUE);
         }
         if (styleKey.style != QFont::StyleItalic) {
             QtFontStyle::Key key(styleKey);
             key.style = QFont::StyleItalic;
-            QtFontStyle *style = foundry->style(key, QString(), true);
+            QtFontStyle *style = foundry->style(key, true);
             style->smoothScalable = scalable;
             style->pixelSize( size, TRUE);
         }
@@ -307,7 +307,7 @@
             QtFontStyle::Key key(styleKey);
             key.weight = QFont::Bold;
             key.style = QFont::StyleItalic;
-            QtFontStyle *style = foundry->style(key, QString(), true);
+            QtFontStyle *style = foundry->style(key, true);
             style->smoothScalable = scalable;
             style->pixelSize( size, TRUE);
         }
Index: src/gui/text/qfontengine_x11_p.h
===================================================================
--- src/gui/text/qfontengine_x11_p.h	(revision 36094)
+++ src/gui/text/qfontengine_x11_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfontengine_ft_p.h
===================================================================
--- src/gui/text/qfontengine_ft_p.h	(revision 36094)
+++ src/gui/text/qfontengine_ft_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -111,6 +111,12 @@
     FT_CharMap unicode_map;
     FT_CharMap symbol_map;
 
+    FT_Fixed csmSharpnessOffset;
+    FT_Fixed csmSharpnessSlope;
+    FT_Fixed csmThicknessOffset;
+    FT_Fixed csmThicknessSlope;
+
+
     enum { cmapCacheSize = 0x200 };
     glyph_t cmapCache[cmapCacheSize];
 
@@ -138,14 +144,15 @@
     /* we don't cache glyphs that are too large anyway, so we can make this struct rather small */
     struct Glyph {
         ~Glyph();
-        short linearAdvance;
         unsigned char width;
         unsigned char height;
         signed char x;
         signed char y;
-        signed char advance;
+        signed char advanceX;
+        signed char advanceY;
         signed char format;
         uchar *data;
+        unsigned int vertical : 1;
         unsigned int uploadedToServer : 1;
     };
 
@@ -196,7 +203,12 @@
         inline bool useFastGlyphData(glyph_t index, QFixed subPixelPosition) const {
             return (index < 256 && subPixelPosition == 0);
         }
-        inline Glyph *getGlyph(glyph_t index, QFixed subPixelPosition = 0) const;
+        inline Glyph *getGlyph(glyph_t index, QFixed subPixelPosition = 0) const
+        {
+            if (useFastGlyphData(index, subPixelPosition))
+                return fast_glyph_data[index];
+            return glyph_data.value(GlyphAndSubPixelPosition(index, subPixelPosition));
+        }
         void setGlyph(glyph_t index, QFixed spp, Glyph *glyph);
 
 private:
@@ -277,9 +289,9 @@
     inline bool invalid() const { return xsize == 0 && ysize == 0; }
     inline bool isBitmapFont() const { return defaultFormat == Format_Mono; }
 
-    inline Glyph *loadGlyph(uint glyph, QFixed subPixelPosition, GlyphFormat format = Format_None, bool fetchMetricsOnly = false) const
-    { return loadGlyph(&defaultGlyphSet, glyph, subPixelPosition, format, fetchMetricsOnly); }
-    Glyph *loadGlyph(QGlyphSet *set, uint glyph, QFixed subPixelPosition, GlyphFormat = Format_None, bool fetchMetricsOnly = false) const;
+    inline Glyph *loadGlyph(uint glyph, QFixed subPixelPosition, GlyphFormat format = Format_None, bool fetchMetricsOnly = false, bool vertical = false) const
+    { return loadGlyph(&defaultGlyphSet, glyph, subPixelPosition, format, fetchMetricsOnly, vertical); }
+    Glyph *loadGlyph(QGlyphSet *set, uint glyph, QFixed subPixelPosition, GlyphFormat = Format_None, bool fetchMetricsOnly = false, bool vertical = false) const;
 
     QGlyphSet *defaultGlyphs() { return &defaultGlyphSet; }
     GlyphFormat defaultGlyphFormat() const { return defaultFormat; }
@@ -290,7 +302,8 @@
     QFixed subPixelPositionForX(QFixed x);
     bool loadGlyphs(QGlyphSet *gs, const glyph_t *glyphs, int num_glyphs,
                     const QFixedPoint *positions,
-                    GlyphFormat format = Format_Render);
+                    GlyphFormat format = Format_Render,
+                    bool vertical = false);
 
 #if defined(Q_WS_QWS) || defined(Q_OS_SYMBIAN)
     virtual void draw(QPaintEngine * /*p*/, qreal /*x*/, qreal /*y*/, const QTextItemInt & /*si*/) {}
@@ -344,6 +357,7 @@
 private:
     friend class QFontEngineFTRawFont;
 
+    QFontEngineFT::Glyph *loadGlyphMetrics(QGlyphSet *set, uint glyph, GlyphFormat format) const;
     int loadFlags(QGlyphSet *set, GlyphFormat format, int flags, bool &hsubpixel, int &vfactor) const;
 
     GlyphFormat defaultFormat;
@@ -356,6 +370,8 @@
 
     int xsize;
     int ysize;
+    int thickness;
+    int sharpness;
 
     mutable QFixed lbearing;
     mutable QFixed rbearing;
@@ -371,14 +387,6 @@
     return (g.glyph << 8)  | (g.subPixelPosition * 10).round().toInt();
 }
 
-inline QFontEngineFT::Glyph *QFontEngineFT::QGlyphSet::getGlyph(glyph_t index, QFixed subPixelPosition) const
-{
-    if (useFastGlyphData(index, subPixelPosition))
-        return fast_glyph_data[index];
-    return glyph_data.value(GlyphAndSubPixelPosition(index, subPixelPosition));
-}
-
-
 QT_END_NAMESPACE
 
 #endif // QT_NO_FREETYPE
Index: src/gui/text/qtextodfwriter.cpp
===================================================================
--- src/gui/text/qtextodfwriter.cpp	(revision 36094)
+++ src/gui/text/qtextodfwriter.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -591,7 +591,6 @@
         QString value;
         switch (format.verticalAlignment()) {
         case QTextCharFormat::AlignMiddle:
-        case QTextCharFormat::AlignBaseline:
         case QTextCharFormat::AlignNormal: value = QString::fromLatin1("0%"); break;
         case QTextCharFormat::AlignSuperScript: value = QString::fromLatin1("super"); break;
         case QTextCharFormat::AlignSubScript: value = QString::fromLatin1("sub"); break;
Index: src/gui/text/qglyphs.h
===================================================================
--- src/gui/text/qglyphs.h	(revision 0)
+++ src/gui/text/qglyphs.h	(revision 43814)
@@ -0,0 +1,107 @@
+/****************************************************************************
+**
+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
+** All rights reserved.
+** Contact: Nokia Corporation (qt-info@nokia.com)
+**
+** This file is part of the QtGui module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights.  These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
+**
+**
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QGLYPHS_H
+#define QGLYPHS_H
+
+#include <QtCore/qsharedpointer.h>
+#include <QtCore/qvector.h>
+#include <QtCore/qpoint.h>
+#include <QtGui/qrawfont.h>
+
+#if !defined(QT_NO_RAWFONT)
+
+QT_BEGIN_HEADER
+
+QT_BEGIN_NAMESPACE
+
+QT_MODULE(Gui)
+
+class QGlyphsPrivate;
+class Q_GUI_EXPORT QGlyphs
+{
+public:
+    QGlyphs();
+    QGlyphs(const QGlyphs &other);
+    ~QGlyphs();
+
+    QRawFont font() const;
+    void setFont(const QRawFont &font);
+
+    QVector<quint32> glyphIndexes() const;
+    void setGlyphIndexes(const QVector<quint32> &glyphIndexes);
+
+    QVector<QPointF> positions() const;
+    void setPositions(const QVector<QPointF> &positions);
+
+    void clear();
+
+    QGlyphs &operator=(const QGlyphs &other);
+    bool operator==(const QGlyphs &other) const;
+    bool operator!=(const QGlyphs &other) const;
+
+    void setOverline(bool overline);
+    bool overline() const;
+
+    void setUnderline(bool underline);
+    bool underline() const;
+
+    void setStrikeOut(bool strikeOut);
+    bool strikeOut() const;
+
+private:
+    friend class QGlyphsPrivate;
+    friend class QTextLine;
+
+    QGlyphs operator+(const QGlyphs &other) const;
+    QGlyphs &operator+=(const QGlyphs &other);
+
+    void detach();
+    QExplicitlySharedDataPointer<QGlyphsPrivate> d;
+};
+
+QT_END_NAMESPACE
+
+QT_END_HEADER
+
+#endif // QT_NO_RAWFONT
+
+#endif // QGLYPHS_H
Index: src/gui/text/qabstractfontengine_qws.h
===================================================================
--- src/gui/text/qabstractfontengine_qws.h	(revision 36094)
+++ src/gui/text/qabstractfontengine_qws.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfontengine_p.h
===================================================================
--- src/gui/text/qfontengine_p.h	(revision 36094)
+++ src/gui/text/qfontengine_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -57,6 +57,7 @@
 #include "QtCore/qatomic.h"
 #include <QtCore/qvarlengtharray.h>
 #include <QtCore/QLinkedList>
+#include "qfontengineinterface.h"
 #include "private/qtextengine_p.h"
 #include "private/qfont_p.h"
 
@@ -84,6 +85,8 @@
 class QTextEngine;
 struct QGlyphLayout;
 
+class QFontEngineInterface ;
+
 #define MAKE_TAG(ch1, ch2, ch3, ch4) (\
     (((quint32)(ch1)) << 24) | \
     (((quint32)(ch2)) << 16) | \
@@ -91,9 +94,11 @@
     ((quint32)(ch4)) \
    )
 
-
 class Q_GUI_EXPORT QFontEngine : public QObject
 {
+private:
+    bool loadPlugin();
+    static QFontEngineInterface *pluginInterface;
 public:
     enum Type {
         Box,
@@ -155,7 +160,6 @@
     struct FaceId {
         FaceId() : index(0), encoding(0) {}
         QByteArray filename;
-        QByteArray uuid;
         int index;
         int encoding;
     };
@@ -209,8 +213,10 @@
     virtual void removeGlyphFromCache(glyph_t);
 
     virtual glyph_metrics_t boundingBox(const QGlyphLayout &glyphs) = 0;
+    virtual glyph_metrics_t boundingBox(const QGlyphLayout &glyphs, Qt::Orientation orientation);
     virtual glyph_metrics_t boundingBox(glyph_t glyph) = 0;
     virtual glyph_metrics_t boundingBox(glyph_t glyph, const QTransform &matrix);
+    virtual glyph_metrics_t boundingBox(glyph_t glyph, Qt::Orientation orientation);
     glyph_metrics_t tightBoundingBox(const QGlyphLayout &glyphs);
 
     virtual QFixed ascent() const = 0;
@@ -246,6 +252,9 @@
     void setGlyphCache(void *key, QFontEngineGlyphCache *data);
     QFontEngineGlyphCache *glyphCache(void *key, QFontEngineGlyphCache::Type type, const QTransform &transform) const;
 
+    int substituteWithVerticalVariants(quint32 *glyph, const unsigned buffer);
+    bool hasVerticalGlyphs() const;
+
     static const uchar *getCMap(const uchar *table, uint tableSize, bool *isSymbolFont, int *cmapSize);
     static quint32 getTrueTypeGlyphIndex(const uchar *cmap, uint unicode);
 
@@ -296,7 +305,7 @@
 
 inline uint qHash(const QFontEngine::FaceId &f)
 {
-    return qHash((f.index << 16) + f.encoding) + qHash(f.filename + f.uuid);
+    return qHash((f.index << 16) + f.encoding) + qHash(f.filename);
 }
 
 
@@ -397,6 +406,8 @@
 
     virtual glyph_metrics_t boundingBox(const QGlyphLayout &glyphs);
     virtual glyph_metrics_t boundingBox(glyph_t glyph);
+    glyph_metrics_t boundingBox(glyph_t glyph, Qt::Orientation orientation);
+    virtual glyph_metrics_t boundingBox(const QGlyphLayout &glyphs, Qt::Orientation orientation);
 
     virtual void recalcAdvances(QGlyphLayout *, QTextEngine::ShaperFlags) const;
     virtual void doKerning(QGlyphLayout *, QTextEngine::ShaperFlags) const;
@@ -426,6 +437,11 @@
     QFontEngine *engine(int at) const
     {Q_ASSERT(at < engines.size()); return engines.at(at); }
 
+private:
+    void processBoundingBoxForRange(const QGlyphLayout &glyphs,
+                                    Qt::Orientation orientation,
+                                    int start, int end, int which,
+                                    glyph_metrics_t& overall);
 
 protected:
     friend class QPSPrintEnginePrivate;
Index: src/gui/text/qstatictext_p.h
===================================================================
--- src/gui/text/qstatictext_p.h	(revision 36094)
+++ src/gui/text/qstatictext_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the test suite of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtexttable_p.h
===================================================================
--- src/gui/text/qtexttable_p.h	(revision 36094)
+++ src/gui/text/qtexttable_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfontengine_qpa_p.h
===================================================================
--- src/gui/text/qfontengine_qpa_p.h	(revision 36094)
+++ src/gui/text/qfontengine_qpa_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextdocumentlayout.cpp
===================================================================
--- src/gui/text/qtextdocumentlayout.cpp	(revision 36094)
+++ src/gui/text/qtextdocumentlayout.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -1389,7 +1389,7 @@
     case QTextListFormat::ListSquare:
     case QTextListFormat::ListCircle:
     case QTextListFormat::ListDisc:
-        size.setWidth(fontMetrics.lineSpacing() / 3);
+        size.setWidth((fontMetrics.ascent() + fontMetrics.descent()) / 3);
         size.setHeight(size.width());
         break;
 
@@ -1403,7 +1403,7 @@
     qreal xoff = fontMetrics.width(QLatin1Char(' '));
     if (dir == Qt::LeftToRight)
         xoff = -xoff - size.width();
-    r.translate( xoff, (fontMetrics.height() / 2 - size.height() / 2));
+    r.translate( xoff, fontMetrics.leading() + (fontMetrics.height() - size.height()) / 2);
 
     painter->save();
 
@@ -3090,7 +3090,6 @@
     if (currentLazyLayoutPosition == -1)
         return;
     const QSizeF oldSize = q->dynamicDocumentSize();
-    Q_UNUSED(oldSize);
 
     if (checkPoints.isEmpty())
         layoutStep();
Index: src/gui/text/qfontengineinterface.h
===================================================================
--- src/gui/text/qfontengineinterface.h	(revision 0)
+++ src/gui/text/qfontengineinterface.h	(revision 43814)
@@ -0,0 +1,34 @@
+/****************************************************************************
+** Copyright (C) 2012 ACCESS, CO., LTD
+** All rights reserved.
+****************************************************************************/
+
+#ifndef QFONTENGINEINTERFACE_H
+#define QFONTENGINEINTERFACE_H
+
+#include <QObject>
+#include <QSharedData>
+#include "accessplugininterface.h"
+#if defined(Q_OS_LINUX)
+#include "qharfbuzz_p.h"
+#endif
+
+class QFontEngineInterface
+{
+public:
+    virtual ~QFontEngineInterface() {}
+#if defined(Q_OS_LINUX)
+    virtual bool hasVerticalGlyphs(HB_Face face) = 0;
+    virtual quint32 substituteWithVerticalVariants(HB_Face face, quint32* glyph, const unsigned length) = 0;
+#endif
+};
+
+QT_BEGIN_NAMESPACE
+
+Q_DECLARE_INTERFACE(QFontEngineInterface,
+                    "com.access_company.qt.Plugin.QFontEngineInterface/1.0");
+
+QT_END_NAMESPACE
+
+#endif
+
Index: src/gui/text/qfontengine_s60.cpp
===================================================================
--- src/gui/text/qfontengine_s60.cpp	(revision 36094)
+++ src/gui/text/qfontengine_s60.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -46,7 +46,7 @@
 #include <private/qapplication_p.h>
 #include "qimage.h"
 #include <private/qt_s60_p.h>
-#include <private/qpixmap_raster_symbian_p.h>
+#include <private/qpixmap_s60_p.h>
 
 #include <e32base.h>
 #include <e32std.h>
@@ -233,12 +233,15 @@
 // duplicated from qfontengine_xyz.cpp
 static inline unsigned int getChar(const QChar *str, int &i, const int len)
 {
-    uint ucs4 = str[i].unicode();
-    if (str[i].isHighSurrogate() && i < len-1 && str[i+1].isLowSurrogate()) {
-        ++i;
-        ucs4 = QChar::surrogateToUcs4(ucs4, str[i].unicode());
+    unsigned int uc = str[i].unicode();
+    if (uc >= 0xd800 && uc < 0xdc00 && i < len-1) {
+        uint low = str[i+1].unicode();
+       if (low >= 0xdc00 && low < 0xe000) {
+            uc = (uc - 0xd800)*0x400 + (low - 0xdc00) + 0x10000;
+            ++i;
+        }
     }
-    return ucs4;
+    return uc;
 }
 
 extern QString qt_symbian_fontNameWithAppFontMarker(const QString &fontName); // qfontdatabase_s60.cpp
Index: src/gui/text/qtextdocumentwriter.h
===================================================================
--- src/gui/text/qtextdocumentwriter.h	(revision 36094)
+++ src/gui/text/qtextdocumentwriter.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfontengine_qpf_p.h
===================================================================
--- src/gui/text/qfontengine_qpf_p.h	(revision 36094)
+++ src/gui/text/qfontengine_qpf_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -157,7 +157,8 @@
         quint8 bytesPerLine;
         qint8 x;
         qint8 y;
-        qint8 advance;
+        qint8 advanceX;
+        qint8 advanceY;
     };
 
 #ifdef QT_FONTS_ARE_RESOURCES
Index: src/gui/text/qfont_mac.cpp
===================================================================
--- src/gui/text/qfont_mac.cpp	(revision 36094)
+++ src/gui/text/qfont_mac.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -43,7 +43,6 @@
 #include "qfont_p.h"
 #include "qfontengine_p.h"
 #include "qfontengine_mac_p.h"
-#include "qfontengine_coretext_p.h"
 #include "qfontinfo.h"
 #include "qfontmetrics.h"
 #include "qpaintdevice.h"
@@ -120,10 +119,10 @@
 // Returns an ATSUFonFamilyRef
 Qt::HANDLE QFont::handle() const
 {
-#ifdef QT_MAC_USE_COCOA
+#if 0
     QFontEngine *fe = d->engineForScript(QUnicodeTables::Common);
-    if (fe && fe->type() == QFontEngine::Multi)
-        return (Qt::HANDLE)static_cast<QCoreTextFontEngineMulti*>(fe)->macFontID();
+    if (fe && fe->type() == QFontEngine::Mac)
+        return (Qt::HANDLE)static_cast<QFontEngineMacMulti*>(fe)->fontFamilyRef();
 #endif
     return 0;
 }
Index: src/gui/text/qtextcontrol_p_p.h
===================================================================
--- src/gui/text/qtextcontrol_p_p.h	(revision 36094)
+++ src/gui/text/qtextcontrol_p_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextdocument.h
===================================================================
--- src/gui/text/qtextdocument.h	(revision 36094)
+++ src/gui/text/qtextdocument.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -46,6 +46,7 @@
 #include <QtCore/qsize.h>
 #include <QtCore/qrect.h>
 #include <QtGui/qfont.h>
+#include <QtGui/qtextcursor.h>
 
 QT_BEGIN_HEADER
 
Index: src/gui/text/qfontsubset.cpp
===================================================================
--- src/gui/text/qfontsubset.cpp	(revision 36094)
+++ src/gui/text/qfontsubset.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextengine_p.h
===================================================================
--- src/gui/text/qtextengine_p.h	(revision 36094)
+++ src/gui/text/qtextengine_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -218,6 +218,8 @@
 
     inline QFixed effectiveAdvance(int item) const
     { return (advances_x[item] + QFixed::fromFixed(justifications[item].space_18d6)) * !attributes[item].dontPrint; }
+    inline QFixed effectiveVerticalAdvance(int item) const
+    { return (advances_y[item]) * !attributes[item].dontPrint; }
 
     inline QGlyphLayoutInstance instance(int position) const {
         QGlyphLayoutInstance g;
@@ -312,17 +314,16 @@
           logClusters(0), f(0), fontEngine(0)
     {}
     QTextItemInt(const QScriptItem &si, QFont *font, const QTextCharFormat &format = QTextCharFormat());
-    QTextItemInt(const QGlyphLayout &g, QFont *font, const QChar *chars, int numChars, QFontEngine *fe,
-                 const QTextCharFormat &format = QTextCharFormat());
+    QTextItemInt(const QGlyphLayout &g, QFont *font, const QChar *chars, int numChars, QFontEngine *fe);
 
     /// copy the structure items, adjusting the glyphs arrays to the right subarrays.
     /// the width of the returned QTextItemInt is not adjusted, for speed reasons
     QTextItemInt midItem(QFontEngine *fontEngine, int firstGlyphIndex, int numGlyphs) const;
-    void initWithScriptItem(const QScriptItem &si);
 
     QFixed descent;
     QFixed ascent;
     QFixed width;
+    QFixed height;
 
     RenderFlags flags;
     bool justified;
@@ -376,9 +377,9 @@
 {
     // created and filled in QTextLine::layout_helper
     QScriptLine()
-        : from(0), trailingSpaces(0), length(0),
+        : from(0), length(0),
         justified(0), gridfitted(0),
-        hasTrailingSpaces(0), leadingIncluded(0) {}
+        hasTrailingSpaces(0), leadingIncluded(0), vertical(0) {}
     QFixed descent;
     QFixed ascent;
     QFixed leading;
@@ -388,12 +389,12 @@
     QFixed textWidth;
     QFixed textAdvance;
     int from;
-    unsigned short trailingSpaces;
     signed int length : 28;
     mutable uint justified : 1;
     mutable uint gridfitted : 1;
     uint hasTrailingSpaces : 1;
     uint leadingIncluded : 1;
+    uint vertical : 1;
     QFixed height() const { return (ascent + descent).ceil() + 1
                             + (leadingIncluded?  qMax(QFixed(),leading) : QFixed()); }
     QFixed base() const { return ascent
@@ -457,7 +458,8 @@
     enum ShaperFlag {
         RightToLeft = 0x0001,
         DesignMetrics = 0x0002,
-        GlyphIndicesOnly = 0x0004
+        GlyphIndicesOnly = 0x0004,
+        TopToBottom = 0x0008,
     };
     Q_DECLARE_FLAGS(ShaperFlags, ShaperFlag)
 
@@ -623,13 +625,11 @@
     QFixed leadingSpaceWidth(const QScriptLine &line);
 
     QFixed offsetInLigature(const QScriptItem *si, int pos, int max, int glyph_pos);
-    int positionInLigature(const QScriptItem *si, int end, QFixed x, QFixed edge, int glyph_pos, bool cursorOnCharacter);
     int previousLogicalPosition(int oldPos) const;
     int nextLogicalPosition(int oldPos) const;
     int lineNumberForTextPosition(int pos);
     int positionAfterVisualMovement(int oldPos, QTextCursor::MoveOperation op);
     void insertionPointsForLine(int lineNum, QVector<int> &insertionPoints);
-    void resetFontEngineCache();
 
 private:
     void setBoundary(int strPos) const;
@@ -647,7 +647,6 @@
     void resolveAdditionalFormats() const;
     int endOfLine(int lineNum);
     int beginningOfLine(int lineNum);
-    int getClusterLength(unsigned short *logClusters, const HB_CharAttributes *attributes, int from, int to, int glyph_pos, int *start);
 };
 
 class QStackTextEngine : public QTextEngine {
@@ -676,6 +675,7 @@
     QTextEngine *eng;
 
     QFixed x;
+    QFixed y;
     QFixed pos_x;
     const QScriptLine &line;
     QScriptItem *si;
@@ -695,6 +695,7 @@
     int itemEnd;
 
     QFixed itemWidth;
+    QFixed itemHeight;
 
     QVarLengthArray<int> visualOrder;
     QVarLengthArray<uchar> levels;
Index: src/gui/text/qtextobject_p.h
===================================================================
--- src/gui/text/qtextobject_p.h	(revision 36094)
+++ src/gui/text/qtextobject_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qfontengine_mac_p.h
===================================================================
--- src/gui/text/qfontengine_mac_p.h	(revision 36094)
+++ src/gui/text/qfontengine_mac_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qplatformfontdatabase_qpa.cpp
===================================================================
--- src/gui/text/qplatformfontdatabase_qpa.cpp	(revision 36094)
+++ src/gui/text/qplatformfontdatabase_qpa.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -51,13 +51,6 @@
                                          QFont::Style style, int stretch, bool antialiased,bool scalable, int pixelSize,
                                          const QSupportedWritingSystems &writingSystems, void *hanlde);
 
-/*!
-    \fn void QPlatformFontDatabase::registerQPF2Font(const QByteArray &dataArray, void *)
-
-    Registers the pre-rendered QPF2 font contained in the given \a dataArray.
-
-    \sa registerFont()
-*/
 void QPlatformFontDatabase::registerQPF2Font(const QByteArray &dataArray, void *handle)
 {
     if (dataArray.size() == 0)
@@ -95,32 +88,6 @@
     }
 }
 
-/*!
-    \fn void QPlatformFontDatabase::registerFont(const QString &familyName,
-        const QString &foundryName, QFont::Weight weight, QFont::Style style,
-        QFont::Stretch stretch, bool antialiased, bool scalable, int pixelSize,
-        const QSupportedWritingSystems &writingSystems, void *usrPtr)
-
-    Registers a font with the given set of attributes describing the font's
-    foundry, family name, style and stretch information, pixel size, and
-    supported writing systems. Additional information about whether the font
-    can be scaled and antialiased can also be provided.
-
-    The foundry name and font family are described by \a foundryName and
-    \a familyName. The font weight (light, normal, bold, etc.), style (normal,
-    oblique, italic) and stretch information (condensed, expanded, unstretched,
-    etc.) are specified by \a weight, \a style and \a stretch.
-
-    Some fonts can be antialiased and scaled; \a scalable and \a antialiased
-    can be set to true for fonts with these attributes. The intended pixel
-    size of non-scalable fonts is specified by \a pixelSize; this value will be
-    ignored for scalable fonts.
-
-    The writing systems supported by the font are specified by the
-    \a writingSystems argument.
-
-    \sa registerQPF2Font()
-*/
 void QPlatformFontDatabase::registerFont(const QString &familyname, const QString &foundryname, QFont::Weight weight,
                                          QFont::Style style, QFont::Stretch stretch, bool antialiased, bool scalable, int pixelSize,
                                          const QSupportedWritingSystems &writingSystems, void *usrPtr)
@@ -160,9 +127,6 @@
     d->ref.ref();
 }
 
-/*!
-    Assigns the \a other supported writing systems object to this object.
-*/
 QSupportedWritingSystems &QSupportedWritingSystems::operator=(const QSupportedWritingSystems &other)
 {
     if (d != other.d) {
@@ -174,9 +138,6 @@
     return *this;
 }
 
-/*!
-    Destroys the object.
-*/
 QSupportedWritingSystems::~QSupportedWritingSystems()
 {
     if (!d->ref.deref())
@@ -193,26 +154,12 @@
     }
 }
 
-/*!
-    Sets the supported state of the writing system given by \a writingSystem to
-    the value specified by \a support. A value of true indicates that the
-    writing system is supported; a value of false indicates that it is
-    unsupported.
-
-    \sa supported()
-*/
 void QSupportedWritingSystems::setSupported(QFontDatabase::WritingSystem writingSystem, bool support)
 {
     detach();
     d->vector[writingSystem] = support;
 }
 
-/*!
-    Returns true if the writing system given by \a writingSystem is supported;
-    otherwise returns false.
-
-    \sa setSupported()
-*/
 bool QSupportedWritingSystems::supported(QFontDatabase::WritingSystem writingSystem) const
 {
     return d->vector.at(writingSystem);
@@ -223,7 +170,6 @@
     \brief The QSupportedWritingSystems class is used when registering fonts with the internal Qt
     fontdatabase
     \ingroup painting
-    \since 4.8
 
     Its to provide an easy to use interface for indicating what writing systems a specific font
     supports.
@@ -260,8 +206,7 @@
 }
 
 /*!
-    Returns the font engine that can be used to render the font described by
-    the font definition, \a fontDef, in the specified \a script.
+
 */
 QFontEngine *QPlatformFontDatabase::fontEngine(const QFontDef &fontDef, QUnicodeTables::Script script, void *handle)
 {
@@ -284,8 +229,7 @@
 }
 
 /*!
-    Returns a list of alternative fonts for the specified \a family and
-    \a style and \a script using the \a styleHint given.
+
 */
 QStringList QPlatformFontDatabase::fallbacksForFamily(const QString family, const QFont::Style &style, const QFont::StyleHint &styleHint, const QUnicodeTables::Script &script) const
 {
@@ -297,13 +241,8 @@
 }
 
 /*!
-    Adds an application font described by the font contained supplied \a fontData
-    or using the font contained in the file referenced by \a fileName. Returns
-    a list of family names, or an empty list if the font could not be added.
-
-    \note The default implementation of this function does not add an application
-    font. Subclasses should reimplement this function to perform the necessary
-    loading and registration of fonts.
+    Adds an application font. Returns a list of family names, or an empty list if the font could
+    not be added
 */
 QStringList QPlatformFontDatabase::addApplicationFont(const QByteArray &fontData, const QString &fileName)
 {
@@ -315,7 +254,7 @@
 }
 
 /*!
-    Releases the font handle and deletes any associated data loaded from a file.
+
 */
 void QPlatformFontDatabase::releaseHandle(void *handle)
 {
@@ -324,13 +263,7 @@
 }
 
 /*!
-    Returns the path to the font directory.
 
-    The font directory is stored in the general Qt settings unless it has been
-    overridden by the \c QT_QPA_FONTDIR environment variable.
-
-    When using builds of Qt that do not support settings, the \c QT_QPA_FONTDIR
-    environment variable is the only way to specify the font directory.
 */
 QString QPlatformFontDatabase::fontDir() const
 {
@@ -347,24 +280,21 @@
 
 /*!
     \class QPlatformFontDatabase
-    \brief The QPlatformFontDatabase class makes it possible to customize how fonts
-    are discovered and how they are rendered
-    \since 4.8
+    \brief The QPlatformFontDatabase makes it possible to customize how fonts are picked up, and
+    and how they are rendered
 
     \ingroup painting
 
     QPlatformFontDatabase is the superclass which is intended to let platform implementations use
     native font handling.
 
-    Qt has its internal font database which it uses to discover available fonts on the
-    user's system. To be able to populate this database subclass this class, and
-    reimplement populateFontDatabase().
+    Qt has its internal fontdatabase which it uses to pick up available fonts. To be able
+    to populate this database subclass this class, and reimplement populateFontDatabase().
 
-    Use the function registerFont() to populate the internal font database.
+    Use the function registerFont to populate the internal fontdatabase.
 
-    Sometimes a specified font does not have the required glyphs; in such a case, the
-    fallbackForFamily() function is called automatically to find alternative font
-    families that can supply alternatives to the missing glyphs.
+    Sometimes a specified font does not have the required glyphs, then the fallbackForFamily
+    function is called.
 
     \sa QSupportedWritingSystems
 */
Index: src/gui/text/qfragmentmap.cpp
===================================================================
--- src/gui/text/qfragmentmap.cpp	(revision 36094)
+++ src/gui/text/qfragmentmap.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qstatictext.h
===================================================================
--- src/gui/text/qstatictext.h	(revision 36094)
+++ src/gui/text/qstatictext.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the test suite of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtexttable.h
===================================================================
--- src/gui/text/qtexttable.h	(revision 36094)
+++ src/gui/text/qtexttable.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextformat.h
===================================================================
--- src/gui/text/qtextformat.h	(revision 36094)
+++ src/gui/text/qtextformat.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qrawfont_p.h
===================================================================
--- src/gui/text/qrawfont_p.h	(revision 36094)
+++ src/gui/text/qrawfont_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -54,16 +54,18 @@
 //
 
 #include "qrawfont.h"
-
 #include "qfontengine_p.h"
-#include <QtCore/qthread.h>
 #include <QtCore/qthreadstorage.h>
+#include "qrawfontinterface.h"
 
 #if !defined(QT_NO_RAWFONT)
 
 QT_BEGIN_NAMESPACE
 
 namespace { class CustomFontFileLoader; }
+
+class QRawFontInterface;
+
 class Q_AUTOTEST_EXPORT QRawFontPrivate
 {
 public:
@@ -73,17 +75,21 @@
         , thread(0)
 #if defined(Q_WS_WIN)
         , fontHandle(NULL)
+        , ptrAddFontMemResourceEx(NULL)
+        , ptrRemoveFontMemResourceEx(NULL)
 #endif
     {}
 
     QRawFontPrivate(const QRawFontPrivate &other)
-        : fontEngine(other.fontEngine)
-        , hintingPreference(other.hintingPreference)
+        : hintingPreference(other.hintingPreference)
         , thread(other.thread)
 #if defined(Q_WS_WIN)
         , fontHandle(NULL)
+        , ptrAddFontMemResourceEx(other.ptrAddFontMemResourceEx)
+        , ptrRemoveFontMemResourceEx(other.ptrRemoveFontMemResourceEx)
 #endif
     {
+        fontEngine = other.fontEngine;
         if (fontEngine != 0)
             fontEngine->ref.ref();
     }
@@ -94,16 +100,10 @@
         cleanUp();
     }
 
-    inline bool isValid() const
-    {
-        Q_ASSERT(thread == 0 || thread == QThread::currentThread());
-        return fontEngine != 0;
-    }
-
     void cleanUp();
     void platformCleanUp();
     void platformLoadFromData(const QByteArray &fontData,
-                              qreal pixelSize,
+                              int pixelSize,
                               QFont::HintingPreference hintingPreference);
 
     static QRawFontPrivate *get(const QRawFont &font) { return font.d.data(); }
@@ -115,7 +115,17 @@
 
 #if defined(Q_WS_WIN)
     HANDLE fontHandle;
-#endif
+
+    typedef HANDLE (WINAPI *PtrAddFontMemResourceEx)(PVOID, DWORD, PVOID, DWORD *);
+    typedef BOOL (WINAPI *PtrRemoveFontMemResourceEx)(HANDLE);
+
+    PtrAddFontMemResourceEx ptrAddFontMemResourceEx;
+    PtrRemoveFontMemResourceEx ptrRemoveFontMemResourceEx;
+
+#endif // Q_WS_WIN
+
+    bool loadPlugin();
+    static QRawFontInterface *pluginInterface;
 };
 
 QT_END_NAMESPACE
Index: src/gui/text/qsyntaxhighlighter.cpp
===================================================================
--- src/gui/text/qsyntaxhighlighter.cpp	(revision 36094)
+++ src/gui/text/qsyntaxhighlighter.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qglyphs.cpp
===================================================================
--- src/gui/text/qglyphs.cpp	(revision 0)
+++ src/gui/text/qglyphs.cpp	(revision 43814)
@@ -0,0 +1,329 @@
+/****************************************************************************
+**
+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
+** All rights reserved.
+** Contact: Nokia Corporation (qt-info@nokia.com)
+**
+** This file is part of the QtGui module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights.  These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
+**
+**
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include "qglobal.h"
+#include <qdebug.h>
+
+// #define QT_DEBUG_DRAW
+
+#if !defined(QT_NO_RAWFONT)
+
+#include "qglyphs.h"
+#include "qglyphs_p.h"
+
+QT_BEGIN_NAMESPACE
+
+/*!
+    \class QGlyphs
+    \brief The QGlyphs class provides direct access to the internal glyphs in a font.
+    \since 4.8
+
+    \ingroup text
+    \mainclass
+
+    When Qt displays a string of text encoded in Unicode, it will first convert the Unicode points
+    into a list of glyph indexes and a list of positions based on one or more fonts. The Unicode
+    representation of the text and the QFont object will in this case serve as a convenient
+    abstraction that hides the details of what actually takes place when displaying the text
+    on-screen. For instance, by the time the text actually reaches the screen, it may be represented
+    by a set of fonts in addition to the one specified by the user, e.g. in case the originally
+    selected font did not support all the writing systems contained in the text.
+
+    Under certain circumstances, it can be useful as an application developer to have more low-level
+    control over which glyphs in a specific font are drawn to the screen. This could for instance
+    be the case in applications that use an external font engine and text shaper together with Qt.
+    QGlyphs provides an interface to the raw data needed to get text on the screen. It
+    contains a list of glyph indexes, a position for each glyph and a font.
+
+    It is the user's responsibility to ensure that the selected font actually contains the
+    provided glyph indexes.
+
+    QTextLayout::glyphs() or QTextFragment::glyphs() can be used to convert unicode encoded text
+    into a list of QGlyphs objects, and QPainter::drawGlyphs() can be used to draw the glyphs.
+
+    \note Please note that QRawFont is considered local to the thread in which it is constructed.
+    This in turn means that a new QRawFont will have to be created and set on the QGlyphs if it is
+    moved to a different thread. If the QGlyphs contains a reference to a QRawFont from a different
+    thread than the current, it will not be possible to draw the glyphs using a QPainter, as the
+    QRawFont is considered invalid and inaccessible in this case.
+*/
+
+
+/*!
+    Constructs an empty QGlyphs object.
+*/
+QGlyphs::QGlyphs() : d(new QGlyphsPrivate)
+{
+}
+
+/*!
+    Constructs a QGlyphs object which is a copy of \a other.
+*/
+QGlyphs::QGlyphs(const QGlyphs &other)
+{
+    d = other.d;
+}
+
+/*!
+    Destroys the QGlyphs.
+*/
+QGlyphs::~QGlyphs()
+{
+    // Required for QExplicitlySharedDataPointer
+}
+
+/*!
+    \internal
+*/
+void QGlyphs::detach()
+{
+    if (d->ref != 1)
+        d.detach();
+}
+
+/*!
+    Assigns \a other to this QGlyphs object.
+*/
+QGlyphs &QGlyphs::operator=(const QGlyphs &other)
+{
+    d = other.d;
+    return *this;
+}
+
+/*!
+    Compares \a other to this QGlyphs object. Returns true if the list of glyph indexes,
+    the list of positions and the font are all equal, otherwise returns false.
+*/
+bool QGlyphs::operator==(const QGlyphs &other) const
+{
+    return ((d == other.d)
+            || (d->glyphIndexes == other.d->glyphIndexes
+                && d->glyphPositions == other.d->glyphPositions
+                && d->overline == other.d->overline
+                && d->underline == other.d->underline
+                && d->strikeOut == other.d->strikeOut
+                && d->font == other.d->font));
+}
+
+/*!
+    Compares \a other to this QGlyphs object. Returns true if any of the list of glyph
+    indexes, the list of positions or the font are different, otherwise returns false.
+*/
+bool QGlyphs::operator!=(const QGlyphs &other) const
+{
+    return !(*this == other);
+}
+
+/*!
+    \internal
+
+    Adds together the lists of glyph indexes and positions in \a other and this QGlyphs
+    object and returns the result. The font in the returned QGlyphs will be the same as in
+    this QGlyphs object.
+*/
+QGlyphs QGlyphs::operator+(const QGlyphs &other) const
+{
+    QGlyphs ret(*this);
+    ret += other;
+    return ret;
+}
+
+/*!
+    \internal
+
+    Appends the glyph indexes and positions in \a other to this QGlyphs object and returns
+    a reference to the current object.
+*/
+QGlyphs &QGlyphs::operator+=(const QGlyphs &other)
+{
+    detach();
+
+    d->glyphIndexes += other.d->glyphIndexes;
+    d->glyphPositions += other.d->glyphPositions;
+
+    return *this;
+}
+
+/*!
+    Returns the font selected for this QGlyphs object.
+
+    \sa setFont()
+*/
+QRawFont QGlyphs::font() const
+{
+    return d->font;
+}
+
+/*!
+    Sets the font in which to look up the glyph indexes to \a font.
+
+    \sa font(), setGlyphIndexes()
+*/
+void QGlyphs::setFont(const QRawFont &font)
+{
+#ifdef QT_DEBUG_DRAW
+    printf("QGlyphs::setFont\n");
+#endif
+    detach();
+    d->font = font;
+}
+
+/*!
+    Returns the glyph indexes for this QGlyphs object.
+
+    \sa setGlyphIndexes(), setPositions()
+*/
+QVector<quint32> QGlyphs::glyphIndexes() const
+{
+    return d->glyphIndexes;
+}
+
+/*!
+    Set the glyph indexes for this QGlyphs object to \a glyphIndexes. The glyph indexes must
+    be valid for the selected font.
+*/
+void QGlyphs::setGlyphIndexes(const QVector<quint32> &glyphIndexes)
+{
+    detach();
+    d->glyphIndexes = glyphIndexes;
+}
+
+/*!
+    Returns the position of the edge of the baseline for each glyph in this set of glyph indexes.
+*/
+QVector<QPointF> QGlyphs::positions() const
+{
+    return d->glyphPositions;
+}
+
+/*!
+    Sets the positions of the edge of the baseline for each glyph in this set of glyph indexes to
+    \a positions.
+*/
+void QGlyphs::setPositions(const QVector<QPointF> &positions)
+{
+    detach();
+    d->glyphPositions = positions;
+}
+
+/*!
+    Clears all data in the QGlyphs object.
+*/
+void QGlyphs::clear()
+{
+    detach();
+    d->glyphPositions = QVector<QPointF>();
+    d->glyphIndexes = QVector<quint32>();
+    d->font = QRawFont();
+    d->strikeOut = false;
+    d->overline = false;
+    d->underline = false;
+}
+
+/*!
+   Returns true if this QGlyphs should be painted with an overline decoration.
+
+   \sa setOverline()
+*/
+bool QGlyphs::overline() const
+{
+    return d->overline;
+}
+
+/*!
+  Indicates that this QGlyphs should be painted with an overline decoration if \a overline is true.
+  Otherwise the QGlyphs should be painted with no overline decoration.
+
+  \sa overline()
+*/
+void QGlyphs::setOverline(bool overline)
+{
+    detach();
+    d->overline = overline;
+}
+
+/*!
+   Returns true if this QGlyphs should be painted with an underline decoration.
+
+   \sa setUnderline()
+*/
+bool QGlyphs::underline() const
+{
+    return d->underline;
+}
+
+/*!
+  Indicates that this QGlyphs should be painted with an underline decoration if \a underline is
+  true. Otherwise the QGlyphs should be painted with no underline decoration.
+
+  \sa underline()
+*/
+void QGlyphs::setUnderline(bool underline)
+{
+    detach();
+    d->underline = underline;
+}
+
+/*!
+   Returns true if this QGlyphs should be painted with a strike out decoration.
+
+   \sa setStrikeOut()
+*/
+bool QGlyphs::strikeOut() const
+{
+    return d->strikeOut;
+}
+
+/*!
+  Indicates that this QGlyphs should be painted with an strike out decoration if \a strikeOut is
+  true. Otherwise the QGlyphs should be painted with no strike out decoration.
+
+  \sa strikeOut()
+*/
+void QGlyphs::setStrikeOut(bool strikeOut)
+{
+    detach();
+    d->strikeOut = strikeOut;
+}
+
+QT_END_NAMESPACE
+
+#endif // QT_NO_RAWFONT
Index: src/gui/text/qrawfontinterface.h
===================================================================
--- src/gui/text/qrawfontinterface.h	(revision 0)
+++ src/gui/text/qrawfontinterface.h	(revision 43814)
@@ -0,0 +1,22 @@
+/****************************************************************************
+** Copyright (C) 2012 ACCESS, CO., LTD
+** All rights reserved.
+****************************************************************************/
+
+#ifndef QRAWFONTINTERFACE_H
+#define QRAWFONTINTERFACE_H
+
+#include <QObject>
+#include <QSharedData>
+#include "qfont.h"
+#include "qrawfont_p.h"
+
+class QRawFontInterface
+{
+public:
+    virtual ~QRawFontInterface() {}
+    virtual bool hasVerticalGlyphs(QExplicitlySharedDataPointer<QRawFontPrivate> d) = 0;
+    virtual quint32 substituteWithVerticalVariants(QExplicitlySharedDataPointer<QRawFontPrivate> d, quint32* glyphs, const unsigned length) = 0;
+};
+
+#endif
Index: src/gui/text/qtextcontrol_p.h
===================================================================
--- src/gui/text/qtextcontrol_p.h	(revision 36094)
+++ src/gui/text/qtextcontrol_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtextimagehandler_p.h
===================================================================
--- src/gui/text/qtextimagehandler_p.h	(revision 36094)
+++ src/gui/text/qtextimagehandler_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qabstracttextdocumentlayout.h
===================================================================
--- src/gui/text/qabstracttextdocumentlayout.h	(revision 36094)
+++ src/gui/text/qabstracttextdocumentlayout.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qabstractfontengine_qws.cpp
===================================================================
--- src/gui/text/qabstractfontengine_qws.cpp	(revision 36094)
+++ src/gui/text/qabstractfontengine_qws.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/qtexthtmlparser_p.h
===================================================================
--- src/gui/text/qtexthtmlparser_p.h	(revision 36094)
+++ src/gui/text/qtexthtmlparser_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/text/text.pri
===================================================================
--- src/gui/text/text.pri	(revision 36094)
+++ src/gui/text/text.pri	(revision 43814)
@@ -40,10 +40,10 @@
 	text/qtextodfwriter_p.h \
 	text/qstatictext_p.h \
 	text/qstatictext.h \
+        text/qglyphs.h \
+        text/qglyphs_p.h \
         text/qrawfont.h \
-        text/qrawfont_p.h \
-    text/qglyphrun.h \
-    text/qglyphrun_p.h
+        text/qrawfont_p.h
 
 SOURCES += \
 	text/qfont.cpp \
@@ -74,8 +74,8 @@
 	text/qzip.cpp \
 	text/qtextodfwriter.cpp \
 	text/qstatictext.cpp \
-        text/qrawfont.cpp \
-    text/qglyphrun.cpp
+        text/qglyphs.cpp \
+        text/qrawfont.cpp
 
 win32 {
 	SOURCES += \
@@ -106,17 +106,14 @@
 !embedded:!qpa:!x11:mac {
         HEADERS += \
                 text/qfontengine_mac_p.h
+        OBJECTIVE_HEADERS += \
+                text/qfontengine_coretext_p.h
 	SOURCES += \
                 text/qfont_mac.cpp \
                 text/qrawfont_mac.cpp
         OBJECTIVE_SOURCES += \
+                text/qfontengine_coretext.mm \
                 text/qfontengine_mac.mm
-}
-!embedded:!x11:mac {
-        OBJECTIVE_HEADERS += \
-                text/qfontengine_coretext_p.h
-        OBJECTIVE_SOURCES += \
-                text/qfontengine_coretext.mm
         contains(QT_CONFIG, harfbuzz) {
             DEFINES += QT_ENABLE_HARFBUZZ_FOR_MAC
         }
@@ -240,13 +237,15 @@
     embedded:CONFIG += opentype
     # pull in the proper freetype2 include directory
     include($$QT_SOURCE_TREE/config.tests/unix/freetype/freetype.pri)
-    LIBS_PRIVATE += -lfreetype
+    LIBS_PRIVATE += -lfreetype -ldl
 }
 
+HEADERS += ../3rdparty/accessplugin/accessplugininterface.h
+
 contains(QT_CONFIG, fontconfig) {
     CONFIG += opentype
 }
 }#!qpa
 
 DEFINES += QT_NO_OPENTYPE
-INCLUDEPATH += ../3rdparty/harfbuzz/src
+INCLUDEPATH += ../3rdparty/harfbuzz/src ../accessplugin ../corelib/tools
Index: src/gui/text/qtextdocumentfragment.h
===================================================================
--- src/gui/text/qtextdocumentfragment.h	(revision 36094)
+++ src/gui/text/qtextdocumentfragment.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
Index: src/gui/embedded/embedded.pri
===================================================================
--- src/gui/embedded/embedded.pri	(revision 36094)
+++ src/gui/embedded/embedded.pri	(revision 43814)
@@ -223,4 +223,7 @@
                 HEADERS += embedded/qmouseintegrity_qws.h
                 SOURCES += embedded/qmouseintegrity_qws.cpp
         }
+
+	HEADERS += ../3rdparty/accessplugin/accessplugininterface.h
+	INCLUDEPATH += ../3rdparty/accessplugin
 }
Index: src/gui/graphicsview/qgraphicsitem.cpp
===================================================================
--- src/gui/graphicsview/qgraphicsitem.cpp	(revision 36094)
+++ src/gui/graphicsview/qgraphicsitem.cpp	(revision 43814)
@@ -9740,6 +9740,9 @@
     painter->setRenderHint(QPainter::SmoothPixmapTransform,
                            (d->transformationMode == Qt::SmoothTransformation));
 
+    painter->setRenderHint(QPainter::Dithering,
+                           (d->transformationMode == Qt::SmoothTransformation));
+
     painter->drawPixmap(d->offset, d->pixmap);
 
     if (option->state & QStyle::State_Selected)
Index: src/gui/inputmethod/qwininputcontext_win.cpp
===================================================================
--- src/gui/inputmethod/qwininputcontext_win.cpp	(revision 36094)
+++ src/gui/inputmethod/qwininputcontext_win.cpp	(revision 43814)
@@ -844,4 +844,18 @@
     return memSize;
 }
 
+QTextFormat QWinInputContext::standardFormat(StandardFormat s) const
+{
+    QTextCharFormat fmt;
+    switch (s) {
+	case QInputContext::PreeditFormat:
+	fmt.setUnderlineStyle(QTextCharFormat::SpellCheckUnderline);
+	break;
+    case QInputContext::SelectionFormat:
+	fmt.setUnderlineStyle(QTextCharFormat::SingleUnderline);
+	break;
+    }
+    return fmt;
+}
+
 QT_END_NAMESPACE
Index: src/gui/inputmethod/qwininputcontext_p.h
===================================================================
--- src/gui/inputmethod/qwininputcontext_p.h	(revision 36094)
+++ src/gui/inputmethod/qwininputcontext_p.h	(revision 43814)
@@ -100,7 +100,7 @@
     static void updateImeStatus(QWidget *w, bool hasFocus);
     static void enablePopupChild(QWidget *w, bool e);
     static void enable(QWidget *w, bool e);
-
+    virtual QTextFormat standardFormat(StandardFormat s) const;
 private:
     void init();
     bool recursionGuard;
Index: src/gui/inputmethod/qinputcontext.h
===================================================================
--- src/gui/inputmethod/qinputcontext.h	(revision 36094)
+++ src/gui/inputmethod/qinputcontext.h	(revision 43814)
@@ -118,7 +118,7 @@
         PreeditFormat,
         SelectionFormat
     };
-    QTextFormat standardFormat(StandardFormat s) const;
+    virtual QTextFormat standardFormat(StandardFormat s) const;
 private:
     friend class QWidget;
     friend class QWidgetPrivate;
Index: src/gui/widgets/qlabel.h
===================================================================
--- src/gui/widgets/qlabel.h	(revision 36094)
+++ src/gui/widgets/qlabel.h	(revision 43814)
@@ -120,7 +120,8 @@
 
 public Q_SLOTS:
     void setText(const QString &);
-    void setPixmap(const QPixmap &);
+    virtual void setPixmap(const QPixmap &);
+    virtual void setPixmap(const QString &);
 #ifndef QT_NO_PICTURE
     void setPicture(const QPicture &);
 #endif
Index: src/gui/widgets/qlabel.cpp
===================================================================
--- src/gui/widgets/qlabel.cpp	(revision 36094)
+++ src/gui/widgets/qlabel.cpp	(revision 43814)
@@ -432,6 +432,11 @@
     d->updateLabel();
 }
 
+void QLabel::setPixmap(const QString &pixmap)
+{
+	setPixmap(QPixmap(pixmap));
+}
+
 const QPixmap *QLabel::pixmap() const
 {
     Q_D(const QLabel);
Index: src/gui/painting/qpainter_p.h
===================================================================
--- src/gui/painting/qpainter_p.h	(revision 36094)
+++ src/gui/painting/qpainter_p.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -232,7 +232,7 @@
     void drawOpaqueBackground(const QPainterPath &path, DrawOperation operation);
 
 #if !defined(QT_NO_RAWFONT)
-    void drawGlyphs(const quint32 *glyphArray, QFixedPoint *positionArray, int glyphCount,
+    void drawGlyphs(quint32 *glyphArray, QFixedPoint *positionArray, int glyphCount,
                     const QRawFont &font, bool overline = false, bool underline = false,
                     bool strikeOut = false);
 #endif
Index: src/gui/painting/qdrawhelper.cpp
===================================================================
--- src/gui/painting/qdrawhelper.cpp	(revision 36094)
+++ src/gui/painting/qdrawhelper.cpp	(revision 43814)
@@ -52,6 +52,9 @@
 
 QT_BEGIN_NAMESPACE
 
+static unsigned char ORDERED_DITHER_MATRIX3x3[] = {
+  3,7,4,6,1,9,2,8,5
+};
 
 #define MASK(src, a) src = BYTE_MUL(src, a)
 
@@ -131,6 +134,107 @@
     return buffer;
 }
 
+#define FAST_DIV3(x, ret) { unsigned short temp1 = ((x) >> 2) + ((x) >> 4); unsigned short temp2 = (x) - temp1 * 3; ret = temp1 + (11 * temp2 >> 5); }
+
+template <class T>
+Q_STATIC_TEMPLATE_FUNCTION
+int toGrayscale(T* buffer)
+{
+    return buffer[0];
+}
+
+template <>
+Q_STATIC_TEMPLATE_SPECIALIZATION
+int toGrayscale(uint *buffer)
+{
+    int r = buffer[0] & 0x000000FF;
+    int g = (buffer[0] & 0x0000FF00) >> 8;
+    int b = (buffer[0] & 0x00FF0000) >> 16;
+    return ((r * 77) + (g * 151) + (b * 28)) >> 8;
+}
+
+template <>
+Q_STATIC_TEMPLATE_SPECIALIZATION
+int toGrayscale(ushort *buffer)
+{
+    int r = ((buffer[0] & 0xf800) >> 8);
+    int g = ((buffer[0] & 0x07e0) >> 3); // only keep 5 bit
+    int b = ((buffer[0] & 0x001f)) << 3;
+    return ((r * 77) + (g * 151) + (b * 28)) >> 8;
+}
+
+template <class T>
+Q_STATIC_TEMPLATE_FUNCTION
+void ditherBuffer(T *buffer, int prevPix)
+{
+    Q_UNUSED(buffer);
+    Q_UNUSED(prevPix);
+}
+
+template <>
+Q_STATIC_TEMPLATE_SPECIALIZATION
+void ditherBuffer(uint *buffer, int prevPix)
+{
+    *buffer = prevPix + (prevPix << 8) + (prevPix << 16) + 0xFF000000;
+}
+
+#include <iostream>
+template <>
+Q_STATIC_TEMPLATE_SPECIALIZATION
+void ditherBuffer(ushort *buffer, int prevPix)
+{
+    int newRandB = prevPix >> 3;
+    int newG = prevPix >> 2;
+    *buffer = (newRandB << 11) | (newG << 5) | newRandB;
+}
+
+template <class T>
+Q_STATIC_TEMPLATE_FUNCTION
+void ditherAndSharpenLine(T *buffer, int row, int length)
+{
+    int diffs[3];
+    int pix;
+    int prevPix;
+    int average;
+
+    // initial setup for line.
+    pix = toGrayscale<T>(buffer);
+    buffer++;
+
+    diffs[0] = diffs[1] = diffs[2] = pix;
+    prevPix = pix ;
+
+    int idxR = row % 0x3;
+    for (int col = 1; col < length - 1; ++col) {
+        int idxC = col % 0x3;
+        uchar threshold = ORDERED_DITHER_MATRIX3x3[idxC + (0x3 * idxR)];
+        pix = toGrayscale<T>(buffer);
+
+        // update average of 3 pixels in col
+        diffs[ idxC ] = pix;
+
+        average = diffs[0] + diffs[1] + diffs[2];
+        FAST_DIV3( average, average);
+
+        // apply sharpness filter
+        int diff = prevPix - average;
+
+        prevPix += (diff >> 1);
+        prevPix = qMax(prevPix, 0);
+
+        uchar t = (( prevPix * 10 ) >> 4);
+        uchar l = t / 10;
+        t = t - l * 10;
+        prevPix = (l + (t >= threshold)) << 4;
+        prevPix = prevPix & 0x100 ? 0xff : prevPix;
+
+        ditherBuffer<T>(buffer, prevPix);
+        buffer++;
+
+        prevPix = pix;
+    }
+}
+
 template <class DST>
 Q_STATIC_TEMPLATE_FUNCTION uint * QT_FASTCALL destFetch(uint *buffer, QRasterBuffer *rasterBuffer,
                                     int x, int y, int length)
@@ -1193,6 +1297,12 @@
         }
     }
 
+#if defined(Q_WS_QWS)
+    // Do ordered dithering 3x3,16
+    if (data->dither) {
+        ditherAndSharpenLine< uint >(buffer, y, length);
+    }
+#endif
     return buffer;
 }
 
@@ -3634,6 +3744,11 @@
                     if (spanMethod == RegularSpans) {
                         uint *dest = op.dest_fetch ? op.dest_fetch(buffer, data->rasterBuffer, x, spans->y, l) : buffer;
                         op.func(dest, src, l, coverage);
+#if defined(Q_WS_QWS)
+                        if (data->dither) {
+                            ditherAndSharpenLine< uint >(dest, sy, l);
+                        }
+#endif
                         if (op.dest_store)
                             op.dest_store(data->rasterBuffer, x, spans->y, dest, l);
                     } else {
@@ -4937,6 +5052,11 @@
                 const SRC *src = (SRC*)data->texture.scanLine(sy) + sx;
                 if (modeSource && coverage == 255) {
                     qt_memconvert<DST, SRC>(dest, src, length);
+#if defined(Q_WS_QWS)
+                    if (data->dither && (sizeof(DST) == 2) && (length >= 3)) {
+                        ditherAndSharpenLine< ushort >(reinterpret_cast< ushort* > (dest), sy, length);
+                    }
+#endif
                 } else if (sizeof(DST) == 3 && sizeof(SRC) == 3 && length >= 3 &&
                            (quintptr(dest) & 3) == (quintptr(src) & 3))
                 {
Index: src/gui/painting/qpaintengine_raster_p.h
===================================================================
--- src/gui/painting/qpaintengine_raster_p.h	(revision 36094)
+++ src/gui/painting/qpaintengine_raster_p.h	(revision 43814)
@@ -63,6 +63,7 @@
 #include "private/qpainter_p.h"
 #include "private/qtextureglyphcache_p.h"
 #include "private/qoutlinemapper_p.h"
+#include "qpaintengine_raster_interface.h"
 
 #include <stdlib.h>
 
@@ -111,6 +112,7 @@
         uint non_complex_pen : 1;           // can use rasterizer, rather than stroker
         uint antialiased : 1;
         uint bilinear : 1;
+        uint dither : 1;
         uint fast_text : 1;
         uint int_xform : 1;
         uint tx_noshear : 1;
@@ -261,7 +263,7 @@
     void drawBitmap(const QPointF &pos, const QImage &image, QSpanData *fill);
 
     bool drawCachedGlyphs(int numGlyphs, const glyph_t *glyphs, const QFixedPoint *positions,
-                          QFontEngine *fontEngine);
+                          QFontEngine *fontEngine, bool vertical = false);
 
 #if defined(Q_OS_SYMBIAN) && defined(QT_NO_FREETYPE)
     void drawGlyphsS60(const QPointF &p, const QTextItemInt &ti);
@@ -295,6 +297,8 @@
 /*******************************************************************************
  * QRasterPaintEnginePrivate
  */
+class QRasterPaintEngineInterface;
+
 class
 #ifdef Q_WS_QWS
 Q_GUI_EXPORT
@@ -379,6 +383,9 @@
 #endif
 
     QScopedPointer<QRasterizer> rasterizer;
+
+    bool loadPlugin();
+    static QRasterPaintEngineInterface *pluginInterface;
 };
 
 
Index: src/gui/painting/painting.pri
===================================================================
--- src/gui/painting/painting.pri	(revision 36094)
+++ src/gui/painting/painting.pri	(revision 43814)
@@ -114,6 +114,8 @@
                 painting/qprintengine_win.cpp \
                 painting/qprinterinfo_win.cpp
 
+	INCLUDEPATH += text
+
         !win32-borland:!wince*:LIBS += -lmsimg32
 }
 
@@ -273,4 +275,7 @@
 NEON_HEADERS += painting/qdrawhelper_neon_p.h
 NEON_ASM += ../3rdparty/pixman/pixman-arm-neon-asm.S painting/qdrawhelper_neon_asm.S
 
+HEADERS += ../3rdparty/accessplugin/accessplugininterface.h
+INCLUDEPATH += ../3rdparty/harfbuzz/src ../3rdparty/accessplugin ../corelib/tools
+
 include($$PWD/../../3rdparty/zlib_dependency.pri)
Index: src/gui/painting/qdrawhelper_p.h
===================================================================
--- src/gui/painting/qdrawhelper_p.h	(revision 36094)
+++ src/gui/painting/qdrawhelper_p.h	(revision 43814)
@@ -336,6 +336,7 @@
     int txop : 8;
     int fast_matrix : 1;
     bool bilinear;
+    bool dither;
     QImage *tempImage;
     union {
         QSolidData solid;
@@ -345,7 +346,7 @@
 
     void init(QRasterBuffer *rb, const QRasterPaintEngine *pe);
     void setup(const QBrush &brush, int alpha, QPainter::CompositionMode compositionMode);
-    void setupMatrix(const QTransform &matrix, int bilinear);
+    void setupMatrix(const QTransform &matrix, int bilinear, int dith);
     void initTexture(const QImage *image, int alpha, QTextureData::Type = QTextureData::Plain, const QRect &sourceRect = QRect());
     void adjustSpanMethods();
 };
Index: src/gui/painting/qpaintengine_x11.cpp
===================================================================
--- src/gui/painting/qpaintengine_x11.cpp	(revision 36094)
+++ src/gui/painting/qpaintengine_x11.cpp	(revision 43814)
@@ -91,6 +91,7 @@
 // use the same rounding as in qrasterizer.cpp (6 bit fixed point)
 static const qreal aliasedCoordinateDelta = 0.5 - 0.015625;
 
+#define Unsorted 0
 #undef X11 // defined in qt_x11_p.h
 /*!
     Returns the X11 specific pen GC for the painter \a p. Note that
@@ -2428,13 +2429,14 @@
             }
             QFontEngineFT::Glyph *g = ft->cachedGlyph(glyphs[i - 1]);
             if (g
-                && positions[i].x == xp + g->advance
-                && positions[i].y == yp
+                && positions[i].x == xp + g->advanceX
+                && positions[i].y == yp + g->advanceY
                 && elt.nchars < 253 // don't draw more than 253 characters as some X servers
                                     // hang with it
                 ) {
                 elt.nchars++;
-                xp += g->advance;
+                xp += g->advanceX;
+                yp += g->advanceY;
             } else {
                 xp = positions[i].x;
                 yp = positions[i].y;
Index: src/gui/painting/qpaintengine.h
===================================================================
--- src/gui/painting/qpaintengine.h	(revision 36094)
+++ src/gui/painting/qpaintengine.h	(revision 43814)
@@ -72,7 +72,7 @@
         Overline = 0x10,
         Underline = 0x20,
         StrikeOut = 0x40,
-
+        TopToBottom = 0x80,
         Dummy = 0xffffffff
     };
     Q_DECLARE_FLAGS(RenderFlags, RenderFlag)
Index: src/gui/painting/qpainter.h
===================================================================
--- src/gui/painting/qpainter.h	(revision 36094)
+++ src/gui/painting/qpainter.h	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -79,7 +79,7 @@
 class QMatrix;
 class QTransform;
 class QStaticText;
-class QGlyphRun;
+class QGlyphs;
 
 class QPainterPrivateDeleter;
 
@@ -95,7 +95,8 @@
         TextAntialiasing = 0x02,
         SmoothPixmapTransform = 0x04,
         HighQualityAntialiasing = 0x08,
-        NonCosmeticDefaultPen = 0x10
+        NonCosmeticDefaultPen = 0x10,
+        Dithering = 0x20
     };
 
     Q_DECLARE_FLAGS(RenderHints, RenderHint)
@@ -402,7 +403,7 @@
     Qt::LayoutDirection layoutDirection() const;
 
 #if !defined(QT_NO_RAWFONT)
-    void drawGlyphRun(const QPointF &position, const QGlyphRun &glyphRun);
+    void drawGlyphs(const QPointF &position, const QGlyphs &glyphs);
 #endif
 
     void drawStaticText(const QPointF &topLeftPosition, const QStaticText &staticText);
Index: src/gui/painting/qpainter.cpp
===================================================================
--- src/gui/painting/qpainter.cpp	(revision 36094)
+++ src/gui/painting/qpainter.cpp	(revision 43814)
@@ -7,34 +7,34 @@
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
+** No Commercial Usage
+** This file contains pre-release code and may not be distributed.
+** You may use this file in accordance with the terms and conditions
+** contained in the Technology Preview License Agreement accompanying
+** this package.
+**
 ** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
+** rights.  These rights are described in the Nokia Qt LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
 **
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
 **
 **
 **
 **
 **
+**
+**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -62,7 +62,7 @@
 #include "qthread.h"
 #include "qvarlengtharray.h"
 #include "qstatictext.h"
-#include "qglyphrun.h"
+#include "qglyphs.h"
 
 #include <private/qfontengine_p.h>
 #include <private/qpaintengine_p.h>
@@ -73,7 +73,7 @@
 #include <private/qpaintengine_raster_p.h>
 #include <private/qmath_p.h>
 #include <private/qstatictext_p.h>
-#include <private/qglyphrun_p.h>
+#include <private/qglyphs_p.h>
 #include <private/qstylehelper_p.h>
 #include <private/qrawfont_p.h>
 
@@ -403,8 +403,8 @@
                 QPainterPath stroke = stroker.createStroke(originalPath);
                 strokeBounds = (stroke * state->matrix).boundingRect();
             } else {
-                strokeOffsetX = qAbs(penWidth * state->matrix.m11() / qreal(2.0));
-                strokeOffsetY = qAbs(penWidth * state->matrix.m22() / qreal(2.0));
+                strokeOffsetX = qAbs(penWidth * state->matrix.m11() / 2.0);
+                strokeOffsetY = qAbs(penWidth * state->matrix.m22() / 2.0);
             }
         }
     }
@@ -474,6 +474,7 @@
     p.setRenderHint(QPainter::Antialiasing, state->renderHints & QPainter::Antialiasing);
     p.setRenderHint(QPainter::SmoothPixmapTransform,
                     state->renderHints & QPainter::SmoothPixmapTransform);
+    p.setRenderHint(QPainter::Dithering, state->renderHints & QPainter::Dithering);
 
     p.drawPath(originalPath);
 
@@ -684,7 +685,7 @@
     invMatrix = state->matrix.inverted();
 }
 
-Q_GUI_EXPORT bool qt_isExtendedRadialGradient(const QBrush &brush);
+extern bool qt_isExtendedRadialGradient(const QBrush &brush);
 
 void QPainterPrivate::updateEmulationSpecifier(QPainterState *s)
 {
@@ -1457,6 +1458,8 @@
     of 0 (which otherwise enables QPen::isCosmetic()) as being a non-cosmetic
     pen with a width of 1.
 
+    \value Dithering Enables 3x3 ordered dithering
+
     \sa renderHints(), setRenderHint(), {QPainter#Rendering
     Quality}{Rendering Quality}, {Concentric Circles Example}
 
@@ -2737,7 +2740,7 @@
     }
 
     // Accumulate the bounding box in device space. This is not 100%
-    // precise, but it fits within the guarantee and it is reasonably
+    // precise, but it fits within the guarantee and it is resonably
     // fast.
     QRectF bounds;
     for (int i=0; i<d->state->clipInfo.size(); ++i) {
@@ -2860,9 +2863,6 @@
         return;
     }
 
-    if (d->state->clipOperation == Qt::NoClip && op == Qt::IntersectClip)
-        op = Qt::ReplaceClip;
-
     d->state->clipRegion = rect;
     d->state->clipOperation = op;
     if (op == Qt::NoClip || op == Qt::ReplaceClip)
@@ -2918,9 +2918,6 @@
         return;
     }
 
-    if (d->state->clipOperation == Qt::NoClip && op == Qt::IntersectClip)
-        op = Qt::ReplaceClip;
-
     d->state->clipRegion = r;
     d->state->clipOperation = op;
     if (op == Qt::NoClip || op == Qt::ReplaceClip)
@@ -3326,9 +3323,6 @@
         return;
     }
 
-    if (d->state->clipOperation == Qt::NoClip && op == Qt::IntersectClip)
-        op = Qt::ReplaceClip;
-
     d->state->clipPath = path;
     d->state->clipOperation = op;
     if (op == Qt::NoClip || op == Qt::ReplaceClip)
@@ -4460,8 +4454,8 @@
     QRectF rect = r.normalized();
 
     QPainterPath path;
-    path.arcMoveTo(rect, a/qreal(16.0));
-    path.arcTo(rect, a/qreal(16.0), alen/qreal(16.0));
+    path.arcMoveTo(rect, a/16.0);
+    path.arcTo(rect, a/16.0, alen/16.0);
     strokePath(path, d->state->pen);
 }
 
@@ -4531,7 +4525,7 @@
 
     QPainterPath path;
     path.moveTo(rect.center());
-    path.arcTo(rect.x(), rect.y(), rect.width(), rect.height(), a/qreal(16.0), alen/qreal(16.0));
+    path.arcTo(rect.x(), rect.y(), rect.width(), rect.height(), a/16.0, alen/16.0);
     path.closeSubpath();
     drawPath(path);
 
@@ -4592,8 +4586,8 @@
     QRectF rect = r.normalized();
 
     QPainterPath path;
-    path.arcMoveTo(rect, a/qreal(16.0));
-    path.arcTo(rect, a/qreal(16.0), alen/qreal(16.0));
+    path.arcMoveTo(rect, a/16.0);
+    path.arcTo(rect, a/16.0, alen/16.0);
     path.closeSubpath();
     drawPath(path);
 }
@@ -5792,33 +5786,32 @@
     d->engine->drawImage(QRectF(x, y, w, h), image, QRectF(sx, sy, sw, sh), flags);
 }
 
-#if !defined(QT_NO_RAWFONT)
 /*!
-    \fn void QPainter::drawGlyphRun(const QPointF &position, const QGlyphRun &glyphs)
+    Draws the glyphs represented by \a glyphs at \a position. The \a position gives the
+    edge of the baseline for the string of glyphs. The glyphs will be retrieved from the font
+    selected on \a glyphs and at offsets given by the positions in \a glyphs.
 
-    Draws the specified \a glyphs at the given \a position.
-    The \a position gives the edge of the baseline for the string of glyphs.
-    The glyphs will be retrieved from the font selected by \a glyphs and at
-    offsets given by the positions in \a glyphs.
-
     \since 4.8
 
-    \sa QGlyphRun::setRawFont(), QGlyphRun::setPositions(), QGlyphRun::setGlyphIndexes()
+    \sa QGlyphs::setFont(), QGlyphs::setPositions(), QGlyphs::setGlyphIndexes()
 */
-void QPainter::drawGlyphRun(const QPointF &position, const QGlyphRun &glyphRun)
+#if !defined(QT_NO_RAWFONT)
+void QPainter::drawGlyphs(const QPointF &position, const QGlyphs &glyphs)
 {
+#ifdef QT_DEBUG_DRAW
+    if (qt_show_painter_debug_output)
+        printf("QPainter::drawGlyphs(), pos=[%.2f,%.2f]\n", position.x(), position.y());
+#endif
     Q_D(QPainter);
 
-    QRawFont font = glyphRun.rawFont();
+    QRawFont font = glyphs.font();
     if (!font.isValid())
         return;
 
-    QGlyphRunPrivate *glyphRun_d = QGlyphRunPrivate::get(glyphRun);
+    QVector<quint32> glyphIndexes = glyphs.glyphIndexes();
+    QVector<QPointF> glyphPositions = glyphs.positions();
 
-    const quint32 *glyphIndexes = glyphRun_d->glyphIndexData;
-    const QPointF *glyphPositions = glyphRun_d->glyphPositionData;
-
-    int count = qMin(glyphRun_d->glyphIndexDataSize, glyphRun_d->glyphPositionDataSize);
+    int count = qMin(glyphIndexes.size(), glyphPositions.size());
     QVarLengthArray<QFixedPoint, 128> fixedPointPositions(count);
 
     QRawFontPrivate *fontD = QRawFontPrivate::get(font);
@@ -5830,20 +5823,18 @@
         supportsTransformations = d->engine->type() == QPaintEngine::CoreGraphics
                                   || d->state->matrix.isAffine();
     }
-
     for (int i=0; i<count; ++i) {
-        QPointF processedPosition = position + glyphPositions[i];
+        QPointF processedPosition = position + glyphPositions.at(i);
         if (!supportsTransformations)
             processedPosition = d->state->transform().map(processedPosition);
         fixedPointPositions[i] = QFixedPoint::fromPointF(processedPosition);
     }
 
-    d->drawGlyphs(glyphIndexes, fixedPointPositions.data(), count, font, glyphRun.overline(),
-                  glyphRun.underline(), glyphRun.strikeOut());
+    d->drawGlyphs(glyphIndexes.data(), fixedPointPositions.data(), count, font, glyphs.overline(),
+                  glyphs.underline(), glyphs.strikeOut());
 }
 
-void QPainterPrivate::drawGlyphs(const quint32 *glyphArray, QFixedPoint *positions,
-                                 int glyphCount,
+void QPainterPrivate::drawGlyphs(quint32 *glyphArray, QFixedPoint *positions, int glyphCount,
                                  const QRawFont &font, bool overline, bool underline,
                                  bool strikeOut)
 {
@@ -5875,7 +5866,7 @@
 
     QFixed width = rightMost - leftMost;
 
-    if (extended != 0 && state->matrix.isAffine()) {
+    if (extended != 0) {
         QStaticTextItem staticTextItem;
         staticTextItem.color = state->pen.color();
         staticTextItem.font = state->font;
@@ -6472,16 +6463,11 @@
 
     QLineF line(pos.x(), pos.y(), pos.x() + qFloor(width), pos.y());
 
-    qreal underlineOffset = fe->underlinePosition().toReal();
-    qreal y = pos.y();
-    // compensate for different rounding rule in Core Graphics paint engine,
-    // ideally code like this should be moved to respective engines.
-    if (painter->paintEngine()->type() == QPaintEngine::CoreGraphics) {
-        y = qCeil(y);
-    }
+    const qreal underlineOffset = fe->underlinePosition().toReal();
     // deliberately ceil the offset to avoid the underline coming too close to
     // the text above it.
-    const qreal underlinePos = y + qCeil(underlineOffset);
+    const qreal aliasedCoordinateDelta = 0.5 - 0.015625;
+    const qreal underlinePos = pos.y() + qCeil(underlineOffset) - aliasedCoordinateDelta;
 
     if (underlineStyle == QTextCharFormat::SpellCheckUnderline) {
         underlineStyle = QTextCharFormat::UnderlineStyle(QApplication::style()->styleHint(QStyle::SH_SpellCheckUnderlineStyle));
@@ -6655,10 +6641,6 @@
         qreal x = p.x();
         qreal y = p.y();
 
-        bool rtl = ti.flags & QTextItem::RightToLeft;
-        if (rtl)
-            x += ti.width.toReal();
-
         int start = 0;
         int end, i;
         for (end = 0; end < ti.glyphs.numGlyphs; ++end) {
@@ -6669,25 +6651,22 @@
 
             QTextItemInt ti2 = ti.midItem(multi->engine(which), start, end - start);
             ti2.width = 0;
+            ti2.height = 0;
             // set the high byte to zero and calc the width
             for (i = start; i < end; ++i) {
                 glyphs.glyphs[i] = glyphs.glyphs[i] & 0xffffff;
                 ti2.width += ti.glyphs.effectiveAdvance(i);
+                ti2.height += ti.glyphs.effectiveVerticalAdvance(i);
             }
 
-            if (rtl)
-                x -= ti2.width.toReal();
-
             d->engine->drawTextItem(QPointF(x, y), ti2);
 
-            if (!rtl)
-                x += ti2.width.toReal();
-
             // reset the high byte for all glyphs and advance to the next sub-string
             const int hi = which << 24;
             for (i = start; i < end; ++i) {
                 glyphs.glyphs[i] = hi | glyphs.glyphs[i];
             }
+            x += ti2.width.toReal();
 
             // change engine
             start = end;
@@ -6696,15 +6675,14 @@
 
         QTextItemInt ti2 = ti.midItem(multi->engine(which), start, end - start);
         ti2.width = 0;
+        ti2.height = 0;
         // set the high byte to zero and calc the width
         for (i = start; i < end; ++i) {
             glyphs.glyphs[i] = glyphs.glyphs[i] & 0xffffff;
             ti2.width += ti.glyphs.effectiveAdvance(i);
+            ti2.height += ti.glyphs.effectiveVerticalAdvance(i);
         }
 
-        if (rtl)
-            x -= ti2.width.toReal();
-
         if (d->extended)
             d->extended->drawTextItem(QPointF(x, y), ti2);
         else
@@ -9242,7 +9220,7 @@
             qreal h = fragments[i].scaleY * fragments[i].height;
             QRectF sourceRect(fragments[i].sourceLeft, fragments[i].sourceTop,
                               fragments[i].width, fragments[i].height);
-            drawPixmap(QRectF(qreal(-0.5) * w + xOffset, qreal(-0.5) * h + yOffset, w, h), pixmap, sourceRect);
+            drawPixmap(QRectF(-0.5 * w + xOffset, -0.5 * h + yOffset, w, h), pixmap, sourceRect);
         }
 
         setOpacity(oldOpacity);
@@ -9509,7 +9487,7 @@
     \oldcode
         void *visual = QPaintDevice::x11AppVisual(screen);
     \newcode
-        void *visual = widget->x11Info().appVisual(screen);
+        void *visual = qApp->x11Info(screen).visual();
     \endcode
 
     \sa QWidget::x11Info(), QPixmap::x11Info()
@@ -9521,7 +9499,7 @@
     \oldcode
         unsigned long colormap = QPaintDevice::x11AppColormap(screen);
     \newcode
-        unsigned long colormap = widget->x11Info().appColormap(screen);
+        unsigned long colormap = qApp->x11Info(screen).colormap();
     \endcode
 
     \sa QWidget::x11Info(), QPixmap::x11Info()
@@ -9533,7 +9511,7 @@
     \oldcode
         Display *display = QPaintDevice::x11AppDisplay();
     \newcode
-        Display *display = widget->x11Info().display();
+        Display *display = qApp->x11Info().display();
     \endcode
 
     \sa QWidget::x11Info(), QPixmap::x11Info()
@@ -9545,7 +9523,7 @@
     \oldcode
         int screen = QPaintDevice::x11AppScreen();
     \newcode
-        int screen = widget->x11Info().appScreen();
+        int screen = qApp->x11Info().screen();
     \endcode
 
     \sa QWidget::x11Info(), QPixmap::x11Info()
@@ -9557,7 +9535,7 @@
     \oldcode
         int depth = QPaintDevice::x11AppDepth(screen);
     \newcode
-        int depth = widget->x11Info().appDepth(screen);
+        int depth = qApp->x11Info(screen).depth();
     \endcode
 
     \sa QWidget::x11Info(), QPixmap::x11Info()
@@ -9569,7 +9547,7 @@
     \oldcode
         int cells = QPaintDevice::x11AppCells(screen);
     \newcode
-        int cells = widget->x11Info().appCells(screen);
+        int cells = qApp->x11Info(screen).cells();
     \endcode
 
     \sa QWidget::x11Info(), QPixmap::x11Info()
@@ -9581,7 +9559,7 @@
     \oldcode
         unsigned long window = QPaintDevice::x11AppRootWindow(screen);
     \newcode
-        unsigned long window = widget->x11Info().appRootWindow(screen);
+        unsigned long window = qApp->x11Info(screen).appRootWindow();
     \endcode
 
     \sa QWidget::x11Info(), QPixmap::x11Info()
@@ -9593,7 +9571,7 @@
     \oldcode
         bool isDefault = QPaintDevice::x11AppDefaultColormap(screen);
     \newcode
-        bool isDefault = widget->x11Info().appDefaultColormap(screen);
+        bool isDefault = qApp->x11Info(screen).defaultColormap();
     \endcode
 
     \sa QWidget::x11Info(), QPixmap::x11Info()
@@ -9605,7 +9583,7 @@
     \oldcode
         bool isDefault = QPaintDevice::x11AppDefaultVisual(screen);
     \newcode
-        bool isDefault = widget->x11Info().appDefaultVisual(screen);
+        bool isDefault = qApp->x11Info(screen).defaultVisual();
     \endcode
 
     \sa QWidget::x11Info(), QPixmap::x11Info()
@@ -9625,7 +9603,7 @@
     \oldcode
         bool isDefault = QPaintDevice::x11AppDpiX(screen);
     \newcode
-        bool isDefault = widget->x11Info().appDpiX(screen);
+        bool isDefault = qApp->x11Info(screen).appDpiX();
     \endcode
 
     \sa QWidget::x11Info(), QPixmap::x11Info()
@@ -9637,7 +9615,7 @@
     \oldcode
         bool isDefault = QPaintDevice::x11AppDpiY(screen);
     \newcode
-        bool isDefault = widget->x11Info().appDpiY(screen);
+        bool isDefault = qApp->x11Info(screen).appDpiY();
     \endcode
 
     \sa QWidget::x11Info(), QPixmap::x11Info()
Index: src/gui/painting/qpaintengine_raster.cpp
===================================================================
--- src/gui/painting/qpaintengine_raster.cpp	(revision 36094)
+++ src/gui/painting/qpaintengine_raster.cpp	(revision 43814)
@@ -101,6 +101,8 @@
 #  include <private/qfontengine_ft_p.h>
 #endif
 
+#include "accessplugininterface.h"
+
 #if defined(Q_WS_WIN64)
 #  include <malloc.h>
 #endif
@@ -331,6 +333,7 @@
 {
     Q_D(QRasterPaintEngine);
 
+    d->loadPlugin();
 
 #ifdef Q_WS_WIN
     d->hdc = 0;
@@ -643,6 +646,7 @@
     flags.fast_pen = true;
     flags.antialiased = false;
     flags.bilinear = false;
+    flags.dither = false;
     flags.fast_text = true;
     flags.int_xform = true;
     flags.tx_noshear = true;
@@ -926,6 +930,7 @@
 
     s->flags.antialiased = bool(s->renderHints & QPainter::Antialiasing);
     s->flags.bilinear = bool(s->renderHints & QPainter::SmoothPixmapTransform);
+    s->flags.dither = bool(s->renderHints & QPainter::Dithering);
 
     if (was_aa != s->flags.antialiased)
         s->strokeFlags |= DirtyHints;
@@ -1087,9 +1092,10 @@
 
     Q_Q(QRasterPaintEngine);
     bool bilinear = q->state()->flags.bilinear;
+    bool dither = q->state()->flags.dither;
 
     if (b.d->transform.type() > QTransform::TxNone) { // FALCON: optimize
-        spanData->setupMatrix(b.transform() * m, bilinear);
+        spanData->setupMatrix(b.transform() * m, bilinear, dither);
     } else {
         if (m.type() <= QTransform::TxTranslate) {
             // specialize setupMatrix for translation matrices
@@ -1105,10 +1111,11 @@
             spanData->dy = -m.dy();
             spanData->txop = m.type();
             spanData->bilinear = bilinear;
+            spanData->dither = dither;
             spanData->fast_matrix = qAbs(m.dx()) < 1e4 && qAbs(m.dy()) < 1e4;
             spanData->adjustSpanMethods();
         } else {
-            spanData->setupMatrix(m, bilinear);
+            spanData->setupMatrix(m, bilinear, dither);
         }
     }
 }
@@ -2265,6 +2272,11 @@
     int sr_t = qFloor(sr.top());
     int sr_b = qCeil(sr.bottom()) - 1;
 
+    // No dithering for small images
+    if (img.size().width() < 100 && img.size().height() < 100) {
+        s->flags.dither = false;
+    }
+
     if (s->matrix.type() <= QTransform::TxScale && !s->flags.antialiased && sr_l == sr_r && sr_t == sr_b) {
         // as fillRect will apply the aliased coordinate delta we need to
         // subtract it here as we don't use it for image drawing
@@ -2355,7 +2367,7 @@
         }
     }
 
-    if (s->matrix.type() > QTransform::TxTranslate || stretch_sr) {
+    if (s->matrix.type() > QTransform::TxTranslate || stretch_sr || s->flags.dither) {
 
         QRectF targetBounds = s->matrix.mapRect(r);
         bool exceedsPrecision = targetBounds.width() > 0xffff
@@ -2393,7 +2405,7 @@
         d->image_filler_xform.initTexture(&img, s->intOpacity, QTextureData::Plain, toAlignedRect_positive(sr));
         if (!d->image_filler_xform.blend)
             return;
-        d->image_filler_xform.setupMatrix(copy, s->flags.bilinear);
+        d->image_filler_xform.setupMatrix(copy, s->flags.bilinear, s->flags.dither);
 
         if (!s->flags.antialiased && s->matrix.type() == QTransform::TxScale) {
             QPointF rr_tl = s->matrix.map(r.topLeft());
@@ -2506,7 +2518,7 @@
         d->image_filler_xform.initTexture(&image, s->intOpacity, QTextureData::Tiled);
         if (!d->image_filler_xform.blend)
             return;
-        d->image_filler_xform.setupMatrix(copy, s->flags.bilinear);
+        d->image_filler_xform.setupMatrix(copy, s->flags.bilinear, s->flags.dither);
 
 #ifdef QT_FAST_SPANS
         ensureState();
@@ -2776,7 +2788,8 @@
 }
 
 bool QRasterPaintEngine::drawCachedGlyphs(int numGlyphs, const glyph_t *glyphs,
-                                          const QFixedPoint *positions, QFontEngine *fontEngine)
+                                          const QFixedPoint *positions, QFontEngine *fontEngine,
+                                          bool vertical)
 {
     Q_D(QRasterPaintEngine);
     QRasterPaintEngineState *s = state();
@@ -2808,7 +2821,7 @@
         }
 
         if (!gset || gset->outline_drawing
-            || !fe->loadGlyphs(gset, glyphs, numGlyphs, positions, neededFormat))
+            || !fe->loadGlyphs(gset, glyphs, numGlyphs, positions, neededFormat, vertical))
             return false;
 
         FT_Face lockedFace = 0;
@@ -2905,6 +2918,10 @@
 
             int x = qFloor(positions[i].x) + c.baseLineX - margin;
             int y = qFloor(positions[i].y + offs) - c.baseLineY - margin;
+            if (d->pluginInterface) {
+                x = d->pluginInterface->drawCachedGlyphs1(glyphs, s, fontEngine, positions, c, margin, i);
+                y = d->pluginInterface->drawCachedGlyphs2(s, positions, c, margin, i, offs);
+            }
 
             // printf("drawing [%d %d %d %d] baseline [%d %d], glyph: %d, to: %d %d, pos: %d %d\n",
             //        c.x, c.y,
@@ -3109,7 +3126,8 @@
 
         ti.fontEngine->getGlyphPositions(ti.glyphs, matrix, ti.flags, glyphs, positions);
 
-        drawCachedGlyphs(glyphs.size(), glyphs.constData(), positions.constData(), ti.fontEngine);
+        drawCachedGlyphs(glyphs.size(), glyphs.constData(), positions.constData(), ti.fontEngine,
+                         (ti.flags & QTextItem::TopToBottom) ? true : false);
         return;
     }
 
@@ -3194,7 +3212,8 @@
     if (glyphs.size() == 0)
         return;
 
-    if (!drawCachedGlyphs(glyphs.size(), glyphs.constData(), positions.constData(), fontEngine))
+    if (!drawCachedGlyphs(glyphs.size(), glyphs.constData(), positions.constData(), fontEngine,
+                          (ti.flags & QTextItem::TopToBottom) ? true : false))
         QPaintEngine::drawTextItem(p, ti);
 
     return;
@@ -3881,6 +3900,31 @@
                    && !image.hasAlphaChannel()));
 }
 
+QRasterPaintEngineInterface *QRasterPaintEnginePrivate::pluginInterface = NULL;
+bool QRasterPaintEnginePrivate::loadPlugin()
+{
+    if (pluginInterface != NULL)
+        return true;
+
+    static bool checked = false;
+    if (!checked) {
+        ACCESSPlugin p;
+        for (QObject *plugin = p.next(); plugin; plugin = p.next()) {
+            if (plugin) {
+                ACCESSPluginInterface *i = qobject_cast<ACCESSPluginInterface *>(plugin);
+                if (i) {
+                    qDebug("loadPlugin: loaded plugin for QRasterPaintEngine");
+                    pluginInterface = i->rasterFontPlugin();
+                    return true;
+                }
+            }
+        }
+        checked = true;
+    }
+
+    return false;
+}
+
 QImage QRasterBuffer::colorizeBitmap(const QImage &image, const QColor &color)
 {
     Q_ASSERT(image.depth() == 1);
@@ -4791,6 +4835,7 @@
     type = None;
     txop = 0;
     bilinear = false;
+    dither = false;
     m11 = m22 = m33 = 1.;
     m12 = m13 = m21 = m23 = dx = dy = 0.0;
     clip = pe ? pe->d_func()->clip() : 0;
@@ -4960,7 +5005,7 @@
     }
 }
 
-void QSpanData::setupMatrix(const QTransform &matrix, int bilin)
+void QSpanData::setupMatrix(const QTransform &matrix, int bilin, int dith)
 {
     QTransform delta;
     // make sure we round off correctly in qdrawhelper.cpp
@@ -4978,6 +5023,7 @@
     dy = inv.dy();
     txop = inv.type();
     bilinear = bilin;
+    dither = dith;
 
     const bool affine = !m13 && !m23;
     fast_matrix = affine
Index: src/gui/painting/qpaintbuffer.cpp
===================================================================
--- src/gui/painting/qpaintbuffer.cpp	(revision 36094)
+++ src/gui/painting/qpaintbuffer.cpp	(revision 43814)
@@ -1482,6 +1482,8 @@
             painter->setRenderHint(QPainter::SmoothPixmapTransform, nh & QPainter::SmoothPixmapTransform);
         if (xored & QPainter::NonCosmeticDefaultPen)
             painter->setRenderHint(QPainter::NonCosmeticDefaultPen, nh & QPainter::NonCosmeticDefaultPen);
+        if (xored & QPainter::Dithering)
+            painter->setRenderHint(QPainter::Dithering, nh & QPainter::Dithering);
         break; }
 
     case QPaintBufferPrivate::Cmd_SetOpacity: {
@@ -1768,12 +1770,12 @@
             rawFontD->fontEngine = fontD->engineForScript(QUnicodeTables::Common);
             rawFontD->fontEngine->ref.ref();
 
-            QGlyphRun glyphs;
-            glyphs.setRawFont(rawFont);
+            QGlyphs glyphs;
+            glyphs.setFont(rawFont);
             glyphs.setGlyphIndexes(glyphIndexes);
             glyphs.setPositions(positions);
 
-            painter->drawGlyphRun(QPointF(), glyphs);
+            painter->drawGlyphs(QPointF(), glyphs);
             break;
     }
 #endif
Index: src/gui/painting/qpaintengine_raster_interface.h
===================================================================
--- src/gui/painting/qpaintengine_raster_interface.h	(revision 0)
+++ src/gui/painting/qpaintengine_raster_interface.h	(revision 43814)
@@ -0,0 +1,28 @@
+/****************************************************************************
+** Copyright (C) 2012 ACCESS, CO., LTD
+** All rights reserved.
+****************************************************************************/
+
+#ifndef QRASTERPAINTENGINEINTERFACE_H
+#define QRASTERPAINTENGINEINTERFACE_H
+
+#include "private/qfixed_p.h"
+#include "qtextureglyphcache_p.h"
+#include "qpaintengine_raster_p.h"
+
+class QRasterPaintEngineInterface
+{
+public:
+    virtual ~QRasterPaintEngineInterface() {}
+    virtual int drawCachedGlyphs1(const glyph_t *glyphs, QRasterPaintEngineState *s, QFontEngine *fontEngine, const QFixedPoint *positions, const QTextureGlyphCache::Coord &c, int margin, int i) = 0;
+    virtual int drawCachedGlyphs2(QRasterPaintEngineState *s, const QFixedPoint *positions, const QTextureGlyphCache::Coord &c, int margin, int i, const QFixed offs) = 0;
+};
+
+QT_BEGIN_NAMESPACE
+
+Q_DECLARE_INTERFACE(QRasterPaintEngineInterface,
+                    "com.access_company.qt.Plugin.QRasterPaintEngineInterface/1.0");
+
+QT_END_NAMESPACE
+
+#endif
Index: src/opengl/opengl.pro
===================================================================
--- src/opengl/opengl.pro	(revision 36094)
+++ src/opengl/opengl.pro	(revision 43814)
@@ -178,4 +178,6 @@
     symbian:TARGET.UID3 = 0x2002131A
 }
 
-INCLUDEPATH += ../3rdparty/harfbuzz/src
+INCLUDEPATH += ../3rdparty/harfbuzz/src \
+               ../3rdparty/accessplugin
+HEADERS += ../3rdparty/accessplugin/accessplugininterface.h
Index: src/network/access/qnetworkaccesshttpbackend.cpp
===================================================================
--- src/network/access/qnetworkaccesshttpbackend.cpp	(revision 36094)
+++ src/network/access/qnetworkaccesshttpbackend.cpp	(revision 43814)
@@ -668,6 +668,7 @@
 
         // End the thread. It will delete itself from the finished() signal
         thread->quit();
+        thread->wait(5000);
 
         finished();
     } else {
Index: src/network/access/qnetworkaccessmanager.cpp
===================================================================
--- src/network/access/qnetworkaccessmanager.cpp	(revision 36094)
+++ src/network/access/qnetworkaccessmanager.cpp	(revision 43814)
@@ -1148,6 +1148,7 @@
     if (manager->d_func()->httpThread) {
         // The thread will deleteLater() itself from its finished() signal
         manager->d_func()->httpThread->quit();
+        manager->d_func()->httpThread->wait(5000);
         manager->d_func()->httpThread = 0;
     }
 }
@@ -1157,6 +1158,7 @@
     if (httpThread) {
         // The thread will deleteLater() itself from its finished() signal
         httpThread->quit();
+        httpThread->wait(5000);
         httpThread = 0;
     }
 }
Index: src/imports/gestures/gestures.pro
===================================================================
--- src/imports/gestures/gestures.pro	(revision 36094)
+++ src/imports/gestures/gestures.pro	(revision 43814)
@@ -24,3 +24,6 @@
 }
 
 INSTALLS += target qmldir
+
+HEADERS += ../../3rdparty/accessplugin/accessplugininterface.h
+INCLUDEPATH += ../../3rdparty/accessplugin
Index: src/imports/particles/particles.pro
===================================================================
--- src/imports/particles/particles.pro	(revision 36094)
+++ src/imports/particles/particles.pro	(revision 43814)
@@ -28,3 +28,6 @@
 }
 
 INSTALLS += target qmldir
+
+HEADERS += ../../3rdparty/accessplugin/accessplugininterface.h
+INCLUDEPATH += ../../3rdparty/accessplugin
Index: src/sql/kernel/qsqldriver.h
===================================================================
--- src/sql/kernel/qsqldriver.h	(revision 36094)
+++ src/sql/kernel/qsqldriver.h	(revision 43814)
@@ -133,6 +133,7 @@
     void setNumericalPrecisionPolicy(QSql::NumericalPrecisionPolicy precisionPolicy);
     QSql::NumericalPrecisionPolicy numericalPrecisionPolicy() const;
 
+    virtual void sqlite_interrupt() {} /* it seems apps can't include qsql_sqlite.h, so need a virtual here */
 Q_SIGNALS:
     void notification(const QString &name);
 
Index: src/sql/drivers/sqlite/qsql_sqlite.cpp
===================================================================
--- src/sql/drivers/sqlite/qsql_sqlite.cpp	(revision 36094)
+++ src/sql/drivers/sqlite/qsql_sqlite.cpp	(revision 43814)
@@ -713,4 +713,9 @@
     return _q_escapeIdentifier(identifier);
 }
 
+void QSQLiteDriver::sqlite_interrupt()
+{
+    sqlite3_interrupt(d->access);
+}
+
 QT_END_NAMESPACE
Index: src/sql/drivers/sqlite/qsql_sqlite.h
===================================================================
--- src/sql/drivers/sqlite/qsql_sqlite.h	(revision 36094)
+++ src/sql/drivers/sqlite/qsql_sqlite.h	(revision 43814)
@@ -112,6 +112,8 @@
     QVariant handle() const;
     QString escapeIdentifier(const QString &identifier, IdentifierType) const;
 
+    virtual void sqlite_interrupt();
+
 private:
     QSQLiteDriverPrivate* d;
 };
Index: src/svg/qsvghandler_p.h
===================================================================
--- src/svg/qsvghandler_p.h	(revision 36094)
+++ src/svg/qsvghandler_p.h	(revision 43814)
@@ -59,6 +59,7 @@
 
 #include "QtCore/qhash.h"
 #include "QtCore/qstack.h"
+#include "QtNetwork/qnetworkaccessmanager.h"
 #include "qsvgstyle_p.h"
 #include "private/qcssparser_p.h"
 #include "private/qsvggraphics_p.h"
@@ -93,9 +94,9 @@
     };
 
 public:
-    QSvgHandler(QIODevice *device);
-    QSvgHandler(const QByteArray &data);
-    QSvgHandler(QXmlStreamReader *const data);
+    QSvgHandler(QIODevice *device, QNetworkAccessManager *nam = 0);
+    QSvgHandler(const QByteArray &data, QNetworkAccessManager *nam = 0);
+    QSvgHandler(QXmlStreamReader *const data, QNetworkAccessManager *nam = 0);
     ~QSvgHandler();
 
     QSvgTinyDocument *document() const;
@@ -128,6 +129,9 @@
     inline QPen defaultPen() const
     { return m_defaultPen; }
 
+    inline QNetworkAccessManager *networkAccessManager() const
+    { return m_nam; }
+
 public:
     bool startElement(const QString &localName, const QXmlStreamAttributes &attributes);
     bool endElement(const QStringRef &localName);
@@ -180,6 +184,8 @@
      * we need to delete it.
      */
     const bool m_ownsReader;
+
+    QNetworkAccessManager *m_nam;
 };
 
 QT_END_NAMESPACE
Index: src/svg/qsvgtinydocument_p.h
===================================================================
--- src/svg/qsvgtinydocument_p.h	(revision 36094)
+++ src/svg/qsvgtinydocument_p.h	(revision 43814)
@@ -62,6 +62,7 @@
 #include "QtCore/qhash.h"
 #include "QtCore/qdatetime.h"
 #include "QtCore/qxmlstream.h"
+#include "QtNetwork/qnetworkaccessmanager.h"
 #include "qsvgstyle_p.h"
 #include "qsvgfont_p.h"
 
@@ -74,9 +75,9 @@
 class Q_SVG_EXPORT QSvgTinyDocument : public QSvgStructureNode
 {
 public:
-    static QSvgTinyDocument * load(const QString &file);
-    static QSvgTinyDocument * load(const QByteArray &contents);
-    static QSvgTinyDocument * load(QXmlStreamReader *contents);
+    static QSvgTinyDocument * load(const QString &file, QNetworkAccessManager *nam = 0);
+    static QSvgTinyDocument * load(const QByteArray &contents, QNetworkAccessManager *nam = 0);
+    static QSvgTinyDocument * load(QXmlStreamReader *contents, QNetworkAccessManager *nam = 0);
 public:
     QSvgTinyDocument();
     ~QSvgTinyDocument();
Index: src/svg/qsvgrenderer.cpp
===================================================================
--- src/svg/qsvgrenderer.cpp	(revision 36094)
+++ src/svg/qsvgrenderer.cpp	(revision 43814)
@@ -120,6 +120,7 @@
     QSvgTinyDocument *render;
     QTimer *timer;
     int fps;
+    QNetworkAccessManager *nam;
 };
 
 /*!
@@ -314,7 +315,7 @@
                          const TInputType &in)
 {
     delete d->render;
-    d->render = QSvgTinyDocument::load(in);
+    d->render = QSvgTinyDocument::load(in, d->nam);
     if (d->render && d->render->animated() && d->fps > 0) {
         if (!d->timer)
             d->timer = new QTimer(q);
@@ -494,6 +495,12 @@
     return mat;
 }
 
+void QSvgRenderer::setNetworkAccessManager(QNetworkAccessManager *nam)
+{
+    Q_D(QSvgRenderer);
+    d->nam = nam;
+}
+
 QT_END_NAMESPACE
 
 #include "moc_qsvgrenderer.cpp"
Index: src/svg/qsvgrenderer.h
===================================================================
--- src/svg/qsvgrenderer.h	(revision 36094)
+++ src/svg/qsvgrenderer.h	(revision 43814)
@@ -50,6 +50,7 @@
 #include <QtCore/qsize.h>
 #include <QtCore/qrect.h>
 #include <QtCore/qxmlstream.h>
+#include <QtNetwork/qnetworkaccessmanager.h>
 
 QT_BEGIN_HEADER
 
@@ -95,6 +96,8 @@
     bool elementExists(const QString &id) const;
     QMatrix matrixForElement(const QString &id) const;
 
+    void setNetworkAccessManager(QNetworkAccessManager *nam);
+
 public Q_SLOTS:
     bool load(const QString &filename);
     bool load(const QByteArray &contents);
Index: src/svg/svg.pro
===================================================================
--- src/svg/svg.pro	(revision 36094)
+++ src/svg/svg.pro	(revision 43814)
@@ -1,6 +1,6 @@
 TARGET     = QtSvg
 QPRO_PWD   = $$PWD
-QT         = core gui
+QT         = core gui network
 DEFINES   += QT_BUILD_SVG_LIB
 DEFINES   += QT_NO_USING_NAMESPACE
 win32-msvc*|win32-icc:QMAKE_LFLAGS += /BASE:0x66000000
@@ -38,7 +38,9 @@
         qgraphicssvgitem.cpp    \
         qsvggenerator.cpp
 
-INCLUDEPATH += ../3rdparty/harfbuzz/src
+INCLUDEPATH += ../3rdparty/harfbuzz/src \
+               ../3rdparty/accessplugin
+HEADERS += ../3rdparty/accessplugin/accessplugininterface.h
 
 symbian:TARGET.UID3=0x2001B2E2
 
Index: src/svg/qsvghandler.cpp
===================================================================
--- src/svg/qsvghandler.cpp	(revision 36094)
+++ src/svg/qsvghandler.cpp	(revision 43814)
@@ -69,6 +69,10 @@
 
 #include "float.h"
 
+#include "QtCore/qeventloop.h"
+#include "QtNetwork/qnetworkrequest.h"
+#include "QtNetwork/qnetworkreply.h"
+
 QT_BEGIN_NAMESPACE
 
 static const char *qt_inherit_text = "inherit";
@@ -2704,6 +2708,14 @@
         } else {
             qDebug()<<"QSvgHandler::createImageNode: Unrecognized inline image format!";
         }
+    } else if (!QFile::exists(filename) && handler->networkAccessManager()) {
+        QUrl url(filename);
+        QNetworkRequest req(filename);
+        QNetworkReply *reply = handler->networkAccessManager()->get(req);
+        QEventLoop loop;
+        QObject::connect(reply, SIGNAL(readyRead()), &loop, SLOT(quit()));
+        loop.exec();
+        image.loadFromData(reply->readAll());
     } else
         image = QImage(filename);
 
@@ -3510,20 +3522,20 @@
     return 0;
 }
 
-QSvgHandler::QSvgHandler(QIODevice *device) : xml(new QXmlStreamReader(device))
-                                             , m_ownsReader(true)
+QSvgHandler::QSvgHandler(QIODevice *device, QNetworkAccessManager *nam) : xml(new QXmlStreamReader(device))
+                                             , m_ownsReader(true), m_nam(nam)
 {
     init();
 }
 
-QSvgHandler::QSvgHandler(const QByteArray &data) : xml(new QXmlStreamReader(data))
-                                                 , m_ownsReader(true)
+QSvgHandler::QSvgHandler(const QByteArray &data, QNetworkAccessManager *nam) : xml(new QXmlStreamReader(data))
+                                                 , m_ownsReader(true), m_nam(nam)
 {
     init();
 }
 
-QSvgHandler::QSvgHandler(QXmlStreamReader *const reader) : xml(reader)
-                                                         , m_ownsReader(false)
+QSvgHandler::QSvgHandler(QXmlStreamReader *const reader, QNetworkAccessManager *nam) : xml(reader)
+                                                         , m_ownsReader(false), m_nam(nam)
 {
     init();
 }
Index: src/svg/qsvgtinydocument.cpp
===================================================================
--- src/svg/qsvgtinydocument.cpp	(revision 36094)
+++ src/svg/qsvgtinydocument.cpp	(revision 43814)
@@ -167,7 +167,7 @@
 }
 #endif
 
-QSvgTinyDocument * QSvgTinyDocument::load(const QString &fileName)
+QSvgTinyDocument * QSvgTinyDocument::load(const QString &fileName, QNetworkAccessManager *nam)
 {
     QFile file(fileName);
     if (!file.open(QFile::ReadOnly)) {
@@ -182,9 +182,8 @@
         return load(qt_inflateGZipDataFrom(&file));
     }
 #endif
-
     QSvgTinyDocument *doc = 0;
-    QSvgHandler handler(&file);
+    QSvgHandler handler(&file, nam);
     if (handler.ok()) {
         doc = handler.document();
         doc->m_animationDuration = handler.animationDuration();
@@ -195,7 +194,7 @@
     return doc;
 }
 
-QSvgTinyDocument * QSvgTinyDocument::load(const QByteArray &contents)
+QSvgTinyDocument * QSvgTinyDocument::load(const QByteArray &contents, QNetworkAccessManager *nam)
 {
 #ifndef QT_NO_COMPRESS
     // Check for gzip magic number and inflate if appropriate
@@ -204,9 +203,8 @@
         return load(qt_inflateGZipDataFrom(&buffer));
     }
 #endif
+    QSvgHandler handler(contents, nam);
 
-    QSvgHandler handler(contents);
-
     QSvgTinyDocument *doc = 0;
     if (handler.ok()) {
         doc = handler.document();
@@ -215,9 +213,9 @@
     return doc;
 }
 
-QSvgTinyDocument * QSvgTinyDocument::load(QXmlStreamReader *contents)
+QSvgTinyDocument * QSvgTinyDocument::load(QXmlStreamReader *contents, QNetworkAccessManager *nam)
 {
-    QSvgHandler handler(contents);
+    QSvgHandler handler(contents, nam);
 
     QSvgTinyDocument *doc = 0;
     if (handler.ok()) {
Index: src/tools/uic/cpp/cppwriteinitialization.cpp
===================================================================
--- src/tools/uic/cpp/cppwriteinitialization.cpp	(revision 36094)
+++ src/tools/uic/cpp/cppwriteinitialization.cpp	(revision 43814)
@@ -2182,16 +2182,26 @@
         return rc;
     }
 
+    /*
     QString pixFunc = m_uic->pixmapFunction();
     if (pixFunc.isEmpty())
-        pixFunc = QLatin1String("QString::fromUtf8");
+	pixFunc = QLatin1String("QString::fromUtf8");
 
     type += QLatin1Char('(');
     type += pixFunc;
     type += QLatin1Char('(');
     type += fixString(text, m_dindent);
     type += QLatin1String("))");
+
+    fprintf(stderr, "Type: %s", qPrintable(type));
     return type;
+    */
+
+    QString pixFunc = QLatin1String("QString::fromUtf8(");
+    pixFunc += fixString(text, m_dindent);
+    pixFunc += QLatin1String(")");
+
+    return pixFunc;
 }
 
 void WriteInitialization::initializeComboBox3(DomWidget *w)
Index: src/qt3support/qt3support.pro
===================================================================
--- src/qt3support/qt3support.pro	(revision 36094)
+++ src/qt3support/qt3support.pro	(revision 43814)
@@ -37,3 +37,5 @@
 CONFIG -= separate_debug_info
 CONFIG += no_debug_info
 
+HEADERS += ../3rdparty/accessplugin/accessplugininterface.h
+INCLUDEPATH += ../3rdparty/accessplugin
Index: src/3rdparty/freetype/include/freetype/config/ftconfig.h
===================================================================
--- src/3rdparty/freetype/include/freetype/config/ftconfig.h	(revision 36094)
+++ src/3rdparty/freetype/include/freetype/config/ftconfig.h	(revision 43814)
@@ -327,7 +327,7 @@
       "adds   %1, %1, %0\n\t"       /* %1 += %0 */
       "adc    %2, %2, #0\n\t"       /* %2 += carry */
       "mov    %0, %1, lsr #16\n\t"  /* %0  = %1 >> 16 */
-      "orr    %0, %2, lsl #16\n\t"  /* %0 |= %2 << 16 */
+      "orr %0, %0, %2, lsl #16\n\t" /* %0 |= %2 << 16 */
       : "=r"(a), "=&r"(t2), "=&r"(t)
       : "r"(a), "r"(b) );
     return a;
Index: src/3rdparty/webkit/Source/JavaScriptCore/wtf/unicode/qt4/UnicodeQt4.h
===================================================================
--- src/3rdparty/webkit/Source/JavaScriptCore/wtf/unicode/qt4/UnicodeQt4.h	(revision 36094)
+++ src/3rdparty/webkit/Source/JavaScriptCore/wtf/unicode/qt4/UnicodeQt4.h	(revision 43814)
@@ -32,6 +32,7 @@
 
 #include <stdint.h>
 #if USE(QT_ICU_TEXT_BREAKING)
+#include <unicode/uchar.h>
 #include <unicode/ubrk.h>
 #endif
 
Index: src/3rdparty/webkit/Source/JavaScriptCore/wtf/gobject/GTypedefs.h
===================================================================
--- src/3rdparty/webkit/Source/JavaScriptCore/wtf/gobject/GTypedefs.h	(revision 36094)
+++ src/3rdparty/webkit/Source/JavaScriptCore/wtf/gobject/GTypedefs.h	(revision 43814)
@@ -39,7 +39,6 @@
 typedef struct _GAsyncResult GAsyncResult;
 typedef struct _GCancellable GCancellable;
 typedef struct _GCharsetConverter GCharsetConverter;
-typedef struct _GCond GCond;
 typedef struct _GDir GDir;
 typedef struct _GdkAtom* GdkAtom;
 typedef struct _GdkCursor GdkCursor;
@@ -52,7 +51,6 @@
 typedef struct _GHashTable GHashTable;
 typedef struct _GInputStream GInputStream;
 typedef struct _GList GList;
-typedef struct _GMutex GMutex;
 typedef struct _GPatternSpec GPatternSpec;
 typedef struct _GPollableOutputStream GPollableOutputStream;
 typedef struct _GSocketClient GSocketClient;
Index: src/3rdparty/webkit/Source/JavaScriptCore/wtf/gobject/GOwnPtr.h
===================================================================
--- src/3rdparty/webkit/Source/JavaScriptCore/wtf/gobject/GOwnPtr.h	(revision 36094)
+++ src/3rdparty/webkit/Source/JavaScriptCore/wtf/gobject/GOwnPtr.h	(revision 43814)
@@ -24,6 +24,7 @@
 
 #if ENABLE(GLIB_SUPPORT)
 
+#include <glib.h>
 #include <algorithm>
 #include <wtf/Assertions.h>
 #include <wtf/Noncopyable.h>
Index: src/3rdparty/webkit/Source/JavaScriptCore/JavaScriptCore.pri
===================================================================
--- src/3rdparty/webkit/Source/JavaScriptCore/JavaScriptCore.pri	(revision 36094)
+++ src/3rdparty/webkit/Source/JavaScriptCore/JavaScriptCore.pri	(revision 43814)
@@ -57,7 +57,7 @@
 
 DEFINES += BUILDING_JavaScriptCore BUILDING_WTF
 
-# CONFIG += text_breaking_with_icu
+CONFIG += text_breaking_with_icu
 
 contains (CONFIG, text_breaking_with_icu) {
     DEFINES += WTF_USE_QT_ICU_TEXT_BREAKING=1
Index: src/3rdparty/webkit/Source/WebKit/qt/Api/qwebpage.h
===================================================================
--- src/3rdparty/webkit/Source/WebKit/qt/Api/qwebpage.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebKit/qt/Api/qwebpage.h	(revision 43814)
@@ -254,7 +254,19 @@
 
     QWebHistory *history() const;
     QWebSettings *settings() const;
+    
+    void selectCharacterAtPoint(QPoint point);
+    void selectWordAtPoint(QPoint point, QRect bounds, bool selectLettersOnly, bool expandToWordBoundaries = true);
+    void clearSelection();
 
+    void expandSelectionRight(QRect bounds);
+    void expandSelectionLeft(QRect bounds);
+    void expandSelectionUp(QRect bounds);
+    void expandSelectionDown(QRect bounds);
+
+    void selectBetweenPoints(QPoint one, QPoint two, bool expandToWordBoundaries, int pageEnd);
+    QPair<QRect, QRect> selectionEndPoints();
+
     void setView(QWidget *view);
     QWidget *view() const;
 
@@ -274,6 +286,7 @@
 
     bool hasSelection() const;
     QString selectedText() const;
+    int selectedWordHeight() const;
     QString selectedHtml() const;
 
 #ifndef QT_NO_ACTION
Index: src/3rdparty/webkit/Source/WebKit/qt/Api/qwebkitengineversion.h
===================================================================
--- src/3rdparty/webkit/Source/WebKit/qt/Api/qwebkitengineversion.h	(revision 0)
+++ src/3rdparty/webkit/Source/WebKit/qt/Api/qwebkitengineversion.h	(revision 43814)
@@ -0,0 +1,11 @@
+/*
+    Copyright (c) 2012 ACCESS CO., LTD. All rights reserved.
+*/
+
+#ifndef qwebkitengineversion_h
+#define qwebkitengineversion_h
+
+#define WEBKIT_ENGINE_VERSION "20120706"
+
+#endif // qwebkitengineversion_h
+
Index: src/3rdparty/webkit/Source/WebKit/qt/Api/qgraphicswebview.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebKit/qt/Api/qgraphicswebview.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebKit/qt/Api/qgraphicswebview.cpp	(revision 43814)
@@ -56,7 +56,7 @@
         : q(parent)
         , page(0)
         , resizesToContents(false)
-        , renderHints(QPainter::TextAntialiasing | QPainter::SmoothPixmapTransform) {}
+        , renderHints(QPainter::TextAntialiasing | QPainter::SmoothPixmapTransform | QPainter::Dithering) {}
 
     virtual ~QGraphicsWebViewPrivate();
 
Index: src/3rdparty/webkit/Source/WebKit/qt/Api/qwebframe.h
===================================================================
--- src/3rdparty/webkit/Source/WebKit/qt/Api/qwebframe.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebKit/qt/Api/qwebframe.h	(revision 43814)
@@ -122,6 +122,7 @@
 
 public:
     QWebPage *page() const;
+    QList<QRect> renderTreeRunRects(bool imgRun);
 
     void load(const QUrl &url);
     void load(const QNetworkRequest &request,
@@ -199,6 +200,8 @@
 
     QWebSecurityOrigin securityOrigin() const;
 
+    bool selectionIntersectsElement(const QString &nodeName, const QString &className, const QString &retrievedAttribute, QString &id);
+
 public Q_SLOTS:
     QVariant evaluateJavaScript(const QString& scriptSource);
 #ifndef QT_NO_PRINTER
Index: src/3rdparty/webkit/Source/WebKit/qt/Api/qwebkitversion.h
===================================================================
--- src/3rdparty/webkit/Source/WebKit/qt/Api/qwebkitversion.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebKit/qt/Api/qwebkitversion.h	(revision 43814)
@@ -28,5 +28,6 @@
 QWEBKIT_EXPORT QString qWebKitVersion();
 QWEBKIT_EXPORT int qWebKitMajorVersion();
 QWEBKIT_EXPORT int qWebKitMinorVersion();
+QWEBKIT_EXPORT QString qWebKitEngineVersion();
 
 #endif // qwebkitversion_h
Index: src/3rdparty/webkit/Source/WebKit/qt/Api/qwebpage.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebKit/qt/Api/qwebpage.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebKit/qt/Api/qwebpage.cpp	(revision 43814)
@@ -72,6 +72,7 @@
 #include "HTMLInputElement.h"
 #include "HTMLNames.h"
 #include "HashMap.h"
+#include "HitTestRequest.h"
 #include "HitTestResult.h"
 #include "Image.h"
 #include "InspectorClientQt.h"
@@ -99,10 +100,13 @@
 #include "ProgressTracker.h"
 #include "QtPlatformPlugin.h"
 #include "RefPtr.h"
+#include "RenderLayer.h"
 #include "RenderTextControl.h"
+#include "RenderView.h"
 #include "SchemeRegistry.h"
 #include "Scrollbar.h"
 #include "SecurityOrigin.h"
+#include "SelectionController.h"
 #include "Settings.h"
 #if defined Q_OS_WIN32
 #include "SystemInfo.h"
@@ -2155,6 +2159,203 @@
     return ok;
 }
 
+int QWebPage::selectedWordHeight() const {
+	return (int)d->page->focusController()->focusedOrMainFrame()->selection()->toNormalizedRange().get()->getBoundingClientRect().get()->height();
+}
+
+static SelectionDirection opposite(SelectionDirection dir) {
+	if (dir == DirectionRight)
+		return DirectionLeft;
+	else if (dir == DirectionLeft)
+		return DirectionRight;
+	else if (dir == DirectionForward)
+		return DirectionBackward;
+	else
+		return DirectionForward;	
+}
+
+static void expandSelection(QWebPagePrivate *d, SelectionDirection dir, TextGranularity granularity, QRect bounds) {
+ 	Frame *frame = d->page->focusController()->focusedOrMainFrame();
+	bool modified = frame->selection()->modify(SelectionController::AlterationExtend, dir, granularity);
+	IntRect newSelectionRect = frame->document()->renderView()->selectionBounds(false);
+	if (!bounds.contains(newSelectionRect)) {
+		frame->selection()->modify(SelectionController::AlterationExtend, opposite(dir), granularity);		
+	}
+}
+
+void QWebPage::expandSelectionRight(QRect bounds) {
+	expandSelection(d, DirectionRight, WordGranularity, bounds);
+}
+
+void QWebPage::expandSelectionLeft(QRect bounds) {
+	expandSelection(d, DirectionLeft, WordGranularity, bounds);
+}
+
+void QWebPage::expandSelectionUp(QRect bounds) {
+	expandSelection(d, DirectionForward, LineGranularity, bounds);
+}
+
+void QWebPage::expandSelectionDown(QRect bounds) {
+	expandSelection(d, DirectionBackward, LineGranularity, bounds);
+}
+
+void QWebPage::selectCharacterAtPoint(QPoint docPoint) {
+	d->createMainFrame();
+	Frame *frame = d->page->focusController()->focusedOrMainFrame();
+	IntPoint point(docPoint.x(),docPoint.y());
+	HitTestRequest request(HitTestRequest::ReadOnly | HitTestRequest::Active);
+	HitTestResult result(point);
+	frame->document()->renderView()->layer()->hitTest(request, result);
+	Node* innerNode = result.innerNode();
+	if (innerNode && innerNode->renderer()) {
+		VisiblePosition pos(innerNode->renderer()->positionForPoint(result.localPoint()));
+
+		if (pos.isNotNull()) {
+			VisibleSelection newSelection(pos, pos.next());
+			frame->selection()->setSelection(newSelection);
+		}
+	}
+}
+
+//If selectOnlyLetters == true the selection will be modified to discard non letters.
+//This causes a performance hit though, so it should only be used for the final selecting
+void QWebPage::selectWordAtPoint(QPoint docPoint, QRect bounds, bool selectOnlyLetters, bool expandToWordBoundaries) {
+	d->createMainFrame();
+	Frame *frame = d->page->focusController()->focusedOrMainFrame();
+	IntPoint point(docPoint.x(),docPoint.y());
+	HitTestRequest request(HitTestRequest::ReadOnly | HitTestRequest::Active);
+	HitTestResult result(point);
+	frame->document()->renderView()->layer()->hitTest(request, result);
+	Node* innerNode = result.innerNode();
+	if (innerNode && innerNode->renderer()) {
+		VisiblePosition pos(innerNode->renderer()->positionForPoint(result.localPoint()));
+		VisibleSelection newSelection(selectOnlyLetters);
+		if (pos.isNotNull()) {
+			newSelection = VisibleSelection(pos, selectOnlyLetters);
+			if(expandToWordBoundaries) {
+				newSelection.expandUsingGranularity(WordGranularity);
+			}
+		}
+		if (newSelection.isRange()) {
+			frame->selection()->setSelection(newSelection, WordGranularity);
+		} else {
+			frame->selection()->setSelection(newSelection);
+		}
+	}
+}
+
+void QWebPage::clearSelection() {
+	Frame *frame = d->page->focusController()->focusedOrMainFrame();
+	frame->selection()->clear();
+}
+
+static bool getPageHit(Frame *frame, QPoint hitPoint, WebCore::Node **nodePtr, HitTestResult& hitResult, int pageEnd)
+{
+	if (nodePtr == NULL || frame == NULL) {
+		return false;
+	}
+
+	QList<IntPoint> deltas;
+	foreach(int deltaY, QList<int>() << 0 << -10 << 10 << -20 << 20) {
+		foreach(int deltaX, QList<int>() << 0 << 5 << -5 << 10 << -10 << 20 << -20) {
+			deltas << IntPoint(deltaX, deltaY);
+		}
+	}
+
+	foreach(IntPoint delta, deltas) {
+		IntPoint testPoint(hitPoint.x() + delta.x(), hitPoint.y() + delta.y());
+		HitTestRequest onerequest(HitTestRequest::ReadOnly | HitTestRequest::Active);
+		hitResult.setPoint(testPoint);
+		frame->document()->renderView()->layer()->hitTest(onerequest, hitResult);
+		*nodePtr = hitResult.innerNode();
+		if (*nodePtr && (*nodePtr)->renderer() && (*nodePtr)->isTextNode()) {
+			if (pageEnd < 0 || ((pageEnd > 0) && (testPoint.y() < pageEnd)) ) {
+				return true;
+			}
+		}
+	}
+	return false;
+}
+
+void QWebPage::selectBetweenPoints(QPoint one, QPoint two, bool expandToWordBoundaries, int pageEnd) {
+	if (one == two) {
+		return;
+	}
+	d->createMainFrame();
+	Frame *frame = d->page->focusController()->focusedOrMainFrame();
+
+	Node *oneNode = NULL;
+	Node *twoNode = NULL;
+	HitTestResult oneResult;
+	HitTestResult twoResult;
+	if (getPageHit(frame, one, &oneNode, oneResult, pageEnd)) {
+		if (getPageHit(frame, two, &twoNode, twoResult, pageEnd)) {
+			VisiblePosition onepos(oneNode->renderer()->positionForPoint(oneResult.localPoint()));
+			VisiblePosition twopos(twoNode->renderer()->positionForPoint(twoResult.localPoint()));
+			VisibleSelection newSelection;
+			if (onepos.isNotNull() && twopos.isNotNull()) {
+				newSelection = VisibleSelection(onepos, twopos);
+			}
+			if (expandToWordBoundaries) {
+				newSelection.expandUsingGranularity(WordGranularity);
+			} else {
+				newSelection.expandUsingGranularity(CharacterGranularity);
+			}
+			// don't stomp on a good selection with a bogus one
+			QString oldText = selectedText();
+			VisibleSelection oldSelection = frame->selection()->selection();
+			frame->selection()->setSelection(newSelection);
+			if (selectedText() == "" && oldText != "") {
+				frame->selection()->setSelection(oldSelection);
+			}
+		}
+	}
+}
+
+QPair<QRect, QRect> QWebPage::selectionEndPoints() {
+	d->createMainFrame();
+	VisibleSelection selection = d->page->focusController()->focusedOrMainFrame()->selection()->selection();
+	PassRefPtr<Range> range = selection.firstRange();
+	Vector<IntRect> rects;
+	if (range.get() != NULL) {
+		range.get()->textRects(rects, true);
+	}
+	if (rects.size() == 0) {
+		return QPair<QRect, QRect>();
+	}
+	IntRect startRect = rects.first();
+	IntRect endRect = rects.last();
+	QString writingMode = mainFrame()->documentElement().styleProperty("-epub-writing-mode", QWebElement::ComputedStyle);
+	if (writingMode == "vertical-rl" || writingMode == "tb-rl") {
+		QRect startQRect(startRect.x(), startRect.y(), startRect.width(), startRect.height());
+		QRect endQRect(endRect.x(), endRect.y(), qMax(endRect.width(), 1), qMax(endRect.height(), 1));
+		return QPair<QRect, QRect>(startQRect, endQRect);
+	}
+	else {
+		QRect startQRect(startRect.x(), startRect.y(), 1, startRect.height());
+		QRect endQRect(endRect.x() + endRect.width(), endRect.y(), 1, endRect.height());
+
+		// this is a bit awkward...
+		// The rects returned by the Range are taller than what we want, but the
+		// rects returned by absoluteCaretBounds are sometimes totally wrong
+		// (specifically, on selecting a single word at the end of certain lines,
+		// it gives an end rect that's at the end of the current DOM node).
+		// So we take the height of the caretBounds rects and the position of the
+		// Range rects, and mash them together into something reasonable.
+		VisiblePosition start = selection.visibleStart();
+		VisiblePosition end = selection.visibleEnd();
+		IntRect startRect2 = start.absoluteCaretBounds();
+		IntRect endRect2 = end.absoluteCaretBounds();
+		QRect startQRect2(startRect2.x(), startRect2.y(), startRect2.width(), startRect2.height());
+		QRect endQRect2(endRect2.x(), endRect2.y(), endRect2.width(), endRect2.height());
+
+		QRect startQRect3(startQRect.x(), startQRect.y() + (startQRect.height() - startQRect2.height()), 1, startQRect2.height());
+		QRect endQRect3(endQRect.x(), endQRect.y() + (endQRect.height() - endQRect2.height()), 1, endQRect2.height());
+
+		return QPair<QRect, QRect>(startQRect3,endQRect3);
+	}
+}
+
 /*!
     \fn bool QWebPage::shouldInterruptJavaScript()
     \since 4.6
@@ -3884,6 +4085,40 @@
         firstPartTemp += QString::fromLatin1("Unknown");
 #endif
 
+#if defined Q_OS_DARWIN
+    QString ver;
+    switch(qMacVersion()) {
+    case QSysInfo::MV_10_0:
+        ver = "10_0";
+        break;
+    case QSysInfo::MV_10_1:
+        ver = "10_1";
+        break;
+    case QSysInfo::MV_10_2:
+        ver = "10_2";
+        break;
+    case QSysInfo::MV_10_3:
+        ver = "10_3";
+        break;
+    case QSysInfo::MV_10_4:
+        ver = "10_4";
+        break;
+    case QSysInfo::MV_10_5:
+        ver = "10_5";
+        break;
+    case QSysInfo::MV_10_6:
+        ver = "10_6";
+        break;
+    case QSysInfo::MV_10_7:
+        ver = "10_7";
+        break;
+    default:
+        ver = "Unknown";
+        break;
+    }
+    firstPartTemp += ver;
+#endif
+
 #if USE(QT_MOBILITY_SYSTEMINFO)
         // adding Model Number
         QtMobility::QSystemDeviceInfo systemDeviceInfo;
Index: src/3rdparty/webkit/Source/WebKit/qt/Api/qwebframe.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebKit/qt/Api/qwebframe.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebKit/qt/Api/qwebframe.cpp	(revision 43814)
@@ -109,6 +109,7 @@
 #include <qprinter.h>
 #include <qregion.h>
 #include <qnetworkrequest.h>
+#include "DOMSelection.h"
 
 using namespace WebCore;
 
@@ -1561,6 +1562,48 @@
     return QWebSecurityOrigin(priv);
 }
 
+bool QWebFrame::selectionIntersectsElement(const QString &nodeName, const QString &className, const QString &retrievedAttribute, QString &id)
+{
+	ExceptionCode ec = 0;
+	PassRefPtr<Range> range = QWebFramePrivate::core(this)->domWindow()->getSelection()->getRangeAt(0, ec);
+	if (!range) {
+		return false;
+	}
+	Node *node = range->startContainer();
+	bool done = false;
+	while (!done) {
+		if (!node) {
+			return false;
+		}
+		Element *element;
+		if (node->nodeType() == Node::ELEMENT_NODE) {
+			element = static_cast<Element*>(node);
+		}
+		else {
+			element = node->parentElement();
+		}
+		if (element && !QString::compare(nodeName, element->nodeName(), Qt::CaseInsensitive) && element->hasAttribute("class") && !QString::compare(className, element->getAttribute("class"))) {
+			if (!retrievedAttribute.isEmpty()) {
+				if (element->hasAttribute(retrievedAttribute)) {
+					id = element->getAttribute(retrievedAttribute);
+				}
+				else {
+					qDebug() << "ERROR: Requested attribute" << retrievedAttribute << "of DOM element" << nodeName << "was not found!";
+					return false;
+				}
+			}
+			return true;
+		}
+		if( node == range->endContainer() ) {
+			done = true;
+		}
+		else {
+			node = node->traverseNextNode();
+		}
+	}
+	return false;
+}
+
 WebCore::Frame* QWebFramePrivate::core(const QWebFrame* webFrame)
 {
     return webFrame->d->frame;
@@ -1949,4 +1992,18 @@
     return d->frame;
 }
 
+namespace WebCore {
+    QList<QRect> getRunRects(RenderObject*, bool, bool);
+}
+
+QList<QRect> QWebFrame::renderTreeRunRects(bool imgRun)
+{
+    if (d->frame->view() && d->frame->view()->layoutPending()) {
+        d->frame->view()->layout();
+    }
+
+    RenderObject* o = d->frame->contentRenderer();
+    return WebCore::getRunRects(o, imgRun, documentElement().styleProperty("-epub-writing-mode", QWebElement::ComputedStyle).startsWith("vertical"));
+}
+
 #include "moc_qwebframe.cpp"
Index: src/3rdparty/webkit/Source/WebKit/qt/Api/qwebkitversion.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebKit/qt/Api/qwebkitversion.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebKit/qt/Api/qwebkitversion.cpp	(revision 43814)
@@ -20,6 +20,7 @@
 #include "config.h"
 #include <qwebkitversion.h>
 #include <WebKitVersion.h>
+#include "qwebkitengineversion.h"
 
 /*!
     \relates QWebPage
@@ -112,3 +113,17 @@
     #endif
     \endcode
 */
+
+/*!
+    \relates QWebPage
+
+    Returns the engine version string of WebKit at run-time as a string
+    (for example, 20120411). This is the version of WebKit Engine release
+    was compiled against.
+
+    \sa qWebKitVersion()
+*/
+QString qWebKitEngineVersion()
+{
+    return QString::fromLatin1(WEBKIT_ENGINE_VERSION);
+}
Index: src/3rdparty/webkit/Source/WebKit/qt/Api/qwebsettings.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebKit/qt/Api/qwebsettings.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebKit/qt/Api/qwebsettings.cpp	(revision 43814)
@@ -481,8 +481,10 @@
     d->fontSizes.insert(QWebSettings::DefaultFixedFontSize, 13);
 
     QFont defaultFont;
+    defaultFont.setStyleHint(QFont::SansSerif);
+    d->fontFamilies.insert(QWebSettings::StandardFont, defaultFont.defaultFamily());
+
     defaultFont.setStyleHint(QFont::Serif);
-    d->fontFamilies.insert(QWebSettings::StandardFont, defaultFont.defaultFamily());
     d->fontFamilies.insert(QWebSettings::SerifFont, defaultFont.defaultFamily());
 
     defaultFont.setStyleHint(QFont::Fantasy);
Index: src/3rdparty/webkit/Source/WebKit/qt/Api/qwebview.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebKit/qt/Api/qwebview.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebKit/qt/Api/qwebview.cpp	(revision 43814)
@@ -39,7 +39,7 @@
     QWebViewPrivate(QWebView *view)
         : view(view)
         , page(0)
-        , renderHints(QPainter::TextAntialiasing | QPainter::SmoothPixmapTransform)
+        , renderHints(QPainter::TextAntialiasing | QPainter::SmoothPixmapTransform | QPainter::Dithering)
     {
         Q_ASSERT(view);
     }
Index: src/3rdparty/webkit/Source/WebCore/config.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/config.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/config.h	(revision 43814)
@@ -254,3 +254,6 @@
 #include <bridge/npruntime_internal.h>
 #endif
 
+#ifndef ENABLE_EPUB
+#define ENABLE_EPUB 1
+#endif
Index: src/3rdparty/webkit/Source/WebCore/GNUmakefile.list.am
===================================================================
--- src/3rdparty/webkit/Source/WebCore/GNUmakefile.list.am	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/GNUmakefile.list.am	(revision 43814)
@@ -2458,6 +2458,8 @@
 	Source/WebCore/platform/graphics/StringTruncator.cpp \
 	Source/WebCore/platform/graphics/StringTruncator.h \
 	Source/WebCore/platform/graphics/StrokeStyleApplier.h \
+	Source/WebCore/platform/graphics/SurrogatePairAwareTextIterator.cpp \
+	Source/WebCore/platform/graphics/SurrogatePairAwareTextIterator.h \
 	Source/WebCore/platform/graphics/SVGGlyph.cpp \
 	Source/WebCore/platform/graphics/SVGGlyph.h \
 	Source/WebCore/platform/graphics/TextRenderingMode.h \
Index: src/3rdparty/webkit/Source/WebCore/WebCore.pri
===================================================================
--- src/3rdparty/webkit/Source/WebCore/WebCore.pri	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/WebCore.pri	(revision 43814)
@@ -365,3 +365,7 @@
 
     return(true)
 }
+
+mac {
+    QMAKE_OBJECTIVE_CFLAGS += -I$$(NICKEL_BASE)/scripts/icu/public/common -I$$(NICKEL_BASE)/scripts/icu/public/i18n
+}
Index: src/3rdparty/webkit/Source/WebCore/dom/Node.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/dom/Node.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/dom/Node.h	(revision 43814)
@@ -348,6 +348,10 @@
 
     unsigned nodeIndex() const;
 
+#if ENABLE(EPUB)
+    int nodeConsecutiveIndex() const;
+#endif
+
     // Returns the DOM ownerDocument attribute. This method never returns NULL, except in the case 
     // of (1) a Document node or (2) a DocumentType node that is not used with any Document yet. 
     Document* ownerDocument() const;
Index: src/3rdparty/webkit/Source/WebCore/dom/Document.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/dom/Document.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/dom/Document.cpp	(revision 43814)
@@ -425,9 +425,14 @@
     m_document = this;
 
     m_pageGroupUserSheetCacheValid = false;
-
+    
+//#if ENABLE(EPUB)
+ //   m_printing = true;
+  //  m_paginatedForScreen = true;
+//#else
     m_printing = false;
     m_paginatedForScreen = false;
+//#endif
 
     m_ignoreAutofocus = false;
 
Index: src/3rdparty/webkit/Source/WebCore/dom/ContainerNode.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/dom/ContainerNode.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/dom/ContainerNode.cpp	(revision 43814)
@@ -869,18 +869,13 @@
         }
         ASSERT(o);
 
-        if (!o->isInline() || o->isReplaced()) {
-            point = o->localToAbsolute(FloatPoint(), false, true);
-            return true;
-        }
-
         if (p->node() && p->node() == this && o->isText() && !o->isBR() && !toRenderText(o)->firstTextBox()) {
                 // do nothing - skip unrendered whitespace that is a child or next sibling of the anchor
         } else if ((o->isText() && !o->isBR()) || o->isReplaced()) {
             point = FloatPoint();
             if (o->isText() && toRenderText(o)->firstTextBox()) {
                 point.move(toRenderText(o)->linesBoundingBox().x(),
-                           toRenderText(o)->firstTextBox()->root()->lineTop());
+                           toRenderText(o)->linesBoundingBox().y());
             } else if (o->isBox()) {
                 RenderBox* box = toRenderBox(o);
                 point.move(box->x(), box->y());
@@ -951,6 +946,10 @@
 
 IntRect ContainerNode::getRect() const
 {
+    const bool isSVGRenderer = isSVGElement() && renderer() && !renderer()->isSVGRoot();
+    if (isSVGRenderer)
+        return renderer()->absoluteBoundingBoxRect(true);
+
     FloatPoint  upperLeft, lowerRight;
     bool foundUpperLeft = getUpperLeftCorner(upperLeft);
     bool foundLowerRight = getLowerRightCorner(lowerRight);
@@ -962,10 +961,19 @@
             lowerRight = upperLeft;
         else
             upperLeft = lowerRight;
-    } 
+    }
 
-    lowerRight.setX(max(upperLeft.x(), lowerRight.x()));
-    lowerRight.setY(max(upperLeft.y(), lowerRight.y()));
+    using std::min;
+
+    const int left = min(upperLeft.x(), lowerRight.x());
+    const int right = max(upperLeft.x(), lowerRight.x());
+    upperLeft.setX(left);
+    lowerRight.setX(right);
+
+    const int upper = min(upperLeft.y(), lowerRight.y());
+    const int lower = max(upperLeft.y(), lowerRight.y());
+    upperLeft.setY(upper);
+    lowerRight.setY(lower);
     
     return enclosingIntRect(FloatRect(upperLeft, lowerRight - upperLeft));
 }
Index: src/3rdparty/webkit/Source/WebCore/dom/Node.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/dom/Node.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/dom/Node.cpp	(revision 43814)
@@ -2947,6 +2947,27 @@
     }
 }
 
+#if ENABLE(EPUB)
+int Node::nodeConsecutiveIndex() const
+{
+    const Node* rootNode = document()->documentElement();
+    const Node* node = this;
+    int cnt = -1;
+
+    bool breaked = false;
+    for (node = rootNode; node; node = node->traverseNextNode()) {
+        cnt++;
+        if (node == this) {
+            breaked = true;
+            break;
+        }
+    }
+    if (!breaked)
+        return -1;
+    return cnt;
+}
+#endif
+
 } // namespace WebCore
 
 #ifndef NDEBUG
Index: src/3rdparty/webkit/Source/WebCore/editing/VisibleSelection.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/editing/VisibleSelection.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/editing/VisibleSelection.h	(revision 43814)
@@ -42,6 +42,8 @@
 
     VisibleSelection();
 
+    VisibleSelection(bool selectOnlyLetters);
+
     VisibleSelection(const Position&, EAffinity);
     VisibleSelection(const Position&, const Position&, EAffinity = SEL_DEFAULT_AFFINITY);
 
@@ -49,6 +51,7 @@
     
     VisibleSelection(const VisiblePosition&);
     VisibleSelection(const VisiblePosition&, const VisiblePosition&);
+    VisibleSelection(const VisiblePosition&, bool selectOnlyLetters);
 
     static VisibleSelection selectionFromContentsOfNode(Node*);
 
@@ -106,6 +109,8 @@
 
     void setWithoutValidation(const Position&, const Position&);
 
+    void setSelectOnlyLetters(bool selectOnlyLetters) const { m_selectOnlyLetters = selectOnlyLetters; }
+
 private:
     void validate(TextGranularity = CharacterGranularity);
 
@@ -131,6 +136,8 @@
     // these are cached, can be recalculated by validate()
     SelectionType m_selectionType;    // None, Caret, Range
     bool m_baseIsFirst;               // true if base is before the extent
+
+    mutable bool m_selectOnlyLetters;
 };
 
 inline bool operator==(const VisibleSelection& a, const VisibleSelection& b)
Index: src/3rdparty/webkit/Source/WebCore/editing/VisibleSelection.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/editing/VisibleSelection.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/editing/VisibleSelection.cpp	(revision 43814)
@@ -38,19 +38,32 @@
 #include <wtf/text/CString.h>
 #include <wtf/unicode/CharacterNames.h>
 
+#include <Text.h>
+#include <QChar>
+
 namespace WebCore {
 
 VisibleSelection::VisibleSelection()
     : m_affinity(DOWNSTREAM)
     , m_selectionType(NoSelection)
     , m_baseIsFirst(true)
+    , m_selectOnlyLetters(false)
 {
 }
+ 
+VisibleSelection::VisibleSelection(bool selectOnlyLetters)
+    : m_affinity(DOWNSTREAM)
+    , m_selectionType(NoSelection)
+    , m_baseIsFirst(true)
+    , m_selectOnlyLetters(selectOnlyLetters)
+{
+}
 
 VisibleSelection::VisibleSelection(const Position& pos, EAffinity affinity)
     : m_base(pos)
     , m_extent(pos)
     , m_affinity(affinity)
+    , m_selectOnlyLetters(false)
 {
     validate();
 }
@@ -59,6 +72,7 @@
     : m_base(base)
     , m_extent(extent)
     , m_affinity(affinity)
+    , m_selectOnlyLetters(false)
 {
     validate();
 }
@@ -67,6 +81,7 @@
     : m_base(pos.deepEquivalent())
     , m_extent(pos.deepEquivalent())
     , m_affinity(pos.affinity())
+    , m_selectOnlyLetters(false)
 {
     validate();
 }
@@ -75,6 +90,7 @@
     : m_base(base.deepEquivalent())
     , m_extent(extent.deepEquivalent())
     , m_affinity(base.affinity())
+    , m_selectOnlyLetters(false)
 {
     validate();
 }
@@ -83,10 +99,21 @@
     : m_base(range->startPosition())
     , m_extent(range->endPosition())
     , m_affinity(affinity)
+    , m_selectOnlyLetters(false)
 {
     validate();
 }
 
+VisibleSelection::VisibleSelection(const VisiblePosition& pos, bool selectOnlyLetters)
+    : m_base(pos.deepEquivalent())
+    , m_extent(pos.deepEquivalent())
+    , m_affinity(pos.affinity())
+    , m_selectOnlyLetters(selectOnlyLetters)
+{
+    validate();
+}
+
+
 VisibleSelection VisibleSelection::selectionFromContentsOfNode(Node* node)
 {
     ASSERT(!editingIgnoresContent(node));
@@ -317,6 +344,36 @@
             }
                 
             m_end = end.deepEquivalent();
+		
+            //added this to select only letters for dictionary viewing
+            if( m_selectOnlyLetters && m_start.anchorNode()->isTextNode() && m_end.anchorNode()->isTextNode() ) {
+
+                CharacterData* startText = static_cast<CharacterData*>(m_start.anchorNode());
+                String startStr = startText->data();
+                CharacterData* endText = static_cast<CharacterData*>(m_end.anchorNode());
+                String endStr = endText->data();
+
+                int n1 = m_start.offsetInContainerNode();
+                int n2 = m_end.offsetInContainerNode() - 1;
+
+                //unhandled corner case: at beginning of sentence, m_start may refer
+                //to the Node of the last sentence, this causes the space at the beginning
+                //of a sentence to be part of the selection. Assigning m_end to m_start and
+                //adjusting the offset does not fix this. 		
+
+                QChar c1 = startStr[n1];
+                QChar c2 = endStr[n2];
+
+                while(!c1.isLetter() && n1 <= n2) {
+                    c1 = startStr[++n1];
+                    m_start = m_start.next(Character);
+                }
+
+                while(!c2.isLetter() && n2 >= n1) {
+                    c2 = endStr[--n2];
+                    m_end = m_end.previous(Character);
+                }
+            }
             break;
         }
         case SentenceGranularity: {
Index: src/3rdparty/webkit/Source/WebCore/editing/SelectionController.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/editing/SelectionController.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/editing/SelectionController.cpp	(revision 43814)
@@ -80,7 +80,7 @@
     , m_isDragCaretController(isDragCaretController)
     , m_isCaretBlinkingSuspended(false)
     , m_focused(frame && frame->page() && frame->page()->focusController()->focusedFrame() == frame)
-    , m_caretVisible(isDragCaretController)
+    , m_caretVisible(isDragCaretController || m_focused)
     , m_caretPaint(true)
 {
     setIsDirectional(false);
Index: src/3rdparty/webkit/Source/WebCore/WebCore.pro
===================================================================
--- src/3rdparty/webkit/Source/WebCore/WebCore.pro	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/WebCore.pro	(revision 43814)
@@ -948,7 +948,7 @@
     platform/Arena.cpp \
     platform/text/Base64.cpp \
     platform/text/BidiContext.cpp \
-    platform/text/Hyphenation.cpp \
+    platform/text/qt/HyphenationQt.cpp \
     platform/text/LocalizedDateNone.cpp \
     platform/text/LocalizedNumberNone.cpp \
     platform/ContentType.cpp \
@@ -3110,7 +3110,7 @@
 # and measurement in WebCore. Because the feature is still undergoing
 # development, it is disabled in builds.
 #
-# exists($$[QT_INSTALL_HEADERS]/QtGui/QRawFont): HAVE_QRAWFONT=1
+HAVE_QRAWFONT=1
 
 !isEmpty(HAVE_QRAWFONT) {
     DEFINES += HAVE_QRAWFONT=1
@@ -3118,10 +3118,12 @@
     SOURCES += \
         platform/graphics/FontFastPath.cpp \
         platform/graphics/GlyphPageTreeNode.cpp \
-        platform/graphics/WidthIterator.cpp
+        platform/graphics/WidthIterator.cpp \
+        platform/graphics/SurrogatePairAwareTextIterator.cpp
 
     HEADERS += \
-        platform/graphics/WidthIterator.h
+        platform/graphics/WidthIterator.h \
+        platform/graphics/SurrogatePairAwareTextIterator.h
 }
 
 contains(DEFINES, ENABLE_GEOLOCATION=1) {
Index: src/3rdparty/webkit/Source/WebCore/ChangeLog
===================================================================
--- src/3rdparty/webkit/Source/WebCore/ChangeLog	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/ChangeLog	(revision 43814)
@@ -1,3 +1,104 @@
+2012-05-03  Dan Bernstein  <mitz@apple.com>
+
+        highlight for Ruby text is mispositioned in the Web Inspector
+        https://bugs.webkit.org/show_bug.cgi?id=82684
+
+        Reviewed by Simon Fraser.
+
+        Tests: fast/writing-mode/flipped-blocks-inline-map-local-to-container-expected.html
+               fast/writing-mode/flipped-blocks-inline-map-local-to-container.html
+
+        In flipped blocks writing modes, flipping was being applied twice to box descendants of
+        inline children of the flipped block, once during RenderBox::mapLocalToContainer, and then
+        again by RenderInline::mapLocalToContainer. The fix is to make the latter only apply the
+        flip to local coordinates originating in the inline or a descendant inline. This is done
+        by adding a parameter of type ApplyContainerFlipOrNot, which defaults to ApplyContainerFlip
+        but is reset to DoNotApplyContainerFlip in recursive calls into mapLocalToContainer().
+
+        * rendering/RenderBox.cpp:
+        (WebCore::RenderBox::mapLocalToContainer): Added ApplyContainerFlipOrNot parameter, passing
+        DoNotApplyContainerFlip when recursing into the container.
+        * rendering/RenderBox.h:
+
+        * rendering/RenderInline.cpp:
+        (WebCore::RenderInline::mapLocalToContainer): Added ApplyContainerFlipOrNot paramerer, and
+        made the flipping conditional on its value.
+
+        * rendering/RenderInline.h:
+
+        * rendering/RenderObject.cpp:
+        (WebCore::RenderObject::mapLocalToContainer): Added ApplyContainerFlipOrNot parameter,
+        passing DoNotApplyContainerFlip when recursing into the container.
+        (WebCore::RenderObject::localToContainerQuad): Pass ApplyContainerFlip.
+        (WebCore::RenderObject::localToContainerPoint): Ditto.
+        * rendering/RenderObject.h:
+
+        * rendering/RenderView.cpp:
+        (WebCore::RenderView::mapLocalToContainer): Added ApplyContainerFlipOrNot parameter.
+        * rendering/RenderView.h:
+
+        * rendering/svg/RenderSVGForeignObject.cpp:
+        (WebCore::RenderSVGForeignObject::mapLocalToContainer): Ditto.
+        * rendering/svg/RenderSVGForeignObject.h:
+
+        * rendering/svg/RenderSVGInline.cpp:
+        (WebCore::RenderSVGInline::mapLocalToContainer): Ditto.
+        * rendering/svg/RenderSVGInline.h:
+
+        * rendering/svg/RenderSVGModelObject.cpp:
+        (WebCore::RenderSVGModelObject::mapLocalToContainer): Ditto.
+        * rendering/svg/RenderSVGModelObject.h:
+
+        * rendering/svg/RenderSVGRoot.cpp:
+        (WebCore::RenderSVGRoot::mapLocalToContainer): Ditto.
+        * rendering/svg/RenderSVGRoot.h:
+
+        * rendering/svg/RenderSVGText.cpp:
+        (WebCore::RenderSVGText::mapLocalToContainer): Ditto.
+        * rendering/svg/RenderSVGText.h:
+
+        * rendering/svg/SVGRenderSupport.cpp:
+        (WebCore::SVGRenderSupport::mapLocalToContainer): Pass DoNotApplyContainerFlip when
+        recursing into the parent.
+
+2011-06-24  Nikolas Zimmermann  <nzimmermann@rim.com>
+
+        Reviewed by Dirk Schulze.
+
+        Refactor text iterator code respecting surrogate pairs from WidthIterator
+        https://bugs.webkit.org/show_bug.cgi?id=63319
+
+        WidthIterator contains a surrogate pair aware text iterator that is needed in other parts of WebCore.
+        Refactor the code into its own SurrogatePairAwareTextIterator class. It can be used like this:
+
+        UChar32 character = 0;
+        unsigned clusterLength = 0;
+
+        SurrogatePairAwareTextIterator textIterator(myString.characters(), 0, myString.length(), myString.length());
+        while (textIterator.consume(character, clusterLength)) {
+            // Either clusterLength is 1 and UChar32 fits into a single UChar.
+            // Or     clusterLength is 2 and the UChar32 has been computed by combining the high & low surrogate pairs
+            ...
+        
+            textIterator.advance(clusterLength);
+        }
+
+        SVGGlyphMap is the next candidate that wants to make use of SurrogatePairAwareTextIterator.
+        Doesn't affect any tests, just refactoring.
+
+        * CMakeLists.txt: Add SurrogatePairAwareTextIterator.* to build.
+        * GNUmakefile.list.am: Ditto.
+        * WebCore.gypi: Ditto.
+        * WebCore.pro: Ditto.
+        * WebCore.vcproj/WebCore.vcproj: Ditto.
+        * WebCore.xcodeproj/project.pbxproj: Ditto.
+        * platform/graphics/SurrogatePairAwareTextIterator.cpp: Copied from platform/graphics/WidthIterator.cpp.
+        * platform/graphics/SurrogatePairAwareTextIterator.h: Added.
+        (WebCore::SurrogatePairAwareTextIterator::currentCharacter):
+        * platform/graphics/WidthIterator.cpp:
+        (WebCore::WidthIterator::advance):
+        * platform/graphics/WidthIterator.h:
+
 2011-11-01  Zeno Albisser  <zeno.albisser@nokia.com>
 
         [Qt] bad codegen, pointer diff in JSC::JSCallbackConstructor::JSCallbackConstructor
Index: src/3rdparty/webkit/Source/WebCore/generated/UserAgentStyleSheetsData.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/generated/UserAgentStyleSheetsData.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/generated/UserAgentStyleSheetsData.cpp	(revision 43814)
@@ -1,127 +1,126 @@
 namespace WebCore {
-extern const char htmlUserAgentStyleSheet[14651] = {
+extern const char htmlUserAgentStyleSheet[14675] = {
     64, 110, 97, 109, 101, 115, 112, 97, 99, 101, 32, 34, 104, 116, 116, 112,
     58, 47, 47, 119, 119, 119, 46, 119, 51, 46, 111, 114, 103, 47, 49, 57,
     57, 57, 47, 120, 104, 116, 109, 108, 34, 59, 32, 104, 116, 109, 108, 32,
     123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107,
-    32, 125, 32, 104, 101, 97, 100, 32, 123, 32, 100, 105, 115, 112, 108, 97,
-    121, 58, 32, 110, 111, 110, 101, 32, 125, 32, 109, 101, 116, 97, 32, 123,
+    59, 32, 119, 111, 114, 100, 45, 119, 114, 97, 112, 58, 32, 98, 114, 101,
+    97, 107, 45, 119, 111, 114, 100, 59, 32, 125, 32, 104, 101, 97, 100, 32,
+    123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 110, 111, 110, 101, 32,
+    125, 32, 109, 101, 116, 97, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121,
+    58, 32, 110, 111, 110, 101, 32, 125, 32, 116, 105, 116, 108, 101, 32, 123,
     32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 110, 111, 110, 101, 32, 125,
-    32, 116, 105, 116, 108, 101, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121,
-    58, 32, 110, 111, 110, 101, 32, 125, 32, 108, 105, 110, 107, 32, 123, 32,
+    32, 108, 105, 110, 107, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58,
+    32, 110, 111, 110, 101, 32, 125, 32, 115, 116, 121, 108, 101, 32, 123, 32,
     100, 105, 115, 112, 108, 97, 121, 58, 32, 110, 111, 110, 101, 32, 125, 32,
-    115, 116, 121, 108, 101, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58,
-    32, 110, 111, 110, 101, 32, 125, 32, 115, 99, 114, 105, 112, 116, 32, 123,
-    32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 110, 111, 110, 101, 32, 125,
-    32, 98, 111, 100, 121, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58,
-    32, 98, 108, 111, 99, 107, 59, 32, 109, 97, 114, 103, 105, 110, 58, 32,
-    56, 112, 120, 32, 125, 32, 112, 32, 123, 32, 100, 105, 115, 112, 108, 97,
-    121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 45, 119, 101, 98, 107, 105,
-    116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58,
-    32, 49, 95, 95, 113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116,
-    45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 49,
-    95, 95, 113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109,
-    97, 114, 103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 48, 59, 32,
-    45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 101,
-    110, 100, 58, 32, 48, 59, 32, 125, 32, 100, 105, 118, 32, 123, 32, 100,
-    105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 32, 125, 32,
-    108, 97, 121, 101, 114, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58,
-    32, 98, 108, 111, 99, 107, 32, 125, 32, 97, 114, 116, 105, 99, 108, 101,
-    44, 32, 97, 115, 105, 100, 101, 44, 32, 102, 111, 111, 116, 101, 114, 44,
-    32, 104, 101, 97, 100, 101, 114, 44, 32, 104, 103, 114, 111, 117, 112, 44,
-    32, 110, 97, 118, 44, 32, 115, 101, 99, 116, 105, 111, 110, 32, 123, 32,
-    100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 32, 125,
-    32, 109, 97, 114, 113, 117, 101, 101, 32, 123, 32, 100, 105, 115, 112, 108,
-    97, 121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111, 99, 107,
-    59, 32, 111, 118, 101, 114, 102, 108, 111, 119, 58, 32, 45, 119, 101, 98,
-    107, 105, 116, 45, 109, 97, 114, 113, 117, 101, 101, 32, 125, 32, 97, 100,
-    100, 114, 101, 115, 115, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58,
-    32, 98, 108, 111, 99, 107, 32, 125, 32, 98, 108, 111, 99, 107, 113, 117,
-    111, 116, 101, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98,
-    108, 111, 99, 107, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97,
-    114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 49, 95, 95,
-    113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114,
-    103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 49, 101, 109, 59, 32,
-    45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 115,
-    116, 97, 114, 116, 58, 32, 52, 48, 112, 120, 59, 32, 45, 119, 101, 98,
-    107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 101, 110, 100, 58, 32,
-    52, 48, 112, 120, 59, 32, 125, 32, 102, 105, 103, 99, 97, 112, 116, 105,
-    111, 110, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108,
-    111, 99, 107, 32, 125, 32, 102, 105, 103, 117, 114, 101, 32, 123, 32, 100,
-    105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 45,
-    119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101,
-    102, 111, 114, 101, 58, 32, 49, 101, 109, 59, 32, 45, 119, 101, 98, 107,
-    105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58,
-    32, 49, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97,
-    114, 103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 52, 48, 112, 120,
+    115, 99, 114, 105, 112, 116, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121,
+    58, 32, 110, 111, 110, 101, 32, 125, 32, 98, 111, 100, 121, 32, 123, 32,
+    100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32,
+    109, 97, 114, 103, 105, 110, 58, 32, 56, 112, 120, 32, 125, 32, 112, 32,
+    123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107,
     59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110,
-    45, 101, 110, 100, 58, 32, 52, 48, 112, 120, 59, 32, 125, 32, 113, 32,
-    123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105, 110,
-    101, 32, 125, 32, 113, 58, 98, 101, 102, 111, 114, 101, 32, 123, 32, 99,
-    111, 110, 116, 101, 110, 116, 58, 32, 111, 112, 101, 110, 45, 113, 117, 111,
-    116, 101, 59, 32, 125, 32, 113, 58, 97, 102, 116, 101, 114, 32, 123, 32,
-    99, 111, 110, 116, 101, 110, 116, 58, 32, 99, 108, 111, 115, 101, 45, 113,
-    117, 111, 116, 101, 59, 32, 125, 32, 99, 101, 110, 116, 101, 114, 32, 123,
-    32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59,
-    32, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 32, 45, 119, 101,
-    98, 107, 105, 116, 45, 99, 101, 110, 116, 101, 114, 32, 125, 32, 104, 114,
-    32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99,
-    107, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105,
-    110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 48, 46, 53, 101, 109, 59,
+    45, 98, 101, 102, 111, 114, 101, 58, 32, 49, 95, 95, 113, 101, 109, 59,
     32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45,
-    97, 102, 116, 101, 114, 58, 32, 48, 46, 53, 101, 109, 59, 32, 45, 119,
+    97, 102, 116, 101, 114, 58, 32, 49, 95, 95, 113, 101, 109, 59, 32, 45,
+    119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 115, 116,
+    97, 114, 116, 58, 32, 48, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45,
+    109, 97, 114, 103, 105, 110, 45, 101, 110, 100, 58, 32, 48, 59, 32, 125,
+    32, 100, 105, 118, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32,
+    98, 108, 111, 99, 107, 32, 125, 32, 108, 97, 121, 101, 114, 32, 123, 32,
+    100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 32, 125,
+    32, 97, 114, 116, 105, 99, 108, 101, 44, 32, 97, 115, 105, 100, 101, 44,
+    32, 102, 111, 111, 116, 101, 114, 44, 32, 104, 101, 97, 100, 101, 114, 44,
+    32, 104, 103, 114, 111, 117, 112, 44, 32, 110, 97, 118, 44, 32, 115, 101,
+    99, 116, 105, 111, 110, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58,
+    32, 98, 108, 111, 99, 107, 32, 125, 32, 109, 97, 114, 113, 117, 101, 101,
+    32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105,
+    110, 101, 45, 98, 108, 111, 99, 107, 59, 32, 111, 118, 101, 114, 102, 108,
+    111, 119, 58, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 113,
+    117, 101, 101, 32, 125, 32, 97, 100, 100, 114, 101, 115, 115, 32, 123, 32,
+    100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 32, 125,
+    32, 98, 108, 111, 99, 107, 113, 117, 111, 116, 101, 32, 123, 32, 100, 105,
+    115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 45, 119,
+    101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102,
+    111, 114, 101, 58, 32, 49, 95, 95, 113, 101, 109, 59, 32, 45, 119, 101,
+    98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101,
+    114, 58, 32, 49, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45,
+    109, 97, 114, 103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 52, 48,
+    112, 120, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103,
+    105, 110, 45, 101, 110, 100, 58, 32, 52, 48, 112, 120, 59, 32, 125, 32,
+    102, 105, 103, 99, 97, 112, 116, 105, 111, 110, 32, 123, 32, 100, 105, 115,
+    112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 32, 125, 32, 102, 105,
+    103, 117, 114, 101, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32,
+    98, 108, 111, 99, 107, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109,
+    97, 114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 49, 101,
+    109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105,
+    110, 45, 97, 102, 116, 101, 114, 58, 32, 49, 101, 109, 59, 32, 45, 119,
     101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 115, 116, 97,
-    114, 116, 58, 32, 97, 117, 116, 111, 59, 32, 45, 119, 101, 98, 107, 105,
-    116, 45, 109, 97, 114, 103, 105, 110, 45, 101, 110, 100, 58, 32, 97, 117,
-    116, 111, 59, 32, 98, 111, 114, 100, 101, 114, 45, 115, 116, 121, 108, 101,
-    58, 32, 105, 110, 115, 101, 116, 59, 32, 98, 111, 114, 100, 101, 114, 45,
-    119, 105, 100, 116, 104, 58, 32, 49, 112, 120, 32, 125, 32, 109, 97, 112,
-    32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105,
-    110, 101, 32, 125, 32, 104, 49, 32, 123, 32, 100, 105, 115, 112, 108, 97,
-    121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 102, 111, 110, 116, 45, 115,
-    105, 122, 101, 58, 32, 50, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105,
-    116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58,
-    32, 48, 46, 54, 55, 95, 95, 113, 101, 109, 59, 32, 45, 119, 101, 98,
-    107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101, 114,
-    58, 32, 48, 46, 54, 55, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105,
-    116, 45, 109, 97, 114, 103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32,
-    48, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105,
-    110, 45, 101, 110, 100, 58, 32, 48, 59, 32, 102, 111, 110, 116, 45, 119,
-    101, 105, 103, 104, 116, 58, 32, 98, 111, 108, 100, 32, 125, 32, 58, 45,
-    119, 101, 98, 107, 105, 116, 45, 97, 110, 121, 40, 97, 114, 116, 105, 99,
-    108, 101, 44, 97, 115, 105, 100, 101, 44, 110, 97, 118, 44, 115, 101, 99,
-    116, 105, 111, 110, 41, 32, 104, 49, 32, 123, 32, 102, 111, 110, 116, 45,
-    115, 105, 122, 101, 58, 32, 49, 46, 53, 101, 109, 59, 32, 45, 119, 101,
-    98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102, 111,
-    114, 101, 58, 32, 48, 46, 56, 51, 95, 95, 113, 101, 109, 59, 32, 45,
-    119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102,
-    116, 101, 114, 58, 32, 48, 46, 56, 51, 101, 109, 59, 32, 125, 32, 58,
+    114, 116, 58, 32, 52, 48, 112, 120, 59, 32, 45, 119, 101, 98, 107, 105,
+    116, 45, 109, 97, 114, 103, 105, 110, 45, 101, 110, 100, 58, 32, 52, 48,
+    112, 120, 59, 32, 125, 32, 113, 32, 123, 32, 100, 105, 115, 112, 108, 97,
+    121, 58, 32, 105, 110, 108, 105, 110, 101, 32, 125, 32, 113, 58, 98, 101,
+    102, 111, 114, 101, 32, 123, 32, 99, 111, 110, 116, 101, 110, 116, 58, 32,
+    111, 112, 101, 110, 45, 113, 117, 111, 116, 101, 59, 32, 125, 32, 113, 58,
+    97, 102, 116, 101, 114, 32, 123, 32, 99, 111, 110, 116, 101, 110, 116, 58,
+    32, 99, 108, 111, 115, 101, 45, 113, 117, 111, 116, 101, 59, 32, 125, 32,
+    99, 101, 110, 116, 101, 114, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121,
+    58, 32, 98, 108, 111, 99, 107, 59, 32, 116, 101, 120, 116, 45, 97, 108,
+    105, 103, 110, 58, 32, 45, 119, 101, 98, 107, 105, 116, 45, 99, 101, 110,
+    116, 101, 114, 32, 125, 32, 104, 114, 32, 123, 32, 100, 105, 115, 112, 108,
+    97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 45, 119, 101, 98, 107,
+    105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101,
+    58, 32, 48, 46, 53, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116,
+    45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 48,
+    46, 53, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97,
+    114, 103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 97, 117, 116, 111,
+    59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110,
+    45, 101, 110, 100, 58, 32, 97, 117, 116, 111, 59, 32, 98, 111, 114, 100,
+    101, 114, 45, 115, 116, 121, 108, 101, 58, 32, 105, 110, 115, 101, 116, 59,
+    32, 98, 111, 114, 100, 101, 114, 45, 119, 105, 100, 116, 104, 58, 32, 49,
+    112, 120, 32, 125, 32, 109, 97, 112, 32, 123, 32, 100, 105, 115, 112, 108,
+    97, 121, 58, 32, 105, 110, 108, 105, 110, 101, 32, 125, 32, 104, 49, 32,
+    123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107,
+    59, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 50, 101, 109,
+    59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110,
+    45, 98, 101, 102, 111, 114, 101, 58, 32, 48, 46, 54, 55, 95, 95, 113,
+    101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103,
+    105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 48, 46, 54, 55, 101, 109,
+    59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110,
+    45, 115, 116, 97, 114, 116, 58, 32, 48, 59, 32, 45, 119, 101, 98, 107,
+    105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 101, 110, 100, 58, 32, 48,
+    59, 32, 102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116, 58, 32, 98,
+    111, 108, 100, 32, 125, 32, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97,
+    110, 121, 40, 97, 114, 116, 105, 99, 108, 101, 44, 97, 115, 105, 100, 101,
+    44, 110, 97, 118, 44, 115, 101, 99, 116, 105, 111, 110, 41, 32, 104, 49,
+    32, 123, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 49, 46,
+    53, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114,
+    103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 48, 46, 56, 51,
+    95, 95, 113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109,
+    97, 114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 48, 46, 56,
+    51, 101, 109, 59, 32, 125, 32, 58, 45, 119, 101, 98, 107, 105, 116, 45,
+    97, 110, 121, 40, 97, 114, 116, 105, 99, 108, 101, 44, 97, 115, 105, 100,
+    101, 44, 110, 97, 118, 44, 115, 101, 99, 116, 105, 111, 110, 41, 32, 58,
     45, 119, 101, 98, 107, 105, 116, 45, 97, 110, 121, 40, 97, 114, 116, 105,
     99, 108, 101, 44, 97, 115, 105, 100, 101, 44, 110, 97, 118, 44, 115, 101,
-    99, 116, 105, 111, 110, 41, 32, 58, 45, 119, 101, 98, 107, 105, 116, 45,
-    97, 110, 121, 40, 97, 114, 116, 105, 99, 108, 101, 44, 97, 115, 105, 100,
-    101, 44, 110, 97, 118, 44, 115, 101, 99, 116, 105, 111, 110, 41, 32, 104,
-    49, 32, 123, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 49,
-    46, 49, 55, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109,
-    97, 114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 49, 95,
-    95, 113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97,
-    114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 49, 101, 109, 59,
-    32, 125, 32, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97, 110, 121, 40,
+    99, 116, 105, 111, 110, 41, 32, 104, 49, 32, 123, 32, 102, 111, 110, 116,
+    45, 115, 105, 122, 101, 58, 32, 49, 46, 49, 55, 101, 109, 59, 32, 45,
+    119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101,
+    102, 111, 114, 101, 58, 32, 49, 95, 95, 113, 101, 109, 59, 32, 45, 119,
+    101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116,
+    101, 114, 58, 32, 49, 101, 109, 59, 32, 125, 32, 58, 45, 119, 101, 98,
+    107, 105, 116, 45, 97, 110, 121, 40, 97, 114, 116, 105, 99, 108, 101, 44,
+    97, 115, 105, 100, 101, 44, 110, 97, 118, 44, 115, 101, 99, 116, 105, 111,
+    110, 41, 32, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97, 110, 121, 40,
     97, 114, 116, 105, 99, 108, 101, 44, 97, 115, 105, 100, 101, 44, 110, 97,
     118, 44, 115, 101, 99, 116, 105, 111, 110, 41, 32, 58, 45, 119, 101, 98,
     107, 105, 116, 45, 97, 110, 121, 40, 97, 114, 116, 105, 99, 108, 101, 44,
     97, 115, 105, 100, 101, 44, 110, 97, 118, 44, 115, 101, 99, 116, 105, 111,
-    110, 41, 32, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97, 110, 121, 40,
-    97, 114, 116, 105, 99, 108, 101, 44, 97, 115, 105, 100, 101, 44, 110, 97,
-    118, 44, 115, 101, 99, 116, 105, 111, 110, 41, 32, 104, 49, 32, 123, 32,
-    102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 49, 46, 48, 48, 101,
-    109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105,
-    110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 49, 46, 51, 51, 95, 95,
-    113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114,
-    103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 49, 46, 51, 51, 101,
-    109, 59, 32, 125, 32, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97, 110,
-    121, 40, 97, 114, 116, 105, 99, 108, 101, 44, 97, 115, 105, 100, 101, 44,
-    110, 97, 118, 44, 115, 101, 99, 116, 105, 111, 110, 41, 32, 58, 45, 119,
+    110, 41, 32, 104, 49, 32, 123, 32, 102, 111, 110, 116, 45, 115, 105, 122,
+    101, 58, 32, 49, 46, 48, 48, 101, 109, 59, 32, 45, 119, 101, 98, 107,
+    105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101,
+    58, 32, 49, 46, 51, 51, 95, 95, 113, 101, 109, 59, 32, 45, 119, 101,
+    98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101,
+    114, 58, 32, 49, 46, 51, 51, 101, 109, 59, 32, 125, 32, 58, 45, 119,
     101, 98, 107, 105, 116, 45, 97, 110, 121, 40, 97, 114, 116, 105, 99, 108,
     101, 44, 97, 115, 105, 100, 101, 44, 110, 97, 118, 44, 115, 101, 99, 116,
     105, 111, 110, 41, 32, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97, 110,
@@ -129,12 +128,17 @@
     110, 97, 118, 44, 115, 101, 99, 116, 105, 111, 110, 41, 32, 58, 45, 119,
     101, 98, 107, 105, 116, 45, 97, 110, 121, 40, 97, 114, 116, 105, 99, 108,
     101, 44, 97, 115, 105, 100, 101, 44, 110, 97, 118, 44, 115, 101, 99, 116,
-    105, 111, 110, 41, 32, 104, 49, 32, 123, 32, 102, 111, 110, 116, 45, 115,
-    105, 122, 101, 58, 32, 46, 56, 51, 101, 109, 59, 32, 45, 119, 101, 98,
-    107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102, 111, 114,
-    101, 58, 32, 49, 46, 54, 55, 95, 95, 113, 101, 109, 59, 32, 45, 119,
-    101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116,
-    101, 114, 58, 32, 49, 46, 54, 55, 101, 109, 59, 32, 125, 32, 58, 45,
+    105, 111, 110, 41, 32, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97, 110,
+    121, 40, 97, 114, 116, 105, 99, 108, 101, 44, 97, 115, 105, 100, 101, 44,
+    110, 97, 118, 44, 115, 101, 99, 116, 105, 111, 110, 41, 32, 104, 49, 32,
+    123, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 46, 56, 51,
+    101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103,
+    105, 110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 49, 46, 54, 55, 95,
+    95, 113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97,
+    114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 49, 46, 54, 55,
+    101, 109, 59, 32, 125, 32, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97,
+    110, 121, 40, 97, 114, 116, 105, 99, 108, 101, 44, 97, 115, 105, 100, 101,
+    44, 110, 97, 118, 44, 115, 101, 99, 116, 105, 111, 110, 41, 32, 58, 45,
     119, 101, 98, 107, 105, 116, 45, 97, 110, 121, 40, 97, 114, 116, 105, 99,
     108, 101, 44, 97, 115, 105, 100, 101, 44, 110, 97, 118, 44, 115, 101, 99,
     116, 105, 111, 110, 41, 32, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97,
@@ -144,778 +148,776 @@
     108, 101, 44, 97, 115, 105, 100, 101, 44, 110, 97, 118, 44, 115, 101, 99,
     116, 105, 111, 110, 41, 32, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97,
     110, 121, 40, 97, 114, 116, 105, 99, 108, 101, 44, 97, 115, 105, 100, 101,
-    44, 110, 97, 118, 44, 115, 101, 99, 116, 105, 111, 110, 41, 32, 58, 45,
-    119, 101, 98, 107, 105, 116, 45, 97, 110, 121, 40, 97, 114, 116, 105, 99,
-    108, 101, 44, 97, 115, 105, 100, 101, 44, 110, 97, 118, 44, 115, 101, 99,
-    116, 105, 111, 110, 41, 32, 104, 49, 32, 123, 32, 102, 111, 110, 116, 45,
-    115, 105, 122, 101, 58, 32, 46, 54, 55, 101, 109, 59, 32, 45, 119, 101,
+    44, 110, 97, 118, 44, 115, 101, 99, 116, 105, 111, 110, 41, 32, 104, 49,
+    32, 123, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 46, 54,
+    55, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114,
+    103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 50, 46, 51, 51,
+    95, 95, 113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109,
+    97, 114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 50, 46, 51,
+    51, 101, 109, 59, 32, 125, 32, 104, 50, 32, 123, 32, 100, 105, 115, 112,
+    108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 102, 111, 110, 116,
+    45, 115, 105, 122, 101, 58, 32, 49, 46, 53, 101, 109, 59, 32, 45, 119,
+    101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102,
+    111, 114, 101, 58, 32, 48, 46, 56, 51, 95, 95, 113, 101, 109, 59, 32,
+    45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97,
+    102, 116, 101, 114, 58, 32, 48, 46, 56, 51, 101, 109, 59, 32, 45, 119,
+    101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 115, 116, 97,
+    114, 116, 58, 32, 48, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109,
+    97, 114, 103, 105, 110, 45, 101, 110, 100, 58, 32, 48, 59, 32, 102, 111,
+    110, 116, 45, 119, 101, 105, 103, 104, 116, 58, 32, 98, 111, 108, 100, 32,
+    125, 32, 104, 51, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32,
+    98, 108, 111, 99, 107, 59, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101,
+    58, 32, 49, 46, 49, 55, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105,
+    116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58,
+    32, 49, 95, 95, 113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116,
+    45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 49,
+    101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103,
+    105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 48, 59, 32, 45, 119, 101,
+    98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 101, 110, 100, 58,
+    32, 48, 59, 32, 102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116, 58,
+    32, 98, 111, 108, 100, 32, 125, 32, 104, 52, 32, 123, 32, 100, 105, 115,
+    112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 45, 119, 101,
     98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102, 111,
-    114, 101, 58, 32, 50, 46, 51, 51, 95, 95, 113, 101, 109, 59, 32, 45,
+    114, 101, 58, 32, 49, 46, 51, 51, 95, 95, 113, 101, 109, 59, 32, 45,
     119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102,
-    116, 101, 114, 58, 32, 50, 46, 51, 51, 101, 109, 59, 32, 125, 32, 104,
-    50, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111,
-    99, 107, 59, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 49,
-    46, 53, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97,
-    114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 48, 46, 56,
-    51, 95, 95, 113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45,
-    109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 48, 46,
-    56, 51, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97,
-    114, 103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 48, 59, 32, 45,
-    119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 101, 110,
-    100, 58, 32, 48, 59, 32, 102, 111, 110, 116, 45, 119, 101, 105, 103, 104,
-    116, 58, 32, 98, 111, 108, 100, 32, 125, 32, 104, 51, 32, 123, 32, 100,
-    105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 102,
-    111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 49, 46, 49, 55, 101, 109,
-    59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110,
-    45, 98, 101, 102, 111, 114, 101, 58, 32, 49, 95, 95, 113, 101, 109, 59,
+    116, 101, 114, 58, 32, 49, 46, 51, 51, 101, 109, 59, 32, 45, 119, 101,
+    98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 115, 116, 97, 114,
+    116, 58, 32, 48, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97,
+    114, 103, 105, 110, 45, 101, 110, 100, 58, 32, 48, 59, 32, 102, 111, 110,
+    116, 45, 119, 101, 105, 103, 104, 116, 58, 32, 98, 111, 108, 100, 32, 125,
+    32, 104, 53, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98,
+    108, 111, 99, 107, 59, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58,
+    32, 46, 56, 51, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45,
+    109, 97, 114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 49,
+    46, 54, 55, 95, 95, 113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105,
+    116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32,
+    49, 46, 54, 55, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45,
+    109, 97, 114, 103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 48, 59,
     32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45,
-    97, 102, 116, 101, 114, 58, 32, 49, 101, 109, 59, 32, 45, 119, 101, 98,
-    107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 115, 116, 97, 114, 116,
-    58, 32, 48, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114,
-    103, 105, 110, 45, 101, 110, 100, 58, 32, 48, 59, 32, 102, 111, 110, 116,
-    45, 119, 101, 105, 103, 104, 116, 58, 32, 98, 111, 108, 100, 32, 125, 32,
-    104, 52, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108,
-    111, 99, 107, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114,
-    103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 49, 46, 51, 51,
-    95, 95, 113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109,
-    97, 114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 49, 46, 51,
-    51, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114,
-    103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 48, 59, 32, 45, 119,
-    101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 101, 110, 100,
-    58, 32, 48, 59, 32, 102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116,
-    58, 32, 98, 111, 108, 100, 32, 125, 32, 104, 53, 32, 123, 32, 100, 105,
-    115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 102, 111,
-    110, 116, 45, 115, 105, 122, 101, 58, 32, 46, 56, 51, 101, 109, 59, 32,
-    45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98,
-    101, 102, 111, 114, 101, 58, 32, 49, 46, 54, 55, 95, 95, 113, 101, 109,
+    101, 110, 100, 58, 32, 48, 59, 32, 102, 111, 110, 116, 45, 119, 101, 105,
+    103, 104, 116, 58, 32, 98, 111, 108, 100, 32, 125, 32, 104, 54, 32, 123,
+    32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59,
+    32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 46, 54, 55, 101,
+    109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105,
+    110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 50, 46, 51, 51, 95, 95,
+    113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114,
+    103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 50, 46, 51, 51, 101,
+    109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105,
+    110, 45, 115, 116, 97, 114, 116, 58, 32, 48, 59, 32, 45, 119, 101, 98,
+    107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 101, 110, 100, 58, 32,
+    48, 59, 32, 102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116, 58, 32,
+    98, 111, 108, 100, 32, 125, 32, 116, 97, 98, 108, 101, 32, 123, 32, 100,
+    105, 115, 112, 108, 97, 121, 58, 32, 116, 97, 98, 108, 101, 59, 32, 98,
+    111, 114, 100, 101, 114, 45, 99, 111, 108, 108, 97, 112, 115, 101, 58, 32,
+    115, 101, 112, 97, 114, 97, 116, 101, 59, 32, 98, 111, 114, 100, 101, 114,
+    45, 115, 112, 97, 99, 105, 110, 103, 58, 32, 50, 112, 120, 59, 32, 98,
+    111, 114, 100, 101, 114, 45, 99, 111, 108, 111, 114, 58, 32, 103, 114, 97,
+    121, 32, 125, 32, 116, 104, 101, 97, 100, 32, 123, 32, 100, 105, 115, 112,
+    108, 97, 121, 58, 32, 116, 97, 98, 108, 101, 45, 104, 101, 97, 100, 101,
+    114, 45, 103, 114, 111, 117, 112, 59, 32, 118, 101, 114, 116, 105, 99, 97,
+    108, 45, 97, 108, 105, 103, 110, 58, 32, 109, 105, 100, 100, 108, 101, 59,
+    32, 98, 111, 114, 100, 101, 114, 45, 99, 111, 108, 111, 114, 58, 32, 105,
+    110, 104, 101, 114, 105, 116, 32, 125, 32, 116, 98, 111, 100, 121, 32, 123,
+    32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 116, 97, 98, 108, 101, 45,
+    114, 111, 119, 45, 103, 114, 111, 117, 112, 59, 32, 118, 101, 114, 116, 105,
+    99, 97, 108, 45, 97, 108, 105, 103, 110, 58, 32, 109, 105, 100, 100, 108,
+    101, 59, 32, 98, 111, 114, 100, 101, 114, 45, 99, 111, 108, 111, 114, 58,
+    32, 105, 110, 104, 101, 114, 105, 116, 32, 125, 32, 116, 102, 111, 111, 116,
+    32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 116, 97, 98, 108,
+    101, 45, 102, 111, 111, 116, 101, 114, 45, 103, 114, 111, 117, 112, 59, 32,
+    118, 101, 114, 116, 105, 99, 97, 108, 45, 97, 108, 105, 103, 110, 58, 32,
+    109, 105, 100, 100, 108, 101, 59, 32, 98, 111, 114, 100, 101, 114, 45, 99,
+    111, 108, 111, 114, 58, 32, 105, 110, 104, 101, 114, 105, 116, 32, 125, 32,
+    116, 97, 98, 108, 101, 32, 62, 32, 116, 114, 32, 123, 32, 118, 101, 114,
+    116, 105, 99, 97, 108, 45, 97, 108, 105, 103, 110, 58, 32, 109, 105, 100,
+    100, 108, 101, 59, 32, 125, 32, 99, 111, 108, 32, 123, 32, 100, 105, 115,
+    112, 108, 97, 121, 58, 32, 116, 97, 98, 108, 101, 45, 99, 111, 108, 117,
+    109, 110, 32, 125, 32, 99, 111, 108, 103, 114, 111, 117, 112, 32, 123, 32,
+    100, 105, 115, 112, 108, 97, 121, 58, 32, 116, 97, 98, 108, 101, 45, 99,
+    111, 108, 117, 109, 110, 45, 103, 114, 111, 117, 112, 32, 125, 32, 116, 114,
+    32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 116, 97, 98, 108,
+    101, 45, 114, 111, 119, 59, 32, 118, 101, 114, 116, 105, 99, 97, 108, 45,
+    97, 108, 105, 103, 110, 58, 32, 105, 110, 104, 101, 114, 105, 116, 59, 32,
+    98, 111, 114, 100, 101, 114, 45, 99, 111, 108, 111, 114, 58, 32, 105, 110,
+    104, 101, 114, 105, 116, 32, 125, 32, 116, 100, 44, 32, 116, 104, 32, 123,
+    32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 116, 97, 98, 108, 101, 45,
+    99, 101, 108, 108, 59, 32, 118, 101, 114, 116, 105, 99, 97, 108, 45, 97,
+    108, 105, 103, 110, 58, 32, 105, 110, 104, 101, 114, 105, 116, 32, 125, 32,
+    116, 104, 32, 123, 32, 102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116,
+    58, 32, 98, 111, 108, 100, 32, 125, 32, 99, 97, 112, 116, 105, 111, 110,
+    32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 116, 97, 98, 108,
+    101, 45, 99, 97, 112, 116, 105, 111, 110, 59, 32, 116, 101, 120, 116, 45,
+    97, 108, 105, 103, 110, 58, 32, 45, 119, 101, 98, 107, 105, 116, 45, 99,
+    101, 110, 116, 101, 114, 32, 125, 32, 117, 108, 44, 32, 109, 101, 110, 117,
+    44, 32, 100, 105, 114, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58,
+    32, 98, 108, 111, 99, 107, 59, 32, 108, 105, 115, 116, 45, 115, 116, 121,
+    108, 101, 45, 116, 121, 112, 101, 58, 32, 100, 105, 115, 99, 59, 32, 45,
+    119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101,
+    102, 111, 114, 101, 58, 32, 49, 95, 95, 113, 101, 109, 59, 32, 45, 119,
+    101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116,
+    101, 114, 58, 32, 49, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116,
+    45, 109, 97, 114, 103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 48,
     59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110,
-    45, 97, 102, 116, 101, 114, 58, 32, 49, 46, 54, 55, 101, 109, 59, 32,
+    45, 101, 110, 100, 58, 32, 48, 59, 32, 45, 119, 101, 98, 107, 105, 116,
+    45, 112, 97, 100, 100, 105, 110, 103, 45, 115, 116, 97, 114, 116, 58, 32,
+    52, 48, 112, 120, 32, 125, 32, 111, 108, 32, 123, 32, 100, 105, 115, 112,
+    108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 108, 105, 115, 116,
+    45, 115, 116, 121, 108, 101, 45, 116, 121, 112, 101, 58, 32, 100, 101, 99,
+    105, 109, 97, 108, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97,
+    114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 49, 95, 95,
+    113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114,
+    103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 49, 101, 109, 59, 32,
     45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 115,
     116, 97, 114, 116, 58, 32, 48, 59, 32, 45, 119, 101, 98, 107, 105, 116,
     45, 109, 97, 114, 103, 105, 110, 45, 101, 110, 100, 58, 32, 48, 59, 32,
-    102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116, 58, 32, 98, 111, 108,
-    100, 32, 125, 32, 104, 54, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121,
-    58, 32, 98, 108, 111, 99, 107, 59, 32, 102, 111, 110, 116, 45, 115, 105,
-    122, 101, 58, 32, 46, 54, 55, 101, 109, 59, 32, 45, 119, 101, 98, 107,
+    45, 119, 101, 98, 107, 105, 116, 45, 112, 97, 100, 100, 105, 110, 103, 45,
+    115, 116, 97, 114, 116, 58, 32, 52, 48, 112, 120, 32, 125, 32, 108, 105,
+    32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 108, 105, 115, 116,
+    45, 105, 116, 101, 109, 32, 125, 32, 117, 108, 32, 117, 108, 44, 32, 111,
+    108, 32, 117, 108, 32, 123, 32, 108, 105, 115, 116, 45, 115, 116, 121, 108,
+    101, 45, 116, 121, 112, 101, 58, 32, 99, 105, 114, 99, 108, 101, 32, 125,
+    32, 111, 108, 32, 111, 108, 32, 117, 108, 44, 32, 111, 108, 32, 117, 108,
+    32, 117, 108, 44, 32, 117, 108, 32, 111, 108, 32, 117, 108, 44, 32, 117,
+    108, 32, 117, 108, 32, 117, 108, 32, 123, 32, 108, 105, 115, 116, 45, 115,
+    116, 121, 108, 101, 45, 116, 121, 112, 101, 58, 32, 115, 113, 117, 97, 114,
+    101, 32, 125, 32, 100, 100, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121,
+    58, 32, 98, 108, 111, 99, 107, 59, 32, 45, 119, 101, 98, 107, 105, 116,
+    45, 109, 97, 114, 103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 52,
+    48, 112, 120, 32, 125, 32, 100, 108, 32, 123, 32, 100, 105, 115, 112, 108,
+    97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 45, 119, 101, 98, 107,
     105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101,
-    58, 32, 50, 46, 51, 51, 95, 95, 113, 101, 109, 59, 32, 45, 119, 101,
-    98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101,
-    114, 58, 32, 50, 46, 51, 51, 101, 109, 59, 32, 45, 119, 101, 98, 107,
-    105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 115, 116, 97, 114, 116, 58,
+    58, 32, 49, 95, 95, 113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105,
+    116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32,
+    49, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114,
+    103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 48, 59, 32, 45, 119,
+    101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 101, 110, 100,
+    58, 32, 48, 59, 32, 125, 32, 100, 116, 32, 123, 32, 100, 105, 115, 112,
+    108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 32, 125, 32, 111, 108, 32,
+    117, 108, 44, 32, 117, 108, 32, 111, 108, 44, 32, 117, 108, 32, 117, 108,
+    44, 32, 111, 108, 32, 111, 108, 32, 123, 32, 45, 119, 101, 98, 107, 105,
+    116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58,
     32, 48, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103,
-    105, 110, 45, 101, 110, 100, 58, 32, 48, 59, 32, 102, 111, 110, 116, 45,
-    119, 101, 105, 103, 104, 116, 58, 32, 98, 111, 108, 100, 32, 125, 32, 116,
-    97, 98, 108, 101, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32,
-    116, 97, 98, 108, 101, 59, 32, 98, 111, 114, 100, 101, 114, 45, 99, 111,
-    108, 108, 97, 112, 115, 101, 58, 32, 115, 101, 112, 97, 114, 97, 116, 101,
-    59, 32, 98, 111, 114, 100, 101, 114, 45, 115, 112, 97, 99, 105, 110, 103,
-    58, 32, 50, 112, 120, 59, 32, 98, 111, 114, 100, 101, 114, 45, 99, 111,
-    108, 111, 114, 58, 32, 103, 114, 97, 121, 32, 125, 32, 116, 104, 101, 97,
-    100, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 116, 97, 98,
-    108, 101, 45, 104, 101, 97, 100, 101, 114, 45, 103, 114, 111, 117, 112, 59,
-    32, 118, 101, 114, 116, 105, 99, 97, 108, 45, 97, 108, 105, 103, 110, 58,
-    32, 109, 105, 100, 100, 108, 101, 59, 32, 98, 111, 114, 100, 101, 114, 45,
-    99, 111, 108, 111, 114, 58, 32, 105, 110, 104, 101, 114, 105, 116, 32, 125,
-    32, 116, 98, 111, 100, 121, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121,
-    58, 32, 116, 97, 98, 108, 101, 45, 114, 111, 119, 45, 103, 114, 111, 117,
-    112, 59, 32, 118, 101, 114, 116, 105, 99, 97, 108, 45, 97, 108, 105, 103,
-    110, 58, 32, 109, 105, 100, 100, 108, 101, 59, 32, 98, 111, 114, 100, 101,
-    114, 45, 99, 111, 108, 111, 114, 58, 32, 105, 110, 104, 101, 114, 105, 116,
-    32, 125, 32, 116, 102, 111, 111, 116, 32, 123, 32, 100, 105, 115, 112, 108,
-    97, 121, 58, 32, 116, 97, 98, 108, 101, 45, 102, 111, 111, 116, 101, 114,
-    45, 103, 114, 111, 117, 112, 59, 32, 118, 101, 114, 116, 105, 99, 97, 108,
-    45, 97, 108, 105, 103, 110, 58, 32, 109, 105, 100, 100, 108, 101, 59, 32,
-    98, 111, 114, 100, 101, 114, 45, 99, 111, 108, 111, 114, 58, 32, 105, 110,
-    104, 101, 114, 105, 116, 32, 125, 32, 116, 97, 98, 108, 101, 32, 62, 32,
-    116, 114, 32, 123, 32, 118, 101, 114, 116, 105, 99, 97, 108, 45, 97, 108,
-    105, 103, 110, 58, 32, 109, 105, 100, 100, 108, 101, 59, 32, 125, 32, 99,
-    111, 108, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 116, 97,
-    98, 108, 101, 45, 99, 111, 108, 117, 109, 110, 32, 125, 32, 99, 111, 108,
-    103, 114, 111, 117, 112, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58,
-    32, 116, 97, 98, 108, 101, 45, 99, 111, 108, 117, 109, 110, 45, 103, 114,
-    111, 117, 112, 32, 125, 32, 116, 114, 32, 123, 32, 100, 105, 115, 112, 108,
-    97, 121, 58, 32, 116, 97, 98, 108, 101, 45, 114, 111, 119, 59, 32, 118,
-    101, 114, 116, 105, 99, 97, 108, 45, 97, 108, 105, 103, 110, 58, 32, 105,
-    110, 104, 101, 114, 105, 116, 59, 32, 98, 111, 114, 100, 101, 114, 45, 99,
-    111, 108, 111, 114, 58, 32, 105, 110, 104, 101, 114, 105, 116, 32, 125, 32,
-    116, 100, 44, 32, 116, 104, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121,
-    58, 32, 116, 97, 98, 108, 101, 45, 99, 101, 108, 108, 59, 32, 118, 101,
-    114, 116, 105, 99, 97, 108, 45, 97, 108, 105, 103, 110, 58, 32, 105, 110,
-    104, 101, 114, 105, 116, 32, 125, 32, 116, 104, 32, 123, 32, 102, 111, 110,
-    116, 45, 119, 101, 105, 103, 104, 116, 58, 32, 98, 111, 108, 100, 32, 125,
-    32, 99, 97, 112, 116, 105, 111, 110, 32, 123, 32, 100, 105, 115, 112, 108,
-    97, 121, 58, 32, 116, 97, 98, 108, 101, 45, 99, 97, 112, 116, 105, 111,
-    110, 59, 32, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 32, 45,
-    119, 101, 98, 107, 105, 116, 45, 99, 101, 110, 116, 101, 114, 32, 125, 32,
-    117, 108, 44, 32, 109, 101, 110, 117, 44, 32, 100, 105, 114, 32, 123, 32,
-    100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32,
-    108, 105, 115, 116, 45, 115, 116, 121, 108, 101, 45, 116, 121, 112, 101, 58,
-    32, 100, 105, 115, 99, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109,
-    97, 114, 103, 105, 110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 49, 95,
-    95, 113, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97,
-    114, 103, 105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 49, 101, 109, 59,
-    32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45,
-    115, 116, 97, 114, 116, 58, 32, 48, 59, 32, 45, 119, 101, 98, 107, 105,
-    116, 45, 109, 97, 114, 103, 105, 110, 45, 101, 110, 100, 58, 32, 48, 59,
-    32, 45, 119, 101, 98, 107, 105, 116, 45, 112, 97, 100, 100, 105, 110, 103,
-    45, 115, 116, 97, 114, 116, 58, 32, 52, 48, 112, 120, 32, 125, 32, 111,
-    108, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111,
-    99, 107, 59, 32, 108, 105, 115, 116, 45, 115, 116, 121, 108, 101, 45, 116,
-    121, 112, 101, 58, 32, 100, 101, 99, 105, 109, 97, 108, 59, 32, 45, 119,
-    101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 98, 101, 102,
-    111, 114, 101, 58, 32, 49, 95, 95, 113, 101, 109, 59, 32, 45, 119, 101,
-    98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101,
-    114, 58, 32, 49, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45,
-    109, 97, 114, 103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 48, 59,
-    32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45,
-    101, 110, 100, 58, 32, 48, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45,
-    112, 97, 100, 100, 105, 110, 103, 45, 115, 116, 97, 114, 116, 58, 32, 52,
-    48, 112, 120, 32, 125, 32, 108, 105, 32, 123, 32, 100, 105, 115, 112, 108,
-    97, 121, 58, 32, 108, 105, 115, 116, 45, 105, 116, 101, 109, 32, 125, 32,
-    117, 108, 32, 117, 108, 44, 32, 111, 108, 32, 117, 108, 32, 123, 32, 108,
-    105, 115, 116, 45, 115, 116, 121, 108, 101, 45, 116, 121, 112, 101, 58, 32,
-    99, 105, 114, 99, 108, 101, 32, 125, 32, 111, 108, 32, 111, 108, 32, 117,
-    108, 44, 32, 111, 108, 32, 117, 108, 32, 117, 108, 44, 32, 117, 108, 32,
-    111, 108, 32, 117, 108, 44, 32, 117, 108, 32, 117, 108, 32, 117, 108, 32,
-    123, 32, 108, 105, 115, 116, 45, 115, 116, 121, 108, 101, 45, 116, 121, 112,
-    101, 58, 32, 115, 113, 117, 97, 114, 101, 32, 125, 32, 100, 100, 32, 123,
-    32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59,
-    32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45,
-    115, 116, 97, 114, 116, 58, 32, 52, 48, 112, 120, 32, 125, 32, 100, 108,
-    32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99,
-    107, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105,
-    110, 45, 98, 101, 102, 111, 114, 101, 58, 32, 49, 95, 95, 113, 101, 109,
-    59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110,
-    45, 97, 102, 116, 101, 114, 58, 32, 49, 101, 109, 59, 32, 45, 119, 101,
-    98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 115, 116, 97, 114,
-    116, 58, 32, 48, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97,
-    114, 103, 105, 110, 45, 101, 110, 100, 58, 32, 48, 59, 32, 125, 32, 100,
-    116, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111,
-    99, 107, 32, 125, 32, 111, 108, 32, 117, 108, 44, 32, 117, 108, 32, 111,
-    108, 44, 32, 117, 108, 32, 117, 108, 44, 32, 111, 108, 32, 111, 108, 32,
-    123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110,
-    45, 98, 101, 102, 111, 114, 101, 58, 32, 48, 59, 32, 45, 119, 101, 98,
-    107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 97, 102, 116, 101, 114,
-    58, 32, 48, 32, 125, 32, 102, 111, 114, 109, 32, 123, 32, 100, 105, 115,
-    112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 109, 97, 114,
-    103, 105, 110, 45, 116, 111, 112, 58, 32, 48, 95, 95, 113, 101, 109, 59,
-    32, 125, 32, 108, 97, 98, 101, 108, 32, 123, 32, 99, 117, 114, 115, 111,
-    114, 58, 32, 100, 101, 102, 97, 117, 108, 116, 59, 32, 125, 32, 108, 101,
-    103, 101, 110, 100, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32,
-    98, 108, 111, 99, 107, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 112,
-    97, 100, 100, 105, 110, 103, 45, 115, 116, 97, 114, 116, 58, 32, 50, 112,
+    105, 110, 45, 97, 102, 116, 101, 114, 58, 32, 48, 32, 125, 32, 102, 111,
+    114, 109, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108,
+    111, 99, 107, 59, 32, 109, 97, 114, 103, 105, 110, 45, 116, 111, 112, 58,
+    32, 48, 95, 95, 113, 101, 109, 59, 32, 125, 32, 108, 97, 98, 101, 108,
+    32, 123, 32, 99, 117, 114, 115, 111, 114, 58, 32, 100, 101, 102, 97, 117,
+    108, 116, 59, 32, 125, 32, 108, 101, 103, 101, 110, 100, 32, 123, 32, 100,
+    105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 45,
+    119, 101, 98, 107, 105, 116, 45, 112, 97, 100, 100, 105, 110, 103, 45, 115,
+    116, 97, 114, 116, 58, 32, 50, 112, 120, 59, 32, 45, 119, 101, 98, 107,
+    105, 116, 45, 112, 97, 100, 100, 105, 110, 103, 45, 101, 110, 100, 58, 32,
+    50, 112, 120, 59, 32, 98, 111, 114, 100, 101, 114, 58, 32, 110, 111, 110,
+    101, 32, 125, 32, 102, 105, 101, 108, 100, 115, 101, 116, 32, 123, 32, 100,
+    105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 45,
+    119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110, 45, 115, 116,
+    97, 114, 116, 58, 32, 50, 112, 120, 59, 32, 45, 119, 101, 98, 107, 105,
+    116, 45, 109, 97, 114, 103, 105, 110, 45, 101, 110, 100, 58, 32, 50, 112,
     120, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 112, 97, 100, 100, 105,
-    110, 103, 45, 101, 110, 100, 58, 32, 50, 112, 120, 59, 32, 98, 111, 114,
-    100, 101, 114, 58, 32, 110, 111, 110, 101, 32, 125, 32, 102, 105, 101, 108,
-    100, 115, 101, 116, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32,
-    98, 108, 111, 99, 107, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109,
-    97, 114, 103, 105, 110, 45, 115, 116, 97, 114, 116, 58, 32, 50, 112, 120,
-    59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 109, 97, 114, 103, 105, 110,
-    45, 101, 110, 100, 58, 32, 50, 112, 120, 59, 32, 45, 119, 101, 98, 107,
-    105, 116, 45, 112, 97, 100, 100, 105, 110, 103, 45, 98, 101, 102, 111, 114,
-    101, 58, 32, 48, 46, 51, 53, 101, 109, 59, 32, 45, 119, 101, 98, 107,
-    105, 116, 45, 112, 97, 100, 100, 105, 110, 103, 45, 115, 116, 97, 114, 116,
-    58, 32, 48, 46, 55, 53, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105,
-    116, 45, 112, 97, 100, 100, 105, 110, 103, 45, 101, 110, 100, 58, 32, 48,
-    46, 55, 53, 101, 109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 112,
-    97, 100, 100, 105, 110, 103, 45, 97, 102, 116, 101, 114, 58, 32, 48, 46,
-    54, 50, 53, 101, 109, 59, 32, 98, 111, 114, 100, 101, 114, 58, 32, 50,
-    112, 120, 32, 103, 114, 111, 111, 118, 101, 32, 84, 104, 114, 101, 101, 68,
-    70, 97, 99, 101, 32, 125, 32, 98, 117, 116, 116, 111, 110, 32, 123, 32,
+    110, 103, 45, 98, 101, 102, 111, 114, 101, 58, 32, 48, 46, 51, 53, 101,
+    109, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 112, 97, 100, 100, 105,
+    110, 103, 45, 115, 116, 97, 114, 116, 58, 32, 48, 46, 55, 53, 101, 109,
+    59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 112, 97, 100, 100, 105, 110,
+    103, 45, 101, 110, 100, 58, 32, 48, 46, 55, 53, 101, 109, 59, 32, 45,
+    119, 101, 98, 107, 105, 116, 45, 112, 97, 100, 100, 105, 110, 103, 45, 97,
+    102, 116, 101, 114, 58, 32, 48, 46, 54, 50, 53, 101, 109, 59, 32, 98,
+    111, 114, 100, 101, 114, 58, 32, 50, 112, 120, 32, 103, 114, 111, 111, 118,
+    101, 32, 84, 104, 114, 101, 101, 68, 70, 97, 99, 101, 32, 125, 32, 98,
+    117, 116, 116, 111, 110, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45,
+    97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 98, 117, 116, 116,
+    111, 110, 59, 32, 125, 32, 105, 110, 112, 117, 116, 44, 32, 116, 101, 120,
+    116, 97, 114, 101, 97, 44, 32, 107, 101, 121, 103, 101, 110, 44, 32, 115,
+    101, 108, 101, 99, 116, 44, 32, 98, 117, 116, 116, 111, 110, 44, 32, 105,
+    115, 105, 110, 100, 101, 120, 44, 32, 109, 101, 116, 101, 114, 44, 32, 112,
+    114, 111, 103, 114, 101, 115, 115, 32, 123, 32, 45, 119, 101, 98, 107, 105,
+    116, 45, 98, 108, 111, 99, 107, 45, 102, 108, 111, 119, 58, 32, 116, 98,
+    32, 33, 105, 109, 112, 111, 114, 116, 97, 110, 116, 59, 32, 125, 32, 105,
+    110, 112, 117, 116, 44, 32, 116, 101, 120, 116, 97, 114, 101, 97, 44, 32,
+    107, 101, 121, 103, 101, 110, 44, 32, 115, 101, 108, 101, 99, 116, 44, 32,
+    98, 117, 116, 116, 111, 110, 44, 32, 105, 115, 105, 110, 100, 101, 120, 32,
+    123, 32, 109, 97, 114, 103, 105, 110, 58, 32, 48, 95, 95, 113, 101, 109,
+    59, 32, 102, 111, 110, 116, 58, 32, 45, 119, 101, 98, 107, 105, 116, 45,
+    115, 109, 97, 108, 108, 45, 99, 111, 110, 116, 114, 111, 108, 59, 32, 99,
+    111, 108, 111, 114, 58, 32, 105, 110, 105, 116, 105, 97, 108, 59, 32, 108,
+    101, 116, 116, 101, 114, 45, 115, 112, 97, 99, 105, 110, 103, 58, 32, 110,
+    111, 114, 109, 97, 108, 59, 32, 119, 111, 114, 100, 45, 115, 112, 97, 99,
+    105, 110, 103, 58, 32, 110, 111, 114, 109, 97, 108, 59, 32, 108, 105, 110,
+    101, 45, 104, 101, 105, 103, 104, 116, 58, 32, 110, 111, 114, 109, 97, 108,
+    59, 32, 116, 101, 120, 116, 45, 116, 114, 97, 110, 115, 102, 111, 114, 109,
+    58, 32, 110, 111, 110, 101, 59, 32, 116, 101, 120, 116, 45, 105, 110, 100,
+    101, 110, 116, 58, 32, 48, 59, 32, 116, 101, 120, 116, 45, 115, 104, 97,
+    100, 111, 119, 58, 32, 110, 111, 110, 101, 59, 32, 100, 105, 115, 112, 108,
+    97, 121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111, 99, 107,
+    59, 32, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 32, 45, 119,
+    101, 98, 107, 105, 116, 45, 97, 117, 116, 111, 59, 32, 125, 32, 105, 110,
+    112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 104, 105, 100, 100, 101, 110,
+    34, 93, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 110, 111,
+    110, 101, 32, 125, 32, 105, 110, 112, 117, 116, 44, 32, 105, 110, 112, 117,
+    116, 91, 116, 121, 112, 101, 61, 34, 112, 97, 115, 115, 119, 111, 114, 100,
+    34, 93, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34,
+    115, 101, 97, 114, 99, 104, 34, 93, 44, 32, 105, 115, 105, 110, 100, 101,
+    120, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112, 101,
+    97, 114, 97, 110, 99, 101, 58, 32, 116, 101, 120, 116, 102, 105, 101, 108,
+    100, 59, 32, 112, 97, 100, 100, 105, 110, 103, 58, 32, 49, 112, 120, 59,
+    32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 45, 99, 111, 108, 111,
+    114, 58, 32, 119, 104, 105, 116, 101, 59, 32, 98, 111, 114, 100, 101, 114,
+    58, 32, 50, 112, 120, 32, 105, 110, 115, 101, 116, 59, 32, 45, 119, 101,
+    98, 107, 105, 116, 45, 114, 116, 108, 45, 111, 114, 100, 101, 114, 105, 110,
+    103, 58, 32, 108, 111, 103, 105, 99, 97, 108, 59, 32, 45, 119, 101, 98,
+    107, 105, 116, 45, 117, 115, 101, 114, 45, 115, 101, 108, 101, 99, 116, 58,
+    32, 116, 101, 120, 116, 59, 32, 99, 117, 114, 115, 111, 114, 58, 32, 97,
+    117, 116, 111, 59, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112,
+    101, 61, 34, 115, 101, 97, 114, 99, 104, 34, 93, 32, 123, 32, 45, 119,
+    101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101,
+    58, 32, 115, 101, 97, 114, 99, 104, 102, 105, 101, 108, 100, 59, 32, 45,
+    119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45, 115, 105, 122, 105, 110,
+    103, 58, 32, 98, 111, 114, 100, 101, 114, 45, 98, 111, 120, 59, 32, 125,
+    32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 115, 101, 97,
+    114, 99, 104, 34, 93, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 115,
+    101, 97, 114, 99, 104, 45, 99, 97, 110, 99, 101, 108, 45, 98, 117, 116,
+    116, 111, 110, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112,
+    112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 115, 101, 97, 114, 99, 104,
+    102, 105, 101, 108, 100, 45, 99, 97, 110, 99, 101, 108, 45, 98, 117, 116,
+    116, 111, 110, 59, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110,
+    108, 105, 110, 101, 45, 98, 108, 111, 99, 107, 59, 32, 125, 32, 105, 110,
+    112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 115, 101, 97, 114, 99, 104,
+    34, 93, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 115, 101, 97, 114,
+    99, 104, 45, 100, 101, 99, 111, 114, 97, 116, 105, 111, 110, 32, 123, 32,
     45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110,
-    99, 101, 58, 32, 98, 117, 116, 116, 111, 110, 59, 32, 125, 32, 105, 110,
-    112, 117, 116, 44, 32, 116, 101, 120, 116, 97, 114, 101, 97, 44, 32, 107,
-    101, 121, 103, 101, 110, 44, 32, 115, 101, 108, 101, 99, 116, 44, 32, 98,
-    117, 116, 116, 111, 110, 44, 32, 105, 115, 105, 110, 100, 101, 120, 44, 32,
-    109, 101, 116, 101, 114, 44, 32, 112, 114, 111, 103, 114, 101, 115, 115, 32,
-    123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 108, 111, 99, 107, 45,
-    102, 108, 111, 119, 58, 32, 116, 98, 32, 33, 105, 109, 112, 111, 114, 116,
-    97, 110, 116, 59, 32, 125, 32, 105, 110, 112, 117, 116, 44, 32, 116, 101,
-    120, 116, 97, 114, 101, 97, 44, 32, 107, 101, 121, 103, 101, 110, 44, 32,
-    115, 101, 108, 101, 99, 116, 44, 32, 98, 117, 116, 116, 111, 110, 44, 32,
-    105, 115, 105, 110, 100, 101, 120, 32, 123, 32, 109, 97, 114, 103, 105, 110,
-    58, 32, 48, 95, 95, 113, 101, 109, 59, 32, 102, 111, 110, 116, 58, 32,
-    45, 119, 101, 98, 107, 105, 116, 45, 115, 109, 97, 108, 108, 45, 99, 111,
-    110, 116, 114, 111, 108, 59, 32, 99, 111, 108, 111, 114, 58, 32, 105, 110,
-    105, 116, 105, 97, 108, 59, 32, 108, 101, 116, 116, 101, 114, 45, 115, 112,
-    97, 99, 105, 110, 103, 58, 32, 110, 111, 114, 109, 97, 108, 59, 32, 119,
-    111, 114, 100, 45, 115, 112, 97, 99, 105, 110, 103, 58, 32, 110, 111, 114,
-    109, 97, 108, 59, 32, 108, 105, 110, 101, 45, 104, 101, 105, 103, 104, 116,
-    58, 32, 110, 111, 114, 109, 97, 108, 59, 32, 116, 101, 120, 116, 45, 116,
-    114, 97, 110, 115, 102, 111, 114, 109, 58, 32, 110, 111, 110, 101, 59, 32,
-    116, 101, 120, 116, 45, 105, 110, 100, 101, 110, 116, 58, 32, 48, 59, 32,
-    116, 101, 120, 116, 45, 115, 104, 97, 100, 111, 119, 58, 32, 110, 111, 110,
-    101, 59, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105,
-    110, 101, 45, 98, 108, 111, 99, 107, 59, 32, 116, 101, 120, 116, 45, 97,
-    108, 105, 103, 110, 58, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 117,
-    116, 111, 59, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101,
-    61, 34, 104, 105, 100, 100, 101, 110, 34, 93, 32, 123, 32, 100, 105, 115,
-    112, 108, 97, 121, 58, 32, 110, 111, 110, 101, 32, 125, 32, 105, 110, 112,
-    117, 116, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34,
-    112, 97, 115, 115, 119, 111, 114, 100, 34, 93, 44, 32, 105, 110, 112, 117,
+    99, 101, 58, 32, 115, 101, 97, 114, 99, 104, 102, 105, 101, 108, 100, 45,
+    100, 101, 99, 111, 114, 97, 116, 105, 111, 110, 59, 32, 100, 105, 115, 112,
+    108, 97, 121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111, 99,
+    107, 59, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61,
+    34, 115, 101, 97, 114, 99, 104, 34, 93, 58, 58, 45, 119, 101, 98, 107,
+    105, 116, 45, 115, 101, 97, 114, 99, 104, 45, 114, 101, 115, 117, 108, 116,
+    115, 45, 100, 101, 99, 111, 114, 97, 116, 105, 111, 110, 32, 123, 32, 45,
+    119, 101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99,
+    101, 58, 32, 115, 101, 97, 114, 99, 104, 102, 105, 101, 108, 100, 45, 114,
+    101, 115, 117, 108, 116, 115, 45, 100, 101, 99, 111, 114, 97, 116, 105, 111,
+    110, 59, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105,
+    110, 101, 45, 98, 108, 111, 99, 107, 59, 32, 125, 32, 105, 110, 112, 117,
     116, 91, 116, 121, 112, 101, 61, 34, 115, 101, 97, 114, 99, 104, 34, 93,
-    44, 32, 105, 115, 105, 110, 100, 101, 120, 32, 123, 32, 45, 119, 101, 98,
-    107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32,
-    116, 101, 120, 116, 102, 105, 101, 108, 100, 59, 32, 112, 97, 100, 100, 105,
-    110, 103, 58, 32, 49, 112, 120, 59, 32, 98, 97, 99, 107, 103, 114, 111,
-    117, 110, 100, 45, 99, 111, 108, 111, 114, 58, 32, 119, 104, 105, 116, 101,
-    59, 32, 98, 111, 114, 100, 101, 114, 58, 32, 50, 112, 120, 32, 105, 110,
-    115, 101, 116, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 114, 116, 108,
-    45, 111, 114, 100, 101, 114, 105, 110, 103, 58, 32, 108, 111, 103, 105, 99,
-    97, 108, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 117, 115, 101, 114,
-    45, 115, 101, 108, 101, 99, 116, 58, 32, 116, 101, 120, 116, 59, 32, 99,
-    117, 114, 115, 111, 114, 58, 32, 97, 117, 116, 111, 59, 32, 125, 32, 105,
-    110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 115, 101, 97, 114, 99,
-    104, 34, 93, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112,
-    112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 115, 101, 97, 114, 99, 104,
-    102, 105, 101, 108, 100, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98,
-    111, 120, 45, 115, 105, 122, 105, 110, 103, 58, 32, 98, 111, 114, 100, 101,
-    114, 45, 98, 111, 120, 59, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116,
-    121, 112, 101, 61, 34, 115, 101, 97, 114, 99, 104, 34, 93, 58, 58, 45,
-    119, 101, 98, 107, 105, 116, 45, 115, 101, 97, 114, 99, 104, 45, 99, 97,
-    110, 99, 101, 108, 45, 98, 117, 116, 116, 111, 110, 32, 123, 32, 45, 119,
+    58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 115, 101, 97, 114, 99, 104,
+    45, 114, 101, 115, 117, 108, 116, 115, 45, 98, 117, 116, 116, 111, 110, 32,
+    123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114,
+    97, 110, 99, 101, 58, 32, 115, 101, 97, 114, 99, 104, 102, 105, 101, 108,
+    100, 45, 114, 101, 115, 117, 108, 116, 115, 45, 98, 117, 116, 116, 111, 110,
+    59, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105, 110,
+    101, 45, 98, 108, 111, 99, 107, 59, 32, 125, 32, 105, 110, 112, 117, 116,
+    58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 105, 110, 112, 117, 116, 45,
+    108, 105, 115, 116, 45, 98, 117, 116, 116, 111, 110, 32, 123, 32, 45, 119,
     101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101,
-    58, 32, 115, 101, 97, 114, 99, 104, 102, 105, 101, 108, 100, 45, 99, 97,
-    110, 99, 101, 108, 45, 98, 117, 116, 116, 111, 110, 59, 32, 100, 105, 115,
-    112, 108, 97, 121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111,
-    99, 107, 59, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101,
-    61, 34, 115, 101, 97, 114, 99, 104, 34, 93, 58, 58, 45, 119, 101, 98,
-    107, 105, 116, 45, 115, 101, 97, 114, 99, 104, 45, 100, 101, 99, 111, 114,
-    97, 116, 105, 111, 110, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45,
-    97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 115, 101, 97, 114,
-    99, 104, 102, 105, 101, 108, 100, 45, 100, 101, 99, 111, 114, 97, 116, 105,
-    111, 110, 59, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108,
-    105, 110, 101, 45, 98, 108, 111, 99, 107, 59, 32, 125, 32, 105, 110, 112,
-    117, 116, 91, 116, 121, 112, 101, 61, 34, 115, 101, 97, 114, 99, 104, 34,
-    93, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 115, 101, 97, 114, 99,
-    104, 45, 114, 101, 115, 117, 108, 116, 115, 45, 100, 101, 99, 111, 114, 97,
-    116, 105, 111, 110, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97,
-    112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 115, 101, 97, 114, 99,
-    104, 102, 105, 101, 108, 100, 45, 114, 101, 115, 117, 108, 116, 115, 45, 100,
-    101, 99, 111, 114, 97, 116, 105, 111, 110, 59, 32, 100, 105, 115, 112, 108,
-    97, 121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111, 99, 107,
-    59, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34,
-    115, 101, 97, 114, 99, 104, 34, 93, 58, 58, 45, 119, 101, 98, 107, 105,
-    116, 45, 115, 101, 97, 114, 99, 104, 45, 114, 101, 115, 117, 108, 116, 115,
-    45, 98, 117, 116, 116, 111, 110, 32, 123, 32, 45, 119, 101, 98, 107, 105,
-    116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 115, 101,
-    97, 114, 99, 104, 102, 105, 101, 108, 100, 45, 114, 101, 115, 117, 108, 116,
-    115, 45, 98, 117, 116, 116, 111, 110, 59, 32, 100, 105, 115, 112, 108, 97,
-    121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111, 99, 107, 59,
-    32, 125, 32, 105, 110, 112, 117, 116, 58, 58, 45, 119, 101, 98, 107, 105,
-    116, 45, 105, 110, 112, 117, 116, 45, 108, 105, 115, 116, 45, 98, 117, 116,
-    116, 111, 110, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112,
-    112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 108, 105, 115, 116, 45, 98,
-    117, 116, 116, 111, 110, 59, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32,
-    105, 110, 108, 105, 110, 101, 45, 98, 108, 111, 99, 107, 59, 32, 125, 32,
-    105, 110, 112, 117, 116, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 105,
+    58, 32, 108, 105, 115, 116, 45, 98, 117, 116, 116, 111, 110, 59, 32, 100,
+    105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98,
+    108, 111, 99, 107, 59, 32, 125, 32, 105, 110, 112, 117, 116, 58, 58, 45,
+    119, 101, 98, 107, 105, 116, 45, 105, 110, 110, 101, 114, 45, 115, 112, 105,
+    110, 45, 98, 117, 116, 116, 111, 110, 32, 123, 32, 45, 119, 101, 98, 107,
+    105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 105,
     110, 110, 101, 114, 45, 115, 112, 105, 110, 45, 98, 117, 116, 116, 111, 110,
-    32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97,
-    114, 97, 110, 99, 101, 58, 32, 105, 110, 110, 101, 114, 45, 115, 112, 105,
-    110, 45, 98, 117, 116, 116, 111, 110, 59, 32, 100, 105, 115, 112, 108, 97,
-    121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111, 99, 107, 59,
-    32, 112, 111, 115, 105, 116, 105, 111, 110, 58, 32, 114, 101, 108, 97, 116,
-    105, 118, 101, 59, 32, 99, 117, 114, 115, 111, 114, 58, 32, 100, 101, 102,
-    97, 117, 108, 116, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 117, 115,
-    101, 114, 45, 115, 101, 108, 101, 99, 116, 58, 32, 110, 111, 110, 101, 59,
-    32, 125, 32, 105, 110, 112, 117, 116, 58, 58, 45, 119, 101, 98, 107, 105,
-    116, 45, 111, 117, 116, 101, 114, 45, 115, 112, 105, 110, 45, 98, 117, 116,
-    116, 111, 110, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112,
-    112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 111, 117, 116, 101, 114, 45,
-    115, 112, 105, 110, 45, 98, 117, 116, 116, 111, 110, 59, 32, 100, 105, 115,
-    112, 108, 97, 121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111,
-    99, 107, 59, 32, 112, 111, 115, 105, 116, 105, 111, 110, 58, 32, 114, 101,
-    108, 97, 116, 105, 118, 101, 59, 32, 99, 117, 114, 115, 111, 114, 58, 32,
-    100, 101, 102, 97, 117, 108, 116, 59, 32, 109, 97, 114, 103, 105, 110, 45,
-    108, 101, 102, 116, 58, 32, 50, 112, 120, 59, 32, 45, 119, 101, 98, 107,
-    105, 116, 45, 117, 115, 101, 114, 45, 115, 101, 108, 101, 99, 116, 58, 32,
-    110, 111, 110, 101, 59, 32, 125, 32, 105, 110, 112, 117, 116, 58, 58, 45,
-    119, 101, 98, 107, 105, 116, 45, 105, 110, 112, 117, 116, 45, 115, 112, 101,
-    101, 99, 104, 45, 98, 117, 116, 116, 111, 110, 32, 123, 32, 45, 119, 101,
-    98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58,
-    32, 45, 119, 101, 98, 107, 105, 116, 45, 105, 110, 112, 117, 116, 45, 115,
-    112, 101, 101, 99, 104, 45, 98, 117, 116, 116, 111, 110, 59, 32, 100, 105,
-    115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108,
-    111, 99, 107, 59, 32, 125, 32, 107, 101, 121, 103, 101, 110, 44, 32, 115,
-    101, 108, 101, 99, 116, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45,
-    98, 111, 114, 100, 101, 114, 45, 114, 97, 100, 105, 117, 115, 58, 32, 53,
-    112, 120, 59, 32, 125, 32, 107, 101, 121, 103, 101, 110, 58, 58, 45, 119,
-    101, 98, 107, 105, 116, 45, 107, 101, 121, 103, 101, 110, 45, 115, 101, 108,
-    101, 99, 116, 32, 123, 32, 109, 97, 114, 103, 105, 110, 58, 32, 48, 112,
-    120, 59, 32, 125, 32, 116, 101, 120, 116, 97, 114, 101, 97, 32, 123, 32,
-    45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110,
-    99, 101, 58, 32, 116, 101, 120, 116, 97, 114, 101, 97, 59, 32, 98, 97,
-    99, 107, 103, 114, 111, 117, 110, 100, 45, 99, 111, 108, 111, 114, 58, 32,
-    119, 104, 105, 116, 101, 59, 32, 98, 111, 114, 100, 101, 114, 58, 32, 49,
-    112, 120, 32, 115, 111, 108, 105, 100, 59, 32, 45, 119, 101, 98, 107, 105,
-    116, 45, 114, 116, 108, 45, 111, 114, 100, 101, 114, 105, 110, 103, 58, 32,
-    108, 111, 103, 105, 99, 97, 108, 59, 32, 45, 119, 101, 98, 107, 105, 116,
-    45, 117, 115, 101, 114, 45, 115, 101, 108, 101, 99, 116, 58, 32, 116, 101,
-    120, 116, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45,
-    111, 114, 105, 101, 110, 116, 58, 32, 118, 101, 114, 116, 105, 99, 97, 108,
-    59, 32, 114, 101, 115, 105, 122, 101, 58, 32, 97, 117, 116, 111, 59, 32,
-    99, 117, 114, 115, 111, 114, 58, 32, 97, 117, 116, 111, 59, 32, 112, 97,
-    100, 100, 105, 110, 103, 58, 32, 50, 112, 120, 59, 32, 119, 104, 105, 116,
-    101, 45, 115, 112, 97, 99, 101, 58, 32, 112, 114, 101, 45, 119, 114, 97,
-    112, 59, 32, 119, 111, 114, 100, 45, 119, 114, 97, 112, 58, 32, 98, 114,
-    101, 97, 107, 45, 119, 111, 114, 100, 59, 32, 125, 32, 105, 110, 112, 117,
-    116, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 105, 110, 112, 117, 116,
-    45, 112, 108, 97, 99, 101, 104, 111, 108, 100, 101, 114, 44, 32, 105, 115,
-    105, 110, 100, 101, 120, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 105,
-    110, 112, 117, 116, 45, 112, 108, 97, 99, 101, 104, 111, 108, 100, 101, 114,
-    44, 32, 116, 101, 120, 116, 97, 114, 101, 97, 58, 58, 45, 119, 101, 98,
-    107, 105, 116, 45, 105, 110, 112, 117, 116, 45, 112, 108, 97, 99, 101, 104,
-    111, 108, 100, 101, 114, 32, 123, 32, 99, 111, 108, 111, 114, 58, 32, 100,
-    97, 114, 107, 71, 114, 97, 121, 59, 32, 125, 32, 105, 110, 112, 117, 116,
-    91, 116, 121, 112, 101, 61, 34, 112, 97, 115, 115, 119, 111, 114, 100, 34,
-    93, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 116, 101, 120, 116,
-    45, 115, 101, 99, 117, 114, 105, 116, 121, 58, 32, 100, 105, 115, 99, 32,
-    33, 105, 109, 112, 111, 114, 116, 97, 110, 116, 59, 32, 125, 32, 105, 110,
-    112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 104, 105, 100, 100, 101, 110,
-    34, 93, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34,
-    105, 109, 97, 103, 101, 34, 93, 44, 32, 105, 110, 112, 117, 116, 91, 116,
-    121, 112, 101, 61, 34, 102, 105, 108, 101, 34, 93, 32, 123, 32, 45, 119,
+    59, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105, 110,
+    101, 45, 98, 108, 111, 99, 107, 59, 32, 112, 111, 115, 105, 116, 105, 111,
+    110, 58, 32, 114, 101, 108, 97, 116, 105, 118, 101, 59, 32, 99, 117, 114,
+    115, 111, 114, 58, 32, 100, 101, 102, 97, 117, 108, 116, 59, 32, 45, 119,
+    101, 98, 107, 105, 116, 45, 117, 115, 101, 114, 45, 115, 101, 108, 101, 99,
+    116, 58, 32, 110, 111, 110, 101, 59, 32, 125, 32, 105, 110, 112, 117, 116,
+    58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 111, 117, 116, 101, 114, 45,
+    115, 112, 105, 110, 45, 98, 117, 116, 116, 111, 110, 32, 123, 32, 45, 119,
     101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101,
-    58, 32, 105, 110, 105, 116, 105, 97, 108, 59, 32, 112, 97, 100, 100, 105,
-    110, 103, 58, 32, 105, 110, 105, 116, 105, 97, 108, 59, 32, 98, 97, 99,
-    107, 103, 114, 111, 117, 110, 100, 45, 99, 111, 108, 111, 114, 58, 32, 105,
-    110, 105, 116, 105, 97, 108, 59, 32, 98, 111, 114, 100, 101, 114, 58, 32,
-    105, 110, 105, 116, 105, 97, 108, 59, 32, 125, 32, 105, 110, 112, 117, 116,
-    91, 116, 121, 112, 101, 61, 34, 102, 105, 108, 101, 34, 93, 32, 123, 32,
-    45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45, 97, 108, 105, 103,
-    110, 58, 32, 98, 97, 115, 101, 108, 105, 110, 101, 59, 32, 116, 101, 120,
-    116, 45, 97, 108, 105, 103, 110, 58, 32, 115, 116, 97, 114, 116, 32, 33,
-    105, 109, 112, 111, 114, 116, 97, 110, 116, 59, 32, 125, 32, 105, 110, 112,
-    117, 116, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97, 117, 116, 111, 102,
-    105, 108, 108, 32, 123, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100,
-    45, 99, 111, 108, 111, 114, 58, 32, 35, 70, 65, 70, 70, 66, 68, 32,
-    33, 105, 109, 112, 111, 114, 116, 97, 110, 116, 59, 32, 98, 97, 99, 107,
-    103, 114, 111, 117, 110, 100, 45, 105, 109, 97, 103, 101, 58, 110, 111, 110,
-    101, 32, 33, 105, 109, 112, 111, 114, 116, 97, 110, 116, 59, 32, 99, 111,
-    108, 111, 114, 58, 32, 35, 48, 48, 48, 48, 48, 48, 32, 33, 105, 109,
-    112, 111, 114, 116, 97, 110, 116, 59, 32, 125, 32, 105, 110, 112, 117, 116,
-    91, 116, 121, 112, 101, 61, 34, 114, 97, 100, 105, 111, 34, 93, 44, 32,
-    105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 99, 104, 101, 99,
-    107, 98, 111, 120, 34, 93, 32, 123, 32, 109, 97, 114, 103, 105, 110, 58,
-    32, 51, 112, 120, 32, 48, 46, 53, 101, 120, 59, 32, 112, 97, 100, 100,
-    105, 110, 103, 58, 32, 105, 110, 105, 116, 105, 97, 108, 59, 32, 98, 97,
+    58, 32, 111, 117, 116, 101, 114, 45, 115, 112, 105, 110, 45, 98, 117, 116,
+    116, 111, 110, 59, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110,
+    108, 105, 110, 101, 45, 98, 108, 111, 99, 107, 59, 32, 112, 111, 115, 105,
+    116, 105, 111, 110, 58, 32, 114, 101, 108, 97, 116, 105, 118, 101, 59, 32,
+    99, 117, 114, 115, 111, 114, 58, 32, 100, 101, 102, 97, 117, 108, 116, 59,
+    32, 109, 97, 114, 103, 105, 110, 45, 108, 101, 102, 116, 58, 32, 50, 112,
+    120, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 117, 115, 101, 114, 45,
+    115, 101, 108, 101, 99, 116, 58, 32, 110, 111, 110, 101, 59, 32, 125, 32,
+    105, 110, 112, 117, 116, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 105,
+    110, 112, 117, 116, 45, 115, 112, 101, 101, 99, 104, 45, 98, 117, 116, 116,
+    111, 110, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112,
+    101, 97, 114, 97, 110, 99, 101, 58, 32, 45, 119, 101, 98, 107, 105, 116,
+    45, 105, 110, 112, 117, 116, 45, 115, 112, 101, 101, 99, 104, 45, 98, 117,
+    116, 116, 111, 110, 59, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105,
+    110, 108, 105, 110, 101, 45, 98, 108, 111, 99, 107, 59, 32, 125, 32, 107,
+    101, 121, 103, 101, 110, 44, 32, 115, 101, 108, 101, 99, 116, 32, 123, 32,
+    45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 114, 100, 101, 114, 45, 114,
+    97, 100, 105, 117, 115, 58, 32, 53, 112, 120, 59, 32, 125, 32, 107, 101,
+    121, 103, 101, 110, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 107, 101,
+    121, 103, 101, 110, 45, 115, 101, 108, 101, 99, 116, 32, 123, 32, 109, 97,
+    114, 103, 105, 110, 58, 32, 48, 112, 120, 59, 32, 125, 32, 116, 101, 120,
+    116, 97, 114, 101, 97, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45,
+    97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 116, 101, 120, 116,
+    97, 114, 101, 97, 59, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100,
+    45, 99, 111, 108, 111, 114, 58, 32, 119, 104, 105, 116, 101, 59, 32, 98,
+    111, 114, 100, 101, 114, 58, 32, 49, 112, 120, 32, 115, 111, 108, 105, 100,
+    59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 114, 116, 108, 45, 111, 114,
+    100, 101, 114, 105, 110, 103, 58, 32, 108, 111, 103, 105, 99, 97, 108, 59,
+    32, 45, 119, 101, 98, 107, 105, 116, 45, 117, 115, 101, 114, 45, 115, 101,
+    108, 101, 99, 116, 58, 32, 116, 101, 120, 116, 59, 32, 45, 119, 101, 98,
+    107, 105, 116, 45, 98, 111, 120, 45, 111, 114, 105, 101, 110, 116, 58, 32,
+    118, 101, 114, 116, 105, 99, 97, 108, 59, 32, 114, 101, 115, 105, 122, 101,
+    58, 32, 97, 117, 116, 111, 59, 32, 99, 117, 114, 115, 111, 114, 58, 32,
+    97, 117, 116, 111, 59, 32, 112, 97, 100, 100, 105, 110, 103, 58, 32, 50,
+    112, 120, 59, 32, 119, 104, 105, 116, 101, 45, 115, 112, 97, 99, 101, 58,
+    32, 112, 114, 101, 45, 119, 114, 97, 112, 59, 32, 119, 111, 114, 100, 45,
+    119, 114, 97, 112, 58, 32, 98, 114, 101, 97, 107, 45, 119, 111, 114, 100,
+    59, 32, 125, 32, 105, 110, 112, 117, 116, 58, 58, 45, 119, 101, 98, 107,
+    105, 116, 45, 105, 110, 112, 117, 116, 45, 112, 108, 97, 99, 101, 104, 111,
+    108, 100, 101, 114, 44, 32, 105, 115, 105, 110, 100, 101, 120, 58, 58, 45,
+    119, 101, 98, 107, 105, 116, 45, 105, 110, 112, 117, 116, 45, 112, 108, 97,
+    99, 101, 104, 111, 108, 100, 101, 114, 44, 32, 116, 101, 120, 116, 97, 114,
+    101, 97, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 105, 110, 112, 117,
+    116, 45, 112, 108, 97, 99, 101, 104, 111, 108, 100, 101, 114, 32, 123, 32,
+    99, 111, 108, 111, 114, 58, 32, 100, 97, 114, 107, 71, 114, 97, 121, 59,
+    32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 112,
+    97, 115, 115, 119, 111, 114, 100, 34, 93, 32, 123, 32, 45, 119, 101, 98,
+    107, 105, 116, 45, 116, 101, 120, 116, 45, 115, 101, 99, 117, 114, 105, 116,
+    121, 58, 32, 100, 105, 115, 99, 32, 33, 105, 109, 112, 111, 114, 116, 97,
+    110, 116, 59, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101,
+    61, 34, 104, 105, 100, 100, 101, 110, 34, 93, 44, 32, 105, 110, 112, 117,
+    116, 91, 116, 121, 112, 101, 61, 34, 105, 109, 97, 103, 101, 34, 93, 44,
+    32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 102, 105, 108,
+    101, 34, 93, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112,
+    112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 105, 110, 105, 116, 105, 97,
+    108, 59, 32, 112, 97, 100, 100, 105, 110, 103, 58, 32, 105, 110, 105, 116,
+    105, 97, 108, 59, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 45,
+    99, 111, 108, 111, 114, 58, 32, 105, 110, 105, 116, 105, 97, 108, 59, 32,
+    98, 111, 114, 100, 101, 114, 58, 32, 105, 110, 105, 116, 105, 97, 108, 59,
+    32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 102,
+    105, 108, 101, 34, 93, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45,
+    98, 111, 120, 45, 97, 108, 105, 103, 110, 58, 32, 98, 97, 115, 101, 108,
+    105, 110, 101, 59, 32, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58,
+    32, 115, 116, 97, 114, 116, 32, 33, 105, 109, 112, 111, 114, 116, 97, 110,
+    116, 59, 32, 125, 32, 105, 110, 112, 117, 116, 58, 45, 119, 101, 98, 107,
+    105, 116, 45, 97, 117, 116, 111, 102, 105, 108, 108, 32, 123, 32, 98, 97,
     99, 107, 103, 114, 111, 117, 110, 100, 45, 99, 111, 108, 111, 114, 58, 32,
-    105, 110, 105, 116, 105, 97, 108, 59, 32, 98, 111, 114, 100, 101, 114, 58,
-    32, 105, 110, 105, 116, 105, 97, 108, 59, 32, 125, 32, 105, 110, 112, 117,
-    116, 91, 116, 121, 112, 101, 61, 34, 98, 117, 116, 116, 111, 110, 34, 93,
-    44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 115, 117,
-    98, 109, 105, 116, 34, 93, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121,
-    112, 101, 61, 34, 114, 101, 115, 101, 116, 34, 93, 44, 32, 105, 110, 112,
+    35, 70, 65, 70, 70, 66, 68, 32, 33, 105, 109, 112, 111, 114, 116, 97,
+    110, 116, 59, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 45, 105,
+    109, 97, 103, 101, 58, 110, 111, 110, 101, 32, 33, 105, 109, 112, 111, 114,
+    116, 97, 110, 116, 59, 32, 99, 111, 108, 111, 114, 58, 32, 35, 48, 48,
+    48, 48, 48, 48, 32, 33, 105, 109, 112, 111, 114, 116, 97, 110, 116, 59,
+    32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 114,
+    97, 100, 105, 111, 34, 93, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121,
+    112, 101, 61, 34, 99, 104, 101, 99, 107, 98, 111, 120, 34, 93, 32, 123,
+    32, 109, 97, 114, 103, 105, 110, 58, 32, 51, 112, 120, 32, 48, 46, 53,
+    101, 120, 59, 32, 112, 97, 100, 100, 105, 110, 103, 58, 32, 105, 110, 105,
+    116, 105, 97, 108, 59, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100,
+    45, 99, 111, 108, 111, 114, 58, 32, 105, 110, 105, 116, 105, 97, 108, 59,
+    32, 98, 111, 114, 100, 101, 114, 58, 32, 105, 110, 105, 116, 105, 97, 108,
+    59, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34,
+    98, 117, 116, 116, 111, 110, 34, 93, 44, 32, 105, 110, 112, 117, 116, 91,
+    116, 121, 112, 101, 61, 34, 115, 117, 98, 109, 105, 116, 34, 93, 44, 32,
+    105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 114, 101, 115, 101,
+    116, 34, 93, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61,
+    34, 102, 105, 108, 101, 34, 93, 58, 58, 45, 119, 101, 98, 107, 105, 116,
+    45, 102, 105, 108, 101, 45, 117, 112, 108, 111, 97, 100, 45, 98, 117, 116,
+    116, 111, 110, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112,
+    112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 112, 117, 115, 104, 45, 98,
+    117, 116, 116, 111, 110, 59, 32, 119, 104, 105, 116, 101, 45, 115, 112, 97,
+    99, 101, 58, 32, 112, 114, 101, 32, 125, 32, 105, 110, 112, 117, 116, 91,
+    116, 121, 112, 101, 61, 34, 98, 117, 116, 116, 111, 110, 34, 93, 44, 32,
+    105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 115, 117, 98, 109,
+    105, 116, 34, 93, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101,
+    61, 34, 114, 101, 115, 101, 116, 34, 93, 44, 32, 105, 110, 112, 117, 116,
+    91, 116, 121, 112, 101, 61, 34, 102, 105, 108, 101, 34, 93, 58, 58, 45,
+    119, 101, 98, 107, 105, 116, 45, 102, 105, 108, 101, 45, 117, 112, 108, 111,
+    97, 100, 45, 98, 117, 116, 116, 111, 110, 44, 32, 98, 117, 116, 116, 111,
+    110, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45,
+    97, 108, 105, 103, 110, 58, 32, 99, 101, 110, 116, 101, 114, 59, 32, 116,
+    101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 32, 99, 101, 110, 116, 101,
+    114, 59, 32, 99, 117, 114, 115, 111, 114, 58, 32, 100, 101, 102, 97, 117,
+    108, 116, 59, 32, 99, 111, 108, 111, 114, 58, 32, 66, 117, 116, 116, 111,
+    110, 84, 101, 120, 116, 59, 32, 112, 97, 100, 100, 105, 110, 103, 58, 32,
+    50, 112, 120, 32, 54, 112, 120, 32, 51, 112, 120, 32, 54, 112, 120, 59,
+    32, 98, 111, 114, 100, 101, 114, 58, 32, 50, 112, 120, 32, 111, 117, 116,
+    115, 101, 116, 32, 66, 117, 116, 116, 111, 110, 70, 97, 99, 101, 59, 32,
+    98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 45, 99, 111, 108, 111, 114,
+    58, 32, 66, 117, 116, 116, 111, 110, 70, 97, 99, 101, 59, 32, 45, 119,
+    101, 98, 107, 105, 116, 45, 98, 111, 120, 45, 115, 105, 122, 105, 110, 103,
+    58, 32, 98, 111, 114, 100, 101, 114, 45, 98, 111, 120, 32, 125, 32, 105,
+    110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 114, 97, 110, 103, 101,
+    34, 93, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112,
+    101, 97, 114, 97, 110, 99, 101, 58, 32, 115, 108, 105, 100, 101, 114, 45,
+    104, 111, 114, 105, 122, 111, 110, 116, 97, 108, 59, 32, 112, 97, 100, 100,
+    105, 110, 103, 58, 32, 105, 110, 105, 116, 105, 97, 108, 59, 32, 98, 111,
+    114, 100, 101, 114, 58, 32, 105, 110, 105, 116, 105, 97, 108, 59, 32, 109,
+    97, 114, 103, 105, 110, 58, 32, 50, 112, 120, 59, 32, 125, 32, 105, 110,
+    112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 114, 97, 110, 103, 101, 34,
+    93, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 115, 108, 105, 100, 101,
+    114, 45, 116, 104, 117, 109, 98, 32, 123, 32, 45, 119, 101, 98, 107, 105,
+    116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 115, 108,
+    105, 100, 101, 114, 116, 104, 117, 109, 98, 45, 104, 111, 114, 105, 122, 111,
+    110, 116, 97, 108, 59, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98,
+    108, 111, 99, 107, 59, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121,
+    112, 101, 61, 34, 98, 117, 116, 116, 111, 110, 34, 93, 58, 100, 105, 115,
+    97, 98, 108, 101, 100, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112,
+    101, 61, 34, 115, 117, 98, 109, 105, 116, 34, 93, 58, 100, 105, 115, 97,
+    98, 108, 101, 100, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101,
+    61, 34, 114, 101, 115, 101, 116, 34, 93, 58, 100, 105, 115, 97, 98, 108,
+    101, 100, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34,
+    102, 105, 108, 101, 34, 93, 58, 100, 105, 115, 97, 98, 108, 101, 100, 58,
+    58, 45, 119, 101, 98, 107, 105, 116, 45, 102, 105, 108, 101, 45, 117, 112,
+    108, 111, 97, 100, 45, 98, 117, 116, 116, 111, 110, 44, 32, 98, 117, 116,
+    116, 111, 110, 58, 100, 105, 115, 97, 98, 108, 101, 100, 44, 32, 115, 101,
+    108, 101, 99, 116, 58, 100, 105, 115, 97, 98, 108, 101, 100, 44, 32, 107,
+    101, 121, 103, 101, 110, 58, 100, 105, 115, 97, 98, 108, 101, 100, 44, 32,
+    111, 112, 116, 103, 114, 111, 117, 112, 58, 100, 105, 115, 97, 98, 108, 101,
+    100, 44, 32, 111, 112, 116, 105, 111, 110, 58, 100, 105, 115, 97, 98, 108,
+    101, 100, 32, 123, 32, 99, 111, 108, 111, 114, 58, 32, 71, 114, 97, 121,
+    84, 101, 120, 116, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112,
+    101, 61, 34, 98, 117, 116, 116, 111, 110, 34, 93, 58, 97, 99, 116, 105,
+    118, 101, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34,
+    115, 117, 98, 109, 105, 116, 34, 93, 58, 97, 99, 116, 105, 118, 101, 44,
+    32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 114, 101, 115,
+    101, 116, 34, 93, 58, 97, 99, 116, 105, 118, 101, 44, 32, 105, 110, 112,
     117, 116, 91, 116, 121, 112, 101, 61, 34, 102, 105, 108, 101, 34, 93, 58,
-    58, 45, 119, 101, 98, 107, 105, 116, 45, 102, 105, 108, 101, 45, 117, 112,
-    108, 111, 97, 100, 45, 98, 117, 116, 116, 111, 110, 32, 123, 32, 45, 119,
+    97, 99, 116, 105, 118, 101, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45,
+    102, 105, 108, 101, 45, 117, 112, 108, 111, 97, 100, 45, 98, 117, 116, 116,
+    111, 110, 44, 32, 98, 117, 116, 116, 111, 110, 58, 97, 99, 116, 105, 118,
+    101, 32, 123, 32, 98, 111, 114, 100, 101, 114, 45, 115, 116, 121, 108, 101,
+    58, 32, 105, 110, 115, 101, 116, 32, 125, 32, 105, 110, 112, 117, 116, 91,
+    116, 121, 112, 101, 61, 34, 98, 117, 116, 116, 111, 110, 34, 93, 58, 97,
+    99, 116, 105, 118, 101, 58, 100, 105, 115, 97, 98, 108, 101, 100, 44, 32,
+    105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 115, 117, 98, 109,
+    105, 116, 34, 93, 58, 97, 99, 116, 105, 118, 101, 58, 100, 105, 115, 97,
+    98, 108, 101, 100, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101,
+    61, 34, 114, 101, 115, 101, 116, 34, 93, 58, 97, 99, 116, 105, 118, 101,
+    58, 100, 105, 115, 97, 98, 108, 101, 100, 44, 32, 105, 110, 112, 117, 116,
+    91, 116, 121, 112, 101, 61, 34, 102, 105, 108, 101, 34, 93, 58, 97, 99,
+    116, 105, 118, 101, 58, 100, 105, 115, 97, 98, 108, 101, 100, 58, 58, 45,
+    119, 101, 98, 107, 105, 116, 45, 102, 105, 108, 101, 45, 117, 112, 108, 111,
+    97, 100, 45, 98, 117, 116, 116, 111, 110, 44, 32, 98, 117, 116, 116, 111,
+    110, 58, 97, 99, 116, 105, 118, 101, 58, 100, 105, 115, 97, 98, 108, 101,
+    100, 32, 123, 32, 98, 111, 114, 100, 101, 114, 45, 115, 116, 121, 108, 101,
+    58, 32, 111, 117, 116, 115, 101, 116, 32, 125, 32, 97, 114, 101, 97, 44,
+    32, 112, 97, 114, 97, 109, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121,
+    58, 32, 110, 111, 110, 101, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116,
+    121, 112, 101, 61, 34, 99, 104, 101, 99, 107, 98, 111, 120, 34, 93, 32,
+    123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114,
+    97, 110, 99, 101, 58, 32, 99, 104, 101, 99, 107, 98, 111, 120, 59, 32,
+    45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45, 115, 105, 122, 105,
+    110, 103, 58, 32, 98, 111, 114, 100, 101, 114, 45, 98, 111, 120, 59, 32,
+    125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 114, 97,
+    100, 105, 111, 34, 93, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45,
+    97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 114, 97, 100, 105,
+    111, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45, 115,
+    105, 122, 105, 110, 103, 58, 32, 98, 111, 114, 100, 101, 114, 45, 98, 111,
+    120, 59, 32, 125, 32, 115, 101, 108, 101, 99, 116, 32, 123, 32, 45, 119,
     101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101,
-    58, 32, 112, 117, 115, 104, 45, 98, 117, 116, 116, 111, 110, 59, 32, 119,
-    104, 105, 116, 101, 45, 115, 112, 97, 99, 101, 58, 32, 112, 114, 101, 32,
-    125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 98, 117,
-    116, 116, 111, 110, 34, 93, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121,
-    112, 101, 61, 34, 115, 117, 98, 109, 105, 116, 34, 93, 44, 32, 105, 110,
-    112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 114, 101, 115, 101, 116, 34,
-    93, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 102,
-    105, 108, 101, 34, 93, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 102,
-    105, 108, 101, 45, 117, 112, 108, 111, 97, 100, 45, 98, 117, 116, 116, 111,
-    110, 44, 32, 98, 117, 116, 116, 111, 110, 32, 123, 32, 45, 119, 101, 98,
+    58, 32, 109, 101, 110, 117, 108, 105, 115, 116, 59, 32, 45, 119, 101, 98,
+    107, 105, 116, 45, 98, 111, 120, 45, 115, 105, 122, 105, 110, 103, 58, 32,
+    98, 111, 114, 100, 101, 114, 45, 98, 111, 120, 59, 32, 45, 119, 101, 98,
     107, 105, 116, 45, 98, 111, 120, 45, 97, 108, 105, 103, 110, 58, 32, 99,
-    101, 110, 116, 101, 114, 59, 32, 116, 101, 120, 116, 45, 97, 108, 105, 103,
-    110, 58, 32, 99, 101, 110, 116, 101, 114, 59, 32, 99, 117, 114, 115, 111,
-    114, 58, 32, 100, 101, 102, 97, 117, 108, 116, 59, 32, 99, 111, 108, 111,
-    114, 58, 32, 66, 117, 116, 116, 111, 110, 84, 101, 120, 116, 59, 32, 112,
-    97, 100, 100, 105, 110, 103, 58, 32, 50, 112, 120, 32, 54, 112, 120, 32,
-    51, 112, 120, 32, 54, 112, 120, 59, 32, 98, 111, 114, 100, 101, 114, 58,
-    32, 50, 112, 120, 32, 111, 117, 116, 115, 101, 116, 32, 66, 117, 116, 116,
-    111, 110, 70, 97, 99, 101, 59, 32, 98, 97, 99, 107, 103, 114, 111, 117,
-    110, 100, 45, 99, 111, 108, 111, 114, 58, 32, 66, 117, 116, 116, 111, 110,
-    70, 97, 99, 101, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111,
-    120, 45, 115, 105, 122, 105, 110, 103, 58, 32, 98, 111, 114, 100, 101, 114,
-    45, 98, 111, 120, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112,
-    101, 61, 34, 114, 97, 110, 103, 101, 34, 93, 32, 123, 32, 45, 119, 101,
-    98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58,
-    32, 115, 108, 105, 100, 101, 114, 45, 104, 111, 114, 105, 122, 111, 110, 116,
-    97, 108, 59, 32, 112, 97, 100, 100, 105, 110, 103, 58, 32, 105, 110, 105,
-    116, 105, 97, 108, 59, 32, 98, 111, 114, 100, 101, 114, 58, 32, 105, 110,
-    105, 116, 105, 97, 108, 59, 32, 109, 97, 114, 103, 105, 110, 58, 32, 50,
-    112, 120, 59, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101,
-    61, 34, 114, 97, 110, 103, 101, 34, 93, 58, 58, 45, 119, 101, 98, 107,
-    105, 116, 45, 115, 108, 105, 100, 101, 114, 45, 116, 104, 117, 109, 98, 32,
-    123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114,
-    97, 110, 99, 101, 58, 32, 115, 108, 105, 100, 101, 114, 116, 104, 117, 109,
-    98, 45, 104, 111, 114, 105, 122, 111, 110, 116, 97, 108, 59, 32, 100, 105,
-    115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 125, 32,
-    105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 98, 117, 116, 116,
-    111, 110, 34, 93, 58, 100, 105, 115, 97, 98, 108, 101, 100, 44, 32, 105,
-    110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 115, 117, 98, 109, 105,
-    116, 34, 93, 58, 100, 105, 115, 97, 98, 108, 101, 100, 44, 32, 105, 110,
-    112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 114, 101, 115, 101, 116, 34,
-    93, 58, 100, 105, 115, 97, 98, 108, 101, 100, 44, 32, 105, 110, 112, 117,
-    116, 91, 116, 121, 112, 101, 61, 34, 102, 105, 108, 101, 34, 93, 58, 100,
-    105, 115, 97, 98, 108, 101, 100, 58, 58, 45, 119, 101, 98, 107, 105, 116,
-    45, 102, 105, 108, 101, 45, 117, 112, 108, 111, 97, 100, 45, 98, 117, 116,
-    116, 111, 110, 44, 32, 98, 117, 116, 116, 111, 110, 58, 100, 105, 115, 97,
-    98, 108, 101, 100, 44, 32, 115, 101, 108, 101, 99, 116, 58, 100, 105, 115,
-    97, 98, 108, 101, 100, 44, 32, 107, 101, 121, 103, 101, 110, 58, 100, 105,
-    115, 97, 98, 108, 101, 100, 44, 32, 111, 112, 116, 103, 114, 111, 117, 112,
-    58, 100, 105, 115, 97, 98, 108, 101, 100, 44, 32, 111, 112, 116, 105, 111,
-    110, 58, 100, 105, 115, 97, 98, 108, 101, 100, 32, 123, 32, 99, 111, 108,
-    111, 114, 58, 32, 71, 114, 97, 121, 84, 101, 120, 116, 32, 125, 32, 105,
-    110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 98, 117, 116, 116, 111,
-    110, 34, 93, 58, 97, 99, 116, 105, 118, 101, 44, 32, 105, 110, 112, 117,
-    116, 91, 116, 121, 112, 101, 61, 34, 115, 117, 98, 109, 105, 116, 34, 93,
-    58, 97, 99, 116, 105, 118, 101, 44, 32, 105, 110, 112, 117, 116, 91, 116,
-    121, 112, 101, 61, 34, 114, 101, 115, 101, 116, 34, 93, 58, 97, 99, 116,
-    105, 118, 101, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61,
-    34, 102, 105, 108, 101, 34, 93, 58, 97, 99, 116, 105, 118, 101, 58, 58,
-    45, 119, 101, 98, 107, 105, 116, 45, 102, 105, 108, 101, 45, 117, 112, 108,
-    111, 97, 100, 45, 98, 117, 116, 116, 111, 110, 44, 32, 98, 117, 116, 116,
-    111, 110, 58, 97, 99, 116, 105, 118, 101, 32, 123, 32, 98, 111, 114, 100,
-    101, 114, 45, 115, 116, 121, 108, 101, 58, 32, 105, 110, 115, 101, 116, 32,
-    125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 98, 117,
-    116, 116, 111, 110, 34, 93, 58, 97, 99, 116, 105, 118, 101, 58, 100, 105,
-    115, 97, 98, 108, 101, 100, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121,
-    112, 101, 61, 34, 115, 117, 98, 109, 105, 116, 34, 93, 58, 97, 99, 116,
-    105, 118, 101, 58, 100, 105, 115, 97, 98, 108, 101, 100, 44, 32, 105, 110,
-    112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 114, 101, 115, 101, 116, 34,
-    93, 58, 97, 99, 116, 105, 118, 101, 58, 100, 105, 115, 97, 98, 108, 101,
-    100, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 102,
-    105, 108, 101, 34, 93, 58, 97, 99, 116, 105, 118, 101, 58, 100, 105, 115,
-    97, 98, 108, 101, 100, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 102,
-    105, 108, 101, 45, 117, 112, 108, 111, 97, 100, 45, 98, 117, 116, 116, 111,
-    110, 44, 32, 98, 117, 116, 116, 111, 110, 58, 97, 99, 116, 105, 118, 101,
-    58, 100, 105, 115, 97, 98, 108, 101, 100, 32, 123, 32, 98, 111, 114, 100,
-    101, 114, 45, 115, 116, 121, 108, 101, 58, 32, 111, 117, 116, 115, 101, 116,
-    32, 125, 32, 97, 114, 101, 97, 44, 32, 112, 97, 114, 97, 109, 32, 123,
-    32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 110, 111, 110, 101, 32, 125,
-    32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 99, 104, 101,
-    99, 107, 98, 111, 120, 34, 93, 32, 123, 32, 45, 119, 101, 98, 107, 105,
-    116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 99, 104,
-    101, 99, 107, 98, 111, 120, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45,
-    98, 111, 120, 45, 115, 105, 122, 105, 110, 103, 58, 32, 98, 111, 114, 100,
-    101, 114, 45, 98, 111, 120, 59, 32, 125, 32, 105, 110, 112, 117, 116, 91,
-    116, 121, 112, 101, 61, 34, 114, 97, 100, 105, 111, 34, 93, 32, 123, 32,
-    45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110,
-    99, 101, 58, 32, 114, 97, 100, 105, 111, 59, 32, 45, 119, 101, 98, 107,
-    105, 116, 45, 98, 111, 120, 45, 115, 105, 122, 105, 110, 103, 58, 32, 98,
-    111, 114, 100, 101, 114, 45, 98, 111, 120, 59, 32, 125, 32, 115, 101, 108,
-    101, 99, 116, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112,
-    112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 109, 101, 110, 117, 108, 105,
-    115, 116, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45,
-    115, 105, 122, 105, 110, 103, 58, 32, 98, 111, 114, 100, 101, 114, 45, 98,
-    111, 120, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45,
-    97, 108, 105, 103, 110, 58, 32, 99, 101, 110, 116, 101, 114, 59, 32, 98,
-    111, 114, 100, 101, 114, 58, 32, 49, 112, 120, 32, 115, 111, 108, 105, 100,
+    101, 110, 116, 101, 114, 59, 32, 98, 111, 114, 100, 101, 114, 58, 32, 49,
+    112, 120, 32, 115, 111, 108, 105, 100, 59, 32, 119, 104, 105, 116, 101, 45,
+    115, 112, 97, 99, 101, 58, 32, 112, 114, 101, 59, 32, 45, 119, 101, 98,
+    107, 105, 116, 45, 114, 116, 108, 45, 111, 114, 100, 101, 114, 105, 110, 103,
+    58, 32, 108, 111, 103, 105, 99, 97, 108, 59, 32, 99, 111, 108, 111, 114,
+    58, 32, 98, 108, 97, 99, 107, 59, 32, 98, 97, 99, 107, 103, 114, 111,
+    117, 110, 100, 45, 99, 111, 108, 111, 114, 58, 32, 119, 104, 105, 116, 101,
+    59, 32, 99, 117, 114, 115, 111, 114, 58, 32, 100, 101, 102, 97, 117, 108,
+    116, 59, 32, 125, 32, 115, 101, 108, 101, 99, 116, 91, 115, 105, 122, 101,
+    93, 44, 32, 115, 101, 108, 101, 99, 116, 91, 109, 117, 108, 116, 105, 112,
+    108, 101, 93, 44, 32, 115, 101, 108, 101, 99, 116, 91, 115, 105, 122, 101,
+    93, 91, 109, 117, 108, 116, 105, 112, 108, 101, 93, 32, 123, 32, 45, 119,
+    101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101,
+    58, 32, 108, 105, 115, 116, 98, 111, 120, 59, 32, 45, 119, 101, 98, 107,
+    105, 116, 45, 98, 111, 120, 45, 97, 108, 105, 103, 110, 58, 32, 115, 116,
+    97, 114, 116, 59, 32, 98, 111, 114, 100, 101, 114, 58, 32, 49, 112, 120,
+    32, 105, 110, 115, 101, 116, 32, 103, 114, 97, 121, 59, 32, 45, 119, 101,
+    98, 107, 105, 116, 45, 98, 111, 114, 100, 101, 114, 45, 114, 97, 100, 105,
+    117, 115, 58, 32, 105, 110, 105, 116, 105, 97, 108, 59, 32, 119, 104, 105,
+    116, 101, 45, 115, 112, 97, 99, 101, 58, 32, 105, 110, 105, 116, 105, 97,
+    108, 59, 32, 125, 32, 115, 101, 108, 101, 99, 116, 91, 115, 105, 122, 101,
+    61, 34, 48, 34, 93, 44, 32, 115, 101, 108, 101, 99, 116, 91, 115, 105,
+    122, 101, 61, 34, 49, 34, 93, 32, 123, 32, 45, 119, 101, 98, 107, 105,
+    116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 109, 101,
+    110, 117, 108, 105, 115, 116, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45,
+    98, 111, 120, 45, 97, 108, 105, 103, 110, 58, 32, 99, 101, 110, 116, 101,
+    114, 59, 32, 98, 111, 114, 100, 101, 114, 58, 32, 49, 112, 120, 32, 115,
+    111, 108, 105, 100, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111,
+    114, 100, 101, 114, 45, 114, 97, 100, 105, 117, 115, 58, 32, 53, 112, 120,
     59, 32, 119, 104, 105, 116, 101, 45, 115, 112, 97, 99, 101, 58, 32, 112,
-    114, 101, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 114, 116, 108, 45,
-    111, 114, 100, 101, 114, 105, 110, 103, 58, 32, 108, 111, 103, 105, 99, 97,
-    108, 59, 32, 99, 111, 108, 111, 114, 58, 32, 98, 108, 97, 99, 107, 59,
-    32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 45, 99, 111, 108, 111,
-    114, 58, 32, 119, 104, 105, 116, 101, 59, 32, 99, 117, 114, 115, 111, 114,
-    58, 32, 100, 101, 102, 97, 117, 108, 116, 59, 32, 125, 32, 115, 101, 108,
-    101, 99, 116, 91, 115, 105, 122, 101, 93, 44, 32, 115, 101, 108, 101, 99,
-    116, 91, 109, 117, 108, 116, 105, 112, 108, 101, 93, 44, 32, 115, 101, 108,
-    101, 99, 116, 91, 115, 105, 122, 101, 93, 91, 109, 117, 108, 116, 105, 112,
-    108, 101, 93, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112,
-    112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 108, 105, 115, 116, 98, 111,
-    120, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45, 97,
-    108, 105, 103, 110, 58, 32, 115, 116, 97, 114, 116, 59, 32, 98, 111, 114,
-    100, 101, 114, 58, 32, 49, 112, 120, 32, 105, 110, 115, 101, 116, 32, 103,
-    114, 97, 121, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 114,
-    100, 101, 114, 45, 114, 97, 100, 105, 117, 115, 58, 32, 105, 110, 105, 116,
-    105, 97, 108, 59, 32, 119, 104, 105, 116, 101, 45, 115, 112, 97, 99, 101,
-    58, 32, 105, 110, 105, 116, 105, 97, 108, 59, 32, 125, 32, 115, 101, 108,
-    101, 99, 116, 91, 115, 105, 122, 101, 61, 34, 48, 34, 93, 44, 32, 115,
-    101, 108, 101, 99, 116, 91, 115, 105, 122, 101, 61, 34, 49, 34, 93, 32,
-    123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114,
-    97, 110, 99, 101, 58, 32, 109, 101, 110, 117, 108, 105, 115, 116, 59, 32,
-    45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45, 97, 108, 105, 103,
-    110, 58, 32, 99, 101, 110, 116, 101, 114, 59, 32, 98, 111, 114, 100, 101,
-    114, 58, 32, 49, 112, 120, 32, 115, 111, 108, 105, 100, 59, 32, 45, 119,
-    101, 98, 107, 105, 116, 45, 98, 111, 114, 100, 101, 114, 45, 114, 97, 100,
-    105, 117, 115, 58, 32, 53, 112, 120, 59, 32, 119, 104, 105, 116, 101, 45,
-    115, 112, 97, 99, 101, 58, 32, 112, 114, 101, 59, 32, 125, 32, 111, 112,
-    116, 103, 114, 111, 117, 112, 32, 123, 32, 102, 111, 110, 116, 45, 119, 101,
-    105, 103, 104, 116, 58, 32, 98, 111, 108, 100, 101, 114, 59, 32, 125, 32,
-    111, 112, 116, 105, 111, 110, 32, 123, 32, 102, 111, 110, 116, 45, 119, 101,
-    105, 103, 104, 116, 58, 32, 110, 111, 114, 109, 97, 108, 59, 32, 125, 32,
-    111, 117, 116, 112, 117, 116, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121,
-    58, 32, 105, 110, 108, 105, 110, 101, 59, 32, 125, 32, 58, 58, 45, 119,
-    101, 98, 107, 105, 116, 45, 118, 97, 108, 105, 100, 97, 116, 105, 111, 110,
-    45, 98, 117, 98, 98, 108, 101, 32, 123, 32, 100, 105, 115, 112, 108, 97,
-    121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111, 99, 107, 59,
-    32, 122, 45, 105, 110, 100, 101, 120, 58, 32, 50, 49, 52, 55, 52, 56,
-    51, 54, 52, 55, 59, 32, 112, 111, 115, 105, 116, 105, 111, 110, 58, 32,
-    97, 98, 115, 111, 108, 117, 116, 101, 59, 32, 111, 112, 97, 99, 105, 116,
-    121, 58, 32, 48, 46, 57, 53, 59, 32, 108, 105, 110, 101, 45, 104, 101,
-    105, 103, 104, 116, 58, 32, 48, 59, 32, 109, 97, 114, 103, 105, 110, 58,
-    32, 48, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 116, 101, 120, 116,
-    45, 115, 101, 99, 117, 114, 105, 116, 121, 58, 32, 110, 111, 110, 101, 59,
-    32, 45, 119, 101, 98, 107, 105, 116, 45, 116, 114, 97, 110, 115, 105, 116,
-    105, 111, 110, 58, 32, 111, 112, 97, 99, 105, 116, 121, 32, 48, 53, 46,
-    53, 115, 32, 101, 97, 115, 101, 59, 32, 125, 32, 58, 58, 45, 119, 101,
-    98, 107, 105, 116, 45, 118, 97, 108, 105, 100, 97, 116, 105, 111, 110, 45,
-    98, 117, 98, 98, 108, 101, 45, 109, 101, 115, 115, 97, 103, 101, 32, 123,
-    32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59,
-    32, 112, 111, 115, 105, 116, 105, 111, 110, 58, 32, 114, 101, 108, 97, 116,
-    105, 118, 101, 59, 32, 116, 111, 112, 58, 32, 45, 52, 112, 120, 59, 32,
-    102, 111, 110, 116, 58, 32, 109, 101, 115, 115, 97, 103, 101, 45, 98, 111,
-    120, 59, 32, 99, 111, 108, 111, 114, 58, 32, 98, 108, 97, 99, 107, 59,
-    32, 109, 105, 110, 45, 119, 105, 100, 116, 104, 58, 32, 53, 48, 112, 120,
-    59, 32, 109, 97, 120, 45, 119, 105, 100, 116, 104, 58, 32, 50, 48, 48,
-    112, 120, 59, 32, 98, 111, 114, 100, 101, 114, 58, 32, 115, 111, 108, 105,
-    100, 32, 50, 112, 120, 32, 35, 52, 48, 48, 59, 32, 98, 97, 99, 107,
-    103, 114, 111, 117, 110, 100, 58, 32, 45, 119, 101, 98, 107, 105, 116, 45,
-    103, 114, 97, 100, 105, 101, 110, 116, 40, 108, 105, 110, 101, 97, 114, 44,
-    32, 108, 101, 102, 116, 32, 116, 111, 112, 44, 32, 108, 101, 102, 116, 32,
-    98, 111, 116, 116, 111, 109, 44, 32, 102, 114, 111, 109, 40, 35, 102, 56,
-    101, 99, 101, 99, 41, 44, 32, 116, 111, 40, 35, 101, 56, 99, 99, 99,
-    99, 41, 41, 59, 32, 112, 97, 100, 100, 105, 110, 103, 58, 32, 56, 112,
-    120, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 114, 100, 101,
-    114, 45, 114, 97, 100, 105, 117, 115, 58, 32, 56, 112, 120, 59, 32, 45,
-    119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45, 115, 104, 97, 100, 111,
-    119, 58, 32, 52, 112, 120, 32, 52, 112, 120, 32, 52, 112, 120, 32, 114,
-    103, 98, 97, 40, 49, 48, 48, 44, 49, 48, 48, 44, 49, 48, 48, 44,
-    48, 46, 54, 41, 44, 32, 105, 110, 115, 101, 116, 32, 45, 50, 112, 120,
-    32, 45, 50, 112, 120, 32, 49, 112, 120, 32, 35, 100, 48, 99, 52, 99,
-    52, 44, 32, 105, 110, 115, 101, 116, 32, 50, 112, 120, 32, 50, 112, 120,
-    32, 49, 112, 120, 32, 119, 104, 105, 116, 101, 59, 32, 108, 105, 110, 101,
-    45, 104, 101, 105, 103, 104, 116, 58, 32, 110, 111, 114, 109, 97, 108, 59,
-    32, 122, 45, 105, 110, 100, 101, 120, 58, 32, 50, 49, 52, 55, 52, 56,
-    51, 54, 52, 52, 59, 32, 125, 32, 58, 58, 45, 119, 101, 98, 107, 105,
-    116, 45, 118, 97, 108, 105, 100, 97, 116, 105, 111, 110, 45, 98, 117, 98,
-    98, 108, 101, 45, 97, 114, 114, 111, 119, 32, 123, 32, 100, 105, 115, 112,
-    108, 97, 121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111, 99,
-    107, 59, 32, 112, 111, 115, 105, 116, 105, 111, 110, 58, 32, 114, 101, 108,
-    97, 116, 105, 118, 101, 59, 32, 108, 101, 102, 116, 58, 32, 51, 50, 112,
-    120, 59, 32, 119, 105, 100, 116, 104, 58, 32, 49, 54, 112, 120, 59, 32,
-    104, 101, 105, 103, 104, 116, 58, 32, 49, 54, 112, 120, 59, 32, 98, 97,
-    99, 107, 103, 114, 111, 117, 110, 100, 45, 99, 111, 108, 111, 114, 58, 32,
-    35, 102, 56, 101, 99, 101, 99, 59, 32, 98, 111, 114, 100, 101, 114, 45,
-    119, 105, 100, 116, 104, 58, 32, 50, 112, 120, 32, 48, 32, 48, 32, 50,
-    112, 120, 59, 32, 98, 111, 114, 100, 101, 114, 45, 115, 116, 121, 108, 101,
-    58, 32, 115, 111, 108, 105, 100, 59, 32, 98, 111, 114, 100, 101, 114, 45,
-    99, 111, 108, 111, 114, 58, 32, 35, 52, 48, 48, 59, 32, 98, 111, 120,
-    45, 115, 104, 97, 100, 111, 119, 58, 32, 105, 110, 115, 101, 116, 32, 50,
-    112, 120, 32, 50, 112, 120, 32, 49, 112, 120, 32, 119, 104, 105, 116, 101,
-    59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 116, 114, 97, 110, 115, 102,
-    111, 114, 109, 45, 111, 114, 105, 103, 105, 110, 58, 32, 48, 32, 48, 59,
-    32, 45, 119, 101, 98, 107, 105, 116, 45, 116, 114, 97, 110, 115, 102, 111,
-    114, 109, 58, 32, 114, 111, 116, 97, 116, 101, 40, 52, 53, 100, 101, 103,
-    41, 59, 32, 122, 45, 105, 110, 100, 101, 120, 58, 32, 50, 49, 52, 55,
-    52, 56, 51, 54, 52, 53, 59, 32, 125, 32, 58, 58, 45, 119, 101, 98,
-    107, 105, 116, 45, 118, 97, 108, 105, 100, 97, 116, 105, 111, 110, 45, 98,
-    117, 98, 98, 108, 101, 45, 97, 114, 114, 111, 119, 45, 99, 108, 105, 112,
-    112, 101, 114, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98,
-    108, 111, 99, 107, 59, 32, 111, 118, 101, 114, 102, 108, 111, 119, 58, 32,
-    104, 105, 100, 100, 101, 110, 59, 32, 104, 101, 105, 103, 104, 116, 58, 32,
-    49, 54, 112, 120, 59, 32, 125, 32, 109, 101, 116, 101, 114, 32, 123, 32,
-    45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110,
-    99, 101, 58, 32, 109, 101, 116, 101, 114, 59, 32, 45, 119, 101, 98, 107,
-    105, 116, 45, 98, 111, 120, 45, 115, 105, 122, 105, 110, 103, 58, 32, 98,
-    111, 114, 100, 101, 114, 45, 98, 111, 120, 59, 32, 100, 105, 115, 112, 108,
-    97, 121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 111, 120, 59, 32,
-    104, 101, 105, 103, 104, 116, 58, 32, 49, 101, 109, 59, 32, 119, 105, 100,
-    116, 104, 58, 32, 53, 101, 109, 59, 32, 118, 101, 114, 116, 105, 99, 97,
-    108, 45, 97, 108, 105, 103, 110, 58, 32, 45, 48, 46, 50, 101, 109, 59,
-    32, 125, 32, 109, 101, 116, 101, 114, 58, 58, 45, 119, 101, 98, 107, 105,
-    116, 45, 109, 101, 116, 101, 114, 45, 98, 97, 114, 32, 123, 32, 98, 97,
-    99, 107, 103, 114, 111, 117, 110, 100, 58, 32, 45, 119, 101, 98, 107, 105,
-    116, 45, 103, 114, 97, 100, 105, 101, 110, 116, 40, 108, 105, 110, 101, 97,
-    114, 44, 32, 108, 101, 102, 116, 32, 116, 111, 112, 44, 32, 108, 101, 102,
-    116, 32, 98, 111, 116, 116, 111, 109, 44, 32, 102, 114, 111, 109, 40, 35,
-    100, 100, 100, 41, 44, 32, 116, 111, 40, 35, 100, 100, 100, 41, 44, 32,
-    99, 111, 108, 111, 114, 45, 115, 116, 111, 112, 40, 48, 46, 50, 48, 44,
-    32, 35, 101, 101, 101, 41, 44, 32, 99, 111, 108, 111, 114, 45, 115, 116,
-    111, 112, 40, 48, 46, 52, 53, 44, 32, 35, 99, 99, 99, 41, 44, 32,
-    99, 111, 108, 111, 114, 45, 115, 116, 111, 112, 40, 48, 46, 53, 53, 44,
-    32, 35, 99, 99, 99, 41, 41, 59, 32, 104, 101, 105, 103, 104, 116, 58,
-    32, 49, 48, 48, 37, 59, 32, 119, 105, 100, 116, 104, 58, 32, 49, 48,
-    48, 37, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45,
-    115, 105, 122, 105, 110, 103, 58, 32, 98, 111, 114, 100, 101, 114, 45, 98,
-    111, 120, 59, 32, 125, 32, 109, 101, 116, 101, 114, 58, 58, 45, 119, 101,
-    98, 107, 105, 116, 45, 109, 101, 116, 101, 114, 45, 111, 112, 116, 105, 109,
-    117, 109, 45, 118, 97, 108, 117, 101, 32, 123, 32, 98, 97, 99, 107, 103,
-    114, 111, 117, 110, 100, 58, 32, 45, 119, 101, 98, 107, 105, 116, 45, 103,
-    114, 97, 100, 105, 101, 110, 116, 40, 108, 105, 110, 101, 97, 114, 44, 32,
-    108, 101, 102, 116, 32, 116, 111, 112, 44, 32, 108, 101, 102, 116, 32, 98,
-    111, 116, 116, 111, 109, 44, 32, 102, 114, 111, 109, 40, 35, 97, 100, 55,
-    41, 44, 32, 116, 111, 40, 35, 97, 100, 55, 41, 44, 32, 99, 111, 108,
-    111, 114, 45, 115, 116, 111, 112, 40, 48, 46, 50, 48, 44, 32, 35, 99,
-    101, 97, 41, 44, 32, 99, 111, 108, 111, 114, 45, 115, 116, 111, 112, 40,
-    48, 46, 52, 53, 44, 32, 35, 55, 97, 51, 41, 44, 32, 99, 111, 108,
-    111, 114, 45, 115, 116, 111, 112, 40, 48, 46, 53, 53, 44, 32, 35, 55,
-    97, 51, 41, 41, 59, 32, 104, 101, 105, 103, 104, 116, 58, 32, 49, 48,
-    48, 37, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45,
-    115, 105, 122, 105, 110, 103, 58, 32, 98, 111, 114, 100, 101, 114, 45, 98,
-    111, 120, 59, 32, 125, 32, 109, 101, 116, 101, 114, 58, 58, 45, 119, 101,
-    98, 107, 105, 116, 45, 109, 101, 116, 101, 114, 45, 115, 117, 98, 111, 112,
-    116, 105, 109, 117, 109, 45, 118, 97, 108, 117, 101, 32, 123, 32, 98, 97,
-    99, 107, 103, 114, 111, 117, 110, 100, 58, 32, 45, 119, 101, 98, 107, 105,
-    116, 45, 103, 114, 97, 100, 105, 101, 110, 116, 40, 108, 105, 110, 101, 97,
-    114, 44, 32, 108, 101, 102, 116, 32, 116, 111, 112, 44, 32, 108, 101, 102,
-    116, 32, 98, 111, 116, 116, 111, 109, 44, 32, 102, 114, 111, 109, 40, 35,
-    102, 101, 55, 41, 44, 32, 116, 111, 40, 35, 102, 101, 55, 41, 44, 32,
-    99, 111, 108, 111, 114, 45, 115, 116, 111, 112, 40, 48, 46, 50, 48, 44,
-    32, 35, 102, 102, 99, 41, 44, 32, 99, 111, 108, 111, 114, 45, 115, 116,
-    111, 112, 40, 48, 46, 52, 53, 44, 32, 35, 100, 98, 51, 41, 44, 32,
-    99, 111, 108, 111, 114, 45, 115, 116, 111, 112, 40, 48, 46, 53, 53, 44,
-    32, 35, 100, 98, 51, 41, 41, 59, 32, 104, 101, 105, 103, 104, 116, 58,
-    32, 49, 48, 48, 37, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98,
-    111, 120, 45, 115, 105, 122, 105, 110, 103, 58, 32, 98, 111, 114, 100, 101,
-    114, 45, 98, 111, 120, 59, 32, 125, 32, 109, 101, 116, 101, 114, 58, 58,
-    45, 119, 101, 98, 107, 105, 116, 45, 109, 101, 116, 101, 114, 45, 101, 118,
-    101, 110, 45, 108, 101, 115, 115, 45, 103, 111, 111, 100, 45, 118, 97, 108,
-    117, 101, 32, 123, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 58,
-    32, 45, 119, 101, 98, 107, 105, 116, 45, 103, 114, 97, 100, 105, 101, 110,
-    116, 40, 108, 105, 110, 101, 97, 114, 44, 32, 108, 101, 102, 116, 32, 116,
-    111, 112, 44, 32, 108, 101, 102, 116, 32, 98, 111, 116, 116, 111, 109, 44,
-    32, 102, 114, 111, 109, 40, 35, 102, 55, 55, 41, 44, 32, 116, 111, 40,
-    35, 102, 55, 55, 41, 44, 32, 99, 111, 108, 111, 114, 45, 115, 116, 111,
-    112, 40, 48, 46, 50, 48, 44, 32, 35, 102, 99, 99, 41, 44, 32, 99,
-    111, 108, 111, 114, 45, 115, 116, 111, 112, 40, 48, 46, 52, 53, 44, 32,
-    35, 100, 52, 52, 41, 44, 32, 99, 111, 108, 111, 114, 45, 115, 116, 111,
-    112, 40, 48, 46, 53, 53, 44, 32, 35, 100, 52, 52, 41, 41, 59, 32,
-    104, 101, 105, 103, 104, 116, 58, 32, 49, 48, 48, 37, 59, 32, 45, 119,
-    101, 98, 107, 105, 116, 45, 98, 111, 120, 45, 115, 105, 122, 105, 110, 103,
-    58, 32, 98, 111, 114, 100, 101, 114, 45, 98, 111, 120, 59, 32, 125, 32,
-    112, 114, 111, 103, 114, 101, 115, 115, 32, 123, 32, 45, 119, 101, 98, 107,
-    105, 116, 45, 97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 112,
-    114, 111, 103, 114, 101, 115, 115, 45, 98, 97, 114, 59, 32, 45, 119, 101,
-    98, 107, 105, 116, 45, 98, 111, 120, 45, 115, 105, 122, 105, 110, 103, 58,
-    32, 98, 111, 114, 100, 101, 114, 45, 98, 111, 120, 59, 32, 100, 105, 115,
-    112, 108, 97, 121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111,
-    99, 107, 59, 32, 104, 101, 105, 103, 104, 116, 58, 32, 49, 101, 109, 59,
-    32, 119, 105, 100, 116, 104, 58, 32, 49, 48, 101, 109, 59, 32, 118, 101,
-    114, 116, 105, 99, 97, 108, 45, 97, 108, 105, 103, 110, 58, 32, 45, 48,
-    46, 50, 101, 109, 59, 32, 125, 32, 112, 114, 111, 103, 114, 101, 115, 115,
-    58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 112, 114, 111, 103, 114, 101,
-    115, 115, 45, 98, 97, 114, 32, 123, 32, 98, 97, 99, 107, 103, 114, 111,
-    117, 110, 100, 45, 99, 111, 108, 111, 114, 58, 32, 103, 114, 97, 121, 59,
+    114, 101, 59, 32, 125, 32, 111, 112, 116, 103, 114, 111, 117, 112, 32, 123,
+    32, 102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116, 58, 32, 98, 111,
+    108, 100, 101, 114, 59, 32, 125, 32, 111, 112, 116, 105, 111, 110, 32, 123,
+    32, 102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116, 58, 32, 110, 111,
+    114, 109, 97, 108, 59, 32, 125, 32, 111, 117, 116, 112, 117, 116, 32, 123,
+    32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105, 110, 101,
+    59, 32, 125, 32, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 118, 97,
+    108, 105, 100, 97, 116, 105, 111, 110, 45, 98, 117, 98, 98, 108, 101, 32,
+    123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105, 110,
+    101, 45, 98, 108, 111, 99, 107, 59, 32, 122, 45, 105, 110, 100, 101, 120,
+    58, 32, 50, 49, 52, 55, 52, 56, 51, 54, 52, 55, 59, 32, 112, 111,
+    115, 105, 116, 105, 111, 110, 58, 32, 97, 98, 115, 111, 108, 117, 116, 101,
+    59, 32, 111, 112, 97, 99, 105, 116, 121, 58, 32, 48, 46, 57, 53, 59,
+    32, 108, 105, 110, 101, 45, 104, 101, 105, 103, 104, 116, 58, 32, 48, 59,
+    32, 109, 97, 114, 103, 105, 110, 58, 32, 48, 59, 32, 45, 119, 101, 98,
+    107, 105, 116, 45, 116, 101, 120, 116, 45, 115, 101, 99, 117, 114, 105, 116,
+    121, 58, 32, 110, 111, 110, 101, 59, 32, 45, 119, 101, 98, 107, 105, 116,
+    45, 116, 114, 97, 110, 115, 105, 116, 105, 111, 110, 58, 32, 111, 112, 97,
+    99, 105, 116, 121, 32, 48, 53, 46, 53, 115, 32, 101, 97, 115, 101, 59,
+    32, 125, 32, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 118, 97, 108,
+    105, 100, 97, 116, 105, 111, 110, 45, 98, 117, 98, 98, 108, 101, 45, 109,
+    101, 115, 115, 97, 103, 101, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121,
+    58, 32, 98, 108, 111, 99, 107, 59, 32, 112, 111, 115, 105, 116, 105, 111,
+    110, 58, 32, 114, 101, 108, 97, 116, 105, 118, 101, 59, 32, 116, 111, 112,
+    58, 32, 45, 52, 112, 120, 59, 32, 102, 111, 110, 116, 58, 32, 109, 101,
+    115, 115, 97, 103, 101, 45, 98, 111, 120, 59, 32, 99, 111, 108, 111, 114,
+    58, 32, 98, 108, 97, 99, 107, 59, 32, 109, 105, 110, 45, 119, 105, 100,
+    116, 104, 58, 32, 53, 48, 112, 120, 59, 32, 109, 97, 120, 45, 119, 105,
+    100, 116, 104, 58, 32, 50, 48, 48, 112, 120, 59, 32, 98, 111, 114, 100,
+    101, 114, 58, 32, 115, 111, 108, 105, 100, 32, 50, 112, 120, 32, 35, 52,
+    48, 48, 59, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 58, 32,
+    45, 119, 101, 98, 107, 105, 116, 45, 103, 114, 97, 100, 105, 101, 110, 116,
+    40, 108, 105, 110, 101, 97, 114, 44, 32, 108, 101, 102, 116, 32, 116, 111,
+    112, 44, 32, 108, 101, 102, 116, 32, 98, 111, 116, 116, 111, 109, 44, 32,
+    102, 114, 111, 109, 40, 35, 102, 56, 101, 99, 101, 99, 41, 44, 32, 116,
+    111, 40, 35, 101, 56, 99, 99, 99, 99, 41, 41, 59, 32, 112, 97, 100,
+    100, 105, 110, 103, 58, 32, 56, 112, 120, 59, 32, 45, 119, 101, 98, 107,
+    105, 116, 45, 98, 111, 114, 100, 101, 114, 45, 114, 97, 100, 105, 117, 115,
+    58, 32, 56, 112, 120, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98,
+    111, 120, 45, 115, 104, 97, 100, 111, 119, 58, 32, 52, 112, 120, 32, 52,
+    112, 120, 32, 52, 112, 120, 32, 114, 103, 98, 97, 40, 49, 48, 48, 44,
+    49, 48, 48, 44, 49, 48, 48, 44, 48, 46, 54, 41, 44, 32, 105, 110,
+    115, 101, 116, 32, 45, 50, 112, 120, 32, 45, 50, 112, 120, 32, 49, 112,
+    120, 32, 35, 100, 48, 99, 52, 99, 52, 44, 32, 105, 110, 115, 101, 116,
+    32, 50, 112, 120, 32, 50, 112, 120, 32, 49, 112, 120, 32, 119, 104, 105,
+    116, 101, 59, 32, 108, 105, 110, 101, 45, 104, 101, 105, 103, 104, 116, 58,
+    32, 110, 111, 114, 109, 97, 108, 59, 32, 122, 45, 105, 110, 100, 101, 120,
+    58, 32, 50, 49, 52, 55, 52, 56, 51, 54, 52, 52, 59, 32, 125, 32,
+    58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 118, 97, 108, 105, 100, 97,
+    116, 105, 111, 110, 45, 98, 117, 98, 98, 108, 101, 45, 97, 114, 114, 111,
+    119, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108,
+    105, 110, 101, 45, 98, 108, 111, 99, 107, 59, 32, 112, 111, 115, 105, 116,
+    105, 111, 110, 58, 32, 114, 101, 108, 97, 116, 105, 118, 101, 59, 32, 108,
+    101, 102, 116, 58, 32, 51, 50, 112, 120, 59, 32, 119, 105, 100, 116, 104,
+    58, 32, 49, 54, 112, 120, 59, 32, 104, 101, 105, 103, 104, 116, 58, 32,
+    49, 54, 112, 120, 59, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100,
+    45, 99, 111, 108, 111, 114, 58, 32, 35, 102, 56, 101, 99, 101, 99, 59,
+    32, 98, 111, 114, 100, 101, 114, 45, 119, 105, 100, 116, 104, 58, 32, 50,
+    112, 120, 32, 48, 32, 48, 32, 50, 112, 120, 59, 32, 98, 111, 114, 100,
+    101, 114, 45, 115, 116, 121, 108, 101, 58, 32, 115, 111, 108, 105, 100, 59,
+    32, 98, 111, 114, 100, 101, 114, 45, 99, 111, 108, 111, 114, 58, 32, 35,
+    52, 48, 48, 59, 32, 98, 111, 120, 45, 115, 104, 97, 100, 111, 119, 58,
+    32, 105, 110, 115, 101, 116, 32, 50, 112, 120, 32, 50, 112, 120, 32, 49,
+    112, 120, 32, 119, 104, 105, 116, 101, 59, 32, 45, 119, 101, 98, 107, 105,
+    116, 45, 116, 114, 97, 110, 115, 102, 111, 114, 109, 45, 111, 114, 105, 103,
+    105, 110, 58, 32, 48, 32, 48, 59, 32, 45, 119, 101, 98, 107, 105, 116,
+    45, 116, 114, 97, 110, 115, 102, 111, 114, 109, 58, 32, 114, 111, 116, 97,
+    116, 101, 40, 52, 53, 100, 101, 103, 41, 59, 32, 122, 45, 105, 110, 100,
+    101, 120, 58, 32, 50, 49, 52, 55, 52, 56, 51, 54, 52, 53, 59, 32,
+    125, 32, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 118, 97, 108, 105,
+    100, 97, 116, 105, 111, 110, 45, 98, 117, 98, 98, 108, 101, 45, 97, 114,
+    114, 111, 119, 45, 99, 108, 105, 112, 112, 101, 114, 32, 123, 32, 100, 105,
+    115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 111, 118,
+    101, 114, 102, 108, 111, 119, 58, 32, 104, 105, 100, 100, 101, 110, 59, 32,
+    104, 101, 105, 103, 104, 116, 58, 32, 49, 54, 112, 120, 59, 32, 125, 32,
+    109, 101, 116, 101, 114, 32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45,
+    97, 112, 112, 101, 97, 114, 97, 110, 99, 101, 58, 32, 109, 101, 116, 101,
+    114, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45, 115,
+    105, 122, 105, 110, 103, 58, 32, 98, 111, 114, 100, 101, 114, 45, 98, 111,
+    120, 59, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105,
+    110, 101, 45, 98, 111, 120, 59, 32, 104, 101, 105, 103, 104, 116, 58, 32,
+    49, 101, 109, 59, 32, 119, 105, 100, 116, 104, 58, 32, 53, 101, 109, 59,
+    32, 118, 101, 114, 116, 105, 99, 97, 108, 45, 97, 108, 105, 103, 110, 58,
+    32, 45, 48, 46, 50, 101, 109, 59, 32, 125, 32, 109, 101, 116, 101, 114,
+    58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 109, 101, 116, 101, 114, 45,
+    98, 97, 114, 32, 123, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100,
+    58, 32, 45, 119, 101, 98, 107, 105, 116, 45, 103, 114, 97, 100, 105, 101,
+    110, 116, 40, 108, 105, 110, 101, 97, 114, 44, 32, 108, 101, 102, 116, 32,
+    116, 111, 112, 44, 32, 108, 101, 102, 116, 32, 98, 111, 116, 116, 111, 109,
+    44, 32, 102, 114, 111, 109, 40, 35, 100, 100, 100, 41, 44, 32, 116, 111,
+    40, 35, 100, 100, 100, 41, 44, 32, 99, 111, 108, 111, 114, 45, 115, 116,
+    111, 112, 40, 48, 46, 50, 48, 44, 32, 35, 101, 101, 101, 41, 44, 32,
+    99, 111, 108, 111, 114, 45, 115, 116, 111, 112, 40, 48, 46, 52, 53, 44,
+    32, 35, 99, 99, 99, 41, 44, 32, 99, 111, 108, 111, 114, 45, 115, 116,
+    111, 112, 40, 48, 46, 53, 53, 44, 32, 35, 99, 99, 99, 41, 41, 59,
     32, 104, 101, 105, 103, 104, 116, 58, 32, 49, 48, 48, 37, 59, 32, 119,
     105, 100, 116, 104, 58, 32, 49, 48, 48, 37, 59, 32, 45, 119, 101, 98,
     107, 105, 116, 45, 98, 111, 120, 45, 115, 105, 122, 105, 110, 103, 58, 32,
-    98, 111, 114, 100, 101, 114, 45, 98, 111, 120, 59, 32, 125, 32, 112, 114,
-    111, 103, 114, 101, 115, 115, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45,
-    112, 114, 111, 103, 114, 101, 115, 115, 45, 118, 97, 108, 117, 101, 32, 123,
+    98, 111, 114, 100, 101, 114, 45, 98, 111, 120, 59, 32, 125, 32, 109, 101,
+    116, 101, 114, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 109, 101, 116,
+    101, 114, 45, 111, 112, 116, 105, 109, 117, 109, 45, 118, 97, 108, 117, 101,
+    32, 123, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 58, 32, 45,
+    119, 101, 98, 107, 105, 116, 45, 103, 114, 97, 100, 105, 101, 110, 116, 40,
+    108, 105, 110, 101, 97, 114, 44, 32, 108, 101, 102, 116, 32, 116, 111, 112,
+    44, 32, 108, 101, 102, 116, 32, 98, 111, 116, 116, 111, 109, 44, 32, 102,
+    114, 111, 109, 40, 35, 97, 100, 55, 41, 44, 32, 116, 111, 40, 35, 97,
+    100, 55, 41, 44, 32, 99, 111, 108, 111, 114, 45, 115, 116, 111, 112, 40,
+    48, 46, 50, 48, 44, 32, 35, 99, 101, 97, 41, 44, 32, 99, 111, 108,
+    111, 114, 45, 115, 116, 111, 112, 40, 48, 46, 52, 53, 44, 32, 35, 55,
+    97, 51, 41, 44, 32, 99, 111, 108, 111, 114, 45, 115, 116, 111, 112, 40,
+    48, 46, 53, 53, 44, 32, 35, 55, 97, 51, 41, 41, 59, 32, 104, 101,
+    105, 103, 104, 116, 58, 32, 49, 48, 48, 37, 59, 32, 45, 119, 101, 98,
+    107, 105, 116, 45, 98, 111, 120, 45, 115, 105, 122, 105, 110, 103, 58, 32,
+    98, 111, 114, 100, 101, 114, 45, 98, 111, 120, 59, 32, 125, 32, 109, 101,
+    116, 101, 114, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 109, 101, 116,
+    101, 114, 45, 115, 117, 98, 111, 112, 116, 105, 109, 117, 109, 45, 118, 97,
+    108, 117, 101, 32, 123, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100,
+    58, 32, 45, 119, 101, 98, 107, 105, 116, 45, 103, 114, 97, 100, 105, 101,
+    110, 116, 40, 108, 105, 110, 101, 97, 114, 44, 32, 108, 101, 102, 116, 32,
+    116, 111, 112, 44, 32, 108, 101, 102, 116, 32, 98, 111, 116, 116, 111, 109,
+    44, 32, 102, 114, 111, 109, 40, 35, 102, 101, 55, 41, 44, 32, 116, 111,
+    40, 35, 102, 101, 55, 41, 44, 32, 99, 111, 108, 111, 114, 45, 115, 116,
+    111, 112, 40, 48, 46, 50, 48, 44, 32, 35, 102, 102, 99, 41, 44, 32,
+    99, 111, 108, 111, 114, 45, 115, 116, 111, 112, 40, 48, 46, 52, 53, 44,
+    32, 35, 100, 98, 51, 41, 44, 32, 99, 111, 108, 111, 114, 45, 115, 116,
+    111, 112, 40, 48, 46, 53, 53, 44, 32, 35, 100, 98, 51, 41, 41, 59,
+    32, 104, 101, 105, 103, 104, 116, 58, 32, 49, 48, 48, 37, 59, 32, 45,
+    119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45, 115, 105, 122, 105, 110,
+    103, 58, 32, 98, 111, 114, 100, 101, 114, 45, 98, 111, 120, 59, 32, 125,
+    32, 109, 101, 116, 101, 114, 58, 58, 45, 119, 101, 98, 107, 105, 116, 45,
+    109, 101, 116, 101, 114, 45, 101, 118, 101, 110, 45, 108, 101, 115, 115, 45,
+    103, 111, 111, 100, 45, 118, 97, 108, 117, 101, 32, 123, 32, 98, 97, 99,
+    107, 103, 114, 111, 117, 110, 100, 58, 32, 45, 119, 101, 98, 107, 105, 116,
+    45, 103, 114, 97, 100, 105, 101, 110, 116, 40, 108, 105, 110, 101, 97, 114,
+    44, 32, 108, 101, 102, 116, 32, 116, 111, 112, 44, 32, 108, 101, 102, 116,
+    32, 98, 111, 116, 116, 111, 109, 44, 32, 102, 114, 111, 109, 40, 35, 102,
+    55, 55, 41, 44, 32, 116, 111, 40, 35, 102, 55, 55, 41, 44, 32, 99,
+    111, 108, 111, 114, 45, 115, 116, 111, 112, 40, 48, 46, 50, 48, 44, 32,
+    35, 102, 99, 99, 41, 44, 32, 99, 111, 108, 111, 114, 45, 115, 116, 111,
+    112, 40, 48, 46, 52, 53, 44, 32, 35, 100, 52, 52, 41, 44, 32, 99,
+    111, 108, 111, 114, 45, 115, 116, 111, 112, 40, 48, 46, 53, 53, 44, 32,
+    35, 100, 52, 52, 41, 41, 59, 32, 104, 101, 105, 103, 104, 116, 58, 32,
+    49, 48, 48, 37, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111,
+    120, 45, 115, 105, 122, 105, 110, 103, 58, 32, 98, 111, 114, 100, 101, 114,
+    45, 98, 111, 120, 59, 32, 125, 32, 112, 114, 111, 103, 114, 101, 115, 115,
+    32, 123, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 112, 112, 101, 97,
+    114, 97, 110, 99, 101, 58, 32, 112, 114, 111, 103, 114, 101, 115, 115, 45,
+    98, 97, 114, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120,
+    45, 115, 105, 122, 105, 110, 103, 58, 32, 98, 111, 114, 100, 101, 114, 45,
+    98, 111, 120, 59, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110,
+    108, 105, 110, 101, 45, 98, 108, 111, 99, 107, 59, 32, 104, 101, 105, 103,
+    104, 116, 58, 32, 49, 101, 109, 59, 32, 119, 105, 100, 116, 104, 58, 32,
+    49, 48, 101, 109, 59, 32, 118, 101, 114, 116, 105, 99, 97, 108, 45, 97,
+    108, 105, 103, 110, 58, 32, 45, 48, 46, 50, 101, 109, 59, 32, 125, 32,
+    112, 114, 111, 103, 114, 101, 115, 115, 58, 58, 45, 119, 101, 98, 107, 105,
+    116, 45, 112, 114, 111, 103, 114, 101, 115, 115, 45, 98, 97, 114, 32, 123,
     32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 45, 99, 111, 108, 111,
-    114, 58, 32, 103, 114, 101, 101, 110, 59, 32, 104, 101, 105, 103, 104, 116,
-    58, 32, 49, 48, 48, 37, 59, 32, 119, 105, 100, 116, 104, 58, 32, 53,
+    114, 58, 32, 103, 114, 97, 121, 59, 32, 104, 101, 105, 103, 104, 116, 58,
+    32, 49, 48, 48, 37, 59, 32, 119, 105, 100, 116, 104, 58, 32, 49, 48,
     48, 37, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45, 98, 111, 120, 45,
     115, 105, 122, 105, 110, 103, 58, 32, 98, 111, 114, 100, 101, 114, 45, 98,
-    111, 120, 59, 32, 125, 32, 117, 44, 32, 105, 110, 115, 32, 123, 32, 116,
-    101, 120, 116, 45, 100, 101, 99, 111, 114, 97, 116, 105, 111, 110, 58, 32,
-    117, 110, 100, 101, 114, 108, 105, 110, 101, 32, 125, 32, 115, 116, 114, 111,
-    110, 103, 44, 32, 98, 32, 123, 32, 102, 111, 110, 116, 45, 119, 101, 105,
-    103, 104, 116, 58, 32, 98, 111, 108, 100, 101, 114, 32, 125, 32, 105, 44,
-    32, 99, 105, 116, 101, 44, 32, 101, 109, 44, 32, 118, 97, 114, 44, 32,
-    97, 100, 100, 114, 101, 115, 115, 32, 123, 32, 102, 111, 110, 116, 45, 115,
-    116, 121, 108, 101, 58, 32, 105, 116, 97, 108, 105, 99, 32, 125, 32, 116,
-    116, 44, 32, 99, 111, 100, 101, 44, 32, 107, 98, 100, 44, 32, 115, 97,
-    109, 112, 32, 123, 32, 102, 111, 110, 116, 45, 102, 97, 109, 105, 108, 121,
-    58, 32, 109, 111, 110, 111, 115, 112, 97, 99, 101, 32, 125, 32, 112, 114,
-    101, 44, 32, 120, 109, 112, 44, 32, 112, 108, 97, 105, 110, 116, 101, 120,
-    116, 44, 32, 108, 105, 115, 116, 105, 110, 103, 32, 123, 32, 100, 105, 115,
-    112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 102, 111, 110,
+    111, 120, 59, 32, 125, 32, 112, 114, 111, 103, 114, 101, 115, 115, 58, 58,
+    45, 119, 101, 98, 107, 105, 116, 45, 112, 114, 111, 103, 114, 101, 115, 115,
+    45, 118, 97, 108, 117, 101, 32, 123, 32, 98, 97, 99, 107, 103, 114, 111,
+    117, 110, 100, 45, 99, 111, 108, 111, 114, 58, 32, 103, 114, 101, 101, 110,
+    59, 32, 104, 101, 105, 103, 104, 116, 58, 32, 49, 48, 48, 37, 59, 32,
+    119, 105, 100, 116, 104, 58, 32, 53, 48, 37, 59, 32, 45, 119, 101, 98,
+    107, 105, 116, 45, 98, 111, 120, 45, 115, 105, 122, 105, 110, 103, 58, 32,
+    98, 111, 114, 100, 101, 114, 45, 98, 111, 120, 59, 32, 125, 32, 117, 44,
+    32, 105, 110, 115, 32, 123, 32, 116, 101, 120, 116, 45, 100, 101, 99, 111,
+    114, 97, 116, 105, 111, 110, 58, 32, 117, 110, 100, 101, 114, 108, 105, 110,
+    101, 32, 125, 32, 115, 116, 114, 111, 110, 103, 44, 32, 98, 32, 123, 32,
+    102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116, 58, 32, 98, 111, 108,
+    100, 101, 114, 32, 125, 32, 105, 44, 32, 99, 105, 116, 101, 44, 32, 101,
+    109, 44, 32, 118, 97, 114, 44, 32, 97, 100, 100, 114, 101, 115, 115, 32,
+    123, 32, 102, 111, 110, 116, 45, 115, 116, 121, 108, 101, 58, 32, 105, 116,
+    97, 108, 105, 99, 32, 125, 32, 116, 116, 44, 32, 99, 111, 100, 101, 44,
+    32, 107, 98, 100, 44, 32, 115, 97, 109, 112, 32, 123, 32, 102, 111, 110,
     116, 45, 102, 97, 109, 105, 108, 121, 58, 32, 109, 111, 110, 111, 115, 112,
-    97, 99, 101, 59, 32, 119, 104, 105, 116, 101, 45, 115, 112, 97, 99, 101,
-    58, 32, 112, 114, 101, 59, 32, 109, 97, 114, 103, 105, 110, 58, 32, 49,
-    95, 95, 113, 101, 109, 32, 48, 32, 125, 32, 109, 97, 114, 107, 32, 123,
-    32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 45, 99, 111, 108, 111,
-    114, 58, 32, 121, 101, 108, 108, 111, 119, 59, 32, 99, 111, 108, 111, 114,
-    58, 32, 98, 108, 97, 99, 107, 32, 125, 32, 98, 105, 103, 32, 123, 32,
-    102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 108, 97, 114, 103, 101,
-    114, 32, 125, 32, 115, 109, 97, 108, 108, 32, 123, 32, 102, 111, 110, 116,
-    45, 115, 105, 122, 101, 58, 32, 115, 109, 97, 108, 108, 101, 114, 32, 125,
-    32, 115, 44, 32, 115, 116, 114, 105, 107, 101, 44, 32, 100, 101, 108, 32,
-    123, 32, 116, 101, 120, 116, 45, 100, 101, 99, 111, 114, 97, 116, 105, 111,
-    110, 58, 32, 108, 105, 110, 101, 45, 116, 104, 114, 111, 117, 103, 104, 32,
-    125, 32, 115, 117, 98, 32, 123, 32, 118, 101, 114, 116, 105, 99, 97, 108,
-    45, 97, 108, 105, 103, 110, 58, 32, 115, 117, 98, 59, 32, 102, 111, 110,
-    116, 45, 115, 105, 122, 101, 58, 32, 115, 109, 97, 108, 108, 101, 114, 32,
-    125, 32, 115, 117, 112, 32, 123, 32, 118, 101, 114, 116, 105, 99, 97, 108,
-    45, 97, 108, 105, 103, 110, 58, 32, 115, 117, 112, 101, 114, 59, 32, 102,
-    111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 115, 109, 97, 108, 108, 101,
-    114, 32, 125, 32, 110, 111, 98, 114, 32, 123, 32, 119, 104, 105, 116, 101,
-    45, 115, 112, 97, 99, 101, 58, 32, 110, 111, 119, 114, 97, 112, 32, 125,
-    32, 58, 102, 111, 99, 117, 115, 32, 123, 32, 111, 117, 116, 108, 105, 110,
-    101, 58, 32, 97, 117, 116, 111, 32, 53, 112, 120, 32, 45, 119, 101, 98,
-    107, 105, 116, 45, 102, 111, 99, 117, 115, 45, 114, 105, 110, 103, 45, 99,
-    111, 108, 111, 114, 32, 125, 32, 104, 116, 109, 108, 58, 102, 111, 99, 117,
-    115, 44, 32, 98, 111, 100, 121, 58, 102, 111, 99, 117, 115, 44, 32, 105,
-    110, 112, 117, 116, 91, 114, 101, 97, 100, 111, 110, 108, 121, 93, 58, 102,
-    111, 99, 117, 115, 32, 123, 32, 111, 117, 116, 108, 105, 110, 101, 58, 32,
-    110, 111, 110, 101, 32, 125, 32, 105, 110, 112, 117, 116, 58, 102, 111, 99,
-    117, 115, 44, 32, 116, 101, 120, 116, 97, 114, 101, 97, 58, 102, 111, 99,
-    117, 115, 44, 32, 105, 115, 105, 110, 100, 101, 120, 58, 102, 111, 99, 117,
-    115, 44, 32, 107, 101, 121, 103, 101, 110, 58, 102, 111, 99, 117, 115, 44,
-    32, 115, 101, 108, 101, 99, 116, 58, 102, 111, 99, 117, 115, 32, 123, 32,
-    111, 117, 116, 108, 105, 110, 101, 45, 111, 102, 102, 115, 101, 116, 58, 32,
-    45, 50, 112, 120, 32, 125, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112,
-    101, 61, 34, 98, 117, 116, 116, 111, 110, 34, 93, 58, 102, 111, 99, 117,
-    115, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 99,
-    104, 101, 99, 107, 98, 111, 120, 34, 93, 58, 102, 111, 99, 117, 115, 44,
-    32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 102, 105, 108,
-    101, 34, 93, 58, 102, 111, 99, 117, 115, 44, 32, 105, 110, 112, 117, 116,
-    91, 116, 121, 112, 101, 61, 34, 104, 105, 100, 100, 101, 110, 34, 93, 58,
-    102, 111, 99, 117, 115, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112,
-    101, 61, 34, 105, 109, 97, 103, 101, 34, 93, 58, 102, 111, 99, 117, 115,
-    44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 114, 97,
-    100, 105, 111, 34, 93, 58, 102, 111, 99, 117, 115, 44, 32, 105, 110, 112,
-    117, 116, 91, 116, 121, 112, 101, 61, 34, 114, 101, 115, 101, 116, 34, 93,
+    97, 99, 101, 32, 125, 32, 112, 114, 101, 44, 32, 120, 109, 112, 44, 32,
+    112, 108, 97, 105, 110, 116, 101, 120, 116, 44, 32, 108, 105, 115, 116, 105,
+    110, 103, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108,
+    111, 99, 107, 59, 32, 102, 111, 110, 116, 45, 102, 97, 109, 105, 108, 121,
+    58, 32, 109, 111, 110, 111, 115, 112, 97, 99, 101, 59, 32, 119, 104, 105,
+    116, 101, 45, 115, 112, 97, 99, 101, 58, 32, 112, 114, 101, 59, 32, 109,
+    97, 114, 103, 105, 110, 58, 32, 49, 95, 95, 113, 101, 109, 32, 48, 32,
+    125, 32, 109, 97, 114, 107, 32, 123, 32, 98, 97, 99, 107, 103, 114, 111,
+    117, 110, 100, 45, 99, 111, 108, 111, 114, 58, 32, 121, 101, 108, 108, 111,
+    119, 59, 32, 99, 111, 108, 111, 114, 58, 32, 98, 108, 97, 99, 107, 32,
+    125, 32, 98, 105, 103, 32, 123, 32, 102, 111, 110, 116, 45, 115, 105, 122,
+    101, 58, 32, 108, 97, 114, 103, 101, 114, 32, 125, 32, 115, 109, 97, 108,
+    108, 32, 123, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 115,
+    109, 97, 108, 108, 101, 114, 32, 125, 32, 115, 44, 32, 115, 116, 114, 105,
+    107, 101, 44, 32, 100, 101, 108, 32, 123, 32, 116, 101, 120, 116, 45, 100,
+    101, 99, 111, 114, 97, 116, 105, 111, 110, 58, 32, 108, 105, 110, 101, 45,
+    116, 104, 114, 111, 117, 103, 104, 32, 125, 32, 115, 117, 98, 32, 123, 32,
+    118, 101, 114, 116, 105, 99, 97, 108, 45, 97, 108, 105, 103, 110, 58, 32,
+    115, 117, 98, 59, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32,
+    115, 109, 97, 108, 108, 101, 114, 32, 125, 32, 115, 117, 112, 32, 123, 32,
+    118, 101, 114, 116, 105, 99, 97, 108, 45, 97, 108, 105, 103, 110, 58, 32,
+    115, 117, 112, 101, 114, 59, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101,
+    58, 32, 115, 109, 97, 108, 108, 101, 114, 32, 125, 32, 110, 111, 98, 114,
+    32, 123, 32, 119, 104, 105, 116, 101, 45, 115, 112, 97, 99, 101, 58, 32,
+    110, 111, 119, 114, 97, 112, 32, 125, 32, 58, 102, 111, 99, 117, 115, 32,
+    123, 32, 111, 117, 116, 108, 105, 110, 101, 58, 32, 97, 117, 116, 111, 32,
+    53, 112, 120, 32, 45, 119, 101, 98, 107, 105, 116, 45, 102, 111, 99, 117,
+    115, 45, 114, 105, 110, 103, 45, 99, 111, 108, 111, 114, 32, 125, 32, 104,
+    116, 109, 108, 58, 102, 111, 99, 117, 115, 44, 32, 98, 111, 100, 121, 58,
+    102, 111, 99, 117, 115, 44, 32, 105, 110, 112, 117, 116, 91, 114, 101, 97,
+    100, 111, 110, 108, 121, 93, 58, 102, 111, 99, 117, 115, 32, 123, 32, 111,
+    117, 116, 108, 105, 110, 101, 58, 32, 110, 111, 110, 101, 32, 125, 32, 105,
+    110, 112, 117, 116, 58, 102, 111, 99, 117, 115, 44, 32, 116, 101, 120, 116,
+    97, 114, 101, 97, 58, 102, 111, 99, 117, 115, 44, 32, 105, 115, 105, 110,
+    100, 101, 120, 58, 102, 111, 99, 117, 115, 44, 32, 107, 101, 121, 103, 101,
+    110, 58, 102, 111, 99, 117, 115, 44, 32, 115, 101, 108, 101, 99, 116, 58,
+    102, 111, 99, 117, 115, 32, 123, 32, 111, 117, 116, 108, 105, 110, 101, 45,
+    111, 102, 102, 115, 101, 116, 58, 32, 45, 50, 112, 120, 32, 125, 32, 105,
+    110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 98, 117, 116, 116, 111,
+    110, 34, 93, 58, 102, 111, 99, 117, 115, 44, 32, 105, 110, 112, 117, 116,
+    91, 116, 121, 112, 101, 61, 34, 99, 104, 101, 99, 107, 98, 111, 120, 34,
+    93, 58, 102, 111, 99, 117, 115, 44, 32, 105, 110, 112, 117, 116, 91, 116,
+    121, 112, 101, 61, 34, 102, 105, 108, 101, 34, 93, 58, 102, 111, 99, 117,
+    115, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 104,
+    105, 100, 100, 101, 110, 34, 93, 58, 102, 111, 99, 117, 115, 44, 32, 105,
+    110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 105, 109, 97, 103, 101,
+    34, 93, 58, 102, 111, 99, 117, 115, 44, 32, 105, 110, 112, 117, 116, 91,
+    116, 121, 112, 101, 61, 34, 114, 97, 100, 105, 111, 34, 93, 58, 102, 111,
+    99, 117, 115, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61,
+    34, 114, 101, 115, 101, 116, 34, 93, 58, 102, 111, 99, 117, 115, 44, 32,
+    105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 115, 101, 97, 114,
+    99, 104, 34, 93, 58, 102, 111, 99, 117, 115, 44, 32, 105, 110, 112, 117,
+    116, 91, 116, 121, 112, 101, 61, 34, 115, 117, 98, 109, 105, 116, 34, 93,
     58, 102, 111, 99, 117, 115, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121,
-    112, 101, 61, 34, 115, 101, 97, 114, 99, 104, 34, 93, 58, 102, 111, 99,
-    117, 115, 44, 32, 105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34,
-    115, 117, 98, 109, 105, 116, 34, 93, 58, 102, 111, 99, 117, 115, 44, 32,
-    105, 110, 112, 117, 116, 91, 116, 121, 112, 101, 61, 34, 102, 105, 108, 101,
-    34, 93, 58, 102, 111, 99, 117, 115, 58, 58, 45, 119, 101, 98, 107, 105,
-    116, 45, 102, 105, 108, 101, 45, 117, 112, 108, 111, 97, 100, 45, 98, 117,
-    116, 116, 111, 110, 32, 123, 32, 111, 117, 116, 108, 105, 110, 101, 45, 111,
-    102, 102, 115, 101, 116, 58, 32, 48, 32, 125, 32, 97, 58, 45, 119, 101,
-    98, 107, 105, 116, 45, 97, 110, 121, 45, 108, 105, 110, 107, 32, 123, 32,
-    99, 111, 108, 111, 114, 58, 32, 45, 119, 101, 98, 107, 105, 116, 45, 108,
-    105, 110, 107, 59, 32, 116, 101, 120, 116, 45, 100, 101, 99, 111, 114, 97,
-    116, 105, 111, 110, 58, 32, 117, 110, 100, 101, 114, 108, 105, 110, 101, 59,
-    32, 99, 117, 114, 115, 111, 114, 58, 32, 97, 117, 116, 111, 59, 32, 125,
-    32, 97, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97, 110, 121, 45, 108,
-    105, 110, 107, 58, 97, 99, 116, 105, 118, 101, 32, 123, 32, 99, 111, 108,
-    111, 114, 58, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97, 99, 116, 105,
-    118, 101, 108, 105, 110, 107, 32, 125, 32, 114, 117, 98, 121, 44, 32, 114,
-    116, 32, 123, 32, 116, 101, 120, 116, 45, 105, 110, 100, 101, 110, 116, 58,
-    32, 48, 59, 32, 125, 32, 114, 116, 32, 123, 32, 108, 105, 110, 101, 45,
-    104, 101, 105, 103, 104, 116, 58, 32, 110, 111, 114, 109, 97, 108, 59, 32,
-    45, 119, 101, 98, 107, 105, 116, 45, 116, 101, 120, 116, 45, 101, 109, 112,
-    104, 97, 115, 105, 115, 58, 32, 110, 111, 110, 101, 59, 32, 125, 32, 114,
-    117, 98, 121, 32, 62, 32, 114, 116, 32, 123, 32, 100, 105, 115, 112, 108,
-    97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 32, 102, 111, 110, 116, 45,
-    115, 105, 122, 101, 58, 32, 53, 48, 37, 59, 32, 116, 101, 120, 116, 45,
-    97, 108, 105, 103, 110, 58, 32, 45, 119, 101, 98, 107, 105, 116, 45, 97,
-    117, 116, 111, 59, 32, 125, 32, 114, 117, 98, 121, 32, 62, 32, 114, 112,
-    32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 110, 111, 110, 101,
-    59, 32, 125, 32, 110, 111, 102, 114, 97, 109, 101, 115, 32, 123, 32, 100,
-    105, 115, 112, 108, 97, 121, 58, 32, 110, 111, 110, 101, 32, 125, 32, 102,
-    114, 97, 109, 101, 115, 101, 116, 44, 32, 102, 114, 97, 109, 101, 32, 123,
-    32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 32,
-    125, 32, 102, 114, 97, 109, 101, 115, 101, 116, 32, 123, 32, 98, 111, 114,
-    100, 101, 114, 45, 99, 111, 108, 111, 114, 58, 32, 105, 110, 104, 101, 114,
-    105, 116, 32, 125, 32, 105, 102, 114, 97, 109, 101, 32, 123, 32, 98, 111,
-    114, 100, 101, 114, 58, 32, 50, 112, 120, 32, 105, 110, 115, 101, 116, 32,
-    125, 32, 100, 101, 116, 97, 105, 108, 115, 32, 123, 32, 100, 105, 115, 112,
-    108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 32, 125, 32, 115, 117, 109,
-    109, 97, 114, 121, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32,
-    98, 108, 111, 99, 107, 32, 125, 32, 115, 117, 109, 109, 97, 114, 121, 58,
-    58, 45, 119, 101, 98, 107, 105, 116, 45, 100, 101, 116, 97, 105, 108, 115,
-    45, 109, 97, 114, 107, 101, 114, 32, 123, 32, 100, 105, 115, 112, 108, 97,
-    121, 58, 32, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111, 99, 107, 59,
-    32, 119, 105, 100, 116, 104, 58, 32, 48, 46, 54, 54, 101, 109, 59, 32,
-    104, 101, 105, 103, 104, 116, 58, 32, 48, 46, 54, 54, 101, 109, 59, 32,
-    109, 97, 114, 103, 105, 110, 45, 114, 105, 103, 104, 116, 58, 32, 48, 46,
-    52, 101, 109, 59, 32, 125, 32, 64, 112, 97, 103, 101, 32, 123, 32, 115,
-    105, 122, 101, 58, 32, 97, 117, 116, 111, 59, 32, 109, 97, 114, 103, 105,
-    110, 58, 32, 97, 117, 116, 111, 59, 32, 112, 97, 100, 100, 105, 110, 103,
-    58, 32, 48, 112, 120, 59, 32, 98, 111, 114, 100, 101, 114, 45, 119, 105,
-    100, 116, 104, 58, 32, 48, 112, 120, 59, 32, 125
+    112, 101, 61, 34, 102, 105, 108, 101, 34, 93, 58, 102, 111, 99, 117, 115,
+    58, 58, 45, 119, 101, 98, 107, 105, 116, 45, 102, 105, 108, 101, 45, 117,
+    112, 108, 111, 97, 100, 45, 98, 117, 116, 116, 111, 110, 32, 123, 32, 111,
+    117, 116, 108, 105, 110, 101, 45, 111, 102, 102, 115, 101, 116, 58, 32, 48,
+    32, 125, 32, 97, 58, 45, 119, 101, 98, 107, 105, 116, 45, 97, 110, 121,
+    45, 108, 105, 110, 107, 32, 123, 32, 99, 111, 108, 111, 114, 58, 32, 45,
+    119, 101, 98, 107, 105, 116, 45, 108, 105, 110, 107, 59, 32, 116, 101, 120,
+    116, 45, 100, 101, 99, 111, 114, 97, 116, 105, 111, 110, 58, 32, 117, 110,
+    100, 101, 114, 108, 105, 110, 101, 59, 32, 99, 117, 114, 115, 111, 114, 58,
+    32, 97, 117, 116, 111, 59, 32, 125, 32, 97, 58, 45, 119, 101, 98, 107,
+    105, 116, 45, 97, 110, 121, 45, 108, 105, 110, 107, 58, 97, 99, 116, 105,
+    118, 101, 32, 123, 32, 99, 111, 108, 111, 114, 58, 32, 45, 119, 101, 98,
+    107, 105, 116, 45, 97, 99, 116, 105, 118, 101, 108, 105, 110, 107, 32, 125,
+    32, 114, 117, 98, 121, 44, 32, 114, 116, 32, 123, 32, 116, 101, 120, 116,
+    45, 105, 110, 100, 101, 110, 116, 58, 32, 48, 59, 32, 125, 32, 114, 116,
+    32, 123, 32, 108, 105, 110, 101, 45, 104, 101, 105, 103, 104, 116, 58, 32,
+    110, 111, 114, 109, 97, 108, 59, 32, 45, 119, 101, 98, 107, 105, 116, 45,
+    116, 101, 120, 116, 45, 101, 109, 112, 104, 97, 115, 105, 115, 58, 32, 110,
+    111, 110, 101, 59, 32, 125, 32, 114, 117, 98, 121, 32, 62, 32, 114, 116,
+    32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99,
+    107, 59, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 53, 48,
+    37, 59, 32, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 32, 45,
+    119, 101, 98, 107, 105, 116, 45, 97, 117, 116, 111, 59, 32, 125, 32, 114,
+    117, 98, 121, 32, 62, 32, 114, 112, 32, 123, 32, 100, 105, 115, 112, 108,
+    97, 121, 58, 32, 110, 111, 110, 101, 59, 32, 125, 32, 110, 111, 102, 114,
+    97, 109, 101, 115, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32,
+    110, 111, 110, 101, 32, 125, 32, 102, 114, 97, 109, 101, 115, 101, 116, 44,
+    32, 102, 114, 97, 109, 101, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121,
+    58, 32, 98, 108, 111, 99, 107, 32, 125, 32, 102, 114, 97, 109, 101, 115,
+    101, 116, 32, 123, 32, 98, 111, 114, 100, 101, 114, 45, 99, 111, 108, 111,
+    114, 58, 32, 105, 110, 104, 101, 114, 105, 116, 32, 125, 32, 105, 102, 114,
+    97, 109, 101, 32, 123, 32, 98, 111, 114, 100, 101, 114, 58, 32, 50, 112,
+    120, 32, 105, 110, 115, 101, 116, 32, 125, 32, 100, 101, 116, 97, 105, 108,
+    115, 32, 123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111,
+    99, 107, 32, 125, 32, 115, 117, 109, 109, 97, 114, 121, 32, 123, 32, 100,
+    105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 32, 125, 32,
+    115, 117, 109, 109, 97, 114, 121, 58, 58, 45, 119, 101, 98, 107, 105, 116,
+    45, 100, 101, 116, 97, 105, 108, 115, 45, 109, 97, 114, 107, 101, 114, 32,
+    123, 32, 100, 105, 115, 112, 108, 97, 121, 58, 32, 105, 110, 108, 105, 110,
+    101, 45, 98, 108, 111, 99, 107, 59, 32, 119, 105, 100, 116, 104, 58, 32,
+    48, 46, 54, 54, 101, 109, 59, 32, 104, 101, 105, 103, 104, 116, 58, 32,
+    48, 46, 54, 54, 101, 109, 59, 32, 109, 97, 114, 103, 105, 110, 45, 114,
+    105, 103, 104, 116, 58, 32, 48, 46, 52, 101, 109, 59, 32, 125, 32, 64,
+    112, 97, 103, 101, 32, 123, 32, 115, 105, 122, 101, 58, 32, 97, 117, 116,
+    111, 59, 32, 109, 97, 114, 103, 105, 110, 58, 32, 97, 117, 116, 111, 59,
+    32, 112, 97, 100, 100, 105, 110, 103, 58, 32, 48, 112, 120, 59, 32, 98,
+    111, 114, 100, 101, 114, 45, 119, 105, 100, 116, 104, 58, 32, 48, 112, 120,
+    59, 32, 125
 };
 extern const char quirksUserAgentStyleSheet[351] = {
     105, 109, 103, 91, 97, 108, 105, 103, 110, 61, 34, 108, 101, 102, 116, 34,
Index: src/3rdparty/webkit/Source/WebCore/generated/CSSValueKeywords.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/generated/CSSValueKeywords.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/generated/CSSValueKeywords.cpp	(revision 43814)
@@ -37,7 +37,7 @@
 #include <string.h>
 
 namespace WebCore {
-/* maximum key range = 9220, duplicates = 0 */
+/* maximum key range = 10068, duplicates = 0 */
 
 class CSSValueKeywordsHash
 {
@@ -52,32 +52,32 @@
 {
   static const unsigned short asso_values[] =
     {
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220,  545,  480, 9220, 9220,    0,
-        85,   25,   10,   95,    5,   80,   40,   35, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220,  300,   40,  210,
-       550,    5,    0,    2,  865,   10, 1910, 1525,   85,    0,
-       355,    5,  160,  172,  700,   70,   15,   15,  287,  382,
-      1545,  352,   34,    0, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220, 9220,
-      9220, 9220, 9220, 9220, 9220, 9220, 9220
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068,   545,   805, 10068, 10068,     0,
+         85,    25,    10,    95,     5,    80,    40,    35, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068,   300,    40,   210,
+        550,     5,     0,     2,   865,    10,  1910,   287,    85,     0,
+        355,     5,   160,   632,   700,    70,    15,    15,   287,   382,
+         49,  1715,  1632,     0, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068, 10068,
+      10068, 10068, 10068, 10068, 10068, 10068, 10068
     };
   register int hval = 0;
 
@@ -200,11 +200,11 @@
 {
   enum
     {
-      TOTAL_KEYWORDS = 668,
+      TOTAL_KEYWORDS = 672,
       MIN_WORD_LENGTH = 2,
       MAX_WORD_LENGTH = 36,
       MIN_HASH_VALUE = 0,
-      MAX_HASH_VALUE = 9219
+      MAX_HASH_VALUE = 10067
     };
 
   static const struct Value value_word_list[] =
@@ -225,7 +225,7 @@
       {"medium", CSSValueMedium},
 #line 59 "CSSValueKeywords.gperf"
       {"900", CSSValue900},
-#line 591 "CSSValueKeywords.gperf"
+#line 595 "CSSValueKeywords.gperf"
       {"indigo", CSSValueIndigo},
 #line 58 "CSSValueKeywords.gperf"
       {"800", CSSValue800},
@@ -237,7 +237,7 @@
       {"inset", CSSValueInset},
 #line 476 "CSSValueKeywords.gperf"
       {"flat", CSSValueFlat},
-#line 659 "CSSValueKeywords.gperf"
+#line 663 "CSSValueKeywords.gperf"
       {"tan", CSSValueTan},
 #line 478 "CSSValueKeywords.gperf"
       {"ease", CSSValueEase},
@@ -253,8 +253,12 @@
       {"500", CSSValue500},
 #line 165 "CSSValueKeywords.gperf"
       {"left", CSSValueLeft},
+#line 124 "CSSValueKeywords.gperf"
+      {"menutext", CSSValueMenutext},
 #line 197 "CSSValueKeywords.gperf"
       {"urdu", CSSValueUrdu},
+#line 122 "CSSValueKeywords.gperf"
+      {"infotext", CSSValueInfotext},
 #line 322 "CSSValueKeywords.gperf"
       {"b4", CSSValueB4},
 #line 100 "CSSValueKeywords.gperf"
@@ -265,12 +269,10 @@
       {"lr", CSSValueLr},
 #line 308 "CSSValueKeywords.gperf"
       {"ltr", CSSValueLtr},
-#line 617 "CSSValueKeywords.gperf"
+#line 621 "CSSValueKeywords.gperf"
       {"mediumblue", CSSValueMediumblue},
-#line 534 "CSSValueKeywords.gperf"
+#line 538 "CSSValueKeywords.gperf"
       {"font", CSSValueFont},
-#line 381 "CSSValueKeywords.gperf"
-      {"up", CSSValueUp},
 #line 437 "CSSValueKeywords.gperf"
       {"menulist", CSSValueMenulist},
 #line 64 "CSSValueKeywords.gperf"
@@ -283,12 +285,14 @@
       {"bottom", CSSValueBottom},
 #line 225 "CSSValueKeywords.gperf"
       {"oromo", CSSValueOromo},
-#line 640 "CSSValueKeywords.gperf"
+#line 644 "CSSValueKeywords.gperf"
       {"peru", CSSValuePeru},
 #line 527 "CSSValueKeywords.gperf"
       {"ellipse", CSSValueEllipse},
-#line 653 "CSSValueKeywords.gperf"
+#line 657 "CSSValueKeywords.gperf"
       {"slateblue", CSSValueSlateblue},
+#line 152 "CSSValueKeywords.gperf"
+      {"xor", CSSValueXor},
 #line 190 "CSSValueKeywords.gperf"
       {"lao", CSSValueLao},
 #line 280 "CSSValueKeywords.gperf"
@@ -299,21 +303,17 @@
       {"a5", CSSValueA5},
 #line 315 "CSSValueKeywords.gperf"
       {"a3", CSSValueA3},
-#line 658 "CSSValueKeywords.gperf"
+#line 662 "CSSValueKeywords.gperf"
       {"steelblue", CSSValueSteelblue},
 #line 396 "CSSValueKeywords.gperf"
       {"ellipsis", CSSValueEllipsis},
 #line 88 "CSSValueKeywords.gperf"
       {"blue", CSSValueBlue},
-#line 652 "CSSValueKeywords.gperf"
-      {"skyblue", CSSValueSkyblue},
 #line 449 "CSSValueKeywords.gperf"
       {"caret", CSSValueCaret},
-#line 161 "CSSValueKeywords.gperf"
-      {"top", CSSValueTop},
 #line 261 "CSSValueKeywords.gperf"
       {"table", CSSValueTable},
-#line 674 "CSSValueKeywords.gperf"
+#line 678 "CSSValueKeywords.gperf"
       {"butt", CSSValueButt},
 #line 363 "CSSValueKeywords.gperf"
       {"static", CSSValueStatic},
@@ -321,8 +321,6 @@
       {"italic", CSSValueItalic},
 #line 391 "CSSValueKeywords.gperf"
       {"element", CSSValueElement},
-#line 302 "CSSValueKeywords.gperf"
-      {"text", CSSValueText},
 #line 255 "CSSValueKeywords.gperf"
       {"inline", CSSValueInline},
 #line 526 "CSSValueKeywords.gperf"
@@ -331,14 +329,12 @@
       {"a4", CSSValueA4},
 #line 29 "CSSValueKeywords.gperf"
       {"outset", CSSValueOutset},
+#line 674 "CSSValueKeywords.gperf"
+      {"new", CSSValueNew},
 #line 385 "CSSValueKeywords.gperf"
       {"infinite", CSSValueInfinite},
-#line 44 "CSSValueKeywords.gperf"
-      {"oblique", CSSValueOblique},
-#line 548 "CSSValueKeywords.gperf"
+#line 552 "CSSValueKeywords.gperf"
       {"cadetblue", CSSValueCadetblue},
-#line 136 "CSSValueKeywords.gperf"
-      {"grey", CSSValueGrey},
 #line 218 "CSSValueKeywords.gperf"
       {"ethiopic", CSSValueEthiopic},
 #line 324 "CSSValueKeywords.gperf"
@@ -349,40 +345,36 @@
       {"bengali", CSSValueBengali},
 #line 508 "CSSValueKeywords.gperf"
       {"manual", CSSValueManual},
-#line 642 "CSSValueKeywords.gperf"
+#line 646 "CSSValueKeywords.gperf"
       {"plum", CSSValuePlum},
-#line 90 "CSSValueKeywords.gperf"
-      {"gray", CSSValueGray},
-#line 647 "CSSValueKeywords.gperf"
+#line 492 "CSSValueKeywords.gperf"
+      {"stroke", CSSValueStroke},
+#line 651 "CSSValueKeywords.gperf"
       {"salmon", CSSValueSalmon},
 #line 93 "CSSValueKeywords.gperf"
       {"maroon", CSSValueMaroon},
 #line 96 "CSSValueKeywords.gperf"
       {"orange", CSSValueOrange},
-#line 499 "CSSValueKeywords.gperf"
-      {"optimizespeed", CSSValueOptimizespeed},
-#line 405 "CSSValueKeywords.gperf"
-      {"space", CSSValueSpace},
-#line 676 "CSSValueKeywords.gperf"
+#line 680 "CSSValueKeywords.gperf"
       {"bevel", CSSValueBevel},
 #line 24 "CSSValueKeywords.gperf"
       {"none", CSSValueNone},
 #line 27 "CSSValueKeywords.gperf"
       {"groove", CSSValueGroove},
-#line 522 "CSSValueKeywords.gperf"
-      {"open", CSSValueOpen},
 #line 278 "CSSValueKeywords.gperf"
       {"move", CSSValueMove},
 #line 155 "CSSValueKeywords.gperf"
       {"baseline", CSSValueBaseline},
 #line 342 "CSSValueKeywords.gperf"
       {"level", CSSValueLevel},
-#line 621 "CSSValueKeywords.gperf"
+#line 625 "CSSValueKeywords.gperf"
       {"mediumslateblue", CSSValueMediumslateblue},
 #line 377 "CSSValueKeywords.gperf"
       {"multiple", CSSValueMultiple},
 #line 157 "CSSValueKeywords.gperf"
       {"sub", CSSValueSub},
+#line 87 "CSSValueKeywords.gperf"
+      {"black", CSSValueBlack},
 #line 330 "CSSValueKeywords.gperf"
       {"cross", CSSValueCross},
 #line 174 "CSSValueKeywords.gperf"
@@ -391,37 +383,35 @@
       {"crop", CSSValueCrop},
 #line 274 "CSSValueKeywords.gperf"
       {"auto", CSSValueAuto},
-#line 630 "CSSValueKeywords.gperf"
+#line 634 "CSSValueKeywords.gperf"
       {"oldlace", CSSValueOldlace},
 #line 383 "CSSValueKeywords.gperf"
       {"slow", CSSValueSlow},
-#line 656 "CSSValueKeywords.gperf"
+#line 660 "CSSValueKeywords.gperf"
       {"snow", CSSValueSnow},
 #line 362 "CSSValueKeywords.gperf"
       {"show", CSSValueShow},
+#line 597 "CSSValueKeywords.gperf"
+      {"khaki", CSSValueKhaki},
 #line 62 "CSSValueKeywords.gperf"
       {"small", CSSValueSmall},
-#line 555 "CSSValueKeywords.gperf"
-      {"cyan", CSSValueCyan},
 #line 481 "CSSValueKeywords.gperf"
       {"ease-out", CSSValueEaseOut},
-#line 662 "CSSValueKeywords.gperf"
-      {"turquoise", CSSValueTurquoise},
+#line 381 "CSSValueKeywords.gperf"
+      {"up", CSSValueUp},
 #line 319 "CSSValueKeywords.gperf"
       {"absolute", CSSValueAbsolute},
-#line 288 "CSSValueKeywords.gperf"
-      {"e-resize", CSSValueEResize},
-#line 512 "CSSValueKeywords.gperf"
-      {"lr-tb", CSSValueLrTb},
-#line 637 "CSSValueKeywords.gperf"
+#line 641 "CSSValueKeywords.gperf"
       {"palevioletred", CSSValuePalevioletred},
+#line 256 "CSSValueKeywords.gperf"
+      {"block", CSSValueBlock},
 #line 510 "CSSValueKeywords.gperf"
       {"rl", CSSValueRl},
 #line 98 "CSSValueKeywords.gperf"
       {"red", CSSValueRed},
-#line 664 "CSSValueKeywords.gperf"
+#line 668 "CSSValueKeywords.gperf"
       {"wheat", CSSValueWheat},
-#line 585 "CSSValueKeywords.gperf"
+#line 589 "CSSValueKeywords.gperf"
       {"gold", CSSValueGold},
 #line 309 "CSSValueKeywords.gperf"
       {"rtl", CSSValueRtl},
@@ -435,10 +425,8 @@
       {"under", CSSValueUnder},
 #line 486 "CSSValueKeywords.gperf"
       {"reset", CSSValueReset},
-#line 545 "CSSValueKeywords.gperf"
+#line 549 "CSSValueKeywords.gperf"
       {"blueviolet", CSSValueBlueviolet},
-#line 294 "CSSValueKeywords.gperf"
-      {"s-resize", CSSValueSResize},
 #line 48 "CSSValueKeywords.gperf"
       {"bold", CSSValueBold},
 #line 22 "CSSValueKeywords.gperf"
@@ -449,40 +437,40 @@
       {"content", CSSValueContent},
 #line 97 "CSSValueKeywords.gperf"
       {"purple", CSSValuePurple},
-#line 83 "CSSValueKeywords.gperf"
-      {"fantasy", CSSValueFantasy},
 #line 244 "CSSValueKeywords.gperf"
       {"footnotes", CSSValueFootnotes},
 #line 32 "CSSValueKeywords.gperf"
       {"solid", CSSValueSolid},
 #line 339 "CSSValueKeywords.gperf"
       {"ledger", CSSValueLedger},
-#line 34 "CSSValueKeywords.gperf"
-      {"caption", CSSValueCaption},
+#line 113 "CSSValueKeywords.gperf"
+      {"buttontext", CSSValueButtontext},
+#line 161 "CSSValueKeywords.gperf"
+      {"top", CSSValueTop},
 #line 400 "CSSValueKeywords.gperf"
       {"wave", CSSValueWave},
+#line 407 "CSSValueKeywords.gperf"
+      {"checkbox", CSSValueCheckbox},
 #line 341 "CSSValueKeywords.gperf"
       {"letter", CSSValueLetter},
-#line 102 "CSSValueKeywords.gperf"
-      {"yellow", CSSValueYellow},
-#line 551 "CSSValueKeywords.gperf"
+#line 439 "CSSValueKeywords.gperf"
+      {"menulist-text", CSSValueMenulistText},
+#line 555 "CSSValueKeywords.gperf"
       {"coral", CSSValueCoral},
-#line 620 "CSSValueKeywords.gperf"
+#line 624 "CSSValueKeywords.gperf"
       {"mediumseagreen", CSSValueMediumseagreen},
 #line 369 "CSSValueKeywords.gperf"
       {"start", CSSValueStart},
 #line 503 "CSSValueKeywords.gperf"
       {"floating", CSSValueFloating},
-#line 661 "CSSValueKeywords.gperf"
+#line 665 "CSSValueKeywords.gperf"
       {"tomato", CSSValueTomato},
 #line 401 "CSSValueKeywords.gperf"
       {"continuous", CSSValueContinuous},
 #line 360 "CSSValueKeywords.gperf"
       {"scroll", CSSValueScroll},
-#line 310 "CSSValueKeywords.gperf"
-      {"capitalize", CSSValueCapitalize},
-#line 143 "CSSValueKeywords.gperf"
-      {"copy", CSSValueCopy},
+#line 44 "CSSValueKeywords.gperf"
+      {"oblique", CSSValueOblique},
 #line 69 "CSSValueKeywords.gperf"
       {"larger", CSSValueLarger},
 #line 84 "CSSValueKeywords.gperf"
@@ -497,6 +485,8 @@
       {"outside", CSSValueOutside},
 #line 194 "CSSValueKeywords.gperf"
       {"octal", CSSValueOctal},
+#line 405 "CSSValueKeywords.gperf"
+      {"space", CSSValueSpace},
 #line 318 "CSSValueKeywords.gperf"
       {"above", CSSValueAbove},
 #line 196 "CSSValueKeywords.gperf"
@@ -513,23 +503,25 @@
       {"somali", CSSValueSomali},
 #line 314 "CSSValueKeywords.gperf"
       {"collapse", CSSValueCollapse},
-#line 493 "CSSValueKeywords.gperf"
-      {"spell-out", CSSValueSpellOut},
+#line 522 "CSSValueKeywords.gperf"
+      {"open", CSSValueOpen},
+#line 346 "CSSValueKeywords.gperf"
+      {"lower", CSSValueLower},
+#line 554 "CSSValueKeywords.gperf"
+      {"chocolate", CSSValueChocolate},
 #line 550 "CSSValueKeywords.gperf"
-      {"chocolate", CSSValueChocolate},
-#line 505 "CSSValueKeywords.gperf"
-      {"maximized", CSSValueMaximized},
-#line 546 "CSSValueKeywords.gperf"
       {"brown", CSSValueBrown},
 #line 223 "CSSValueKeywords.gperf"
       {"hangul", CSSValueHangul},
+#line 512 "CSSValueKeywords.gperf"
+      {"lr-tb", CSSValueLrTb},
+#line 540 "CSSValueKeywords.gperf"
+      {"inline-box", CSSValueInlineBox},
 #line 304 "CSSValueKeywords.gperf"
       {"help", CSSValueHelp},
-#line 291 "CSSValueKeywords.gperf"
-      {"n-resize", CSSValueNResize},
-#line 455 "CSSValueKeywords.gperf"
-      {"textfield", CSSValueTextfield},
-#line 582 "CSSValueKeywords.gperf"
+#line 281 "CSSValueKeywords.gperf"
+      {"context-menu", CSSValueContextMenu},
+#line 586 "CSSValueKeywords.gperf"
       {"forestgreen", CSSValueForestgreen},
 #line 209 "CSSValueKeywords.gperf"
       {"afar", CSSValueAfar},
@@ -537,11 +529,9 @@
       {"srgb", CSSValueSrgb},
 #line 469 "CSSValueKeywords.gperf"
       {"contain", CSSValueContain},
-#line 295 "CSSValueKeywords.gperf"
-      {"w-resize", CSSValueWResize},
-#line 624 "CSSValueKeywords.gperf"
+#line 628 "CSSValueKeywords.gperf"
       {"mediumvioletred", CSSValueMediumvioletred},
-#line 619 "CSSValueKeywords.gperf"
+#line 623 "CSSValueKeywords.gperf"
       {"mediumpurple", CSSValueMediumpurple},
 #line 35 "CSSValueKeywords.gperf"
       {"icon", CSSValueIcon},
@@ -551,12 +541,16 @@
       {"loud", CSSValueLoud},
 #line 519 "CSSValueKeywords.gperf"
       {"over", CSSValueOver},
+#line 560 "CSSValueKeywords.gperf"
+      {"darkblue", CSSValueDarkblue},
 #line 497 "CSSValueKeywords.gperf"
       {"antialiased", CSSValueAntialiased},
-#line 159 "CSSValueKeywords.gperf"
-      {"text-top", CSSValueTextTop},
+#line 666 "CSSValueKeywords.gperf"
+      {"turquoise", CSSValueTurquoise},
 #line 475 "CSSValueKeywords.gperf"
       {"paused", CSSValuePaused},
+#line 382 "CSSValueKeywords.gperf"
+      {"down", CSSValueDown},
 #line 336 "CSSValueKeywords.gperf"
       {"invert", CSSValueInvert},
 #line 467 "CSSValueKeywords.gperf"
@@ -565,102 +559,82 @@
       {"embed", CSSValueEmbed},
 #line 33 "CSSValueKeywords.gperf"
       {"double", CSSValueDouble},
-#line 94 "CSSValueKeywords.gperf"
-      {"navy", CSSValueNavy},
 #line 123 "CSSValueKeywords.gperf"
       {"match", CSSValueMatch},
-#line 535 "CSSValueKeywords.gperf"
-      {"glyphs", CSSValueGlyphs},
-#line 532 "CSSValueKeywords.gperf"
-      {"upright", CSSValueUpright},
 #line 380 "CSSValueKeywords.gperf"
       {"ahead", CSSValueAhead},
 #line 528 "CSSValueKeywords.gperf"
       {"closest-side", CSSValueClosestSide},
 #line 127 "CSSValueKeywords.gperf"
       {"threedface", CSSValueThreedface},
-#line 649 "CSSValueKeywords.gperf"
+#line 653 "CSSValueKeywords.gperf"
       {"seagreen", CSSValueSeagreen},
 #line 344 "CSSValueKeywords.gperf"
       {"local", CSSValueLocal},
 #line 366 "CSSValueKeywords.gperf"
       {"underline", CSSValueUnderline},
-#line 655 "CSSValueKeywords.gperf"
-      {"slategrey", CSSValueSlategrey},
-#line 138 "CSSValueKeywords.gperf"
-      {"repeat", CSSValueRepeat},
-#line 328 "CSSValueKeywords.gperf"
-      {"close-quote", CSSValueCloseQuote},
 #line 142 "CSSValueKeywords.gperf"
       {"clear", CSSValueClear},
-#line 650 "CSSValueKeywords.gperf"
+#line 654 "CSSValueKeywords.gperf"
       {"seashell", CSSValueSeashell},
 #line 357 "CSSValueKeywords.gperf"
       {"pre-line", CSSValuePreLine},
 #line 110 "CSSValueKeywords.gperf"
       {"buttonface", CSSValueButtonface},
-#line 158 "CSSValueKeywords.gperf"
-      {"super", CSSValueSuper},
-#line 513 "CSSValueKeywords.gperf"
-      {"rl-tb", CSSValueRlTb},
 #line 283 "CSSValueKeywords.gperf"
       {"progress", CSSValueProgress},
+#line 557 "CSSValueKeywords.gperf"
+      {"cornsilk", CSSValueCornsilk},
 #line 368 "CSSValueKeywords.gperf"
       {"stretch", CSSValueStretch},
-#line 667 "CSSValueKeywords.gperf"
-      {"nonzero", CSSValueNonzero},
-#line 635 "CSSValueKeywords.gperf"
+#line 34 "CSSValueKeywords.gperf"
+      {"caption", CSSValueCaption},
+#line 639 "CSSValueKeywords.gperf"
       {"palegreen", CSSValuePalegreen},
-#line 684 "CSSValueKeywords.gperf"
+#line 688 "CSSValueKeywords.gperf"
       {"hanging", CSSValueHanging},
 #line 269 "CSSValueKeywords.gperf"
       {"table-cell", CSSValueTableCell},
-#line 634 "CSSValueKeywords.gperf"
+#line 638 "CSSValueKeywords.gperf"
       {"palegoldenrod", CSSValuePalegoldenrod},
-#line 352 "CSSValueKeywords.gperf"
-      {"open-quote", CSSValueOpenQuote},
 #line 262 "CSSValueKeywords.gperf"
       {"inline-table", CSSValueInlineTable},
-#line 541 "CSSValueKeywords.gperf"
+#line 545 "CSSValueKeywords.gperf"
       {"azure", CSSValueAzure},
 #line 30 "CSSValueKeywords.gperf"
       {"dotted", CSSValueDotted},
-#line 679 "CSSValueKeywords.gperf"
+#line 374 "CSSValueKeywords.gperf"
+      {"inline-axis", CSSValueInlineAxis},
+#line 683 "CSSValueKeywords.gperf"
       {"central", CSSValueCentral},
 #line 359 "CSSValueKeywords.gperf"
       {"relative", CSSValueRelative},
-#line 37 "CSSValueKeywords.gperf"
-      {"message-box", CSSValueMessageBox},
 #line 340 "CSSValueKeywords.gperf"
       {"legal", CSSValueLegal},
+#line 61 "CSSValueKeywords.gperf"
+      {"x-small", CSSValueXSmall},
 #line 68 "CSSValueKeywords.gperf"
       {"smaller", CSSValueSmaller},
-#line 160 "CSSValueKeywords.gperf"
-      {"text-bottom", CSSValueTextBottom},
-#line 292 "CSSValueKeywords.gperf"
-      {"se-resize", CSSValueSeResize},
-#line 191 "CSSValueKeywords.gperf"
-      {"malayalam", CSSValueMalayalam},
+#line 114 "CSSValueKeywords.gperf"
+      {"captiontext", CSSValueCaptiontext},
+#line 578 "CSSValueKeywords.gperf"
+      {"darkviolet", CSSValueDarkviolet},
+#line 184 "CSSValueKeywords.gperf"
+      {"khmer", CSSValueKhmer},
 #line 393 "CSSValueKeywords.gperf"
       {"intrinsic", CSSValueIntrinsic},
-#line 657 "CSSValueKeywords.gperf"
-      {"springgreen", CSSValueSpringgreen},
-#line 688 "CSSValueKeywords.gperf"
-      {"reset-size", CSSValueResetSize},
 #line 321 "CSSValueKeywords.gperf"
       {"avoid", CSSValueAvoid},
 #line 259 "CSSValueKeywords.gperf"
       {"compact", CSSValueCompact},
-#line 645 "CSSValueKeywords.gperf"
-      {"royalblue", CSSValueRoyalblue},
 #line 338 "CSSValueKeywords.gperf"
       {"landscape", CSSValueLandscape},
-#line 193 "CSSValueKeywords.gperf"
-      {"myanmar", CSSValueMyanmar},
 #line 355 "CSSValueKeywords.gperf"
       {"portrait", CSSValuePortrait},
-#line 639 "CSSValueKeywords.gperf"
+#line 643 "CSSValueKeywords.gperf"
       {"peachpuff", CSSValuePeachpuff},
+#line 493 "CSSValueKeywords.gperf"
+      {"spell-out", CSSValueSpellOut},
 #line 49 "CSSValueKeywords.gperf"
       {"bolder", CSSValueBolder},
 #line 470 "CSSValueKeywords.gperf"
@@ -669,144 +643,174 @@
       {"hand", CSSValueHand},
 #line 438 "CSSValueKeywords.gperf"
       {"menulist-button", CSSValueMenulistButton},
-#line 654 "CSSValueKeywords.gperf"
-      {"slategray", CSSValueSlategray},
-#line 514 "CSSValueKeywords.gperf"
-      {"tb-rl", CSSValueTbRl},
+#line 243 "CSSValueKeywords.gperf"
+      {"asterisks", CSSValueAsterisks},
+#line 440 "CSSValueKeywords.gperf"
+      {"menulist-textfield", CSSValueMenulistTextfield},
+#line 574 "CSSValueKeywords.gperf"
+      {"darkslateblue", CSSValueDarkslateblue},
 #line 178 "CSSValueKeywords.gperf"
       {"decimal", CSSValueDecimal},
 #line 81 "CSSValueKeywords.gperf"
       {"sans-serif", CSSValueSansSerif},
+#line 579 "CSSValueKeywords.gperf"
+      {"deeppink", CSSValueDeeppink},
 #line 463 "CSSValueKeywords.gperf"
       {"border", CSSValueBorder},
 #line 249 "CSSValueKeywords.gperf"
       {"georgian", CSSValueGeorgian},
-#line 584 "CSSValueKeywords.gperf"
+#line 588 "CSSValueKeywords.gperf"
       {"ghostwhite", CSSValueGhostwhite},
-#line 666 "CSSValueKeywords.gperf"
-      {"yellowgreen", CSSValueYellowgreen},
+#line 187 "CSSValueKeywords.gperf"
+      {"gurmukhi", CSSValueGurmukhi},
 #line 354 "CSSValueKeywords.gperf"
       {"overline", CSSValueOverline},
 #line 482 "CSSValueKeywords.gperf"
       {"ease-in-out", CSSValueEaseInOut},
-#line 361 "CSSValueKeywords.gperf"
-      {"separate", CSSValueSeparate},
-#line 579 "CSSValueKeywords.gperf"
+#line 513 "CSSValueKeywords.gperf"
+      {"rl-tb", CSSValueRlTb},
+#line 583 "CSSValueKeywords.gperf"
       {"dodgerblue", CSSValueDodgerblue},
-#line 615 "CSSValueKeywords.gperf"
+#line 619 "CSSValueKeywords.gperf"
       {"magenta", CSSValueMagenta},
-#line 685 "CSSValueKeywords.gperf"
+#line 312 "CSSValueKeywords.gperf"
+      {"lowercase", CSSValueLowercase},
+#line 689 "CSSValueKeywords.gperf"
       {"mathematical", CSSValueMathematical},
 #line 86 "CSSValueKeywords.gperf"
       {"aqua", CSSValueAqua},
 #line 392 "CSSValueKeywords.gperf"
       {"ignore", CSSValueIgnore},
-#line 124 "CSSValueKeywords.gperf"
-      {"menutext", CSSValueMenutext},
-#line 122 "CSSValueKeywords.gperf"
-      {"infotext", CSSValueInfotext},
-#line 592 "CSSValueKeywords.gperf"
-      {"ivory", CSSValueIvory},
-#line 311 "CSSValueKeywords.gperf"
-      {"uppercase", CSSValueUppercase},
+#line 600 "CSSValueKeywords.gperf"
+      {"lawngreen", CSSValueLawngreen},
+#line 169 "CSSValueKeywords.gperf"
+      {"-webkit-left", CSSValueWebkitLeft},
+#line 279 "CSSValueKeywords.gperf"
+      {"vertical-text", CSSValueVerticalText},
+#line 532 "CSSValueKeywords.gperf"
+      {"upright", CSSValueUpright},
 #line 485 "CSSValueKeywords.gperf"
       {"document", CSSValueDocument},
-#line 628 "CSSValueKeywords.gperf"
+#line 138 "CSSValueKeywords.gperf"
+      {"repeat", CSSValueRepeat},
+#line 632 "CSSValueKeywords.gperf"
       {"moccasin", CSSValueMoccasin},
-#line 289 "CSSValueKeywords.gperf"
-      {"ne-resize", CSSValueNeResize},
-#line 297 "CSSValueKeywords.gperf"
-      {"ns-resize", CSSValueNsResize},
+#line 328 "CSSValueKeywords.gperf"
+      {"close-quote", CSSValueCloseQuote},
+#line 567 "CSSValueKeywords.gperf"
+      {"darkmagenta", CSSValueDarkmagenta},
+#line 375 "CSSValueKeywords.gperf"
+      {"block-axis", CSSValueBlockAxis},
 #line 517 "CSSValueKeywords.gperf"
       {"vertical-lr", CSSValueVerticalLr},
 #line 412 "CSSValueKeywords.gperf"
       {"button-bevel", CSSValueButtonBevel},
-#line 460 "CSSValueKeywords.gperf"
-      {"textarea", CSSValueTextarea},
-#line 492 "CSSValueKeywords.gperf"
-      {"stroke", CSSValueStroke},
+#line 158 "CSSValueKeywords.gperf"
+      {"super", CSSValueSuper},
 #line 387 "CSSValueKeywords.gperf"
       {"alternate", CSSValueAlternate},
 #line 484 "CSSValueKeywords.gperf"
       {"step-end", CSSValueStepEnd},
-#line 466 "CSSValueKeywords.gperf"
-      {"content-box", CSSValueContentBox},
+#line 403 "CSSValueKeywords.gperf"
+      {"break-all", CSSValueBreakAll},
 #line 474 "CSSValueKeywords.gperf"
       {"running", CSSValueRunning},
 #line 471 "CSSValueKeywords.gperf"
       {"logical", CSSValueLogical},
 #line 504 "CSSValueKeywords.gperf"
       {"fullscreen", CSSValueFullscreen},
-#line 632 "CSSValueKeywords.gperf"
+#line 351 "CSSValueKeywords.gperf"
+      {"nowrap", CSSValueNowrap},
+#line 636 "CSSValueKeywords.gperf"
       {"orangered", CSSValueOrangered},
-#line 300 "CSSValueKeywords.gperf"
-      {"col-resize", CSSValueColResize},
-#line 686 "CSSValueKeywords.gperf"
+#line 690 "CSSValueKeywords.gperf"
       {"use-script", CSSValueUseScript},
+#line 302 "CSSValueKeywords.gperf"
+      {"text", CSSValueText},
 #line 246 "CSSValueKeywords.gperf"
       {"armenian", CSSValueArmenian},
-#line 549 "CSSValueKeywords.gperf"
+#line 572 "CSSValueKeywords.gperf"
+      {"darksalmon", CSSValueDarksalmon},
+#line 647 "CSSValueKeywords.gperf"
+      {"powderblue", CSSValuePowderblue},
+#line 553 "CSSValueKeywords.gperf"
       {"chartreuse", CSSValueChartreuse},
-#line 152 "CSSValueKeywords.gperf"
-      {"xor", CSSValueXor},
-#line 547 "CSSValueKeywords.gperf"
-      {"burlywood", CSSValueBurlywood},
-#line 539 "CSSValueKeywords.gperf"
-      {"antiquewhite", CSSValueAntiquewhite},
+#line 568 "CSSValueKeywords.gperf"
+      {"darkolivegreen", CSSValueDarkolivegreen},
+#line 136 "CSSValueKeywords.gperf"
+      {"grey", CSSValueGrey},
 #line 42 "CSSValueKeywords.gperf"
       {"status-bar", CSSValueStatusBar},
-#line 87 "CSSValueKeywords.gperf"
-      {"black", CSSValueBlack},
-#line 353 "CSSValueKeywords.gperf"
-      {"overlay", CSSValueOverlay},
-#line 669 "CSSValueKeywords.gperf"
+#line 514 "CSSValueKeywords.gperf"
+      {"tb-rl", CSSValueTbRl},
+#line 164 "CSSValueKeywords.gperf"
+      {"-webkit-auto", CSSValueWebkitAuto},
+#line 90 "CSSValueKeywords.gperf"
+      {"gray", CSSValueGray},
+#line 673 "CSSValueKeywords.gperf"
       {"accumulate", CSSValueAccumulate},
-#line 668 "CSSValueKeywords.gperf"
+#line 188 "CSSValueKeywords.gperf"
+      {"kannada", CSSValueKannada},
+#line 672 "CSSValueKeywords.gperf"
       {"evenodd", CSSValueEvenodd},
-#line 677 "CSSValueKeywords.gperf"
+#line 593 "CSSValueKeywords.gperf"
+      {"hotpink", CSSValueHotpink},
+#line 681 "CSSValueKeywords.gperf"
       {"before-edge", CSSValueBeforeEdge},
+#line 661 "CSSValueKeywords.gperf"
+      {"springgreen", CSSValueSpringgreen},
+#line 65 "CSSValueKeywords.gperf"
+      {"x-large", CSSValueXLarge},
 #line 371 "CSSValueKeywords.gperf"
       {"reverse", CSSValueReverse},
+#line 76 "CSSValueKeywords.gperf"
+      {"semi-expanded", CSSValueSemiExpanded},
 #line 183 "CSSValueKeywords.gperf"
       {"cambodian", CSSValueCambodian},
 #line 477 "CSSValueKeywords.gperf"
       {"preserve-3d", CSSValuePreserve3d},
+#line 337 "CSSValueKeywords.gperf"
+      {"-webkit-isolate", CSSValueWebkitIsolate},
+#line 104 "CSSValueKeywords.gperf"
+      {"-webkit-link", CSSValueWebkitLink},
+#line 252 "CSSValueKeywords.gperf"
+      {"katakana", CSSValueKatakana},
 #line 212 "CSSValueKeywords.gperf"
       {"amharic", CSSValueAmharic},
-#line 646 "CSSValueKeywords.gperf"
+#line 41 "CSSValueKeywords.gperf"
+      {"-webkit-control", CSSValueWebkitControl},
+#line 650 "CSSValueKeywords.gperf"
       {"saddlebrown", CSSValueSaddlebrown},
 #line 483 "CSSValueKeywords.gperf"
       {"step-start", CSSValueStepStart},
-#line 500 "CSSValueKeywords.gperf"
-      {"optimizelegibility", CSSValueOptimizelegibility},
-#line 372 "CSSValueKeywords.gperf"
-      {"horizontal", CSSValueHorizontal},
-#line 670 "CSSValueKeywords.gperf"
-      {"new", CSSValueNew},
+#line 260 "CSSValueKeywords.gperf"
+      {"inline-block", CSSValueInlineBlock},
+#line 186 "CSSValueKeywords.gperf"
+      {"gujarati", CSSValueGujarati},
 #line 258 "CSSValueKeywords.gperf"
       {"run-in", CSSValueRunIn},
 #line 125 "CSSValueKeywords.gperf"
       {"scrollbar", CSSValueScrollbar},
 #line 74 "CSSValueKeywords.gperf"
       {"condensed", CSSValueCondensed},
-#line 616 "CSSValueKeywords.gperf"
-      {"mediumaquamarine", CSSValueMediumaquamarine},
-#line 683 "CSSValueKeywords.gperf"
-      {"alphabetic", CSSValueAlphabetic},
+#line 115 "CSSValueKeywords.gperf"
+      {"graytext", CSSValueGraytext},
 #line 46 "CSSValueKeywords.gperf"
       {"small-caps", CSSValueSmallCaps},
 #line 268 "CSSValueKeywords.gperf"
       {"table-column", CSSValueTableColumn},
-#line 256 "CSSValueKeywords.gperf"
-      {"block", CSSValueBlock},
-#line 590 "CSSValueKeywords.gperf"
+#line 656 "CSSValueKeywords.gperf"
+      {"skyblue", CSSValueSkyblue},
+#line 594 "CSSValueKeywords.gperf"
       {"indianred", CSSValueIndianred},
 #line 285 "CSSValueKeywords.gperf"
       {"not-allowed", CSSValueNotAllowed},
 #line 118 "CSSValueKeywords.gperf"
       {"inactiveborder", CSSValueInactiveborder},
-#line 542 "CSSValueKeywords.gperf"
+#line 546 "CSSValueKeywords.gperf"
       {"beige", CSSValueBeige},
+#line 206 "CSSValueKeywords.gperf"
+      {"lower-latin", CSSValueLowerLatin},
 #line 409 "CSSValueKeywords.gperf"
       {"push-button", CSSValuePushButton},
 #line 266 "CSSValueKeywords.gperf"
@@ -819,19 +823,19 @@
       {"all-scroll", CSSValueAllScroll},
 #line 146 "CSSValueKeywords.gperf"
       {"source-out", CSSValueSourceOut},
+#line 564 "CSSValueKeywords.gperf"
+      {"darkgreen", CSSValueDarkgreen},
 #line 150 "CSSValueKeywords.gperf"
       {"destination-out", CSSValueDestinationOut},
-#line 537 "CSSValueKeywords.gperf"
-      {"replaced", CSSValueReplaced},
-#line 208 "CSSValueKeywords.gperf"
-      {"upper-latin", CSSValueUpperLatin},
+#line 361 "CSSValueKeywords.gperf"
+      {"separate", CSSValueSeparate},
 #line 31 "CSSValueKeywords.gperf"
       {"dashed", CSSValueDashed},
-#line 115 "CSSValueKeywords.gperf"
-      {"graytext", CSSValueGraytext},
+#line 562 "CSSValueKeywords.gperf"
+      {"darkgoldenrod", CSSValueDarkgoldenrod},
 #line 151 "CSSValueKeywords.gperf"
       {"destination-atop", CSSValueDestinationAtop},
-#line 633 "CSSValueKeywords.gperf"
+#line 637 "CSSValueKeywords.gperf"
       {"orchid", CSSValueOrchid},
 #line 462 "CSSValueKeywords.gperf"
       {"round", CSSValueRound},
@@ -839,8 +843,6 @@
       {"listitem", CSSValueListitem},
 #line 177 "CSSValueKeywords.gperf"
       {"square", CSSValueSquare},
-#line 468 "CSSValueKeywords.gperf"
-      {"padding-box", CSSValuePaddingBox},
 #line 473 "CSSValueKeywords.gperf"
       {"lines", CSSValueLines},
 #line 376 "CSSValueKeywords.gperf"
@@ -849,62 +851,66 @@
       {"fuchsia", CSSValueFuchsia},
 #line 103 "CSSValueKeywords.gperf"
       {"transparent", CSSValueTransparent},
-#line 140 "CSSValueKeywords.gperf"
-      {"repeat-y", CSSValueRepeatY},
-#line 420 "CSSValueKeywords.gperf"
-      {"media-mute-button", CSSValueMediaMuteButton},
-#line 660 "CSSValueKeywords.gperf"
+#line 664 "CSSValueKeywords.gperf"
       {"thistle", CSSValueThistle},
 #line 413 "CSSValueKeywords.gperf"
       {"default-button", CSSValueDefaultButton},
-#line 298 "CSSValueKeywords.gperf"
-      {"nesw-resize", CSSValueNeswResize},
-#line 594 "CSSValueKeywords.gperf"
+#line 417 "CSSValueKeywords.gperf"
+      {"listbox", CSSValueListbox},
+#line 598 "CSSValueKeywords.gperf"
       {"lavender", CSSValueLavender},
-#line 678 "CSSValueKeywords.gperf"
+#line 682 "CSSValueKeywords.gperf"
       {"after-edge", CSSValueAfterEdge},
-#line 543 "CSSValueKeywords.gperf"
-      {"bisque", CSSValueBisque},
+#line 83 "CSSValueKeywords.gperf"
+      {"fantasy", CSSValueFantasy},
 #line 245 "CSSValueKeywords.gperf"
       {"hebrew", CSSValueHebrew},
-#line 141 "CSSValueKeywords.gperf"
-      {"no-repeat", CSSValueNoRepeat},
+#line 464 "CSSValueKeywords.gperf"
+      {"border-box", CSSValueBorderBox},
+#line 102 "CSSValueKeywords.gperf"
+      {"yellow", CSSValueYellow},
+#line 571 "CSSValueKeywords.gperf"
+      {"darkred", CSSValueDarkred},
 #line 95 "CSSValueKeywords.gperf"
       {"olive", CSSValueOlive},
+#line 352 "CSSValueKeywords.gperf"
+      {"open-quote", CSSValueOpenQuote},
 #line 516 "CSSValueKeywords.gperf"
       {"vertical-rl", CSSValueVerticalRl},
 #line 378 "CSSValueKeywords.gperf"
       {"forwards", CSSValueForwards},
+#line 559 "CSSValueKeywords.gperf"
+      {"cyan", CSSValueCyan},
+#line 139 "CSSValueKeywords.gperf"
+      {"repeat-x", CSSValueRepeatX},
 #line 71 "CSSValueKeywords.gperf"
       {"narrower", CSSValueNarrower},
-#line 348 "CSSValueKeywords.gperf"
-      {"mix", CSSValueMix},
+#line 543 "CSSValueKeywords.gperf"
+      {"antiquewhite", CSSValueAntiquewhite},
+#line 306 "CSSValueKeywords.gperf"
+      {"-webkit-grab", CSSValueWebkitGrab},
 #line 427 "CSSValueKeywords.gperf"
       {"media-slider", CSSValueMediaSlider},
 #line 395 "CSSValueKeywords.gperf"
       {"clip", CSSValueClip},
-#line 77 "CSSValueKeywords.gperf"
-      {"expanded", CSSValueExpanded},
 #line 365 "CSSValueKeywords.gperf"
       {"thin", CSSValueThin},
-#line 113 "CSSValueKeywords.gperf"
-      {"buttontext", CSSValueButtontext},
+#line 121 "CSSValueKeywords.gperf"
+      {"infobackground", CSSValueInfobackground},
+#line 569 "CSSValueKeywords.gperf"
+      {"darkorange", CSSValueDarkorange},
 #line 358 "CSSValueKeywords.gperf"
       {"pre-wrap", CSSValuePreWrap},
-#line 439 "CSSValueKeywords.gperf"
-      {"menulist-text", CSSValueMenulistText},
 #line 101 "CSSValueKeywords.gperf"
       {"white", CSSValueWhite},
-#line 588 "CSSValueKeywords.gperf"
-      {"honeydew", CSSValueHoneydew},
-#line 586 "CSSValueKeywords.gperf"
+#line 590 "CSSValueKeywords.gperf"
       {"goldenrod", CSSValueGoldenrod},
-#line 556 "CSSValueKeywords.gperf"
-      {"darkblue", CSSValueDarkblue},
 #line 23 "CSSValueKeywords.gperf"
       {"initial", CSSValueInitial},
 #line 501 "CSSValueKeywords.gperf"
       {"geometricprecision", CSSValueGeometricprecision},
+#line 204 "CSSValueKeywords.gperf"
+      {"lower-greek", CSSValueLowerGreek},
 #line 145 "CSSValueKeywords.gperf"
       {"source-in", CSSValueSourceIn},
 #line 144 "CSSValueKeywords.gperf"
@@ -915,398 +921,438 @@
       {"visible", CSSValueVisible},
 #line 92 "CSSValueKeywords.gperf"
       {"lime", CSSValueLime},
-#line 614 "CSSValueKeywords.gperf"
+#line 618 "CSSValueKeywords.gperf"
       {"linen", CSSValueLinen},
-#line 114 "CSSValueKeywords.gperf"
-      {"captiontext", CSSValueCaptiontext},
-#line 349 "CSSValueKeywords.gperf"
-      {"no-close-quote", CSSValueNoCloseQuote},
-#line 597 "CSSValueKeywords.gperf"
+#line 645 "CSSValueKeywords.gperf"
+      {"pink", CSSValuePink},
+#line 620 "CSSValueKeywords.gperf"
+      {"mediumaquamarine", CSSValueMediumaquamarine},
+#line 591 "CSSValueKeywords.gperf"
+      {"greenyellow", CSSValueGreenyellow},
+#line 687 "CSSValueKeywords.gperf"
+      {"alphabetic", CSSValueAlphabetic},
+#line 573 "CSSValueKeywords.gperf"
+      {"darkseagreen", CSSValueDarkseagreen},
+#line 455 "CSSValueKeywords.gperf"
+      {"textfield", CSSValueTextfield},
+#line 601 "CSSValueKeywords.gperf"
       {"lemonchiffon", CSSValueLemonchiffon},
-#line 241 "CSSValueKeywords.gperf"
-      {"upper-greek", CSSValueUpperGreek},
-#line 284 "CSSValueKeywords.gperf"
-      {"no-drop", CSSValueNoDrop},
 #line 529 "CSSValueKeywords.gperf"
       {"closest-corner", CSSValueClosestCorner},
-#line 350 "CSSValueKeywords.gperf"
-      {"no-open-quote", CSSValueNoOpenQuote},
-#line 518 "CSSValueKeywords.gperf"
-      {"horizontal-bt", CSSValueHorizontalBt},
-#line 681 "CSSValueKeywords.gperf"
-      {"text-after-edge", CSSValueTextAfterEdge},
+#line 420 "CSSValueKeywords.gperf"
+      {"media-mute-button", CSSValueMediaMuteButton},
+#line 171 "CSSValueKeywords.gperf"
+      {"-webkit-center", CSSValueWebkitCenter},
+#line 364 "CSSValueKeywords.gperf"
+      {"thick", CSSValueThick},
+#line 320 "CSSValueKeywords.gperf"
+      {"always", CSSValueAlways},
 #line 488 "CSSValueKeywords.gperf"
       {"visiblefill", CSSValueVisiblefill},
 #line 275 "CSSValueKeywords.gperf"
       {"crosshair", CSSValueCrosshair},
-#line 663 "CSSValueKeywords.gperf"
+#line 667 "CSSValueKeywords.gperf"
       {"violet", CSSValueViolet},
-#line 147 "CSSValueKeywords.gperf"
-      {"source-atop", CSSValueSourceAtop},
-#line 553 "CSSValueKeywords.gperf"
-      {"cornsilk", CSSValueCornsilk},
+#line 159 "CSSValueKeywords.gperf"
+      {"text-top", CSSValueTextTop},
+#line 541 "CSSValueKeywords.gperf"
+      {"replaced", CSSValueReplaced},
 #line 176 "CSSValueKeywords.gperf"
       {"circle", CSSValueCircle},
-#line 346 "CSSValueKeywords.gperf"
-      {"lower", CSSValueLower},
-#line 648 "CSSValueKeywords.gperf"
-      {"sandybrown", CSSValueSandybrown},
-#line 587 "CSSValueKeywords.gperf"
-      {"greenyellow", CSSValueGreenyellow},
-#line 61 "CSSValueKeywords.gperf"
-      {"x-small", CSSValueXSmall},
-#line 581 "CSSValueKeywords.gperf"
+#line 94 "CSSValueKeywords.gperf"
+      {"navy", CSSValueNavy},
+#line 141 "CSSValueKeywords.gperf"
+      {"no-repeat", CSSValueNoRepeat},
+#line 272 "CSSValueKeywords.gperf"
+      {"-webkit-inline-box", CSSValueWebkitInlineBox},
+#line 585 "CSSValueKeywords.gperf"
       {"floralwhite", CSSValueFloralwhite},
-#line 536 "CSSValueKeywords.gperf"
-      {"inline-box", CSSValueInlineBox},
-#line 506 "CSSValueKeywords.gperf"
-      {"minimized", CSSValueMinimized},
-#line 281 "CSSValueKeywords.gperf"
-      {"context-menu", CSSValueContextMenu},
 #line 386 "CSSValueKeywords.gperf"
       {"slide", CSSValueSlide},
+#line 109 "CSSValueKeywords.gperf"
+      {"background", CSSValueBackground},
+#line 499 "CSSValueKeywords.gperf"
+      {"optimizespeed", CSSValueOptimizespeed},
 #line 521 "CSSValueKeywords.gperf"
       {"filled", CSSValueFilled},
+#line 659 "CSSValueKeywords.gperf"
+      {"slategrey", CSSValueSlategrey},
+#line 202 "CSSValueKeywords.gperf"
+      {"lower-roman", CSSValueLowerRoman},
 #line 156 "CSSValueKeywords.gperf"
       {"middle", CSSValueMiddle},
-#line 552 "CSSValueKeywords.gperf"
+#line 556 "CSSValueKeywords.gperf"
       {"cornflowerblue", CSSValueCornflowerblue},
 #line 443 "CSSValueKeywords.gperf"
       {"progress-bar", CSSValueProgressBar},
-#line 320 "CSSValueKeywords.gperf"
-      {"always", CSSValueAlways},
-#line 538 "CSSValueKeywords.gperf"
+#line 311 "CSSValueKeywords.gperf"
+      {"uppercase", CSSValueUppercase},
+#line 542 "CSSValueKeywords.gperf"
       {"aliceblue", CSSValueAliceblue},
 #line 282 "CSSValueKeywords.gperf"
       {"alias", CSSValueAlias},
 #line 227 "CSSValueKeywords.gperf"
       {"sidama", CSSValueSidama},
-#line 168 "CSSValueKeywords.gperf"
-      {"justify", CSSValueJustify},
-#line 574 "CSSValueKeywords.gperf"
-      {"darkviolet", CSSValueDarkviolet},
-#line 184 "CSSValueKeywords.gperf"
-      {"khmer", CSSValueKhmer},
+#line 326 "CSSValueKeywords.gperf"
+      {"blink", CSSValueBlink},
 #line 257 "CSSValueKeywords.gperf"
       {"list-item", CSSValueListItem},
-#line 515 "CSSValueKeywords.gperf"
-      {"horizontal-tb", CSSValueHorizontalTb},
-#line 496 "CSSValueKeywords.gperf"
-      {"no-punctuation", CSSValueNoPunctuation},
-#line 682 "CSSValueKeywords.gperf"
+#line 288 "CSSValueKeywords.gperf"
+      {"e-resize", CSSValueEResize},
+#line 686 "CSSValueKeywords.gperf"
       {"ideographic", CSSValueIdeographic},
-#line 382 "CSSValueKeywords.gperf"
-      {"down", CSSValueDown},
 #line 472 "CSSValueKeywords.gperf"
       {"visual", CSSValueVisual},
-#line 595 "CSSValueKeywords.gperf"
+#line 599 "CSSValueKeywords.gperf"
       {"lavenderblush", CSSValueLavenderblush},
-#line 203 "CSSValueKeywords.gperf"
-      {"upper-roman", CSSValueUpperRoman},
-#line 554 "CSSValueKeywords.gperf"
+#line 547 "CSSValueKeywords.gperf"
+      {"bisque", CSSValueBisque},
+#line 558 "CSSValueKeywords.gperf"
       {"crimson", CSSValueCrimson},
 #line 28 "CSSValueKeywords.gperf"
       {"ridge", CSSValueRidge},
-#line 675 "CSSValueKeywords.gperf"
+#line 679 "CSSValueKeywords.gperf"
       {"miter", CSSValueMiter},
-#line 388 "CSSValueKeywords.gperf"
-      {"read-only", CSSValueReadOnly},
-#line 195 "CSSValueKeywords.gperf"
-      {"oriya", CSSValueOriya},
 #line 416 "CSSValueKeywords.gperf"
       {"list-button", CSSValueListButton},
+#line 294 "CSSValueKeywords.gperf"
+      {"s-resize", CSSValueSResize},
 #line 175 "CSSValueKeywords.gperf"
       {"disc", CSSValueDisc},
+#line 669 "CSSValueKeywords.gperf"
+      {"whitesmoke", CSSValueWhitesmoke},
 #line 419 "CSSValueKeywords.gperf"
       {"media-fullscreen-button", CSSValueMediaFullscreenButton},
+#line 566 "CSSValueKeywords.gperf"
+      {"darkkhaki", CSSValueDarkkhaki},
+#line 37 "CSSValueKeywords.gperf"
+      {"message-box", CSSValueMessageBox},
 #line 410 "CSSValueKeywords.gperf"
       {"square-button", CSSValueSquareButton},
-#line 644 "CSSValueKeywords.gperf"
-      {"rosybrown", CSSValueRosybrown},
-#line 243 "CSSValueKeywords.gperf"
-      {"asterisks", CSSValueAsterisks},
-#line 570 "CSSValueKeywords.gperf"
-      {"darkslateblue", CSSValueDarkslateblue},
+#line 143 "CSSValueKeywords.gperf"
+      {"copy", CSSValueCopy},
+#line 160 "CSSValueKeywords.gperf"
+      {"text-bottom", CSSValueTextBottom},
+#line 539 "CSSValueKeywords.gperf"
+      {"glyphs", CSSValueGlyphs},
 #line 75 "CSSValueKeywords.gperf"
       {"semi-condensed", CSSValueSemiCondensed},
-#line 687 "CSSValueKeywords.gperf"
-      {"no-change", CSSValueNoChange},
+#line 284 "CSSValueKeywords.gperf"
+      {"no-drop", CSSValueNoDrop},
 #line 154 "CSSValueKeywords.gperf"
       {"plus-lighter", CSSValuePlusLighter},
-#line 638 "CSSValueKeywords.gperf"
-      {"papayawhip", CSSValuePapayawhip},
+#line 191 "CSSValueKeywords.gperf"
+      {"malayalam", CSSValueMalayalam},
 #line 525 "CSSValueKeywords.gperf"
       {"triangle", CSSValueTriangle},
-#line 575 "CSSValueKeywords.gperf"
-      {"deeppink", CSSValueDeeppink},
-#line 572 "CSSValueKeywords.gperf"
-      {"darkslategrey", CSSValueDarkslategrey},
-#line 187 "CSSValueKeywords.gperf"
-      {"gurmukhi", CSSValueGurmukhi},
-#line 680 "CSSValueKeywords.gperf"
-      {"text-before-edge", CSSValueTextBeforeEdge},
 #line 334 "CSSValueKeywords.gperf"
       {"hide", CSSValueHide},
-#line 576 "CSSValueKeywords.gperf"
-      {"deepskyblue", CSSValueDeepskyblue},
-#line 374 "CSSValueKeywords.gperf"
-      {"inline-axis", CSSValueInlineAxis},
+#line 347 "CSSValueKeywords.gperf"
+      {"-webkit-marquee", CSSValueWebkitMarquee},
+#line 367 "CSSValueKeywords.gperf"
+      {"-webkit-nowrap", CSSValueWebkitNowrap},
 #line 135 "CSSValueKeywords.gperf"
       {"currentcolor", CSSValueCurrentcolor},
 #line 199 "CSSValueKeywords.gperf"
       {"tibetan", CSSValueTibetan},
-#line 332 "CSSValueKeywords.gperf"
-      {"fixed", CSSValueFixed},
 #line 222 "CSSValueKeywords.gperf"
       {"hangul-consonant", CSSValueHangulConsonant},
-#line 672 "CSSValueKeywords.gperf"
-      {"optimizequality", CSSValueOptimizequality},
-#line 296 "CSSValueKeywords.gperf"
-      {"ew-resize", CSSValueEwResize},
+#line 254 "CSSValueKeywords.gperf"
+      {"katakana-iroha", CSSValueKatakanaIroha},
+#line 250 "CSSValueKeywords.gperf"
+      {"cjk-ideographic", CSSValueCjkIdeographic},
+#line 658 "CSSValueKeywords.gperf"
+      {"slategray", CSSValueSlategray},
+#line 307 "CSSValueKeywords.gperf"
+      {"-webkit-grabbing", CSSValueWebkitGrabbing},
+#line 671 "CSSValueKeywords.gperf"
+      {"nonzero", CSSValueNonzero},
+#line 404 "CSSValueKeywords.gperf"
+      {"break-word", CSSValueBreakWord},
 #line 185 "CSSValueKeywords.gperf"
       {"devanagari", CSSValueDevanagari},
-#line 563 "CSSValueKeywords.gperf"
-      {"darkmagenta", CSSValueDarkmagenta},
-#line 622 "CSSValueKeywords.gperf"
+#line 670 "CSSValueKeywords.gperf"
+      {"yellowgreen", CSSValueYellowgreen},
+#line 626 "CSSValueKeywords.gperf"
       {"mediumspringgreen", CSSValueMediumspringgreen},
 #line 220 "CSSValueKeywords.gperf"
       {"ethiopic-abegede", CSSValueEthiopicAbegede},
-#line 60 "CSSValueKeywords.gperf"
-      {"xx-small", CSSValueXxSmall},
-#line 293 "CSSValueKeywords.gperf"
-      {"sw-resize", CSSValueSwResize},
+#line 379 "CSSValueKeywords.gperf"
+      {"backwards", CSSValueBackwards},
+#line 580 "CSSValueKeywords.gperf"
+      {"deepskyblue", CSSValueDeepskyblue},
+#line 147 "CSSValueKeywords.gperf"
+      {"source-atop", CSSValueSourceAtop},
+#line 496 "CSSValueKeywords.gperf"
+      {"no-punctuation", CSSValueNoPunctuation},
+#line 310 "CSSValueKeywords.gperf"
+      {"capitalize", CSSValueCapitalize},
+#line 208 "CSSValueKeywords.gperf"
+      {"upper-latin", CSSValueUpperLatin},
 #line 389 "CSSValueKeywords.gperf"
       {"read-write", CSSValueReadWrite},
 #line 129 "CSSValueKeywords.gperf"
       {"threedlightshadow", CSSValueThreedlightshadow},
-#line 403 "CSSValueKeywords.gperf"
-      {"break-all", CSSValueBreakAll},
-#line 421 "CSSValueKeywords.gperf"
-      {"media-play-button", CSSValueMediaPlayButton},
-#line 540 "CSSValueKeywords.gperf"
+#line 291 "CSSValueKeywords.gperf"
+      {"n-resize", CSSValueNResize},
+#line 544 "CSSValueKeywords.gperf"
       {"aquamarine", CSSValueAquamarine},
-#line 440 "CSSValueKeywords.gperf"
-      {"menulist-textfield", CSSValueMenulistTextfield},
+#line 247 "CSSValueKeywords.gperf"
+      {"lower-armenian", CSSValueLowerArmenian},
+#line 596 "CSSValueKeywords.gperf"
+      {"ivory", CSSValueIvory},
 #line 99 "CSSValueKeywords.gperf"
       {"silver", CSSValueSilver},
+#line 153 "CSSValueKeywords.gperf"
+      {"plus-darker", CSSValuePlusDarker},
 #line 148 "CSSValueKeywords.gperf"
       {"destination-over", CSSValueDestinationOver},
+#line 295 "CSSValueKeywords.gperf"
+      {"w-resize", CSSValueWResize},
 #line 130 "CSSValueKeywords.gperf"
       {"threedshadow", CSSValueThreedshadow},
-#line 265 "CSSValueKeywords.gperf"
-      {"table-footer-group", CSSValueTableFooterGroup},
-#line 651 "CSSValueKeywords.gperf"
+#line 655 "CSSValueKeywords.gperf"
       {"sienna", CSSValueSienna},
-#line 568 "CSSValueKeywords.gperf"
-      {"darksalmon", CSSValueDarksalmon},
+#line 273 "CSSValueKeywords.gperf"
+      {"-wap-marquee", CSSValueWapMarquee},
+#line 205 "CSSValueKeywords.gperf"
+      {"lower-alpha", CSSValueLowerAlpha},
+#line 692 "CSSValueKeywords.gperf"
+      {"reset-size", CSSValueResetSize},
 #line 70 "CSSValueKeywords.gperf"
       {"wider", CSSValueWider},
 #line 479 "CSSValueKeywords.gperf"
       {"linear", CSSValueLinear},
-#line 564 "CSSValueKeywords.gperf"
-      {"darkolivegreen", CSSValueDarkolivegreen},
-#line 248 "CSSValueKeywords.gperf"
-      {"upper-armenian", CSSValueUpperArmenian},
-#line 65 "CSSValueKeywords.gperf"
-      {"x-large", CSSValueXLarge},
+#line 649 "CSSValueKeywords.gperf"
+      {"royalblue", CSSValueRoyalblue},
+#line 193 "CSSValueKeywords.gperf"
+      {"myanmar", CSSValueMyanmar},
 #line 490 "CSSValueKeywords.gperf"
       {"painted", CSSValuePainted},
 #line 112 "CSSValueKeywords.gperf"
       {"buttonshadow", CSSValueButtonshadow},
-#line 673 "CSSValueKeywords.gperf"
+#line 460 "CSSValueKeywords.gperf"
+      {"textarea", CSSValueTextarea},
+#line 677 "CSSValueKeywords.gperf"
       {"crispedges", CSSValueCrispedges},
 #line 398 "CSSValueKeywords.gperf"
       {"dot-dash", CSSValueDotDash},
-#line 207 "CSSValueKeywords.gperf"
-      {"upper-alpha", CSSValueUpperAlpha},
-#line 414 "CSSValueKeywords.gperf"
-      {"inner-spin-button", CSSValueInnerSpinButton},
-#line 571 "CSSValueKeywords.gperf"
-      {"darkslategray", CSSValueDarkslategray},
-#line 627 "CSSValueKeywords.gperf"
-      {"mistyrose", CSSValueMistyrose},
-#line 188 "CSSValueKeywords.gperf"
-      {"kannada", CSSValueKannada},
-#line 312 "CSSValueKeywords.gperf"
-      {"lowercase", CSSValueLowercase},
-#line 589 "CSSValueKeywords.gperf"
-      {"hotpink", CSSValueHotpink},
-#line 596 "CSSValueKeywords.gperf"
-      {"lawngreen", CSSValueLawngreen},
-#line 279 "CSSValueKeywords.gperf"
-      {"vertical-text", CSSValueVerticalText},
-#line 636 "CSSValueKeywords.gperf"
-      {"paleturquoise", CSSValuePaleturquoise},
-#line 593 "CSSValueKeywords.gperf"
-      {"khaki", CSSValueKhaki},
-#line 583 "CSSValueKeywords.gperf"
+#line 691 "CSSValueKeywords.gperf"
+      {"no-change", CSSValueNoChange},
+#line 466 "CSSValueKeywords.gperf"
+      {"content-box", CSSValueContentBox},
+#line 60 "CSSValueKeywords.gperf"
+      {"xx-small", CSSValueXxSmall},
+#line 587 "CSSValueKeywords.gperf"
       {"gainsboro", CSSValueGainsboro},
-#line 260 "CSSValueKeywords.gperf"
-      {"inline-block", CSSValueInlineBlock},
-#line 186 "CSSValueKeywords.gperf"
-      {"gujarati", CSSValueGujarati},
-#line 626 "CSSValueKeywords.gperf"
+#line 576 "CSSValueKeywords.gperf"
+      {"darkslategrey", CSSValueDarkslategrey},
+#line 551 "CSSValueKeywords.gperf"
+      {"burlywood", CSSValueBurlywood},
+#line 630 "CSSValueKeywords.gperf"
       {"mintcream", CSSValueMintcream},
+#line 105 "CSSValueKeywords.gperf"
+      {"-webkit-activelink", CSSValueWebkitActivelink},
 #line 106 "CSSValueKeywords.gperf"
       {"activeborder", CSSValueActiveborder},
-#line 290 "CSSValueKeywords.gperf"
-      {"nw-resize", CSSValueNwResize},
-#line 623 "CSSValueKeywords.gperf"
-      {"mediumturquoise", CSSValueMediumturquoise},
+#line 349 "CSSValueKeywords.gperf"
+      {"no-close-quote", CSSValueNoCloseQuote},
+#line 353 "CSSValueKeywords.gperf"
+      {"overlay", CSSValueOverlay},
+#line 79 "CSSValueKeywords.gperf"
+      {"ultra-expanded", CSSValueUltraExpanded},
 #line 428 "CSSValueKeywords.gperf"
       {"media-sliderthumb", CSSValueMediaSliderthumb},
-#line 351 "CSSValueKeywords.gperf"
-      {"nowrap", CSSValueNowrap},
+#line 350 "CSSValueKeywords.gperf"
+      {"no-open-quote", CSSValueNoOpenQuote},
 #line 524 "CSSValueKeywords.gperf"
       {"double-circle", CSSValueDoubleCircle},
+#line 584 "CSSValueKeywords.gperf"
+      {"firebrick", CSSValueFirebrick},
 #line 131 "CSSValueKeywords.gperf"
       {"window", CSSValueWindow},
-#line 561 "CSSValueKeywords.gperf"
-      {"darkgrey", CSSValueDarkgrey},
-#line 560 "CSSValueKeywords.gperf"
-      {"darkgreen", CSSValueDarkgreen},
-#line 643 "CSSValueKeywords.gperf"
-      {"powderblue", CSSValuePowderblue},
-#line 558 "CSSValueKeywords.gperf"
-      {"darkgoldenrod", CSSValueDarkgoldenrod},
-#line 139 "CSSValueKeywords.gperf"
-      {"repeat-x", CSSValueRepeatX},
-#line 299 "CSSValueKeywords.gperf"
-      {"nwse-resize", CSSValueNwseResize},
-#line 267 "CSSValueKeywords.gperf"
-      {"table-column-group", CSSValueTableColumnGroup},
+#line 137 "CSSValueKeywords.gperf"
+      {"-webkit-text", CSSValueWebkitText},
+#line 271 "CSSValueKeywords.gperf"
+      {"-webkit-box", CSSValueWebkitBox},
+#line 85 "CSSValueKeywords.gperf"
+      {"-webkit-body", CSSValueWebkitBody},
+#line 296 "CSSValueKeywords.gperf"
+      {"ew-resize", CSSValueEwResize},
+#line 570 "CSSValueKeywords.gperf"
+      {"darkorchid", CSSValueDarkorchid},
+#line 292 "CSSValueKeywords.gperf"
+      {"se-resize", CSSValueSeResize},
 #line 277 "CSSValueKeywords.gperf"
       {"pointer", CSSValuePointer},
-#line 181 "CSSValueKeywords.gperf"
-      {"binary", CSSValueBinary},
+#line 265 "CSSValueKeywords.gperf"
+      {"table-footer-group", CSSValueTableFooterGroup},
+#line 133 "CSSValueKeywords.gperf"
+      {"windowtext", CSSValueWindowtext},
+#line 241 "CSSValueKeywords.gperf"
+      {"upper-greek", CSSValueUpperGreek},
 #line 214 "CSSValueKeywords.gperf"
       {"amharic-abegede", CSSValueAmharicAbegede},
-#line 442 "CSSValueKeywords.gperf"
-      {"outer-spin-button", CSSValueOuterSpinButton},
-#line 76 "CSSValueKeywords.gperf"
-      {"semi-expanded", CSSValueSemiExpanded},
-#line 544 "CSSValueKeywords.gperf"
+#line 300 "CSSValueKeywords.gperf"
+      {"col-resize", CSSValueColResize},
+#line 293 "CSSValueKeywords.gperf"
+      {"sw-resize", CSSValueSwResize},
+#line 548 "CSSValueKeywords.gperf"
       {"blanchedalmond", CSSValueBlanchedalmond},
+#line 565 "CSSValueKeywords.gperf"
+      {"darkgrey", CSSValueDarkgrey},
+#line 299 "CSSValueKeywords.gperf"
+      {"nwse-resize", CSSValueNwseResize},
+#line 414 "CSSValueKeywords.gperf"
+      {"inner-spin-button", CSSValueInnerSpinButton},
 #line 487 "CSSValueKeywords.gperf"
       {"visiblepainted", CSSValueVisiblepainted},
-#line 557 "CSSValueKeywords.gperf"
-      {"darkcyan", CSSValueDarkcyan},
 #line 531 "CSSValueKeywords.gperf"
       {"farthest-corner", CSSValueFarthestCorner},
 #line 494 "CSSValueKeywords.gperf"
       {"digits", CSSValueDigits},
-#line 613 "CSSValueKeywords.gperf"
+#line 617 "CSSValueKeywords.gperf"
       {"limegreen", CSSValueLimegreen},
-#line 424 "CSSValueKeywords.gperf"
-      {"media-rewind-button", CSSValueMediaRewindButton},
-#line 567 "CSSValueKeywords.gperf"
-      {"darkred", CSSValueDarkred},
-#line 206 "CSSValueKeywords.gperf"
-      {"lower-latin", CSSValueLowerLatin},
-#line 66 "CSSValueKeywords.gperf"
-      {"xx-large", CSSValueXxLarge},
+#line 575 "CSSValueKeywords.gperf"
+      {"darkslategray", CSSValueDarkslategray},
+#line 468 "CSSValueKeywords.gperf"
+      {"padding-box", CSSValuePaddingBox},
 #line 231 "CSSValueKeywords.gperf"
       {"tigre", CSSValueTigre},
-#line 221 "CSSValueKeywords.gperf"
-      {"ethiopic-abegede-gez", CSSValueEthiopicAbegedeGez},
+#line 372 "CSSValueKeywords.gperf"
+      {"horizontal", CSSValueHorizontal},
 #line 270 "CSSValueKeywords.gperf"
       {"table-caption", CSSValueTableCaption},
-#line 430 "CSSValueKeywords.gperf"
-      {"media-volume-slider", CSSValueMediaVolumeSlider},
-#line 121 "CSSValueKeywords.gperf"
-      {"infobackground", CSSValueInfobackground},
-#line 559 "CSSValueKeywords.gperf"
-      {"darkgray", CSSValueDarkgray},
-#line 407 "CSSValueKeywords.gperf"
-      {"checkbox", CSSValueCheckbox},
-#line 119 "CSSValueKeywords.gperf"
-      {"inactivecaption", CSSValueInactivecaption},
-#line 565 "CSSValueKeywords.gperf"
-      {"darkorange", CSSValueDarkorange},
-#line 625 "CSSValueKeywords.gperf"
+#line 561 "CSSValueKeywords.gperf"
+      {"darkcyan", CSSValueDarkcyan},
+#line 203 "CSSValueKeywords.gperf"
+      {"upper-roman", CSSValueUpperRoman},
+#line 640 "CSSValueKeywords.gperf"
+      {"paleturquoise", CSSValuePaleturquoise},
+#line 629 "CSSValueKeywords.gperf"
       {"midnightblue", CSSValueMidnightblue},
-#line 641 "CSSValueKeywords.gperf"
-      {"pink", CSSValuePink},
-#line 417 "CSSValueKeywords.gperf"
-      {"listbox", CSSValueListbox},
+#line 289 "CSSValueKeywords.gperf"
+      {"ne-resize", CSSValueNeResize},
+#line 489 "CSSValueKeywords.gperf"
+      {"visiblestroke", CSSValueVisiblestroke},
+#line 297 "CSSValueKeywords.gperf"
+      {"ns-resize", CSSValueNsResize},
+#line 422 "CSSValueKeywords.gperf"
+      {"media-seek-back-button", CSSValueMediaSeekBackButton},
+#line 40 "CSSValueKeywords.gperf"
+      {"-webkit-small-control", CSSValueWebkitSmallControl},
+#line 267 "CSSValueKeywords.gperf"
+      {"table-column-group", CSSValueTableColumnGroup},
 #line 72 "CSSValueKeywords.gperf"
       {"ultra-condensed", CSSValueUltraCondensed},
-#line 569 "CSSValueKeywords.gperf"
-      {"darkseagreen", CSSValueDarkseagreen},
-#line 464 "CSSValueKeywords.gperf"
-      {"border-box", CSSValueBorderBox},
-#line 364 "CSSValueKeywords.gperf"
-      {"thick", CSSValueThick},
+#line 348 "CSSValueKeywords.gperf"
+      {"mix", CSSValueMix},
+#line 290 "CSSValueKeywords.gperf"
+      {"nw-resize", CSSValueNwResize},
+#line 66 "CSSValueKeywords.gperf"
+      {"xx-large", CSSValueXxLarge},
+#line 563 "CSSValueKeywords.gperf"
+      {"darkgray", CSSValueDarkgray},
+#line 627 "CSSValueKeywords.gperf"
+      {"mediumturquoise", CSSValueMediumturquoise},
+#line 442 "CSSValueKeywords.gperf"
+      {"outer-spin-button", CSSValueOuterSpinButton},
+#line 592 "CSSValueKeywords.gperf"
+      {"honeydew", CSSValueHoneydew},
 #line 25 "CSSValueKeywords.gperf"
       {"hidden", CSSValueHidden},
+#line 39 "CSSValueKeywords.gperf"
+      {"-webkit-mini-control", CSSValueWebkitMiniControl},
 #line 232 "CSSValueKeywords.gperf"
       {"ethiopic-halehame-tig", CSSValueEthiopicHalehameTig},
-#line 219 "CSSValueKeywords.gperf"
-      {"ethiopic-halehame-gez", CSSValueEthiopicHalehameGez},
-#line 444 "CSSValueKeywords.gperf"
-      {"progress-bar-value", CSSValueProgressBarValue},
-#line 671 "CSSValueKeywords.gperf"
+#line 298 "CSSValueKeywords.gperf"
+      {"nesw-resize", CSSValueNeswResize},
+#line 189 "CSSValueKeywords.gperf"
+      {"lower-hexadecimal", CSSValueLowerHexadecimal},
+#line 675 "CSSValueKeywords.gperf"
       {"linearrgb", CSSValueLinearrgb},
+#line 424 "CSSValueKeywords.gperf"
+      {"media-rewind-button", CSSValueMediaRewindButton},
 #line 107 "CSSValueKeywords.gperf"
       {"activecaption", CSSValueActivecaption},
-#line 301 "CSSValueKeywords.gperf"
-      {"row-resize", CSSValueRowResize},
-#line 109 "CSSValueKeywords.gperf"
-      {"background", CSSValueBackground},
 #line 38 "CSSValueKeywords.gperf"
       {"small-caption", CSSValueSmallCaption},
 #line 507 "CSSValueKeywords.gperf"
       {"windowed", CSSValueWindowed},
-#line 631 "CSSValueKeywords.gperf"
+#line 635 "CSSValueKeywords.gperf"
       {"olivedrab", CSSValueOlivedrab},
-#line 326 "CSSValueKeywords.gperf"
-      {"blink", CSSValueBlink},
-#line 204 "CSSValueKeywords.gperf"
-      {"lower-greek", CSSValueLowerGreek},
+#line 430 "CSSValueKeywords.gperf"
+      {"media-volume-slider", CSSValueMediaVolumeSlider},
 #line 453 "CSSValueKeywords.gperf"
       {"searchfield-results-button", CSSValueSearchfieldResultsButton},
-#line 578 "CSSValueKeywords.gperf"
-      {"dimgrey", CSSValueDimgrey},
-#line 598 "CSSValueKeywords.gperf"
+#line 652 "CSSValueKeywords.gperf"
+      {"sandybrown", CSSValueSandybrown},
+#line 301 "CSSValueKeywords.gperf"
+      {"row-resize", CSSValueRowResize},
+#line 602 "CSSValueKeywords.gperf"
       {"lightblue", CSSValueLightblue},
-#line 665 "CSSValueKeywords.gperf"
-      {"whitesmoke", CSSValueWhitesmoke},
-#line 73 "CSSValueKeywords.gperf"
-      {"extra-condensed", CSSValueExtraCondensed},
-#line 273 "CSSValueKeywords.gperf"
-      {"-wap-marquee", CSSValueWapMarquee},
+#line 140 "CSSValueKeywords.gperf"
+      {"repeat-y", CSSValueRepeatY},
+#line 248 "CSSValueKeywords.gperf"
+      {"upper-armenian", CSSValueUpperArmenian},
+#line 170 "CSSValueKeywords.gperf"
+      {"-webkit-right", CSSValueWebkitRight},
+#line 168 "CSSValueKeywords.gperf"
+      {"justify", CSSValueJustify},
+#line 505 "CSSValueKeywords.gperf"
+      {"maximized", CSSValueMaximized},
+#line 163 "CSSValueKeywords.gperf"
+      {"-webkit-baseline-middle", CSSValueWebkitBaselineMiddle},
+#line 207 "CSSValueKeywords.gperf"
+      {"upper-alpha", CSSValueUpperAlpha},
+#line 388 "CSSValueKeywords.gperf"
+      {"read-only", CSSValueReadOnly},
+#line 195 "CSSValueKeywords.gperf"
+      {"oriya", CSSValueOriya},
+#line 119 "CSSValueKeywords.gperf"
+      {"inactivecaption", CSSValueInactivecaption},
+#line 108 "CSSValueKeywords.gperf"
+      {"appworkspace", CSSValueAppworkspace},
 #line 240 "CSSValueKeywords.gperf"
       {"ethiopic-abegede-ti-et", CSSValueEthiopicAbegedeTiEt},
-#line 202 "CSSValueKeywords.gperf"
-      {"lower-roman", CSSValueLowerRoman},
-#line 250 "CSSValueKeywords.gperf"
-      {"cjk-ideographic", CSSValueCjkIdeographic},
+#line 444 "CSSValueKeywords.gperf"
+      {"progress-bar-value", CSSValueProgressBarValue},
+#line 648 "CSSValueKeywords.gperf"
+      {"rosybrown", CSSValueRosybrown},
 #line 406 "CSSValueKeywords.gperf"
       {"after-white-space", CSSValueAfterWhiteSpace},
 #line 149 "CSSValueKeywords.gperf"
       {"destination-in", CSSValueDestinationIn},
+#line 120 "CSSValueKeywords.gperf"
+      {"inactivecaptiontext", CSSValueInactivecaptiontext},
 #line 251 "CSSValueKeywords.gperf"
       {"hiragana", CSSValueHiragana},
+#line 172 "CSSValueKeywords.gperf"
+      {"-webkit-match-parent", CSSValueWebkitMatchParent},
+#line 77 "CSSValueKeywords.gperf"
+      {"expanded", CSSValueExpanded},
 #line 399 "CSSValueKeywords.gperf"
       {"dot-dot-dash", CSSValueDotDotDash},
-#line 404 "CSSValueKeywords.gperf"
-      {"break-word", CSSValueBreakWord},
+#line 506 "CSSValueKeywords.gperf"
+      {"minimized", CSSValueMinimized},
+#line 287 "CSSValueKeywords.gperf"
+      {"-webkit-zoom-out", CSSValueWebkitZoomOut},
+#line 685 "CSSValueKeywords.gperf"
+      {"text-after-edge", CSSValueTextAfterEdge},
+#line 684 "CSSValueKeywords.gperf"
+      {"text-before-edge", CSSValueTextBeforeEdge},
 #line 451 "CSSValueKeywords.gperf"
       {"searchfield-decoration", CSSValueSearchfieldDecoration},
 #line 128 "CSSValueKeywords.gperf"
       {"threedhighlight", CSSValueThreedhighlight},
 #line 530 "CSSValueKeywords.gperf"
       {"farthest-side", CSSValueFarthestSide},
-#line 379 "CSSValueKeywords.gperf"
-      {"backwards", CSSValueBackwards},
 #line 533 "CSSValueKeywords.gperf"
       {"vertical-right", CSSValueVerticalRight},
-#line 577 "CSSValueKeywords.gperf"
-      {"dimgray", CSSValueDimgray},
-#line 606 "CSSValueKeywords.gperf"
+#line 332 "CSSValueKeywords.gperf"
+      {"fixed", CSSValueFixed},
+#line 610 "CSSValueKeywords.gperf"
       {"lightsalmon", CSSValueLightsalmon},
-#line 153 "CSSValueKeywords.gperf"
-      {"plus-darker", CSSValuePlusDarker},
 #line 111 "CSSValueKeywords.gperf"
       {"buttonhighlight", CSSValueButtonhighlight},
 #line 132 "CSSValueKeywords.gperf"
@@ -1317,234 +1363,196 @@
       {"ethiopic-halehame-om-et", CSSValueEthiopicHalehameOmEt},
 #line 180 "CSSValueKeywords.gperf"
       {"arabic-indic", CSSValueArabicIndic},
-#line 629 "CSSValueKeywords.gperf"
+#line 633 "CSSValueKeywords.gperf"
       {"navajowhite", CSSValueNavajowhite},
 #line 238 "CSSValueKeywords.gperf"
       {"ethiopic-halehame-ti-et", CSSValueEthiopicHalehameTiEt},
-#line 618 "CSSValueKeywords.gperf"
+#line 622 "CSSValueKeywords.gperf"
       {"mediumorchid", CSSValueMediumorchid},
+#line 577 "CSSValueKeywords.gperf"
+      {"darkturquoise", CSSValueDarkturquoise},
 #line 230 "CSSValueKeywords.gperf"
       {"ethiopic-halehame-so-et", CSSValueEthiopicHalehameSoEt},
 #line 215 "CSSValueKeywords.gperf"
       {"ethiopic-abegede-am-et", CSSValueEthiopicAbegedeAmEt},
-#line 169 "CSSValueKeywords.gperf"
-      {"-webkit-left", CSSValueWebkitLeft},
-#line 108 "CSSValueKeywords.gperf"
-      {"appworkspace", CSSValueAppworkspace},
+#line 126 "CSSValueKeywords.gperf"
+      {"threeddarkshadow", CSSValueThreeddarkshadow},
 #line 166 "CSSValueKeywords.gperf"
       {"right", CSSValueRight},
-#line 252 "CSSValueKeywords.gperf"
-      {"katakana", CSSValueKatakana},
-#line 375 "CSSValueKeywords.gperf"
-      {"block-axis", CSSValueBlockAxis},
+#line 518 "CSSValueKeywords.gperf"
+      {"horizontal-bt", CSSValueHorizontalBt},
 #line 263 "CSSValueKeywords.gperf"
       {"table-row-group", CSSValueTableRowGroup},
+#line 631 "CSSValueKeywords.gperf"
+      {"mistyrose", CSSValueMistyrose},
 #line 50 "CSSValueKeywords.gperf"
       {"lighter", CSSValueLighter},
-#line 431 "CSSValueKeywords.gperf"
-      {"media-volume-sliderthumb", CSSValueMediaVolumeSliderthumb},
-#line 247 "CSSValueKeywords.gperf"
-      {"lower-armenian", CSSValueLowerArmenian},
-#line 580 "CSSValueKeywords.gperf"
-      {"firebrick", CSSValueFirebrick},
+#line 537 "CSSValueKeywords.gperf"
+      {"sideways", CSSValueSideways},
+#line 286 "CSSValueKeywords.gperf"
+      {"-webkit-zoom-in", CSSValueWebkitZoomIn},
 #line 394 "CSSValueKeywords.gperf"
       {"min-intrinsic", CSSValueMinIntrinsic},
-#line 205 "CSSValueKeywords.gperf"
-      {"lower-alpha", CSSValueLowerAlpha},
-#line 611 "CSSValueKeywords.gperf"
+#line 615 "CSSValueKeywords.gperf"
       {"lightsteelblue", CSSValueLightsteelblue},
-#line 566 "CSSValueKeywords.gperf"
-      {"darkorchid", CSSValueDarkorchid},
+#line 515 "CSSValueKeywords.gperf"
+      {"horizontal-tb", CSSValueHorizontalTb},
+#line 693 "CSSValueKeywords.gperf"
+      {"non-scaling-stroke", CSSValueNonScalingStroke},
 #line 213 "CSSValueKeywords.gperf"
       {"ethiopic-halehame-am-et", CSSValueEthiopicHalehameAmEt},
-#line 164 "CSSValueKeywords.gperf"
-      {"-webkit-auto", CSSValueWebkitAuto},
-#line 337 "CSSValueKeywords.gperf"
-      {"-webkit-isolate", CSSValueWebkitIsolate},
-#line 137 "CSSValueKeywords.gperf"
-      {"-webkit-text", CSSValueWebkitText},
-#line 41 "CSSValueKeywords.gperf"
-      {"-webkit-control", CSSValueWebkitControl},
-#line 271 "CSSValueKeywords.gperf"
-      {"-webkit-box", CSSValueWebkitBox},
-#line 85 "CSSValueKeywords.gperf"
-      {"-webkit-body", CSSValueWebkitBody},
-#line 264 "CSSValueKeywords.gperf"
-      {"table-header-group", CSSValueTableHeaderGroup},
-#line 79 "CSSValueKeywords.gperf"
-      {"ultra-expanded", CSSValueUltraExpanded},
+#line 609 "CSSValueKeywords.gperf"
+      {"lightpink", CSSValueLightpink},
+#line 642 "CSSValueKeywords.gperf"
+      {"papayawhip", CSSValuePapayawhip},
+#line 433 "CSSValueKeywords.gperf"
+      {"media-controls-background", CSSValueMediaControlsBackground},
+#line 534 "CSSValueKeywords.gperf"
+      {"upright-right", CSSValueUprightRight},
+#line 421 "CSSValueKeywords.gperf"
+      {"media-play-button", CSSValueMediaPlayButton},
+#line 181 "CSSValueKeywords.gperf"
+      {"binary", CSSValueBinary},
+#line 201 "CSSValueKeywords.gperf"
+      {"upper-hexadecimal", CSSValueUpperHexadecimal},
 #line 236 "CSSValueKeywords.gperf"
       {"ethiopic-abegede-ti-er", CSSValueEthiopicAbegedeTiEr},
 #line 495 "CSSValueKeywords.gperf"
       {"literal-punctuation", CSSValueLiteralPunctuation},
-#line 459 "CSSValueKeywords.gperf"
-      {"rating-level-indicator", CSSValueRatingLevelIndicator},
-#line 604 "CSSValueKeywords.gperf"
-      {"lightgrey", CSSValueLightgrey},
-#line 603 "CSSValueKeywords.gperf"
+#line 431 "CSSValueKeywords.gperf"
+      {"media-volume-sliderthumb", CSSValueMediaVolumeSliderthumb},
+#line 607 "CSSValueKeywords.gperf"
       {"lightgreen", CSSValueLightgreen},
-#line 133 "CSSValueKeywords.gperf"
-      {"windowtext", CSSValueWindowtext},
-#line 489 "CSSValueKeywords.gperf"
-      {"visiblestroke", CSSValueVisiblestroke},
-#line 607 "CSSValueKeywords.gperf"
+#line 611 "CSSValueKeywords.gperf"
       {"lightseagreen", CSSValueLightseagreen},
 #line 210 "CSSValueKeywords.gperf"
       {"ethiopic-halehame-aa-et", CSSValueEthiopicHalehameAaEt},
+#line 67 "CSSValueKeywords.gperf"
+      {"-webkit-xxx-large", CSSValueWebkitXxxLarge},
 #line 228 "CSSValueKeywords.gperf"
       {"ethiopic-halehame-sid-et", CSSValueEthiopicHalehameSidEt},
-#line 287 "CSSValueKeywords.gperf"
-      {"-webkit-zoom-out", CSSValueWebkitZoomOut},
+#line 78 "CSSValueKeywords.gperf"
+      {"extra-expanded", CSSValueExtraExpanded},
 #line 234 "CSSValueKeywords.gperf"
       {"ethiopic-halehame-ti-er", CSSValueEthiopicHalehameTiEr},
-#line 426 "CSSValueKeywords.gperf"
-      {"media-toggle-closed-captions-button", CSSValueMediaToggleClosedCaptionsButton},
-#line 600 "CSSValueKeywords.gperf"
-      {"lightcyan", CSSValueLightcyan},
-#line 306 "CSSValueKeywords.gperf"
-      {"-webkit-grab", CSSValueWebkitGrab},
+#line 498 "CSSValueKeywords.gperf"
+      {"subpixel-antialiased", CSSValueSubpixelAntialiased},
+#line 264 "CSSValueKeywords.gperf"
+      {"table-header-group", CSSValueTableHeaderGroup},
 #line 454 "CSSValueKeywords.gperf"
       {"searchfield-cancel-button", CSSValueSearchfieldCancelButton},
-#line 78 "CSSValueKeywords.gperf"
-      {"extra-expanded", CSSValueExtraExpanded},
-#line 599 "CSSValueKeywords.gperf"
+#line 603 "CSSValueKeywords.gperf"
       {"lightcoral", CSSValueLightcoral},
 #line 253 "CSSValueKeywords.gperf"
       {"hiragana-iroha", CSSValueHiraganaIroha},
-#line 347 "CSSValueKeywords.gperf"
-      {"-webkit-marquee", CSSValueWebkitMarquee},
-#line 237 "CSSValueKeywords.gperf"
-      {"tigrinya-et", CSSValueTigrinyaEt},
+#line 459 "CSSValueKeywords.gperf"
+      {"rating-level-indicator", CSSValueRatingLevelIndicator},
+#line 221 "CSSValueKeywords.gperf"
+      {"ethiopic-abegede-gez", CSSValueEthiopicAbegedeGez},
+#line 536 "CSSValueKeywords.gperf"
+      {"sideways-left", CSSValueSidewaysLeft},
+#line 335 "CSSValueKeywords.gperf"
+      {"higher", CSSValueHigher},
+#line 582 "CSSValueKeywords.gperf"
+      {"dimgrey", CSSValueDimgrey},
+#line 134 "CSSValueKeywords.gperf"
+      {"-webkit-focus-ring-color", CSSValueWebkitFocusRingColor},
+#line 426 "CSSValueKeywords.gperf"
+      {"media-toggle-closed-captions-button", CSSValueMediaToggleClosedCaptionsButton},
+#line 219 "CSSValueKeywords.gperf"
+      {"ethiopic-halehame-gez", CSSValueEthiopicHalehameGez},
+#line 500 "CSSValueKeywords.gperf"
+      {"optimizelegibility", CSSValueOptimizelegibility},
+#line 73 "CSSValueKeywords.gperf"
+      {"extra-condensed", CSSValueExtraCondensed},
+#line 415 "CSSValueKeywords.gperf"
+      {"-webkit-input-speech-button", CSSValueWebkitInputSpeechButton},
 #line 432 "CSSValueKeywords.gperf"
       {"media-volume-slider-mute-button", CSSValueMediaVolumeSliderMuteButton},
-#line 573 "CSSValueKeywords.gperf"
-      {"darkturquoise", CSSValueDarkturquoise},
-#line 602 "CSSValueKeywords.gperf"
-      {"lightgray", CSSValueLightgray},
-#line 217 "CSSValueKeywords.gperf"
-      {"cjk-heavenly-stem", CSSValueCjkHeavenlyStem},
-#line 233 "CSSValueKeywords.gperf"
-      {"tigrinya-er", CSSValueTigrinyaEr},
-#line 120 "CSSValueKeywords.gperf"
-      {"inactivecaptiontext", CSSValueInactivecaptiontext},
-#line 171 "CSSValueKeywords.gperf"
-      {"-webkit-center", CSSValueWebkitCenter},
-#line 436 "CSSValueKeywords.gperf"
-      {"media-time-remaining-display", CSSValueMediaTimeRemainingDisplay},
+#line 116 "CSSValueKeywords.gperf"
+      {"highlight", CSSValueHighlight},
 #line 425 "CSSValueKeywords.gperf"
       {"media-return-to-realtime-button", CSSValueMediaReturnToRealtimeButton},
-#line 335 "CSSValueKeywords.gperf"
-      {"higher", CSSValueHigher},
-#line 286 "CSSValueKeywords.gperf"
-      {"-webkit-zoom-in", CSSValueWebkitZoomIn},
-#line 201 "CSSValueKeywords.gperf"
-      {"upper-hexadecimal", CSSValueUpperHexadecimal},
-#line 402 "CSSValueKeywords.gperf"
-      {"skip-white-space", CSSValueSkipWhiteSpace},
-#line 254 "CSSValueKeywords.gperf"
-      {"katakana-iroha", CSSValueKatakanaIroha},
-#line 116 "CSSValueKeywords.gperf"
-      {"highlight", CSSValueHighlight},
-#line 435 "CSSValueKeywords.gperf"
-      {"media-current-time-display", CSSValueMediaCurrentTimeDisplay},
 #line 211 "CSSValueKeywords.gperf"
       {"ethiopic-halehame-aa-er", CSSValueEthiopicHalehameAaEr},
+#line 581 "CSSValueKeywords.gperf"
+      {"dimgray", CSSValueDimgray},
+#line 224 "CSSValueKeywords.gperf"
+      {"lower-norwegian", CSSValueLowerNorwegian},
+#line 217 "CSSValueKeywords.gperf"
+      {"cjk-heavenly-stem", CSSValueCjkHeavenlyStem},
+#line 117 "CSSValueKeywords.gperf"
+      {"highlighttext", CSSValueHighlighttext},
 #line 452 "CSSValueKeywords.gperf"
       {"searchfield-results-decoration", CSSValueSearchfieldResultsDecoration},
-#line 307 "CSSValueKeywords.gperf"
-      {"-webkit-grabbing", CSSValueWebkitGrabbing},
-#line 126 "CSSValueKeywords.gperf"
-      {"threeddarkshadow", CSSValueThreeddarkshadow},
-#line 242 "CSSValueKeywords.gperf"
-      {"upper-norwegian", CSSValueUpperNorwegian},
+#line 616 "CSSValueKeywords.gperf"
+      {"lightyellow", CSSValueLightyellow},
 #line 446 "CSSValueKeywords.gperf"
       {"slider-vertical", CSSValueSliderVertical},
-#line 422 "CSSValueKeywords.gperf"
-      {"media-seek-back-button", CSSValueMediaSeekBackButton},
-#line 689 "CSSValueKeywords.gperf"
-      {"non-scaling-stroke", CSSValueNonScalingStroke},
-#line 605 "CSSValueKeywords.gperf"
-      {"lightpink", CSSValueLightpink},
-#line 612 "CSSValueKeywords.gperf"
-      {"lightyellow", CSSValueLightyellow},
-#line 433 "CSSValueKeywords.gperf"
-      {"media-controls-background", CSSValueMediaControlsBackground},
-#line 104 "CSSValueKeywords.gperf"
-      {"-webkit-link", CSSValueWebkitLink},
+#line 423 "CSSValueKeywords.gperf"
+      {"media-seek-forward-button", CSSValueMediaSeekForwardButton},
 #line 343 "CSSValueKeywords.gperf"
       {"line-through", CSSValueLineThrough},
+#line 402 "CSSValueKeywords.gperf"
+      {"skip-white-space", CSSValueSkipWhiteSpace},
+#line 461 "CSSValueKeywords.gperf"
+      {"caps-lock-indicator", CSSValueCapsLockIndicator},
+#line 608 "CSSValueKeywords.gperf"
+      {"lightgrey", CSSValueLightgrey},
+#line 612 "CSSValueKeywords.gperf"
+      {"lightskyblue", CSSValueLightskyblue},
+#line 604 "CSSValueKeywords.gperf"
+      {"lightcyan", CSSValueLightcyan},
+#line 429 "CSSValueKeywords.gperf"
+      {"media-volume-slider-container", CSSValueMediaVolumeSliderContainer},
+#line 237 "CSSValueKeywords.gperf"
+      {"tigrinya-et", CSSValueTigrinyaEt},
+#line 606 "CSSValueKeywords.gperf"
+      {"lightgray", CSSValueLightgray},
+#line 233 "CSSValueKeywords.gperf"
+      {"tigrinya-er", CSSValueTigrinyaEr},
+#line 242 "CSSValueKeywords.gperf"
+      {"upper-norwegian", CSSValueUpperNorwegian},
+#line 448 "CSSValueKeywords.gperf"
+      {"sliderthumb-vertical", CSSValueSliderthumbVertical},
+#line 325 "CSSValueKeywords.gperf"
+      {"bidi-override", CSSValueBidiOverride},
+#line 434 "CSSValueKeywords.gperf"
+      {"media-controls-fullscreen-background", CSSValueMediaControlsFullscreenBackground},
+#line 676 "CSSValueKeywords.gperf"
+      {"optimizequality", CSSValueOptimizequality},
+#line 436 "CSSValueKeywords.gperf"
+      {"media-time-remaining-display", CSSValueMediaTimeRemainingDisplay},
+#line 435 "CSSValueKeywords.gperf"
+      {"media-current-time-display", CSSValueMediaCurrentTimeDisplay},
 #line 456 "CSSValueKeywords.gperf"
       {"relevancy-level-indicator", CSSValueRelevancyLevelIndicator},
-#line 429 "CSSValueKeywords.gperf"
-      {"media-volume-slider-container", CSSValueMediaVolumeSliderContainer},
-#line 608 "CSSValueKeywords.gperf"
-      {"lightskyblue", CSSValueLightskyblue},
-#line 39 "CSSValueKeywords.gperf"
-      {"-webkit-mini-control", CSSValueWebkitMiniControl},
-#line 610 "CSSValueKeywords.gperf"
+#line 390 "CSSValueKeywords.gperf"
+      {"read-write-plaintext-only", CSSValueReadWritePlaintextOnly},
+#line 614 "CSSValueKeywords.gperf"
       {"lightslategrey", CSSValueLightslategrey},
-#line 609 "CSSValueKeywords.gperf"
+#line 613 "CSSValueKeywords.gperf"
       {"lightslategray", CSSValueLightslategray},
 #line 239 "CSSValueKeywords.gperf"
       {"tigrinya-et-abegede", CSSValueTigrinyaEtAbegede},
+#line 535 "CSSValueKeywords.gperf"
+      {"sideways-right", CSSValueSidewaysRight},
+#line 235 "CSSValueKeywords.gperf"
+      {"tigrinya-er-abegede", CSSValueTigrinyaErAbegede},
 #line 179 "CSSValueKeywords.gperf"
       {"decimal-leading-zero", CSSValueDecimalLeadingZero},
-#line 235 "CSSValueKeywords.gperf"
-      {"tigrinya-er-abegede", CSSValueTigrinyaErAbegede},
-#line 40 "CSSValueKeywords.gperf"
-      {"-webkit-small-control", CSSValueWebkitSmallControl},
+#line 216 "CSSValueKeywords.gperf"
+      {"cjk-earthly-branch", CSSValueCjkEarthlyBranch},
+#line 447 "CSSValueKeywords.gperf"
+      {"sliderthumb-horizontal", CSSValueSliderthumbHorizontal},
 #line 457 "CSSValueKeywords.gperf"
       {"continuous-capacity-level-indicator", CSSValueContinuousCapacityLevelIndicator},
-#line 447 "CSSValueKeywords.gperf"
-      {"sliderthumb-horizontal", CSSValueSliderthumbHorizontal},
-#line 562 "CSSValueKeywords.gperf"
-      {"darkkhaki", CSSValueDarkkhaki},
-#line 498 "CSSValueKeywords.gperf"
-      {"subpixel-antialiased", CSSValueSubpixelAntialiased},
-#line 448 "CSSValueKeywords.gperf"
-      {"sliderthumb-vertical", CSSValueSliderthumbVertical},
-#line 325 "CSSValueKeywords.gperf"
-      {"bidi-override", CSSValueBidiOverride},
-#line 170 "CSSValueKeywords.gperf"
-      {"-webkit-right", CSSValueWebkitRight},
-#line 163 "CSSValueKeywords.gperf"
-      {"-webkit-baseline-middle", CSSValueWebkitBaselineMiddle},
-#line 189 "CSSValueKeywords.gperf"
-      {"lower-hexadecimal", CSSValueLowerHexadecimal},
-#line 601 "CSSValueKeywords.gperf"
+#line 605 "CSSValueKeywords.gperf"
       {"lightgoldenrodyellow", CSSValueLightgoldenrodyellow},
-#line 423 "CSSValueKeywords.gperf"
-      {"media-seek-forward-button", CSSValueMediaSeekForwardButton},
-#line 272 "CSSValueKeywords.gperf"
-      {"-webkit-inline-box", CSSValueWebkitInlineBox},
-#line 172 "CSSValueKeywords.gperf"
-      {"-webkit-match-parent", CSSValueWebkitMatchParent},
-#line 461 "CSSValueKeywords.gperf"
-      {"caps-lock-indicator", CSSValueCapsLockIndicator},
-#line 367 "CSSValueKeywords.gperf"
-      {"-webkit-nowrap", CSSValueWebkitNowrap},
-#line 224 "CSSValueKeywords.gperf"
-      {"lower-norwegian", CSSValueLowerNorwegian},
-#line 117 "CSSValueKeywords.gperf"
-      {"highlighttext", CSSValueHighlighttext},
-#line 105 "CSSValueKeywords.gperf"
-      {"-webkit-activelink", CSSValueWebkitActivelink},
-#line 390 "CSSValueKeywords.gperf"
-      {"read-write-plaintext-only", CSSValueReadWritePlaintextOnly},
-#line 216 "CSSValueKeywords.gperf"
-      {"cjk-earthly-branch", CSSValueCjkEarthlyBranch},
-#line 415 "CSSValueKeywords.gperf"
-      {"-webkit-input-speech-button", CSSValueWebkitInputSpeechButton},
-#line 434 "CSSValueKeywords.gperf"
-      {"media-controls-fullscreen-background", CSSValueMediaControlsFullscreenBackground},
-#line 134 "CSSValueKeywords.gperf"
-      {"-webkit-focus-ring-color", CSSValueWebkitFocusRingColor},
 #line 445 "CSSValueKeywords.gperf"
       {"slider-horizontal", CSSValueSliderHorizontal},
 #line 458 "CSSValueKeywords.gperf"
-      {"discrete-capacity-level-indicator", CSSValueDiscreteCapacityLevelIndicator},
-#line 67 "CSSValueKeywords.gperf"
-      {"-webkit-xxx-large", CSSValueWebkitXxxLarge}
+      {"discrete-capacity-level-indicator", CSSValueDiscreteCapacityLevelIndicator}
     };
 
   static const short lookup[] =
@@ -1559,530 +1567,537 @@
        16,  -1,  -1,  -1,  -1,  17,  -1,  -1,  -1,  -1,
        18,  -1,  -1,  -1,  -1,  19,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  20,  -1,  -1,  -1,  -1,
-       -1,  -1,  21,  -1,  -1,  22,  -1,  -1,  -1,  -1,
+       -1,  -1,  21,  -1,  22,  23,  24,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  23,  -1,  -1,  -1,  -1,
-       24,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       25,  -1,  -1,  -1,  -1,  26,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  25,  -1,  -1,  -1,  -1,
+       26,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        27,  -1,  -1,  -1,  -1,  28,  -1,  -1,  -1,  -1,
-       29,  -1,  -1,  -1,  -1,  -1,  -1,  30,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       31,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       29,  -1,  -1,  -1,  -1,  30,  -1,  -1,  -1,  -1,
+       31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  33,  -1,  -1,  -1,  -1,
-       34,  -1,  -1,  -1,  -1,  35,  -1,  -1,  -1,  -1,
-       36,  -1,  -1,  -1,  -1,  37,  -1,  -1,  -1,  -1,
-       38,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       32,  -1,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  39,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  40,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  41,  -1,  -1,  -1,  -1,
-       42,  -1,  -1,  -1,  -1,  43,  -1,  -1,  -1,  -1,
-       44,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       45,  -1,  -1,  -1,  -1,  46,  -1,  -1,  -1,  -1,
-       -1,  -1,  47,  -1,  48,  -1,  -1,  -1,  -1,  -1,
-       49,  -1,  -1,  -1,  -1,  -1,  -1,  50,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  34,  -1,  -1,  -1,  -1,
+       35,  -1,  -1,  -1,  -1,  36,  -1,  -1,  -1,  -1,
+       37,  -1,  -1,  -1,  -1,  38,  -1,  -1,  -1,  -1,
+       39,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  40,  -1,  -1,  -1,  41,
+       -1,  -1,  -1,  -1,  -1,  42,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  43,  -1,  -1,  -1,  -1,
+       44,  -1,  -1,  -1,  -1,  45,  -1,  -1,  -1,  -1,
+       46,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       47,  -1,  -1,  -1,  -1,  48,  -1,  -1,  -1,  -1,
+       -1,  -1,  49,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       50,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  51,  -1,  52,  -1,  -1,
        53,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        54,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       55,  -1,  56,  -1,  -1,  57,  -1,  -1,  -1,  -1,
-       58,  -1,  -1,  -1,  -1,  59,  -1,  60,  -1,  -1,
+       55,  -1,  -1,  -1,  -1,  56,  -1,  -1,  -1,  -1,
+       57,  -1,  -1,  -1,  -1,  58,  -1,  59,  -1,  -1,
+       -1,  -1,  -1,  -1,  60,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  61,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       62,  -1,  -1,  -1,  -1,  63,  -1,  64,  -1,  -1,
+       -1,  -1,  65,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  66,  -1,  -1,  67,  -1,  68,  -1,  -1,
+       -1,  -1,  69,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  61,  -1,  -1,  -1,  -1,  62,  -1,  -1,
-       63,  -1,  -1,  -1,  64,  65,  -1,  66,  -1,  -1,
-       -1,  -1,  67,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  68,  -1,  -1,  69,  -1,  70,  -1,  -1,
+       70,  -1,  -1,  -1,  -1,  71,  -1,  72,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  71,  -1,  -1,  -1,  -1,  -1,
-       72,  -1,  -1,  -1,  -1,  73,  -1,  74,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  75,  -1,  -1,  -1,  -1,  -1,  76,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  77,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  78,  -1,  -1,  -1,  79,
-       -1,  -1,  80,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  81,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  82,  -1,  83,  -1,  -1,
-       84,  -1,  85,  -1,  -1,  -1,  -1,  86,  -1,  -1,
+       -1,  -1,  73,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  74,  -1,  -1,  -1,  75,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       87,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  88,  -1,  -1,  -1,  -1,
-       89,  -1,  -1,  -1,  -1,  -1,  -1,  90,  -1,  -1,
-       91,  -1,  92,  -1,  -1,  -1,  -1,  93,  -1,  -1,
-       -1,  -1,  94,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  95,  -1,  -1,  -1,  96,
-       -1,  -1,  -1,  -1,  -1,  97,  -1,  -1,  -1,  98,
-       99,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  76,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  77,  -1,  78,  -1,  -1,
+       79,  -1,  80,  -1,  -1,  -1,  -1,  81,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  82,  -1,  -1,
+       83,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  84,  -1,  -1,  -1,  -1,
+       85,  -1,  -1,  -1,  -1,  -1,  -1,  86,  -1,  -1,
+       87,  -1,  88,  -1,  -1,  -1,  -1,  89,  -1,  -1,
+       -1,  -1,  90,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  91,  92,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  93,  -1,  94,  -1,  -1,
+       95,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 100,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      101,  -1, 102,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      103,  -1,  -1,  -1,  -1, 104,  -1, 105,  -1,  -1,
-       -1,  -1, 106,  -1,  -1, 107,  -1, 108,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  96,  -1,  -1,  -1,  -1,  97,  -1,  -1,
+       98,  -1,  -1,  -1,  -1,  99,  -1, 100,  -1,  -1,
+       -1,  -1, 101,  -1,  -1, 102,  -1, 103,  -1,  -1,
+      104,  -1,  -1,  -1,  -1, 105,  -1,  -1,  -1,  -1,
+      106,  -1,  -1,  -1,  -1, 107,  -1,  -1,  -1, 108,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       109,  -1,  -1,  -1,  -1, 110,  -1,  -1,  -1,  -1,
-      111,  -1,  -1,  -1,  -1, 112,  -1,  -1,  -1, 113,
-       -1,  -1,  -1,  -1, 114,  -1,  -1,  -1,  -1,  -1,
-      115,  -1,  -1,  -1,  -1, 116,  -1,  -1,  -1,  -1,
-      117,  -1,  -1,  -1,  -1, 118,  -1, 119,  -1,  -1,
+      111,  -1,  -1,  -1,  -1, 112,  -1, 113,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 120,  -1,  -1, 121,  -1,  -1,  -1,  -1,
-      122,  -1,  -1,  -1,  -1,  -1,  -1, 123,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 124,  -1, 125,
+       -1,  -1,  -1,  -1,  -1, 114,  -1,  -1,  -1,  -1,
+      115,  -1,  -1,  -1,  -1,  -1,  -1, 116,  -1,  -1,
+       -1, 117,  -1,  -1,  -1,  -1,  -1, 118,  -1, 119,
+       -1, 120,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      121,  -1,  -1,  -1, 122, 123,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 124,  -1,  -1,
+      125,  -1, 126,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      127,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      128,  -1,  -1,  -1,  -1, 129,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 130,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      126,  -1,  -1,  -1, 127, 128,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 129,  -1,  -1,
-      130,  -1, 131,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      132,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      133,  -1,  -1,  -1,  -1, 134,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1, 135,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 136,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 137,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 138,  -1,  -1,  -1,  -1,
-       -1,  -1, 139,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 140,  -1,  -1,  -1, 141,
-       -1,  -1, 142,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 143,  -1,  -1,  -1,  -1,
-       -1,  -1, 144,  -1,  -1, 145,  -1, 146,  -1,  -1,
-      147,  -1,  -1,  -1,  -1, 148,  -1, 149,  -1,  -1,
-      150,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      151,  -1, 152,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      153, 154,  -1,  -1,  -1,  -1,  -1, 155,  -1,  -1,
-       -1,  -1, 156,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 157,  -1,  -1,  -1, 158,
-       -1,  -1, 159,  -1,  -1,  -1,  -1, 160,  -1,  -1,
-       -1,  -1, 161,  -1,  -1, 162,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 163, 164, 165,  -1,  -1,
+       -1,  -1, 131,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 132,  -1,  -1,  -1,  -1,
+       -1,  -1, 133,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 134,  -1,  -1,  -1, 135,
+       -1,  -1, 136,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 137,  -1, 138,  -1,  -1,
+       -1,  -1, 139,  -1,  -1, 140,  -1, 141,  -1,  -1,
+      142,  -1,  -1,  -1,  -1, 143,  -1, 144,  -1,  -1,
+      145,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      146,  -1, 147,  -1,  -1,  -1,  -1,  -1,  -1, 148,
+      149,  -1,  -1,  -1,  -1,  -1,  -1, 150,  -1,  -1,
+       -1,  -1, 151,  -1,  -1, 152,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 153, 154,  -1,  -1,  -1, 155,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 156,  -1,  -1,
+       -1,  -1, 157,  -1,  -1, 158,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 159,  -1, 160,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      166,  -1,  -1,  -1,  -1, 167,  -1,  -1,  -1,  -1,
-      168,  -1, 169,  -1,  -1,  -1,  -1, 170,  -1,  -1,
+      161,  -1,  -1,  -1,  -1, 162,  -1,  -1,  -1,  -1,
+      163,  -1, 164,  -1,  -1,  -1,  -1, 165,  -1,  -1,
+       -1,  -1, 166,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 167,  -1,  -1,  -1, 168,
+       -1,  -1, 169,  -1, 170,  -1,  -1, 171,  -1,  -1,
+       -1,  -1, 172,  -1,  -1, 173,  -1, 174,  -1,  -1,
+      175,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 171,  -1, 172,  -1,  -1,
-       -1,  -1, 173,  -1,  -1,  -1,  -1, 174,  -1,  -1,
-       -1,  -1, 175,  -1,  -1, 176,  -1, 177,  -1, 178,
-      179, 180,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 181,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      182,  -1,  -1,  -1,  -1, 183,  -1,  -1,  -1,  -1,
-      184,  -1,  -1,  -1,  -1,  -1,  -1, 185,  -1,  -1,
-      186,  -1,  -1,  -1,  -1, 187,  -1,  -1,  -1, 188,
-       -1,  -1, 189,  -1,  -1,  -1,  -1, 190,  -1,  -1,
+      176,  -1,  -1,  -1,  -1, 177,  -1,  -1,  -1,  -1,
+      178,  -1,  -1,  -1,  -1,  -1,  -1, 179,  -1,  -1,
+      180,  -1,  -1,  -1,  -1, 181,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      191,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      192,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      193,  -1, 194,  -1, 195, 196,  -1, 197,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      198,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 199,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 200,  -1,  -1,  -1,  -1,  -1,  -1, 201,
-       -1,  -1,  -1,  -1,  -1, 202,  -1, 203,  -1, 204,
-      205,  -1, 206,  -1,  -1, 207,  -1,  -1,  -1,  -1,
+      182,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      183,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      184,  -1, 185,  -1,  -1,  -1,  -1, 186,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 187,  -1,  -1,
+      188,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 189,  -1,  -1,
+       -1,  -1, 190,  -1,  -1,  -1,  -1,  -1,  -1, 191,
+       -1,  -1,  -1,  -1,  -1, 192,  -1, 193,  -1,  -1,
+      194,  -1, 195,  -1,  -1, 196,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 197,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 198,  -1, 199,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 208,  -1, 209,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 200,  -1,  -1,  -1, 201,
+      202,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1, 203,  -1,  -1, 204,  -1,  -1, 205,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 210, 211,  -1,  -1,  -1,  -1,
-      212,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 213,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 214,  -1,  -1, 215,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 216,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1, 217,  -1,  -1, 218,
-       -1,  -1, 219,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      220,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 221, 222,  -1,  -1,  -1, 223,
-      224,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 206,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      225,  -1,  -1,  -1,  -1, 226,  -1, 227,  -1,  -1,
-      228,  -1, 229,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 207,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      208,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 209,  -1,  -1,  -1,  -1,
+      210,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 230,  -1,  -1,  -1,  -1,  -1,
-      231,  -1,  -1,  -1,  -1, 232,  -1,  -1,  -1,  -1,
+      211,  -1, 212,  -1,  -1, 213,  -1, 214,  -1,  -1,
+      215,  -1, 216,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 217,  -1, 218,  -1,  -1, 219,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 233,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 234,  -1,  -1,  -1, 235,
-       -1,  -1,  -1,  -1, 236,  -1,  -1,  -1,  -1,  -1,
-       -1, 237, 238,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 239,  -1,  -1,  -1,  -1,
-       -1,  -1, 240,  -1,  -1,  -1,  -1, 241,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 220,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      242,  -1,  -1,  -1,  -1, 243,  -1, 244,  -1,  -1,
-      245,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      246,  -1, 247,  -1, 248,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 221,  -1,  -1,  -1,  -1,
+       -1,  -1, 222,  -1,  -1, 223,  -1,  -1,  -1, 224,
+       -1,  -1,  -1,  -1, 225,  -1, 226,  -1,  -1,  -1,
+       -1,  -1, 227,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 228,  -1,  -1,  -1,  -1,
+      229,  -1,  -1,  -1,  -1,  -1,  -1, 230,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      231,  -1,  -1,  -1, 232, 233,  -1, 234,  -1,  -1,
+      235,  -1,  -1,  -1,  -1,  -1, 236,  -1, 237,  -1,
+       -1, 238,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 239,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 249,
-      250,  -1,  -1,  -1,  -1, 251,  -1,  -1,  -1, 252,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 253,  -1,  -1, 254,  -1, 255,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 256,  -1,  -1,
-      257,  -1,  -1,  -1,  -1, 258,  -1,  -1,  -1,  -1,
-      259,  -1,  -1,  -1,  -1,  -1,  -1, 260,  -1,  -1,
-       -1,  -1,  -1,  -1, 261, 262,  -1, 263,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 264,  -1,  -1,  -1,  -1,  -1,  -1, 265,
-      266,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      267,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      240,  -1, 241,  -1,  -1, 242,  -1, 243,  -1,  -1,
+       -1,  -1,  -1,  -1, 244,  -1,  -1,  -1,  -1,  -1,
+       -1, 245,  -1,  -1,  -1,  -1,  -1, 246,  -1, 247,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      268,  -1,  -1,  -1,  -1, 269, 270,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 248, 249,  -1,  -1,  -1,  -1,
+      250,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 251,  -1, 252, 253,  -1, 254,  -1,  -1,
+       -1,  -1,  -1,  -1, 255,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 256,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      257,  -1,  -1,  -1,  -1, 258,  -1,  -1,  -1,  -1,
+      259,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 260,  -1,  -1,  -1,  -1,  -1,  -1, 261,
+      262, 263,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 264,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 271,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      272,  -1,  -1,  -1,  -1, 273,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 274,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 275,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 276,  -1,  -1,
-       -1,  -1,  -1,  -1, 277,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 278,  -1,  -1, 279,  -1,  -1,  -1,  -1,
-       -1,  -1, 280,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 281,  -1, 282,  -1,  -1,
-      283,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 284, 285,
-      286,  -1, 287,  -1,  -1, 288,  -1,  -1,  -1,  -1,
-      289,  -1, 290,  -1,  -1,  -1,  -1, 291,  -1,  -1,
-      292,  -1,  -1,  -1,  -1, 293,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 294,  -1,  -1,  -1,  -1,
-      295,  -1, 296,  -1,  -1,  -1,  -1, 297,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 298,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 299,  -1,  -1,
+      265,  -1,  -1,  -1,  -1, 266,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1, 267, 268,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 269,  -1, 270,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 271,  -1,  -1,
+       -1,  -1, 272,  -1, 273,  -1, 274,  -1,  -1,  -1,
+       -1, 275, 276,  -1, 277, 278,  -1,  -1,  -1,  -1,
+       -1,  -1, 279,  -1,  -1,  -1, 280,  -1, 281,  -1,
+       -1,  -1,  -1,  -1, 282, 283, 284, 285,  -1,  -1,
+      286,  -1,  -1,  -1,  -1,  -1,  -1, 287,  -1,  -1,
+       -1, 288, 289,  -1,  -1, 290,  -1,  -1,  -1,  -1,
+      291, 292,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      293,  -1,  -1,  -1,  -1, 294,  -1,  -1,  -1,  -1,
+       -1,  -1, 295,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      296,  -1, 297,  -1,  -1,  -1,  -1, 298,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 299,  -1, 300,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 301,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 300,  -1,  -1,
-      301,  -1,  -1,  -1,  -1, 302,  -1,  -1,  -1,  -1,
-      303,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 304,  -1,  -1, 305,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 302,  -1,  -1,
+      303,  -1,  -1,  -1,  -1, 304,  -1,  -1,  -1,  -1,
+      305,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1, 306,  -1, 307, 308,  -1,  -1,  -1,  -1,
+       -1,  -1, 309,  -1,  -1, 310,  -1,  -1,  -1, 311,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 309, 310,  -1,  -1,  -1,  -1,
-      311,  -1, 312,  -1,  -1, 313,  -1,  -1,  -1,  -1,
-       -1,  -1, 314,  -1, 315,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 316,  -1, 317,  -1,  -1,
-       -1,  -1, 318,  -1,  -1, 319,  -1,  -1,  -1, 320,
-       -1,  -1, 321,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 312,  -1,  -1,  -1,  -1,
+      313,  -1, 314,  -1,  -1, 315,  -1,  -1,  -1,  -1,
+       -1,  -1, 316,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 317,  -1, 318,  -1,  -1,
+       -1,  -1, 319,  -1,  -1, 320,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      322,  -1, 323,  -1,  -1,  -1, 324,  -1,  -1,  -1,
-       -1,  -1, 325,  -1,  -1,  -1,  -1,  -1,  -1, 326,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      321,  -1, 322,  -1,  -1,  -1,  -1,  -1,  -1, 323,
+       -1,  -1, 324,  -1,  -1,  -1,  -1,  -1,  -1, 325,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 327,  -1,  -1,
-       -1,  -1, 328,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 326,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      329,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 327,  -1, 328,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 330,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 329,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 331,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 332,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 330,  -1,  -1,  -1,  -1, 331,  -1, 332,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 333,  -1,  -1,
-       -1,  -1, 334,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 335,  -1,  -1,  -1,  -1,
-      336,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 337,
-      338,  -1,  -1,  -1,  -1,  -1,  -1, 339,  -1,  -1,
+       -1,  -1, 333,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 334,  -1,  -1,  -1,  -1, 335,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1, 336,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 337,  -1, 338,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 340,  -1,  -1,
-      341,  -1, 342,  -1, 343,  -1,  -1, 344,  -1,  -1,
-      345,  -1,  -1,  -1,  -1, 346,  -1, 347,  -1,  -1,
-       -1,  -1, 348,  -1, 349,  -1,  -1, 350,  -1,  -1,
-       -1,  -1, 351,  -1,  -1, 352,  -1,  -1,  -1,  -1,
-      353,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1, 339,  -1, 340,  -1,  -1,  -1,  -1,
+      341,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      342, 343,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 354,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 355,
-      356,  -1,  -1,  -1,  -1,  -1, 357,  -1,  -1,  -1,
-      358,  -1,  -1,  -1,  -1, 359,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 360,  -1,  -1,
+       -1,  -1,  -1,  -1, 344,  -1,  -1, 345,  -1,  -1,
+       -1,  -1, 346,  -1,  -1,  -1,  -1, 347,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 348,  -1, 349,  -1,  -1,
+       -1, 350, 351,  -1, 352,  -1,  -1, 353,  -1,  -1,
+       -1,  -1, 354,  -1,  -1, 355,  -1,  -1,  -1,  -1,
+      356,  -1, 357,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 358,  -1,  -1,  -1, 359, 360,  -1,  -1,
        -1,  -1,  -1,  -1, 361,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 362,  -1,  -1, 363,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 364,  -1,  -1,  -1,  -1,
-       -1,  -1, 365,  -1,  -1,  -1,  -1,  -1,  -1, 366,
+       -1,  -1,  -1,  -1,  -1, 362,  -1,  -1,  -1,  -1,
+      363,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 364,  -1, 365,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1, 366,  -1,  -1,  -1,
+       -1,  -1, 367,  -1, 368,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 369,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 370,  -1,  -1,  -1,  -1,
+       -1,  -1, 371,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      372,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 373,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      374,  -1, 375,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 376,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 377,  -1, 378,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 367,  -1,  -1,  -1,  -1,
-      368,  -1,  -1,  -1,  -1, 369,  -1,  -1,  -1, 370,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 371,
-      372,  -1,  -1,  -1,  -1,  -1,  -1, 373,  -1,  -1,
-      374,  -1,  -1,  -1, 375, 376,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 377,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 379,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 380,  -1,  -1,  -1,  -1, 381,
+      382,  -1, 383,  -1, 384, 385,  -1,  -1,  -1, 386,
+       -1,  -1, 387,  -1,  -1,  -1,  -1,  -1,  -1, 388,
+      389,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      390,  -1,  -1,  -1,  -1, 391,  -1,  -1,  -1,  -1,
+       -1,  -1, 392,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      393,  -1, 394,  -1,  -1,  -1,  -1, 395,  -1,  -1,
+       -1,  -1, 396,  -1, 397,  -1,  -1, 398,  -1,  -1,
+      399,  -1, 400,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      401,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      378,  -1,  -1,  -1,  -1, 379,  -1,  -1,  -1, 380,
-       -1,  -1, 381,  -1,  -1,  -1,  -1, 382,  -1,  -1,
-      383,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      384,  -1,  -1,  -1,  -1, 385,  -1,  -1,  -1, 386,
-       -1,  -1, 387,  -1,  -1, 388,  -1,  -1,  -1,  -1,
-      389,  -1,  -1,  -1, 390, 391,  -1, 392,  -1,  -1,
-      393,  -1, 394,  -1, 395,  -1,  -1,  -1,  -1, 396,
-      397,  -1, 398,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      399,  -1, 400,  -1,  -1,  -1,  -1, 401,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 402,  -1, 403,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 402,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 404,  -1,  -1,  -1, 405,
+       -1,  -1,  -1,  -1,  -1, 406, 407, 408,  -1,  -1,
+       -1,  -1, 409,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 410,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 411,  -1,  -1,  -1, 412,
+      413,  -1,  -1,  -1,  -1, 414,  -1,  -1,  -1, 415,
+      416,  -1, 417,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 403,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 404,  -1,  -1,  -1,  -1,
-       -1,  -1, 405,  -1,  -1,  -1,  -1,  -1,  -1, 406,
-      407,  -1,  -1,  -1,  -1, 408,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      409,  -1, 410,  -1,  -1,  -1,  -1,  -1,  -1, 411,
-       -1, 412, 413,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      414,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1, 415,  -1,  -1, 416,  -1,  -1,  -1,  -1, 417,
        -1,  -1,  -1,  -1,  -1, 418,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 419,  -1,  -1,
+      419,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       420,  -1, 421,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      422,  -1,  -1,  -1,  -1,  -1,  -1, 423,  -1,  -1,
-       -1,  -1, 424,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      422,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 423,  -1, 424,  -1,  -1,  -1,  -1, 425,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      425,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 426,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 426,  -1,  -1,
+      427,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 428,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 429,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 430,
+       -1,  -1,  -1,  -1, 431,  -1,  -1, 432,  -1,  -1,
+      433,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 434,
+       -1,  -1, 435,  -1,  -1,  -1,  -1,  -1,  -1, 436,
+      437,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 438,
+       -1,  -1,  -1,  -1, 439,  -1,  -1, 440,  -1, 441,
+       -1,  -1, 442,  -1,  -1,  -1,  -1, 443,  -1, 444,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 445,  -1,  -1,
+       -1,  -1, 446,  -1, 447,  -1,  -1, 448,  -1, 449,
+       -1,  -1, 450,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      451, 452,  -1,  -1, 453,  -1,  -1, 454,  -1,  -1,
+       -1,  -1, 455,  -1,  -1, 456,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 457,  -1,  -1,  -1,  -1, 458,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 459,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 460,  -1,  -1,  -1,  -1,  -1,
+      461,  -1, 462,  -1,  -1, 463,  -1, 464,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 427,
-       -1,  -1, 428,  -1,  -1,  -1,  -1, 429,  -1,  -1,
-      430,  -1,  -1,  -1,  -1,  -1,  -1, 431,  -1, 432,
+      465,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 433,  -1, 434,
-      435,  -1,  -1,  -1, 436,  -1,  -1, 437,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 466,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      438,  -1, 439,  -1,  -1,  -1,  -1, 440,  -1,  -1,
-       -1,  -1, 441,  -1,  -1,  -1,  -1, 442,  -1,  -1,
-      443,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      444,  -1, 445,  -1,  -1, 446,  -1,  -1,  -1, 447,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 467,  -1,  -1,
+       -1, 468,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 469,
+       -1,  -1,  -1,  -1,  -1, 470,  -1,  -1,  -1,  -1,
+      471,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 472,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 448,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 449,  -1,  -1, 450,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 451,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 452,  -1,  -1, 453,  -1,  -1,  -1, 454,
-       -1,  -1, 455,  -1,  -1,  -1, 456,  -1,  -1,  -1,
-       -1,  -1, 457,  -1,  -1, 458,  -1,  -1,  -1,  -1,
-      459,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      460,  -1, 461,  -1,  -1,  -1,  -1, 462,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 463,  -1,  -1,
-      464,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 465,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 466,  -1,  -1,  -1, 467,
-       -1,  -1,  -1,  -1,  -1, 468,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 473,  -1,  -1, 474,  -1,  -1,
+       -1,  -1,  -1,  -1, 475,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 469,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      476,  -1, 477,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 478,  -1,  -1,
+       -1,  -1, 479,  -1, 480,  -1,  -1,  -1,  -1,  -1,
+       -1, 481,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1, 482,  -1,  -1,  -1,  -1, 483,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1, 484,  -1,  -1,  -1,  -1,  -1, 485,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 486,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 487,  -1,  -1,  -1,  -1,
+       -1,  -1, 488,  -1,  -1,  -1,  -1,  -1, 489,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1, 490, 491,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 492,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1, 493,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 470,  -1,  -1,  -1,  -1, 471,
-      472,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      473,  -1,  -1,  -1,  -1,  -1,  -1, 474,  -1,  -1,
-       -1,  -1,  -1,  -1, 475,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 476,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 477,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 478,  -1, 479,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 494,  -1,  -1,  -1, 495,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 480,  -1, 481,  -1,  -1, 482,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1, 496, 497,  -1,  -1,
+       -1,  -1, 498,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 499,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 483,  -1, 484,  -1,  -1,
+      500,  -1, 501,  -1,  -1,  -1, 502, 503,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 485,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 486,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      487,  -1,  -1,  -1,  -1, 488,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 489,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 490,  -1,  -1, 491,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      492,  -1, 493,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 494,  -1,  -1,
-      495,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 496,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 497,
+       -1,  -1,  -1,  -1,  -1, 504,  -1, 505,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 506,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 507,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 508,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 498, 499,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 500,  -1,  -1,  -1,  -1,
-       -1,  -1, 501,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 502,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 503,
-       -1,  -1,  -1,  -1,  -1, 504,  -1,  -1,  -1, 505,
-       -1,  -1, 506,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 507,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 509,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 510,
+       -1,  -1, 511,  -1, 512,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 513,  -1, 514,
+       -1,  -1,  -1,  -1,  -1,  -1, 515,  -1,  -1,  -1,
+       -1,  -1, 516,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      517,  -1,  -1,  -1,  -1, 518,  -1,  -1,  -1,  -1,
+       -1, 519,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      508,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 509,  -1,  -1,  -1,  -1,
-      510,  -1, 511,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1, 520,  -1,  -1, 521,  -1,  -1,  -1,  -1, 522,
+       -1,  -1,  -1,  -1, 523,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 524,  -1,  -1,
+      525,  -1,  -1,  -1,  -1,  -1, 526,  -1,  -1,  -1,
+       -1,  -1, 527,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 528,  -1,  -1,  -1, 529,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 530,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      512,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      513,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 531,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 532,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 533,  -1,  -1,  -1, 534,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 535,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      514,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 515,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1, 516,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 517,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 518,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 536,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 519,  -1, 520,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 521,  -1,  -1, 522,  -1,  -1,  -1, 523,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 524,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 537,  -1,  -1,  -1,  -1,
+       -1,  -1, 538,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1, 539,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 540,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 541,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      525,  -1,  -1,  -1,  -1,  -1,  -1, 526,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 527,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 542,  -1, 543,  -1,  -1,  -1,
+       -1,  -1, 544,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 545,  -1,  -1,  -1, 546,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 547,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 528,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 529,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 548,  -1,  -1,  -1,  -1,
+      549,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 550,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1, 551,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 552,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 553,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 530,  -1,  -1,
+       -1,  -1, 554,  -1, 555,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      556,  -1,  -1, 557,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 558,  -1,  -1,  -1, 559,  -1,  -1,  -1,
+       -1,  -1, 560,  -1,  -1, 561,  -1,  -1,  -1,  -1,
+       -1,  -1, 562,  -1,  -1,  -1,  -1,  -1, 563,  -1,
+       -1,  -1, 564,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 565,  -1,  -1, 566,  -1,  -1,  -1,  -1,
+       -1,  -1, 567,  -1,  -1, 568,  -1,  -1,  -1, 569,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 531,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      570,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 571,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 572,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 573, 574,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 575,  -1,  -1,  -1,  -1,
+      576,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 577, 578,  -1,  -1,  -1,  -1,
+      579,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 580,
+       -1,  -1,  -1,  -1,  -1, 581,  -1,  -1,  -1,  -1,
+      582,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 532,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 583,
+       -1,  -1,  -1,  -1,  -1, 584,  -1, 585,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 533,  -1,  -1,  -1,  -1,
-      534,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 535,  -1,  -1,
-       -1,  -1,  -1,  -1, 536,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      537,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 538,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 539,  -1, 540,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 541,  -1,  -1,  -1,  -1,
-       -1,  -1, 542,  -1,  -1, 543,  -1, 544,  -1, 545,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 546,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 547,  -1,  -1,  -1,  -1,
-       -1,  -1, 548,  -1, 549,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 586,  -1,  -1, 587,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 588,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 589, 590,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 550, 551,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 552,  -1,  -1,  -1,  -1,
-      553,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 554, 555,  -1,  -1,  -1,  -1,
-      556,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      591,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 592,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 557,  -1,  -1,  -1,  -1,
-      558,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 559,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1, 560,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 561,  -1,  -1,  -1,  -1,
-      562,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 593,  -1,  -1,
+       -1,  -1, 594,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      595,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 596,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 597,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 598,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 599,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 563,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 564,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 565,  -1, 566,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 567,  -1,  -1,  -1,  -1,
+       -1,  -1, 600,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      568,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      569,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      570,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 571,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 572,  -1,  -1,  -1,  -1,
+      601,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      573,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      574,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1, 602,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      603,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      604,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      575,  -1, 576,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      577,  -1, 578,  -1,  -1,  -1,  -1, 579,  -1,  -1,
+       -1,  -1, 605,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 606,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 607,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      608,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1, 609,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 580,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      581,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      610,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 611,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      582,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      583,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 584,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 585,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 586,  -1,  -1,
-       -1,  -1,  -1,  -1, 587,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 588,  -1,  -1,  -1,  -1, 589,  -1,  -1,
+      612,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      590,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1, 613,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      591,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 614,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      615,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      616,  -1, 617,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 592,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 618,
+       -1,  -1,  -1,  -1, 619,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 620,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      593,  -1,  -1,  -1, 594,  -1,  -1, 595,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 596,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      597,  -1, 598,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      599,  -1, 600,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 601,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 602,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 603,  -1,  -1,  -1,  -1, 604,  -1,  -1,
-       -1,  -1,  -1,  -1, 605,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 606,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 607,  -1, 608,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      621,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 622, 623,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      609,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 610, 611,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 624,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      612,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 625,  -1,  -1,  -1,  -1, 626,
+       -1,  -1,  -1,  -1,  -1, 627,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 613,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 614,
-       -1,  -1,  -1,  -1, 615,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      616,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 628,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 629,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -2090,30 +2105,32 @@
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 630,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      631,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 632,  -1,  -1,  -1,  -1,
+       -1,  -1, 633,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1, 634, 635,  -1,  -1,  -1,  -1,  -1,
+       -1, 636,  -1,  -1,  -1, 637,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 617,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 618,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 619,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 620,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 621,  -1,  -1, 622,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 638,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 623,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 639,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -2121,28 +2138,21 @@
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 640,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 624,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      625,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      626,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      627,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 628,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 629,  -1,  -1,
+      641,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      630,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      631,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1, 632,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -2150,80 +2160,76 @@
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 633,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 642,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 634, 635,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 643,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 636,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 644,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 637,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 645,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 638,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1, 639,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 640,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      646,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 647,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      641,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 642,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 643,  -1,  -1,  -1,  -1,  -1,
-      644,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 648,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 645,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 649,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      650,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 651,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 652,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 646,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 653,  -1,  -1,
+       -1,  -1,  -1,  -1, 654,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 647,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      648,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      649,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      650,  -1,  -1,  -1,  -1,  -1, 651,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 652,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1, 653,  -1,  -1,  -1,  -1,
+       -1, 655,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -2233,14 +2239,13 @@
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      654,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 656,  -1,  -1, 657,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 655,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -2252,21 +2257,16 @@
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      656,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 657,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1, 658,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 659,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 660,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -2286,12 +2286,14 @@
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 658,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1, 659,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -2304,23 +2306,26 @@
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 661,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 660,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 661,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 662,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 662,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 663,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 664,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -2339,24 +2344,27 @@
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 665,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 663,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1, 666,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1, 664,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 667,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 668,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 669,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -2369,7 +2377,6 @@
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 665,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -2419,7 +2426,6 @@
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1, 666,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -2470,7 +2476,94 @@
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 667
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 670,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1, 671
     };
 
   if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
@@ -2492,7 +2585,7 @@
     }
   return 0;
 }
-#line 690 "CSSValueKeywords.gperf"
+#line 694 "CSSValueKeywords.gperf"
 
 static const char* const valueList[] = {
     "",
@@ -3008,6 +3101,10 @@
     "farthest-corner",
     "upright",
     "vertical-right",
+    "upright-right",
+    "sideways-right",
+    "sideways-left",
+    "sideways",
     "font",
     "glyphs",
     "inline-box",
Index: src/3rdparty/webkit/Source/WebCore/generated/UserAgentStyleSheets.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/generated/UserAgentStyleSheets.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/generated/UserAgentStyleSheets.h	(revision 43814)
@@ -1,5 +1,5 @@
 namespace WebCore {
-extern const char htmlUserAgentStyleSheet[14651];
+extern const char htmlUserAgentStyleSheet[14675];
 extern const char quirksUserAgentStyleSheet[351];
 extern const char mathmlUserAgentStyleSheet[4865];
 extern const char svgUserAgentStyleSheet[351];
Index: src/3rdparty/webkit/Source/WebCore/generated/CSSPropertyNames.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/generated/CSSPropertyNames.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/generated/CSSPropertyNames.cpp	(revision 43814)
@@ -38,7 +38,7 @@
 namespace WebCore {
 enum
   {
-    TOTAL_KEYWORDS = 343,
+    TOTAL_KEYWORDS = 345,
     MIN_WORD_LENGTH = 3,
     MAX_WORD_LENGTH = 43,
     MIN_HASH_VALUE = 1,
@@ -71,7 +71,7 @@
       3232, 3232, 3232, 3232, 3232, 3232, 3232, 3232, 3232, 3232,
       3232, 3232, 3232, 3232, 3232, 3232, 3232,    5,    0,  220,
          0,    5,  161,  710,    1,    0,    0,    0,   95,   70,
-        10,   10,  260,    0,   15,  120,    0,  980,  500,    0,
+        10,   10,  260,    0,   15,  120,    0,  980,  900,    0,
        211,  526,  435, 3232, 3232, 3232, 3232, 3232, 3232, 3232,
       3232, 3232, 3232, 3232, 3232, 3232, 3232, 3232, 3232, 3232,
       3232, 3232, 3232, 3232, 3232, 3232, 3232, 3232, 3232, 3232,
@@ -414,14 +414,14 @@
     {"z-index", CSSPropertyZIndex},
 #line 72 "CSSPropertyNames.gperf"
     {"border-top-color", CSSPropertyBorderTopColor},
+#line 350 "CSSPropertyNames.gperf"
+    {"-kobo-font-thickness", CSSPropertyKoboFontThickness},
 #line 206 "CSSPropertyNames.gperf"
     {"-webkit-box-flex", CSSPropertyWebkitBoxFlex},
 #line 265 "CSSPropertyNames.gperf"
     {"-webkit-mask-repeat-x", CSSPropertyWebkitMaskRepeatX},
 #line 211 "CSSPropertyNames.gperf"
     {"-webkit-box-pack", CSSPropertyWebkitBoxPack},
-#line 29 "CSSPropertyNames.gperf"
-    {"font-variant", CSSPropertyFontVariant},
 #line 91 "CSSPropertyNames.gperf"
     {"height", CSSPropertyHeight},
 #line 292 "CSSPropertyNames.gperf"
@@ -458,8 +458,6 @@
     {"border-style", CSSPropertyBorderStyle},
 #line 177 "CSSPropertyNames.gperf"
     {"-webkit-appearance", CSSPropertyWebkitAppearance},
-#line 114 "CSSPropertyNames.gperf"
-    {"overflow", CSSPropertyOverflow},
 #line 105 "CSSPropertyNames.gperf"
     {"min-height", CSSPropertyMinHeight},
 #line 285 "CSSPropertyNames.gperf"
@@ -490,10 +488,8 @@
     {"-webkit-font-size-delta", CSSPropertyWebkitFontSizeDelta},
 #line 58 "CSSPropertyNames.gperf"
     {"border-collapse", CSSPropertyBorderCollapse},
-#line 144 "CSSPropertyNames.gperf"
-    {"text-overline", CSSPropertyTextOverline},
-#line 148 "CSSPropertyNames.gperf"
-    {"text-overline-width", CSSPropertyTextOverlineWidth},
+#line 349 "CSSPropertyNames.gperf"
+    {"-kobo-font-sharpness", CSSPropertyKoboFontSharpness},
 #line 214 "CSSPropertyNames.gperf"
     {"-webkit-color-correction", CSSPropertyWebkitColorCorrection},
 #line 282 "CSSPropertyNames.gperf"
@@ -516,10 +512,6 @@
     {"-webkit-hyphens", CSSPropertyWebkitHyphens},
 #line 201 "CSSPropertyNames.gperf"
     {"-webkit-border-start-style", CSSPropertyWebkitBorderStartStyle},
-#line 126 "CSSPropertyNames.gperf"
-    {"pointer-events", CSSPropertyPointerEvents},
-#line 146 "CSSPropertyNames.gperf"
-    {"text-overline-mode", CSSPropertyTextOverlineMode},
 #line 260 "CSSPropertyNames.gperf"
     {"-webkit-mask-origin", CSSPropertyWebkitMaskOrigin},
 #line 247 "CSSPropertyNames.gperf"
@@ -546,17 +538,13 @@
     {"-webkit-padding-end", CSSPropertyWebkitPaddingEnd},
 #line 24 "CSSPropertyNames.gperf"
     {"display", CSSPropertyDisplay},
-#line 115 "CSSPropertyNames.gperf"
-    {"overflow-x", CSSPropertyOverflowX},
 #line 245 "CSSPropertyNames.gperf"
     {"-webkit-margin-before", CSSPropertyWebkitMarginBefore},
-#line 143 "CSSPropertyNames.gperf"
-    {"text-overflow", CSSPropertyTextOverflow},
 #line 266 "CSSPropertyNames.gperf"
     {"-webkit-mask-repeat-y", CSSPropertyWebkitMaskRepeatY},
 #line 107 "CSSPropertyNames.gperf"
     {"opacity", CSSPropertyOpacity},
-#line 357 "CSSPropertyNames.gperf"
+#line 359 "CSSPropertyNames.gperf"
     {"-webkit-opacity", CSSPropertyOpacity},
 #line 135 "CSSPropertyNames.gperf"
     {"text-align", CSSPropertyTextAlign},
@@ -582,6 +570,8 @@
     {"outline-width", CSSPropertyOutlineWidth},
 #line 128 "CSSPropertyNames.gperf"
     {"quotes", CSSPropertyQuotes},
+#line 29 "CSSPropertyNames.gperf"
+    {"font-variant", CSSPropertyFontVariant},
 #line 32 "CSSPropertyNames.gperf"
     {"-webkit-font-smoothing", CSSPropertyWebkitFontSmoothing},
 #line 321 "CSSPropertyNames.gperf"
@@ -632,10 +622,10 @@
     {"page-break-after", CSSPropertyPageBreakAfter},
 #line 302 "CSSPropertyNames.gperf"
     {"-webkit-transition-duration", CSSPropertyWebkitTransitionDuration},
+#line 114 "CSSPropertyNames.gperf"
+    {"overflow", CSSPropertyOverflow},
 #line 124 "CSSPropertyNames.gperf"
     {"page-break-before", CSSPropertyPageBreakBefore},
-#line 145 "CSSPropertyNames.gperf"
-    {"text-overline-color", CSSPropertyTextOverlineColor},
 #line 256 "CSSPropertyNames.gperf"
     {"-webkit-mask-box-image", CSSPropertyWebkitMaskBoxImage},
 #line 287 "CSSPropertyNames.gperf"
@@ -644,28 +634,30 @@
     {"-webkit-min-logical-width", CSSPropertyWebkitMinLogicalWidth},
 #line 157 "CSSPropertyNames.gperf"
     {"unicode-bidi", CSSPropertyUnicodeBidi},
-#line 160 "CSSPropertyNames.gperf"
-    {"visibility", CSSPropertyVisibility},
 #line 119 "CSSPropertyNames.gperf"
     {"padding-left", CSSPropertyPaddingLeft},
 #line 121 "CSSPropertyNames.gperf"
     {"padding-top", CSSPropertyPaddingTop},
+#line 144 "CSSPropertyNames.gperf"
+    {"text-overline", CSSPropertyTextOverline},
+#line 148 "CSSPropertyNames.gperf"
+    {"text-overline-width", CSSPropertyTextOverlineWidth},
 #line 303 "CSSPropertyNames.gperf"
     {"-webkit-transition-property", CSSPropertyWebkitTransitionProperty},
-#line 359 "CSSPropertyNames.gperf"
+#line 361 "CSSPropertyNames.gperf"
     {"-epub-word-break", CSSPropertyWordBreak},
 #line 314 "CSSPropertyNames.gperf"
     {"flood-opacity", CSSPropertyFloodOpacity},
-#line 346 "CSSPropertyNames.gperf"
-    {"vector-effect", CSSPropertyVectorEffect},
 #line 229 "CSSPropertyNames.gperf"
     {"-webkit-hyphenate-character", CSSPropertyWebkitHyphenateCharacter},
-#line 116 "CSSPropertyNames.gperf"
-    {"overflow-y", CSSPropertyOverflowY},
 #line 151 "CSSPropertyNames.gperf"
     {"text-underline", CSSPropertyTextUnderline},
 #line 155 "CSSPropertyNames.gperf"
     {"text-underline-width", CSSPropertyTextUnderlineWidth},
+#line 126 "CSSPropertyNames.gperf"
+    {"pointer-events", CSSPropertyPointerEvents},
+#line 146 "CSSPropertyNames.gperf"
+    {"text-overline-mode", CSSPropertyTextOverlineMode},
 #line 249 "CSSPropertyNames.gperf"
     {"-webkit-marquee-direction", CSSPropertyWebkitMarqueeDirection},
 #line 165 "CSSPropertyNames.gperf"
@@ -688,12 +680,14 @@
     {"-webkit-marquee-repetition", CSSPropertyWebkitMarqueeRepetition},
 #line 225 "CSSPropertyNames.gperf"
     {"-webkit-column-width", CSSPropertyWebkitColumnWidth},
-#line 278 "CSSPropertyNames.gperf"
-    {"-webkit-perspective", CSSPropertyWebkitPerspective},
 #line 88 "CSSPropertyNames.gperf"
     {"empty-cells", CSSPropertyEmptyCells},
+#line 115 "CSSPropertyNames.gperf"
+    {"overflow-x", CSSPropertyOverflowX},
 #line 317 "CSSPropertyNames.gperf"
     {"stop-opacity", CSSPropertyStopOpacity},
+#line 143 "CSSPropertyNames.gperf"
+    {"text-overflow", CSSPropertyTextOverflow},
 #line 250 "CSSPropertyNames.gperf"
     {"-webkit-marquee-increment", CSSPropertyWebkitMarqueeIncrement},
 #line 153 "CSSPropertyNames.gperf"
@@ -706,13 +700,11 @@
     {"fill-rule", CSSPropertyFillRule},
 #line 110 "CSSPropertyNames.gperf"
     {"outline-color", CSSPropertyOutlineColor},
-#line 348 "CSSPropertyNames.gperf"
-    {"-webkit-svg-shadow", CSSPropertyWebkitSvgShadow},
 #line 252 "CSSPropertyNames.gperf"
     {"-webkit-marquee-speed", CSSPropertyWebkitMarqueeSpeed},
 #line 80 "CSSPropertyNames.gperf"
     {"box-sizing", CSSPropertyBoxSizing},
-#line 355 "CSSPropertyNames.gperf"
+#line 357 "CSSPropertyNames.gperf"
     {"-webkit-box-sizing", CSSPropertyBoxSizing},
 #line 226 "CSSPropertyNames.gperf"
     {"-webkit-columns", CSSPropertyWebkitColumns},
@@ -720,11 +712,11 @@
     {"border-bottom-left-radius", CSSPropertyBorderBottomLeftRadius},
 #line 67 "CSSPropertyNames.gperf"
     {"border-right-style", CSSPropertyBorderRightStyle},
-#line 351 "CSSPropertyNames.gperf"
+#line 353 "CSSPropertyNames.gperf"
     {"-webkit-border-bottom-left-radius", CSSPropertyBorderBottomLeftRadius},
 #line 228 "CSSPropertyNames.gperf"
     {"-webkit-highlight", CSSPropertyWebkitHighlight},
-#line 349 "CSSPropertyNames.gperf"
+#line 351 "CSSPropertyNames.gperf"
     {"-epub-text-orientation", CSSPropertyWebkitTextOrientation},
 #line 101 "CSSPropertyNames.gperf"
     {"margin-right", CSSPropertyMarginRight},
@@ -744,14 +736,14 @@
     {"-webkit-transform-origin-z", CSSPropertyWebkitTransformOriginZ},
 #line 215 "CSSPropertyNames.gperf"
     {"-webkit-column-break-after", CSSPropertyWebkitColumnBreakAfter},
-#line 147 "CSSPropertyNames.gperf"
-    {"text-overline-style", CSSPropertyTextOverlineStyle},
+#line 145 "CSSPropertyNames.gperf"
+    {"text-overline-color", CSSPropertyTextOverlineColor},
 #line 216 "CSSPropertyNames.gperf"
     {"-webkit-column-break-before", CSSPropertyWebkitColumnBreakBefore},
 #line 243 "CSSPropertyNames.gperf"
     {"-webkit-margin-collapse", CSSPropertyWebkitMarginCollapse},
-#line 159 "CSSPropertyNames.gperf"
-    {"vertical-align", CSSPropertyVerticalAlign},
+#line 160 "CSSPropertyNames.gperf"
+    {"visibility", CSSPropertyVisibility},
 #line 309 "CSSPropertyNames.gperf"
     {"clip-rule", CSSPropertyClipRule},
 #line 297 "CSSPropertyNames.gperf"
@@ -760,22 +752,28 @@
     {"text-underline-color", CSSPropertyTextUnderlineColor},
 #line 73 "CSSPropertyNames.gperf"
     {"border-top-left-radius", CSSPropertyBorderTopLeftRadius},
-#line 353 "CSSPropertyNames.gperf"
+#line 355 "CSSPropertyNames.gperf"
     {"-webkit-border-top-left-radius", CSSPropertyBorderTopLeftRadius},
+#line 346 "CSSPropertyNames.gperf"
+    {"vector-effect", CSSPropertyVectorEffect},
 #line 120 "CSSPropertyNames.gperf"
     {"padding-right", CSSPropertyPaddingRight},
 #line 241 "CSSPropertyNames.gperf"
     {"-webkit-margin-bottom-collapse", CSSPropertyWebkitMarginBottomCollapse},
 #line 134 "CSSPropertyNames.gperf"
     {"table-layout", CSSPropertyTableLayout},
+#line 116 "CSSPropertyNames.gperf"
+    {"overflow-y", CSSPropertyOverflowY},
 #line 95 "CSSPropertyNames.gperf"
     {"list-style-image", CSSPropertyListStyleImage},
 #line 97 "CSSPropertyNames.gperf"
     {"list-style-type", CSSPropertyListStyleType},
-#line 361 "CSSPropertyNames.gperf"
+#line 363 "CSSPropertyNames.gperf"
     {"-epub-text-combine", CSSPropertyWebkitTextCombine},
 #line 224 "CSSPropertyNames.gperf"
     {"-webkit-column-span", CSSPropertyWebkitColumnSpan},
+#line 278 "CSSPropertyNames.gperf"
+    {"-webkit-perspective", CSSPropertyWebkitPerspective},
 #line 239 "CSSPropertyNames.gperf"
     {"-webkit-margin-after-collapse", CSSPropertyWebkitMarginAfterCollapse},
 #line 240 "CSSPropertyNames.gperf"
@@ -788,11 +786,11 @@
     {"-webkit-user-drag", CSSPropertyWebkitUserDrag},
 #line 238 "CSSPropertyNames.gperf"
     {"-webkit-logical-height", CSSPropertyWebkitLogicalHeight},
-#line 178 "CSSPropertyNames.gperf"
-    {"-webkit-backface-visibility", CSSPropertyWebkitBackfaceVisibility},
+#line 360 "CSSPropertyNames.gperf"
+    {"-epub-text-transform", CSSPropertyTextTransform},
+#line 348 "CSSPropertyNames.gperf"
+    {"-webkit-svg-shadow", CSSPropertyWebkitSvgShadow},
 #line 358 "CSSPropertyNames.gperf"
-    {"-epub-text-transform", CSSPropertyTextTransform},
-#line 356 "CSSPropertyNames.gperf"
     {"-epub-caption-side", CSSPropertyCaptionSide},
 #line 315 "CSSPropertyNames.gperf"
     {"lighting-color", CSSPropertyLightingColor},
@@ -812,15 +810,19 @@
     {"unicode-range", CSSPropertyUnicodeRange},
 #line 55 "CSSPropertyNames.gperf"
     {"border-bottom-right-radius", CSSPropertyBorderBottomRightRadius},
-#line 352 "CSSPropertyNames.gperf"
+#line 354 "CSSPropertyNames.gperf"
     {"-webkit-border-bottom-right-radius", CSSPropertyBorderBottomRightRadius},
-#line 362 "CSSPropertyNames.gperf"
+#line 147 "CSSPropertyNames.gperf"
+    {"text-overline-style", CSSPropertyTextOverlineStyle},
+#line 364 "CSSPropertyNames.gperf"
     {"-epub-text-emphasis", CSSPropertyWebkitTextEmphasis},
 #line 138 "CSSPropertyNames.gperf"
     {"text-line-through", CSSPropertyTextLineThrough},
 #line 142 "CSSPropertyNames.gperf"
     {"text-line-through-width", CSSPropertyTextLineThroughWidth},
-#line 350 "CSSPropertyNames.gperf"
+#line 159 "CSSPropertyNames.gperf"
+    {"vertical-align", CSSPropertyVerticalAlign},
+#line 352 "CSSPropertyNames.gperf"
     {"-epub-writing-mode", CSSPropertyWebkitWritingMode},
 #line 311 "CSSPropertyNames.gperf"
     {"enable-background", CSSPropertyEnableBackground},
@@ -830,22 +832,20 @@
     {"-webkit-text-security", CSSPropertyWebkitTextSecurity},
 #line 140 "CSSPropertyNames.gperf"
     {"text-line-through-mode", CSSPropertyTextLineThroughMode},
-#line 279 "CSSPropertyNames.gperf"
-    {"-webkit-perspective-origin", CSSPropertyWebkitPerspectiveOrigin},
 #line 270 "CSSPropertyNames.gperf"
     {"-webkit-max-logical-height", CSSPropertyWebkitMaxLogicalHeight},
 #line 74 "CSSPropertyNames.gperf"
     {"border-top-right-radius", CSSPropertyBorderTopRightRadius},
-#line 354 "CSSPropertyNames.gperf"
+#line 356 "CSSPropertyNames.gperf"
     {"-webkit-border-top-right-radius", CSSPropertyBorderTopRightRadius},
-#line 360 "CSSPropertyNames.gperf"
+#line 362 "CSSPropertyNames.gperf"
     {"-epub-hyphens", CSSPropertyWebkitHyphens},
-#line 203 "CSSPropertyNames.gperf"
-    {"-webkit-border-vertical-spacing", CSSPropertyWebkitBorderVerticalSpacing},
 #line 342 "CSSPropertyNames.gperf"
     {"glyph-orientation-horizontal", CSSPropertyGlyphOrientationHorizontal},
 #line 47 "CSSPropertyNames.gperf"
     {"background-repeat", CSSPropertyBackgroundRepeat},
+#line 178 "CSSPropertyNames.gperf"
+    {"-webkit-backface-visibility", CSSPropertyWebkitBackfaceVisibility},
 #line 39 "CSSPropertyNames.gperf"
     {"background-attachment", CSSPropertyBackgroundAttachment},
 #line 176 "CSSPropertyNames.gperf"
@@ -856,15 +856,13 @@
     {"-webkit-match-nearest-mail-blockquote-color", CSSPropertyWebkitMatchNearestMailBlockquoteColor},
 #line 209 "CSSPropertyNames.gperf"
     {"-webkit-box-ordinal-group", CSSPropertyWebkitBoxOrdinalGroup},
-#line 280 "CSSPropertyNames.gperf"
-    {"-webkit-perspective-origin-x", CSSPropertyWebkitPerspectiveOriginX},
 #line 304 "CSSPropertyNames.gperf"
     {"-webkit-transition-timing-function", CSSPropertyWebkitTransitionTimingFunction},
 #line 44 "CSSPropertyNames.gperf"
     {"background-position", CSSPropertyBackgroundPosition},
 #line 219 "CSSPropertyNames.gperf"
     {"-webkit-column-gap", CSSPropertyWebkitColumnGap},
-#line 363 "CSSPropertyNames.gperf"
+#line 365 "CSSPropertyNames.gperf"
     {"-epub-text-emphasis-color", CSSPropertyWebkitTextEmphasisColor},
 #line 139 "CSSPropertyNames.gperf"
     {"text-line-through-color", CSSPropertyTextLineThroughColor},
@@ -874,8 +872,6 @@
     {"-webkit-column-rule", CSSPropertyWebkitColumnRule},
 #line 223 "CSSPropertyNames.gperf"
     {"-webkit-column-rule-width", CSSPropertyWebkitColumnRuleWidth},
-#line 343 "CSSPropertyNames.gperf"
-    {"glyph-orientation-vertical", CSSPropertyGlyphOrientationVertical},
 #line 50 "CSSPropertyNames.gperf"
     {"background-size", CSSPropertyBackgroundSize},
 #line 182 "CSSPropertyNames.gperf"
@@ -884,14 +880,16 @@
     {"background-clip", CSSPropertyBackgroundClip},
 #line 179 "CSSPropertyNames.gperf"
     {"-webkit-background-clip", CSSPropertyWebkitBackgroundClip},
+#line 279 "CSSPropertyNames.gperf"
+    {"-webkit-perspective-origin", CSSPropertyWebkitPerspectiveOrigin},
 #line 45 "CSSPropertyNames.gperf"
     {"background-position-x", CSSPropertyBackgroundPositionX},
 #line 218 "CSSPropertyNames.gperf"
     {"-webkit-column-count", CSSPropertyWebkitColumnCount},
+#line 203 "CSSPropertyNames.gperf"
+    {"-webkit-border-vertical-spacing", CSSPropertyWebkitBorderVerticalSpacing},
 #line 180 "CSSPropertyNames.gperf"
     {"-webkit-background-composite", CSSPropertyWebkitBackgroundComposite},
-#line 281 "CSSPropertyNames.gperf"
-    {"-webkit-perspective-origin-y", CSSPropertyWebkitPerspectiveOriginY},
 #line 207 "CSSPropertyNames.gperf"
     {"-webkit-box-flex-group", CSSPropertyWebkitBoxFlexGroup},
 #line 43 "CSSPropertyNames.gperf"
@@ -900,9 +898,11 @@
     {"-webkit-background-origin", CSSPropertyWebkitBackgroundOrigin},
 #line 42 "CSSPropertyNames.gperf"
     {"background-image", CSSPropertyBackgroundImage},
+#line 280 "CSSPropertyNames.gperf"
+    {"-webkit-perspective-origin-x", CSSPropertyWebkitPerspectiveOriginX},
 #line 49 "CSSPropertyNames.gperf"
     {"background-repeat-y", CSSPropertyBackgroundRepeatY},
-#line 364 "CSSPropertyNames.gperf"
+#line 366 "CSSPropertyNames.gperf"
     {"-epub-text-emphasis-style", CSSPropertyWebkitTextEmphasisStyle},
 #line 141 "CSSPropertyNames.gperf"
     {"text-line-through-style", CSSPropertyTextLineThroughStyle},
@@ -910,6 +910,10 @@
     {"-webkit-column-rule-color", CSSPropertyWebkitColumnRuleColor},
 #line 46 "CSSPropertyNames.gperf"
     {"background-position-y", CSSPropertyBackgroundPositionY},
+#line 343 "CSSPropertyNames.gperf"
+    {"glyph-orientation-vertical", CSSPropertyGlyphOrientationVertical},
+#line 281 "CSSPropertyNames.gperf"
+    {"-webkit-perspective-origin-y", CSSPropertyWebkitPerspectiveOriginY},
 #line 222 "CSSPropertyNames.gperf"
     {"-webkit-column-rule-style", CSSPropertyWebkitColumnRuleStyle}
   };
@@ -983,11 +987,11 @@
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  91,  -1,  -1,  -1,
      -1,  92,  -1,  -1,  -1,  93,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1,  -1,  94,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  94,  -1,
-     -1,  95,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  96,  -1,  -1,  -1,  -1,  97,  98,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  95,  -1,
+     -1,  96,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  97,  -1,  -1,  -1,  -1,  -1,  98,  -1,  -1,
      -1,  99,  -1,  -1,  -1,  -1, 100, 101,  -1,  -1,
      -1,  -1,  -1, 102,  -1,  -1,  -1,  -1,  -1,  -1,
     103, 104,  -1,  -1,  -1, 105, 106,  -1,  -1,  -1,
@@ -995,203 +999,203 @@
     108,  -1,  -1,  -1,  -1, 109,  -1,  -1,  -1,  -1,
     110, 111, 112,  -1,  -1, 113,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 114,  -1,  -1,  -1, 115, 116, 117,  -1,  -1,
-     -1,  -1, 118,  -1,  -1,  -1, 119,  -1,  -1,  -1,
-    120, 121,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    122, 123,  -1,  -1,  -1, 124,  -1, 125,  -1,  -1,
-    126,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    127, 128, 129,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 130,  -1,  -1,  -1, 131, 132, 133,  -1,  -1,
-    134,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 114,  -1,  -1,  -1, 115,  -1, 116,  -1,  -1,
+     -1,  -1, 117,  -1,  -1,  -1, 118,  -1,  -1,  -1,
+    119, 120,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    121, 122,  -1,  -1,  -1, 123,  -1, 124,  -1,  -1,
+    125,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    126, 127, 128,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 129,  -1,  -1,  -1, 130,  -1, 131,  -1,  -1,
+    132,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    135, 136,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 137, 138, 139,  -1,  -1,
-    140,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    133, 134,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 135, 136, 137,  -1,  -1,
+    138,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1, 141,  -1,  -1,  -1,  -1, 142, 143,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 144,  -1,  -1,  -1,
-    145, 146,  -1,  -1,  -1, 147,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 148,  -1,  -1,  -1,  -1,
-     -1, 149,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1, 139,  -1,  -1,  -1,  -1, 140, 141,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 142,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 143,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 144,  -1,  -1,  -1,  -1,
+     -1, 145,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    150,  -1, 151,  -1,  -1, 152, 153,  -1,  -1,  -1,
-    154,  -1, 155,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 156,  -1, 157,  -1, 158, 159, 160,  -1,  -1,
-     -1, 161, 162,  -1,  -1,  -1, 163,  -1,  -1,  -1,
-     -1, 164,  -1,  -1,  -1,  -1, 165,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 166,  -1, 167,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 168,  -1,  -1,  -1,
-     -1,  -1, 169,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 170,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 171,  -1,  -1,  -1, 172,  -1,  -1,  -1,  -1,
-    173,  -1,  -1,  -1,  -1, 174,  -1,  -1,  -1,  -1,
+    146,  -1, 147,  -1,  -1, 148, 149,  -1,  -1,  -1,
+    150,  -1, 151,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 152,  -1, 153,  -1, 154, 155,  -1,  -1,  -1,
+     -1, 156,  -1,  -1,  -1,  -1, 157,  -1,  -1,  -1,
+     -1, 158,  -1,  -1,  -1,  -1, 159,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 160,  -1, 161,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 162,  -1,  -1,  -1,
+     -1,  -1, 163,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 164,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 165,  -1,  -1,  -1, 166,  -1,  -1,  -1,  -1,
+    167,  -1,  -1,  -1,  -1, 168,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    175, 176,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 177,  -1, 178,  -1,  -1,
-    179, 180,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    181, 182,  -1,  -1,  -1, 183, 184,  -1,  -1,  -1,
-    185, 186,  -1,  -1,  -1, 187,  -1,  -1,  -1,  -1,
-     -1,  -1, 188,  -1,  -1,  -1, 189, 190,  -1,  -1,
-     -1, 191,  -1,  -1,  -1, 192, 193,  -1,  -1, 194,
-    195, 196,  -1,  -1,  -1,  -1, 197,  -1, 198, 199,
-     -1,  -1,  -1,  -1,  -1,  -1, 200,  -1,  -1,  -1,
-     -1, 201,  -1,  -1,  -1, 202,  -1,  -1,  -1,  -1,
-     -1, 203,  -1,  -1,  -1,  -1, 204,  -1,  -1,  -1,
-     -1, 205, 206,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 207,  -1,  -1,  -1, 208,  -1,  -1,  -1,  -1,
+    169, 170,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 171, 172, 173,  -1,  -1,
+    174, 175,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    176, 177,  -1,  -1,  -1, 178, 179,  -1,  -1,  -1,
+    180, 181,  -1,  -1,  -1, 182,  -1,  -1,  -1,  -1,
+     -1,  -1, 183,  -1,  -1,  -1, 184, 185,  -1,  -1,
+     -1, 186,  -1,  -1,  -1, 187, 188,  -1,  -1, 189,
+    190, 191,  -1,  -1,  -1,  -1, 192,  -1, 193, 194,
+     -1,  -1,  -1,  -1,  -1,  -1, 195,  -1,  -1,  -1,
+     -1, 196,  -1,  -1,  -1, 197, 198,  -1,  -1,  -1,
+     -1, 199,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 200, 201,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 202,  -1,  -1,  -1, 203,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 209,  -1,  -1,  -1,  -1, 210,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 211,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 212,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 204,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 205, 206, 207,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 208,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 213,  -1, 214,  -1,  -1,
-     -1,  -1, 215,  -1, 216,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 209,  -1, 210,  -1,  -1,
+     -1,  -1,  -1,  -1, 211,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1, 217,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 218, 219,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 220,  -1,  -1,  -1,  -1,
-    221,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    222,  -1,  -1,  -1,  -1,  -1,  -1, 223,  -1,  -1,
-    224, 225, 226,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    227,  -1,  -1,  -1,  -1, 228,  -1,  -1,  -1,  -1,
-    229, 230,  -1,  -1,  -1, 231, 232,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 233,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    234, 235,  -1,  -1,  -1,  -1,  -1, 236,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 212, 213,  -1,  -1,
+    214, 215,  -1,  -1,  -1, 216,  -1,  -1,  -1,  -1,
+    217,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    218,  -1,  -1,  -1,  -1,  -1,  -1, 219,  -1,  -1,
+    220, 221, 222,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    223,  -1,  -1,  -1,  -1, 224,  -1,  -1,  -1,  -1,
+    225, 226,  -1,  -1,  -1,  -1, 227,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1,  -1, 228,  -1,  -1,
+     -1, 229, 230,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    231, 232,  -1,  -1,  -1,  -1,  -1, 233,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 237, 238,  -1,  -1,  -1,
-    239,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 234, 235,  -1,  -1,  -1,
+    236,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 240,  -1,  -1,  -1, 241,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 237,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 242,  -1,  -1,  -1,
-     -1, 243,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    244,  -1,  -1,  -1,  -1,  -1, 245, 246,  -1,  -1,
-     -1, 247,  -1, 248,  -1,  -1, 249,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 250,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 251,  -1,
-    252,  -1,  -1,  -1,  -1,  -1,  -1, 253,  -1,  -1,
-    254,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    255,  -1,  -1,  -1,  -1, 256,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 238,  -1,  -1,  -1,
+     -1, 239,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    240,  -1,  -1,  -1,  -1,  -1, 241, 242,  -1,  -1,
+     -1, 243,  -1, 244,  -1,  -1, 245,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 246,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 247,  -1,
+    248,  -1,  -1,  -1,  -1,  -1,  -1, 249,  -1,  -1,
+    250,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    251,  -1,  -1,  -1,  -1, 252,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 257,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 258, 259,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 260,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 261,  -1,  -1,  -1,  -1,
+     -1, 253,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 254,  -1,  -1,  -1,  -1, 255,  -1,  -1,  -1,
+     -1, 256,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 257,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 258,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    262,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    263,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1, 264,  -1,  -1,  -1, 265,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 266,  -1,  -1,  -1,
-     -1, 267,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 268,  -1,  -1,  -1, 269,  -1,  -1,  -1,  -1,
-     -1, 270,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    259,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1, 260,  -1,  -1,  -1, 261,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 262,  -1,  -1,  -1,
+     -1, 263, 264,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 265,  -1,  -1,  -1, 266,  -1,  -1,  -1,  -1,
+     -1, 267, 268,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 271, 272,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 269, 270,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 273,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 274,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 271,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 272,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 273,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 274,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1, 275,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1, 276,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 277,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 278,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 279,  -1, 280,  -1,  -1,
-     -1,  -1, 281,  -1,  -1,  -1,  -1, 282,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 283, 284,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 285,  -1,  -1,  -1,
-     -1,  -1, 286,  -1,  -1, 287,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 277,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 278,  -1, 279,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1,  -1, 280,  -1,  -1,
+     -1, 281,  -1,  -1,  -1, 282, 283,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 284,  -1,  -1,  -1,
+     -1,  -1, 285,  -1,  -1, 286,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1,  -1, 288,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1,  -1, 287,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    289,  -1,  -1,  -1,  -1,  -1, 290,  -1,  -1,  -1,
+    288,  -1,  -1,  -1,  -1,  -1, 289,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    291,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 292,  -1,  -1,  -1,  -1, 293,  -1,  -1,  -1,
+    290,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 291,  -1,  -1,  -1,  -1, 292,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1, 293,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1, 294, 295, 296,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 297,  -1,  -1,  -1,  -1,
-    298,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1, 299,  -1,  -1,  -1,  -1, 300,  -1,  -1,
+    297,  -1,  -1,  -1,  -1, 298,  -1,  -1,  -1,  -1,
+    299,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1, 300,  -1,  -1,  -1,  -1, 301,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 301,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 302,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    302,  -1,  -1, 303,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1, 303,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1, 304,  -1,  -1,  -1,  -1, 305,  -1, 306,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 307,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 308,  -1,
-    309,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 310,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 307,  -1,
+    308,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1, 309,  -1,  -1,  -1, 310,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1, 311,  -1,  -1,  -1,
     312, 313,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1, 314,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 315,  -1,  -1,  -1,  -1, 316,  -1,  -1,  -1,
-    317,  -1,  -1,  -1,  -1, 318,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 315,  -1,  -1,  -1,
+    316,  -1,  -1,  -1,  -1, 317,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1, 319, 320,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1, 318, 319,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 321,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 320,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 322, 323,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1,  -1, 324,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 321, 322,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    325,  -1,  -1,  -1,  -1, 326,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 327,  -1,  -1,  -1,  -1,
-    328,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    323,  -1,  -1,  -1,  -1, 324,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 325,  -1,  -1,  -1,  -1,
+    326,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    327,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 329,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 328,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    330,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    329,  -1,  -1,  -1,  -1, 330,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     331,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1, 332,  -1,  -1,  -1,
-     -1,  -1,  -1, 333,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1, 334,  -1,  -1,  -1,  -1,
-    335,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1, 332,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1, 333,  -1,  -1,  -1,  -1,
+    334,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-    336,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+    335,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1, 336,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1, 337,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 338, 339,
@@ -1205,6 +1209,7 @@
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1, 341,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1,  -1, 342,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -1221,6 +1226,7 @@
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+     -1,  -1,  -1,  -1,  -1,  -1, 343,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
@@ -1237,9 +1243,7 @@
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-     -1, 342
+     -1, 344
   };
 
 const struct Property *
@@ -1264,7 +1268,7 @@
     }
   return 0;
 }
-#line 365 "CSSPropertyNames.gperf"
+#line 367 "CSSPropertyNames.gperf"
 
 const Property* findProperty(register const char* str, register unsigned int len)
 {
Index: src/3rdparty/webkit/Source/WebCore/generated/CSSValueKeywords.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/generated/CSSValueKeywords.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/generated/CSSValueKeywords.h	(revision 43814)
@@ -520,163 +520,167 @@
 const int CSSValueFarthestCorner = 510;
 const int CSSValueUpright = 511;
 const int CSSValueVerticalRight = 512;
-const int CSSValueFont = 513;
-const int CSSValueGlyphs = 514;
-const int CSSValueInlineBox = 515;
-const int CSSValueReplaced = 516;
-const int CSSValueAliceblue = 517;
-const int CSSValueAntiquewhite = 518;
-const int CSSValueAquamarine = 519;
-const int CSSValueAzure = 520;
-const int CSSValueBeige = 521;
-const int CSSValueBisque = 522;
-const int CSSValueBlanchedalmond = 523;
-const int CSSValueBlueviolet = 524;
-const int CSSValueBrown = 525;
-const int CSSValueBurlywood = 526;
-const int CSSValueCadetblue = 527;
-const int CSSValueChartreuse = 528;
-const int CSSValueChocolate = 529;
-const int CSSValueCoral = 530;
-const int CSSValueCornflowerblue = 531;
-const int CSSValueCornsilk = 532;
-const int CSSValueCrimson = 533;
-const int CSSValueCyan = 534;
-const int CSSValueDarkblue = 535;
-const int CSSValueDarkcyan = 536;
-const int CSSValueDarkgoldenrod = 537;
-const int CSSValueDarkgray = 538;
-const int CSSValueDarkgreen = 539;
-const int CSSValueDarkgrey = 540;
-const int CSSValueDarkkhaki = 541;
-const int CSSValueDarkmagenta = 542;
-const int CSSValueDarkolivegreen = 543;
-const int CSSValueDarkorange = 544;
-const int CSSValueDarkorchid = 545;
-const int CSSValueDarkred = 546;
-const int CSSValueDarksalmon = 547;
-const int CSSValueDarkseagreen = 548;
-const int CSSValueDarkslateblue = 549;
-const int CSSValueDarkslategray = 550;
-const int CSSValueDarkslategrey = 551;
-const int CSSValueDarkturquoise = 552;
-const int CSSValueDarkviolet = 553;
-const int CSSValueDeeppink = 554;
-const int CSSValueDeepskyblue = 555;
-const int CSSValueDimgray = 556;
-const int CSSValueDimgrey = 557;
-const int CSSValueDodgerblue = 558;
-const int CSSValueFirebrick = 559;
-const int CSSValueFloralwhite = 560;
-const int CSSValueForestgreen = 561;
-const int CSSValueGainsboro = 562;
-const int CSSValueGhostwhite = 563;
-const int CSSValueGold = 564;
-const int CSSValueGoldenrod = 565;
-const int CSSValueGreenyellow = 566;
-const int CSSValueHoneydew = 567;
-const int CSSValueHotpink = 568;
-const int CSSValueIndianred = 569;
-const int CSSValueIndigo = 570;
-const int CSSValueIvory = 571;
-const int CSSValueKhaki = 572;
-const int CSSValueLavender = 573;
-const int CSSValueLavenderblush = 574;
-const int CSSValueLawngreen = 575;
-const int CSSValueLemonchiffon = 576;
-const int CSSValueLightblue = 577;
-const int CSSValueLightcoral = 578;
-const int CSSValueLightcyan = 579;
-const int CSSValueLightgoldenrodyellow = 580;
-const int CSSValueLightgray = 581;
-const int CSSValueLightgreen = 582;
-const int CSSValueLightgrey = 583;
-const int CSSValueLightpink = 584;
-const int CSSValueLightsalmon = 585;
-const int CSSValueLightseagreen = 586;
-const int CSSValueLightskyblue = 587;
-const int CSSValueLightslategray = 588;
-const int CSSValueLightslategrey = 589;
-const int CSSValueLightsteelblue = 590;
-const int CSSValueLightyellow = 591;
-const int CSSValueLimegreen = 592;
-const int CSSValueLinen = 593;
-const int CSSValueMagenta = 594;
-const int CSSValueMediumaquamarine = 595;
-const int CSSValueMediumblue = 596;
-const int CSSValueMediumorchid = 597;
-const int CSSValueMediumpurple = 598;
-const int CSSValueMediumseagreen = 599;
-const int CSSValueMediumslateblue = 600;
-const int CSSValueMediumspringgreen = 601;
-const int CSSValueMediumturquoise = 602;
-const int CSSValueMediumvioletred = 603;
-const int CSSValueMidnightblue = 604;
-const int CSSValueMintcream = 605;
-const int CSSValueMistyrose = 606;
-const int CSSValueMoccasin = 607;
-const int CSSValueNavajowhite = 608;
-const int CSSValueOldlace = 609;
-const int CSSValueOlivedrab = 610;
-const int CSSValueOrangered = 611;
-const int CSSValueOrchid = 612;
-const int CSSValuePalegoldenrod = 613;
-const int CSSValuePalegreen = 614;
-const int CSSValuePaleturquoise = 615;
-const int CSSValuePalevioletred = 616;
-const int CSSValuePapayawhip = 617;
-const int CSSValuePeachpuff = 618;
-const int CSSValuePeru = 619;
-const int CSSValuePink = 620;
-const int CSSValuePlum = 621;
-const int CSSValuePowderblue = 622;
-const int CSSValueRosybrown = 623;
-const int CSSValueRoyalblue = 624;
-const int CSSValueSaddlebrown = 625;
-const int CSSValueSalmon = 626;
-const int CSSValueSandybrown = 627;
-const int CSSValueSeagreen = 628;
-const int CSSValueSeashell = 629;
-const int CSSValueSienna = 630;
-const int CSSValueSkyblue = 631;
-const int CSSValueSlateblue = 632;
-const int CSSValueSlategray = 633;
-const int CSSValueSlategrey = 634;
-const int CSSValueSnow = 635;
-const int CSSValueSpringgreen = 636;
-const int CSSValueSteelblue = 637;
-const int CSSValueTan = 638;
-const int CSSValueThistle = 639;
-const int CSSValueTomato = 640;
-const int CSSValueTurquoise = 641;
-const int CSSValueViolet = 642;
-const int CSSValueWheat = 643;
-const int CSSValueWhitesmoke = 644;
-const int CSSValueYellowgreen = 645;
-const int CSSValueNonzero = 646;
-const int CSSValueEvenodd = 647;
-const int CSSValueAccumulate = 648;
-const int CSSValueNew = 649;
-const int CSSValueLinearrgb = 650;
-const int CSSValueOptimizequality = 651;
-const int CSSValueCrispedges = 652;
-const int CSSValueButt = 653;
-const int CSSValueMiter = 654;
-const int CSSValueBevel = 655;
-const int CSSValueBeforeEdge = 656;
-const int CSSValueAfterEdge = 657;
-const int CSSValueCentral = 658;
-const int CSSValueTextBeforeEdge = 659;
-const int CSSValueTextAfterEdge = 660;
-const int CSSValueIdeographic = 661;
-const int CSSValueAlphabetic = 662;
-const int CSSValueHanging = 663;
-const int CSSValueMathematical = 664;
-const int CSSValueUseScript = 665;
-const int CSSValueNoChange = 666;
-const int CSSValueResetSize = 667;
-const int CSSValueNonScalingStroke = 668;
-const int numCSSValueKeywords = 669;
+const int CSSValueUprightRight = 513;
+const int CSSValueSidewaysRight = 514;
+const int CSSValueSidewaysLeft = 515;
+const int CSSValueSideways = 516;
+const int CSSValueFont = 517;
+const int CSSValueGlyphs = 518;
+const int CSSValueInlineBox = 519;
+const int CSSValueReplaced = 520;
+const int CSSValueAliceblue = 521;
+const int CSSValueAntiquewhite = 522;
+const int CSSValueAquamarine = 523;
+const int CSSValueAzure = 524;
+const int CSSValueBeige = 525;
+const int CSSValueBisque = 526;
+const int CSSValueBlanchedalmond = 527;
+const int CSSValueBlueviolet = 528;
+const int CSSValueBrown = 529;
+const int CSSValueBurlywood = 530;
+const int CSSValueCadetblue = 531;
+const int CSSValueChartreuse = 532;
+const int CSSValueChocolate = 533;
+const int CSSValueCoral = 534;
+const int CSSValueCornflowerblue = 535;
+const int CSSValueCornsilk = 536;
+const int CSSValueCrimson = 537;
+const int CSSValueCyan = 538;
+const int CSSValueDarkblue = 539;
+const int CSSValueDarkcyan = 540;
+const int CSSValueDarkgoldenrod = 541;
+const int CSSValueDarkgray = 542;
+const int CSSValueDarkgreen = 543;
+const int CSSValueDarkgrey = 544;
+const int CSSValueDarkkhaki = 545;
+const int CSSValueDarkmagenta = 546;
+const int CSSValueDarkolivegreen = 547;
+const int CSSValueDarkorange = 548;
+const int CSSValueDarkorchid = 549;
+const int CSSValueDarkred = 550;
+const int CSSValueDarksalmon = 551;
+const int CSSValueDarkseagreen = 552;
+const int CSSValueDarkslateblue = 553;
+const int CSSValueDarkslategray = 554;
+const int CSSValueDarkslategrey = 555;
+const int CSSValueDarkturquoise = 556;
+const int CSSValueDarkviolet = 557;
+const int CSSValueDeeppink = 558;
+const int CSSValueDeepskyblue = 559;
+const int CSSValueDimgray = 560;
+const int CSSValueDimgrey = 561;
+const int CSSValueDodgerblue = 562;
+const int CSSValueFirebrick = 563;
+const int CSSValueFloralwhite = 564;
+const int CSSValueForestgreen = 565;
+const int CSSValueGainsboro = 566;
+const int CSSValueGhostwhite = 567;
+const int CSSValueGold = 568;
+const int CSSValueGoldenrod = 569;
+const int CSSValueGreenyellow = 570;
+const int CSSValueHoneydew = 571;
+const int CSSValueHotpink = 572;
+const int CSSValueIndianred = 573;
+const int CSSValueIndigo = 574;
+const int CSSValueIvory = 575;
+const int CSSValueKhaki = 576;
+const int CSSValueLavender = 577;
+const int CSSValueLavenderblush = 578;
+const int CSSValueLawngreen = 579;
+const int CSSValueLemonchiffon = 580;
+const int CSSValueLightblue = 581;
+const int CSSValueLightcoral = 582;
+const int CSSValueLightcyan = 583;
+const int CSSValueLightgoldenrodyellow = 584;
+const int CSSValueLightgray = 585;
+const int CSSValueLightgreen = 586;
+const int CSSValueLightgrey = 587;
+const int CSSValueLightpink = 588;
+const int CSSValueLightsalmon = 589;
+const int CSSValueLightseagreen = 590;
+const int CSSValueLightskyblue = 591;
+const int CSSValueLightslategray = 592;
+const int CSSValueLightslategrey = 593;
+const int CSSValueLightsteelblue = 594;
+const int CSSValueLightyellow = 595;
+const int CSSValueLimegreen = 596;
+const int CSSValueLinen = 597;
+const int CSSValueMagenta = 598;
+const int CSSValueMediumaquamarine = 599;
+const int CSSValueMediumblue = 600;
+const int CSSValueMediumorchid = 601;
+const int CSSValueMediumpurple = 602;
+const int CSSValueMediumseagreen = 603;
+const int CSSValueMediumslateblue = 604;
+const int CSSValueMediumspringgreen = 605;
+const int CSSValueMediumturquoise = 606;
+const int CSSValueMediumvioletred = 607;
+const int CSSValueMidnightblue = 608;
+const int CSSValueMintcream = 609;
+const int CSSValueMistyrose = 610;
+const int CSSValueMoccasin = 611;
+const int CSSValueNavajowhite = 612;
+const int CSSValueOldlace = 613;
+const int CSSValueOlivedrab = 614;
+const int CSSValueOrangered = 615;
+const int CSSValueOrchid = 616;
+const int CSSValuePalegoldenrod = 617;
+const int CSSValuePalegreen = 618;
+const int CSSValuePaleturquoise = 619;
+const int CSSValuePalevioletred = 620;
+const int CSSValuePapayawhip = 621;
+const int CSSValuePeachpuff = 622;
+const int CSSValuePeru = 623;
+const int CSSValuePink = 624;
+const int CSSValuePlum = 625;
+const int CSSValuePowderblue = 626;
+const int CSSValueRosybrown = 627;
+const int CSSValueRoyalblue = 628;
+const int CSSValueSaddlebrown = 629;
+const int CSSValueSalmon = 630;
+const int CSSValueSandybrown = 631;
+const int CSSValueSeagreen = 632;
+const int CSSValueSeashell = 633;
+const int CSSValueSienna = 634;
+const int CSSValueSkyblue = 635;
+const int CSSValueSlateblue = 636;
+const int CSSValueSlategray = 637;
+const int CSSValueSlategrey = 638;
+const int CSSValueSnow = 639;
+const int CSSValueSpringgreen = 640;
+const int CSSValueSteelblue = 641;
+const int CSSValueTan = 642;
+const int CSSValueThistle = 643;
+const int CSSValueTomato = 644;
+const int CSSValueTurquoise = 645;
+const int CSSValueViolet = 646;
+const int CSSValueWheat = 647;
+const int CSSValueWhitesmoke = 648;
+const int CSSValueYellowgreen = 649;
+const int CSSValueNonzero = 650;
+const int CSSValueEvenodd = 651;
+const int CSSValueAccumulate = 652;
+const int CSSValueNew = 653;
+const int CSSValueLinearrgb = 654;
+const int CSSValueOptimizequality = 655;
+const int CSSValueCrispedges = 656;
+const int CSSValueButt = 657;
+const int CSSValueMiter = 658;
+const int CSSValueBevel = 659;
+const int CSSValueBeforeEdge = 660;
+const int CSSValueAfterEdge = 661;
+const int CSSValueCentral = 662;
+const int CSSValueTextBeforeEdge = 663;
+const int CSSValueTextAfterEdge = 664;
+const int CSSValueIdeographic = 665;
+const int CSSValueAlphabetic = 666;
+const int CSSValueHanging = 667;
+const int CSSValueMathematical = 668;
+const int CSSValueUseScript = 669;
+const int CSSValueNoChange = 670;
+const int CSSValueResetSize = 671;
+const int CSSValueNonScalingStroke = 672;
+const int numCSSValueKeywords = 673;
 const size_t maxCSSValueKeywordLength = 36;
 
 const char* getValueName(unsigned short id);
Index: src/3rdparty/webkit/Source/WebCore/generated/CSSPropertyNames.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/generated/CSSPropertyNames.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/generated/CSSPropertyNames.h	(revision 43814)
@@ -336,12 +336,14 @@
     CSSPropertyVectorEffect = 1325,
     CSSPropertyWritingMode = 1326,
     CSSPropertyWebkitSvgShadow = 1327,
+    CSSPropertyKoboFontSharpness = 1328,
+    CSSPropertyKoboFontThickness = 1329,
 };
 
 const int firstCSSProperty = 1001;
-const int numCSSProperties = 327;
+const int numCSSProperties = 329;
 const size_t maxCSSPropertyNameLength = 43;
-const char* const propertyNameStrings[327] = {
+const char* const propertyNameStrings[329] = {
 "color",
 "direction",
 "display",
@@ -669,6 +671,8 @@
 "vector-effect",
 "writing-mode",
 "-webkit-svg-shadow",
+"-kobo-font-sharpness",
+"-kobo-font-thickness",
 };
 
 const char* getPropertyName(CSSPropertyID);
Index: src/3rdparty/webkit/Source/WebCore/page/FrameView.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/page/FrameView.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/page/FrameView.cpp	(revision 43814)
@@ -122,7 +122,11 @@
     , m_postLayoutTasksTimer(this, &FrameView::postLayoutTimerFired)
     , m_isTransparent(false)
     , m_baseBackgroundColor(Color::white)
+#if ENABLE(EPUB)
     , m_mediaType("screen")
+#else
+    , m_mediaType("print")
+#endif
     , m_actionScheduler(adoptPtr(new FrameActionScheduler))
     , m_overflowStatusDirty(true)
     , m_viewportRenderer(0)
Index: src/3rdparty/webkit/Source/WebCore/page/Settings.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/page/Settings.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/page/Settings.h	(revision 43814)
@@ -413,6 +413,14 @@
         void setPasswordEchoDurationInSeconds(double durationInSeconds) { m_passwordEchoDurationInSeconds = durationInSeconds; }
         double passwordEchoDurationInSeconds() const { return m_passwordEchoDurationInSeconds; }
 
+#if ENABLE(EPUB)
+        void setPageHeight(int height) { m_pageHeight = height; }
+        int pageHeight() { return m_pageHeight; }
+        void setPageWidth(int width) { m_pageWidth = width; }
+        int pageWidth() { return m_pageWidth; }
+#endif
+
+
     private:
         Page* m_page;
 
@@ -532,6 +540,11 @@
 #if PLATFORM(WIN) || (OS(WINDOWS) && PLATFORM(WX))
         static bool gShouldUseHighResolutionTimers;
 #endif
+
+#if ENABLE(EPUB)
+        int m_pageWidth;
+        int m_pageHeight;
+#endif
     };
 
 } // namespace WebCore
Index: src/3rdparty/webkit/Source/WebCore/page/Settings.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/page/Settings.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/page/Settings.cpp	(revision 43814)
@@ -117,7 +117,11 @@
     , m_allowFileAccessFromFileURLs(true)
     , m_javaScriptCanOpenWindowsAutomatically(false)
     , m_javaScriptCanAccessClipboard(false)
+#ifdef ENABLE_EPUB
+    , m_shouldPrintBackgrounds(true)
+#else
     , m_shouldPrintBackgrounds(false)
+#endif
     , m_textAreasAreResizable(false)
 #if ENABLE(DASHBOARD_SUPPORT)
     , m_usesDashboardBackwardCompatibilityMode(false)
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontCacheQt.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontCacheQt.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontCacheQt.cpp	(revision 43814)
@@ -35,6 +35,7 @@
 #include <wtf/text/StringHash.h>
 
 #include <QFont>
+#include <QFontDatabase>
 #if HAVE(QRAWFONT)
 #include <QTextLayout>
 #endif
@@ -79,7 +80,7 @@
     QRawFont computedFont = rawFontForCharacters(qstring, font.font());
     if (!computedFont.isValid())
         return 0;
-    FontPlatformData alternateFont(computedFont);
+    FontPlatformData alternateFont(computedFont, font.fontDescription().orientation());
     return getCachedFontData(&alternateFont);
 #else
     Q_UNUSED(font);
@@ -106,6 +107,11 @@
 
 FontPlatformData* FontCache::createFontPlatformData(const FontDescription& fontDescription, const AtomicString& familyName)
 {
+#if QT_VERSION >= QT_VERSION_CHECK(4, 8, 0)
+    QFontDatabase db;
+    if (!db.hasFamily(familyName))
+        return 0;
+#endif
     return new FontPlatformData(fontDescription, familyName);
 }
 
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontPlatformData.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontPlatformData.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontPlatformData.h	(revision 43814)
@@ -26,6 +26,7 @@
 
 #include "FontDescription.h"
 #include "FontOrientation.h"
+#include "TextOrientation.h"
 #include <QFont>
 #include <QHash>
 #if HAVE(QRAWFONT)
@@ -43,15 +44,17 @@
         : size(font.pixelSize())
         , bold(font.bold())
         , oblique(false)
+        , orientation(Horizontal)
         , isDeletedValue(false)
     { }
-    FontPlatformDataPrivate(const float size, const bool bold, const bool oblique)
+    FontPlatformDataPrivate(const float size, const bool bold, const bool oblique, FontOrientation orientation = Horizontal)
         : size(size)
         , bold(bold)
         , oblique(oblique)
+        , orientation(orientation)
         , isDeletedValue(false)
     { }
-    FontPlatformDataPrivate(const QFont& font)
+    FontPlatformDataPrivate(const QFont& font, FontOrientation orientation)
         : font(font)
 #if HAVE(QRAWFONT)
         , rawFont(QRawFont::fromFont(font, QFontDatabase::Any))
@@ -59,6 +62,7 @@
         , size(font.pixelSize())
         , bold(font.bold())
         , oblique(false)
+        , orientation(orientation)
         , isDeletedValue(false)
     { }
 #if HAVE(QRAWFONT)
@@ -68,6 +72,7 @@
         , size(rawFont.pixelSize())
         , bold(rawFont.weight() >= QFont::Bold)
         , oblique(false)
+        , orientation(Horizontal)
         , isDeletedValue(false)
     { }
 #endif
@@ -82,22 +87,26 @@
     float size;
     bool bold : 1;
     bool oblique : 1;
+    FontOrientation orientation;
     bool isDeletedValue : 1;
 };
 
 class FontPlatformData {
     WTF_MAKE_FAST_ALLOCATED;
 public:
-    FontPlatformData(float size, bool bold, bool oblique);
+    FontPlatformData(float size, bool bold, bool oblique, FontOrientation = Horizontal);
     FontPlatformData(const FontDescription&, const AtomicString& familyName, int wordSpacing = 0, int letterSpacing = 0);
-    FontPlatformData(const QFont& font)
-        : m_data(adoptRef(new FontPlatformDataPrivate(font)))
+    FontPlatformData(const QFont& font, FontOrientation orientation)
+        : m_data(adoptRef(new FontPlatformDataPrivate(font, orientation)))
     { }
 #if HAVE(QRAWFONT)
+    FontPlatformData(const FontPlatformData& src);
     FontPlatformData(const FontPlatformData&, float size);
-    FontPlatformData(const QRawFont& rawFont)
+    FontPlatformData(const QRawFont& rawFont, FontOrientation orientation)
         : m_data(adoptRef(new FontPlatformDataPrivate(rawFont)))
-    { }
+    {
+        m_data->orientation = orientation;
+    }
 #endif
     FontPlatformData(WTF::HashTableDeletedValueType)
         : m_data(adoptRef(new FontPlatformDataPrivate()))
@@ -163,10 +172,17 @@
             return false;
         return m_data->font.capitalization() == QFont::SmallCaps;
     }
-    
-    FontOrientation orientation() const { return Horizontal; } // FIXME: Implement.
-    void setOrientation(FontOrientation) { } // FIXME: Implement.
-
+    FontOrientation orientation() const 
+    { 
+        Q_ASSERT(m_data != reinterpret_cast<FontPlatformDataPrivate*>(-1));
+        if (m_data)
+            return m_data->orientation;
+        return Horizontal;
+    }
+    void setOrientation(FontOrientation orientation)
+    {
+        m_data->orientation = orientation;
+    }
     unsigned hash() const;
 
 #ifndef NDEBUG
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontPlatformDataQt.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontPlatformDataQt.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontPlatformDataQt.cpp	(revision 43814)
@@ -54,10 +54,11 @@
     return !bold && !oblique && size == 0.f;
 }
 
-FontPlatformData::FontPlatformData(float size, bool bold, bool oblique)
+FontPlatformData::FontPlatformData(float size, bool bold, bool oblique, FontOrientation orientation)
 {
+    m_data = NULL;
     if (!isEmptyValue(size, bold, oblique))
-        m_data = adoptRef(new FontPlatformDataPrivate(size, bold, oblique));
+        m_data = adoptRef(new FontPlatformDataPrivate(size, bold, oblique, orientation));
 }
 
 FontPlatformData::FontPlatformData(const FontDescription& description, const AtomicString& familyName, int wordSpacing, int letterSpacing)
@@ -74,18 +75,37 @@
     const bool smallCaps = description.smallCaps();
     font.setCapitalization(smallCaps ? QFont::SmallCaps : QFont::MixedCase);
     font.setStyleStrategy(QFont::ForceIntegerMetrics);
+    font.setCSMThicknessOffset(description.thickness());
+    font.setCSMSharpnessOffset(description.sharpness());
 
     m_data->bold = font.bold();
     // WebKit allows font size zero but QFont does not. We will return
     // m_data->size if a font size of zero is requested and pixelSize()
     // otherwise.
     m_data->size = (!requestedSize) ? requestedSize : font.pixelSize();
+    m_data->orientation = description.orientation();
 #if HAVE(QRAWFONT)
     m_data->rawFont = QRawFont::fromFont(font, QFontDatabase::Any);
 #endif
 }
 
 #if HAVE(QRAWFONT)
+FontPlatformData::FontPlatformData(const FontPlatformData& src)
+{
+    if (!src.m_data) {
+        return;
+    }
+
+    m_data = adoptRef(new FontPlatformDataPrivate());
+    m_data->font = src.m_data->font;
+    m_data->rawFont = QRawFont::fromFont(m_data->font, QFontDatabase::Any);
+    m_data->size = src.m_data->size;
+    m_data->bold = src.m_data->bold;
+    m_data->oblique = src.m_data->oblique;
+    m_data->orientation = src.m_data->orientation;
+    m_data->isDeletedValue = src.m_data->isDeletedValue;
+}
+
 FontPlatformData::FontPlatformData(const FontPlatformData& other, float size)
     : m_data(adoptRef(new FontPlatformDataPrivate()))
 {
@@ -96,6 +116,7 @@
     m_data->font.setPixelSize(size);
     m_data->rawFont.setPixelSize(size);
     m_data->size = size ? m_data->font.pixelSize() : 0;
+    m_data->orientation = other.m_data->orientation;
 }
 #endif
 
@@ -110,6 +131,7 @@
     const bool equals = (m_data->size == other.m_data->size
                          && m_data->bold == other.m_data->bold
                          && m_data->oblique == other.m_data->oblique
+                         && m_data->orientation == other.m_data->orientation
                          && m_data->font == other.m_data->font);
     return equals;
 }
@@ -123,7 +145,8 @@
     return qHash(m_data->font.toString())
            ^ qHash(*reinterpret_cast<quint32*>(&m_data->size))
            ^ qHash(m_data->bold)
-           ^ qHash(m_data->oblique);
+           ^ qHash(m_data->oblique)
+           ^ qHash(m_data->orientation);
 }
 
 #ifndef NDEBUG
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/GraphicsContextQt.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/GraphicsContextQt.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/GraphicsContextQt.cpp	(revision 43814)
@@ -272,6 +272,7 @@
     pen.setColor(strokeColor());
     pen.setJoinStyle(toQtLineJoin(MiterJoin));
     painter->setPen(pen);
+    setImageInterpolationQuality(InterpolationHighWithDither);
 }
 
 void GraphicsContext::platformDestroy()
@@ -1384,6 +1385,13 @@
         // use the filter
         m_data->p()->setRenderHint(QPainter::SmoothPixmapTransform, true);
         break;
+    case InterpolationHighWithDither:
+        // use the filter and do ordered dither
+        m_data->p()->setRenderHint(QPainter::SmoothPixmapTransform, true);
+        m_data->p()->setRenderHint(QPainter::Dithering, true);
+        // Treat as InterpolationHigh, for the rest of the rendering code
+        m_data->imageInterpolationQuality = InterpolationHigh;
+        break;
 
     case InterpolationDefault:
     default:
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/SimpleFontDataQt.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/SimpleFontDataQt.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/SimpleFontDataQt.cpp	(revision 43814)
@@ -26,6 +26,7 @@
 
 #if HAVE(QRAWFONT)
 #include "NotImplemented.h"
+#include <QFontMetricsF>
 #else
 #include <QFontMetricsF>
 #endif
@@ -68,7 +69,12 @@
     glyphIndexes.append(glyph);
     QVector<QPointF> advances = platformData().rawFont().advancesForGlyphIndexes(glyphIndexes);
     ASSERT(!advances.isEmpty());
-    return advances.at(0).x();
+
+    if (platformData().orientation() == Horizontal || m_isBrokenIdeographFallback || !m_hasVerticalGlyphs) {
+        return advances.at(0).x();
+    } else {
+        return advances.at(0).y();
+    }
 }
 
 SimpleFontData* SimpleFontData::scaledFontData(const FontDescription& fontDescription, float scaleFactor) const
@@ -128,7 +134,12 @@
          return;
     }
 
-#if HAVE(QRAWFONT)
+    if (platformData().orientation() == Vertical && !isTextOrientationFallback())
+        m_hasVerticalGlyphs = m_platformData.rawFont().hasVerticalGlyphs();
+    else
+        m_hasVerticalGlyphs = false;
+
+#if 0 //HAVE(QRAWFONT)
     QRawFont rawFont(m_platformData.rawFont());
     float descent = rawFont.descent();
     float ascent = rawFont.ascent();
@@ -173,7 +184,7 @@
 {
     if (!m_platformData.size())
         return;
-#if HAVE(QRAWFONT)
+#if 0 //HAVE(QRAWFONT)
     QRawFont rawFont(m_platformData.rawFont());
     m_avgCharWidth = rawFont.averageCharWidth();
     m_maxCharWidth = rawFont.maxCharWidth();
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontCustomPlatformDataQt.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontCustomPlatformDataQt.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontCustomPlatformDataQt.cpp	(revision 43814)
@@ -34,7 +34,7 @@
     QFontDatabase::removeApplicationFont(m_handle);
 }
 
-FontPlatformData FontCustomPlatformData::fontPlatformData(int size, bool bold, bool italic, FontOrientation, TextOrientation, FontWidthVariant, FontRenderingMode)
+FontPlatformData FontCustomPlatformData::fontPlatformData(int size, bool bold, bool italic, FontOrientation orientation, TextOrientation textOrientation, FontWidthVariant widthVariant, FontRenderingMode)
 {
     QFont font;
     font.setFamily(QFontDatabase::applicationFontFamilies(m_handle)[0]);
@@ -43,7 +43,7 @@
         font.setWeight(QFont::Bold);
     font.setItalic(italic);
 
-    return FontPlatformData(font);
+    return FontPlatformData(font, orientation);
 }
 
 FontCustomPlatformData* createFontCustomPlatformData(SharedBuffer* buffer)
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/GlyphPageTreeNodeQt.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/GlyphPageTreeNodeQt.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/GlyphPageTreeNodeQt.cpp	(revision 43814)
@@ -25,6 +25,7 @@
 
 #if HAVE(QRAWFONT)
 #include "SimpleFontData.h"
+#include "Font.h"
 #include <QFontMetricsF>
 #include <QTextLayout>
 #endif
@@ -37,11 +38,29 @@
     QRawFont rawFont = fontData->platformData().rawFont();
     QString qstring = QString::fromRawData(reinterpret_cast<const QChar*>(buffer), static_cast<int>(bufferLength));
     QVector<quint32> indexes = rawFont.glyphIndexesForString(qstring);
+    quint32 *glyphs = indexes.data();
 
     bool haveGlyphs = false;
+    bool lookVariants = false;
 
+    if (fontData->hasVerticalGlyphs()) {
+#if ENABLE(EPUB)
+        lookVariants = true;
+#else
+        for (unsigned i = 0; i < length; ++i) {
+            if (!Font::isCJKIdeograph(buffer[i])) {
+                lookVariants = true;
+                break;
+            }
+        }
+#endif
+    }
+
+    if (lookVariants)
+        rawFont.substituteWithVerticalVariants(glyphs, indexes.size());
+
     for (unsigned i = 0; i < length; ++i) {
-        Glyph glyph = (i < indexes.size()) ? indexes.at(i) : 0;
+        Glyph glyph = (i < indexes.size()) ? glyphs[i] : 0;
         if (!glyph)
             setGlyphDataForIndex(offset + i, 0, 0);
         else {
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontQt.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontQt.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/FontQt.cpp	(revision 43814)
@@ -109,8 +109,33 @@
     return QPen(QColor(ctx->strokeColor()), ctx->strokeThickness());
 }
 
-static void drawTextCommon(GraphicsContext* ctx, const TextRun& run, const FloatPoint& point, int from, int to, const QFont& font, bool isComplexText)
+#include <QDebug>
+
+
+static void drawVertical(QPainter* p, QPointF& pt, QString& string)
 {
+	p->save();
+    p->translate(pt);
+    p->rotate(-90);
+    int offset = 0;
+    for (int i = 0; i < string.length(); i++) { 
+        // Only rotate CJKIdeographs and related symbols
+        if (Font::isCJKIdeographOrSymbol(string.at(i).unicode())) {
+            offset = QFontMetrics(p->font()).width(string.left(i + 1));
+            p->drawText(0, offset, string.mid(i, 1));
+        } else {
+            p->save();
+            p->rotate(90);
+            offset = QFontMetrics(p->font()).width(string.left(i));
+            p->drawText(offset, 0, string.mid(i, 1));
+            p->restore();
+        }
+    }
+    p->restore();
+}
+
+static void drawTextCommon(GraphicsContext* ctx, const TextRun& run, const FloatPoint& point, int from, int to, const QFont& font, bool isComplexText, const FontDescription& fontDescription)
+{
     if (to < 0)
         to = run.length();
 
@@ -200,6 +225,8 @@
     QPainterPath textStrokePath;
     if (ctx->textDrawingMode() & TextModeStroke)
         textStrokePath.addText(pt, font, string);
+    
+    bool isVertical = fontDescription.orientation() == Vertical;
 
     ContextShadow* ctxShadow = ctx->contextShadow();
     if (ctxShadow->m_type != ContextShadow::NoShadow) {
@@ -208,7 +235,13 @@
                 p->save();
                 p->setPen(ctxShadow->m_color);
                 p->translate(ctxShadow->offset());
-                p->drawText(pt, string, flags, run.expansion());
+                // p->drawText(pt, string, flags, run.padding());
+                if (isVertical) {
+                    drawVertical(p, pt, string);
+                    // p->drawText(pt, string, flags, run.padding());
+                } else {
+                    p->drawText(pt, string, flags, run.expansion());
+				}
                 p->restore();
             } else {
                 QFontMetrics fm(font);
@@ -247,14 +280,19 @@
     if (ctx->textDrawingMode() & TextModeFill) {
         QPen previousPen = p->pen();
         p->setPen(textFillPen);
-        p->drawText(pt, string, flags, run.expansion());
+        // p->drawText(pt, string, flags, run.padding());
+        if (isVertical) {
+            drawVertical(p, pt, string);
+        } else {
+            p->drawText(pt, string, flags, run.expansion());
+		}
         p->setPen(previousPen);
     }
 }
 
 void Font::drawComplexText(GraphicsContext* ctx, const TextRun& run, const FloatPoint& point, int from, int to) const
 {
-    drawTextCommon(ctx, run, point, from, to, font(), /* isComplexText = */true);
+    drawTextCommon(ctx, run, point, from, to, font(), /* isComplexText = */true, m_fontDescription);
 }
 
 float Font::floatWidthForComplexText(const TextRun& run, HashSet<const SimpleFontData*>*, GlyphOverflow*) const
@@ -321,9 +359,18 @@
     if (context->paintingDisabled())
         return;
 
+    bool isVertical = fontData->platformData().orientation() == Vertical;
     bool shouldFill = context->textDrawingMode() & TextModeFill;
     bool shouldStroke = context->textDrawingMode() & TextModeStroke;
 
+    QPainter* painter = context->platformContext();
+
+    painter->save();
+    painter->translate(point);
+
+    if (isVertical)
+        painter->rotate(-90.);
+
     // Stroking text should always take the complex path.
     ASSERT(!shouldStroke);
 
@@ -340,14 +387,20 @@
     positions.reserve(numGlyphs);
 
     float x = 0;
+    float descent = fontData->fontMetrics().floatDescent();
+    QPointF origin = isVertical ? QPointF(-descent, -descent) : QPointF(0, 0);
 
     for (int i = 0; i < numGlyphs; ++i) {
         Glyph glyph = glyphBuffer.glyphAt(from + i);
         float advance = glyphBuffer.advanceAt(from + i);
         if (!glyph)
             continue;
+
+        float glyphAdvance = fontData->platformWidthForGlyph(glyph);
+
         glyphIndexes.append(glyph);
-        positions.append(QPointF(x, 0));
+        QPointF gOrigin = isVertical ? QPointF(0, x + glyphAdvance) : QPointF(x, 0);
+        positions.append(gOrigin);
         x += advance;
     }
 
@@ -356,24 +409,25 @@
     qtGlyphs.setPositions(positions);
     qtGlyphs.setFont(fontData->platformData().rawFont());
 
-    QPainter* painter = context->platformContext();
-
     QPen previousPen = painter->pen();
     painter->setPen(fillPenForContext(context));
-    painter->drawGlyphs(point, qtGlyphs);
+    painter->drawGlyphs(origin, qtGlyphs);
     painter->setPen(previousPen);
+
+    painter->restore();
 }
 
 bool Font::canExpandAroundIdeographsInComplexText()
 {
-    return false;
+    return true;
 }
 
 #else // !HAVE(QRAWFONT)
 
 void Font::drawSimpleText(GraphicsContext* ctx, const TextRun& run, const FloatPoint& point, int from, int to) const
 {
-    drawTextCommon(ctx, run, point, from, to, font(), /* isComplexText = */false);
+    //drawTextCommon(ctx, run, point, from, to, font(), /* isComplexText = */false);
+    drawTextCommon(ctx, run, point, from, to, font(), /* isComplexText = */false, m_fontDescription);
 }
 
 int Font::offsetForPositionForSimpleText(const TextRun& run, float position, bool includePartialGlyphs) const
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/ImageQt.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/ImageQt.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/qt/ImageQt.cpp	(revision 43814)
@@ -224,17 +224,29 @@
     CompositeOperator previousOperator = ctxt->compositeOperation();
     ctxt->setCompositeOperation(!image->hasAlpha() && op == CompositeSourceOver ? CompositeCopy : op);
 
+    QPixmap resizedImage;
+    const int maxResize = qMin(128 * 128, static_cast<int>(normalizedSrc.width()) * static_cast<int>(normalizedSrc.height()));
+    const int resizeWidth = static_cast<int>(normalizedDst.width());
+    const int resizeHeight = static_cast<int>(normalizedDst.height());
+    bool resize = resizeWidth * resizeHeight < maxResize;
+    if (resize) {
+        resizedImage = image->copy(image->rect());
+        resizedImage = resizedImage.scaled(resizeWidth, resizeHeight,
+                                           Qt::IgnoreAspectRatio, Qt::SmoothTransformation);
+        normalizedSrc = QRectF(normalizedSrc.x(), normalizedSrc.y(), normalizedDst.width(), normalizedDst.height());
+    }
+
     ContextShadow* shadow = ctxt->contextShadow();
     if (shadow->m_type != ContextShadow::NoShadow) {
         QPainter* shadowPainter = shadow->beginShadowLayer(ctxt, normalizedDst);
         if (shadowPainter) {
             shadowPainter->setOpacity(static_cast<qreal>(shadow->m_color.alpha()) / 255);
-            shadowPainter->drawPixmap(normalizedDst, *image, normalizedSrc);
+            shadowPainter->drawPixmap(normalizedDst, resize ? resizedImage : *image, normalizedSrc);
             shadow->endShadowLayer(ctxt);
         }
     }
 
-    ctxt->platformContext()->drawPixmap(normalizedDst, *image, normalizedSrc);
+    ctxt->platformContext()->drawPixmap(normalizedDst, resize ? resizedImage : *image, normalizedSrc);
 
     ctxt->setCompositeOperation(previousOperator);
 
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/orientation.csv
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/orientation.csv	(revision 0)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/orientation.csv	(revision 43814)
@@ -0,0 +1 @@
+0x0,0xa7,0xa8,0xa9,0xaa,0xae,0xaf,0xb6,0xb7,0xbc,0xbf,0x2ea,0x2ec,0x378,0x37a,0x37f,0x384,0x38b,0x38c,0x38d,0x38e,0x3a2,0x3a3,0x528,0x531,0x557,0x559,0x560,0x561,0x588,0x589,0x58b,0x58f,0x590,0x591,0x5c8,0x5d0,0x5eb,0x5f0,0x5f5,0x600,0x605,0x606,0x61c,0x61e,0x70e,0x70f,0x74b,0x74d,0x7b2,0x7c0,0x7fb,0x800,0x82e,0x830,0x83f,0x840,0x85c,0x85e,0x85f,0x8a0,0x8a1,0x8a2,0x8ad,0x8e4,0x8ff,0x900,0x978,0x979,0x980,0x981,0x984,0x985,0x98d,0x98f,0x991,0x993,0x9a9,0x9aa,0x9b1,0x9b2,0x9b3,0x9b6,0x9ba,0x9bc,0x9c5,0x9c7,0x9c9,0x9cb,0x9cf,0x9d7,0x9d8,0x9dc,0x9de,0x9df,0x9e4,0x9e6,0x9fc,0xa01,0xa04,0xa05,0xa0b,0xa0f,0xa11,0xa13,0xa29,0xa2a,0xa31,0xa32,0xa34,0xa35,0xa37,0xa38,0xa3a,0xa3c,0xa3d,0xa3e,0xa43,0xa47,0xa49,0xa4b,0xa4e,0xa51,0xa52,0xa59,0xa5d,0xa5e,0xa5f,0xa66,0xa76,0xa81,0xa84,0xa85,0xa8e,0xa8f,0xa92,0xa93,0xaa9,0xaaa,0xab1,0xab2,0xab4,0xab5,0xaba,0xabc,0xac6,0xac7,0xaca,0xacb,0xace,0xad0,0xad1,0xae0,0xae4,0xae6,0xaf2,0xb01,0xb04,0xb05,0xb0d,0xb0f,0xb11,0xb13,0xb29,0xb2a,0xb31,0xb32,0xb34,0xb35,0xb3a,0xb3c,0xb45,0xb47,0xb49,0xb4b,0xb4e,0xb56,0xb58,0xb5c,0xb5e,0xb5f,0xb64,0xb66,0xb78,0xb82,0xb84,0xb85,0xb8b,0xb8e,0xb91,0xb92,0xb96,0xb99,0xb9b,0xb9c,0xb9d,0xb9e,0xba0,0xba3,0xba5,0xba8,0xbab,0xbae,0xbba,0xbbe,0xbc3,0xbc6,0xbc9,0xbca,0xbce,0xbd0,0xbd1,0xbd7,0xbd8,0xbe6,0xbfb,0xc01,0xc04,0xc05,0xc0d,0xc0e,0xc11,0xc12,0xc29,0xc2a,0xc34,0xc35,0xc3a,0xc3d,0xc45,0xc46,0xc49,0xc4a,0xc4e,0xc55,0xc57,0xc58,0xc5a,0xc60,0xc64,0xc66,0xc70,0xc78,0xc80,0xc82,0xc84,0xc85,0xc8d,0xc8e,0xc91,0xc92,0xca9,0xcaa,0xcb4,0xcb5,0xcba,0xcbc,0xcc5,0xcc6,0xcc9,0xcca,0xcce,0xcd5,0xcd7,0xcde,0xcdf,0xce0,0xce4,0xce6,0xcf0,0xcf1,0xcf3,0xd02,0xd04,0xd05,0xd0d,0xd0e,0xd11,0xd12,0xd3b,0xd3d,0xd45,0xd46,0xd49,0xd4a,0xd4f,0xd57,0xd58,0xd60,0xd64,0xd66,0xd76,0xd79,0xd80,0xd82,0xd84,0xd85,0xd97,0xd9a,0xdb2,0xdb3,0xdbc,0xdbd,0xdbe,0xdc0,0xdc7,0xdca,0xdcb,0xdcf,0xdd5,0xdd6,0xdd7,0xdd8,0xde0,0xdf2,0xdf5,0xe01,0xe3b,0xe3f,0xe5c,0xe81,0xe83,0xe84,0xe85,0xe87,0xe89,0xe8a,0xe8b,0xe8d,0xe8e,0xe94,0xe98,0xe99,0xea0,0xea1,0xea4,0xea5,0xea6,0xea7,0xea8,0xeaa,0xeac,0xead,0xeba,0xebb,0xebe,0xec0,0xec5,0xec6,0xec7,0xec8,0xece,0xed0,0xeda,0xedc,0xee0,0xf00,0xf48,0xf49,0xf6d,0xf71,0xf98,0xf99,0xfbd,0xfbe,0xfcd,0xfce,0xfdb,0x1000,0x10c6,0x10c7,0x10c8,0x10cd,0x10ce,0x10d0,0x1100,0x1200,0x1249,0x124a,0x124e,0x1250,0x1257,0x1258,0x1259,0x125a,0x125e,0x1260,0x1289,0x128a,0x128e,0x1290,0x12b1,0x12b2,0x12b6,0x12b8,0x12bf,0x12c0,0x12c1,0x12c2,0x12c6,0x12c8,0x12d7,0x12d8,0x1311,0x1312,0x1316,0x1318,0x135b,0x135d,0x137d,0x1380,0x139a,0x13a0,0x13f5,0x1400,0x1401,0x1680,0x169d,0x16a0,0x16f1,0x1700,0x170d,0x170e,0x1715,0x1720,0x1737,0x1740,0x1754,0x1760,0x176d,0x176e,0x1771,0x1772,0x1774,0x1780,0x17de,0x17e0,0x17ea,0x17f0,0x17fa,0x1800,0x180f,0x1810,0x181a,0x1820,0x1878,0x1880,0x18ab,0x1900,0x191d,0x1920,0x192c,0x1930,0x193c,0x1940,0x1941,0x1944,0x196e,0x1970,0x1975,0x1980,0x19ac,0x19b0,0x19ca,0x19d0,0x19db,0x19de,0x1a1c,0x1a1e,0x1a5f,0x1a60,0x1a7d,0x1a7f,0x1a8a,0x1a90,0x1a9a,0x1aa0,0x1aae,0x1b00,0x1b4c,0x1b50,0x1b7d,0x1b80,0x1bf4,0x1bfc,0x1c38,0x1c3b,0x1c4a,0x1c4d,0x1c80,0x1cc0,0x1cc8,0x1cd0,0x1cf7,0x1d00,0x1de7,0x1dfc,0x1f16,0x1f18,0x1f1e,0x1f20,0x1f46,0x1f48,0x1f4e,0x1f50,0x1f58,0x1f59,0x1f5a,0x1f5b,0x1f5c,0x1f5d,0x1f5e,0x1f5f,0x1f7e,0x1f80,0x1fb5,0x1fb6,0x1fc5,0x1fc6,0x1fd4,0x1fd6,0x1fdc,0x1fdd,0x1ff0,0x1ff2,0x1ff5,0x1ff6,0x1fff,0x2000,0x2016,0x2017,0x201c,0x2022,0x2030,0x2032,0x203b,0x203e,0x2042,0x2043,0x2044,0x2045,0x2047,0x204a,0x2051,0x2052,0x2065,0x206a,0x2072,0x2074,0x208f,0x2090,0x209d,0x20a0,0x20ba,0x2118,0x2119,0x2140,0x2145,0x214b,0x214c,0x2190,0x2300,0x2308,0x230c,0x2320,0x2322,0x2329,0x232b,0x232c,0x237d,0x239b,0x23b4,0x23b7,0x23ba,0x23d0,0x23d1,0x23dc,0x23e2,0x2500,0x25a0,0x261a,0x2620,0x2768,0x2776,0x2794,0x2b12,0x2b30,0x2b4d,0x2c00,0x2c2f,0x2c30,0x2c5f,0x2c60,0x2cf4,0x2cf9,0x2d26,0x2d27,0x2d28,0x2d2d,0x2d2e,0x2d30,0x2d68,0x2d6f,0x2d71,0x2d7f,0x2d97,0x2da0,0x2da7,0x2da8,0x2daf,0x2db0,0x2db7,0x2db8,0x2dbf,0x2dc0,0x2dc7,0x2dc8,0x2dcf,0x2dd0,0x2dd7,0x2dd8,0x2ddf,0x2de0,0x2e3c,0xa4d0,0xa62c,0xa640,0xa698,0xa69f,0xa6f8,0xa700,0xa78f,0xa790,0xa794,0xa7a0,0xa7ab,0xa7f8,0xa82c,0xa830,0xa83a,0xa840,0xa878,0xa880,0xa8c5,0xa8ce,0xa8da,0xa8e0,0xa8fc,0xa900,0xa954,0xa95f,0xa960,0xa980,0xa9ce,0xa9cf,0xa9da,0xa9de,0xa9e0,0xaa00,0xaa37,0xaa40,0xaa4e,0xaa50,0xaa5a,0xaa5c,0xaa7c,0xaa80,0xaac3,0xaadb,0xaaf7,0xab01,0xab07,0xab09,0xab0f,0xab11,0xab17,0xab20,0xab27,0xab28,0xab2f,0xabc0,0xabee,0xabf0,0xabfa,0xd800,0xd801,0xdb7f,0xdb81,0xdbff,0xdc01,0xdfff,0xe000,0xfb00,0xfb07,0xfb13,0xfb18,0xfb1d,0xfb37,0xfb38,0xfb3d,0xfb3e,0xfb3f,0xfb40,0xfb42,0xfb43,0xfb45,0xfb46,0xfbc2,0xfbd3,0xfd40,0xfd50,0xfd90,0xfd92,0xfdc8,0xfdf0,0xfdfe,0xfe00,0xfe10,0xfe20,0xfe27,0xfe49,0xfe50,0xfe58,0xfe5f,0xfe63,0xfe67,0xfe70,0xfe75,0xfe76,0xfefd,0xfeff,0xff00,0xff0d,0xff0e,0xff1c,0xff1f,0xff61,0xffbf,0xffc2,0xffc8,0xffca,0xffd0,0xffd2,0xffd8,0xffda,0xffdd,0xffe8,0xffef,0xfff9,0xfffc,0x10000,0x1000c,0x1000d,0x10027,0x10028,0x1003b,0x1003c,0x1003e,0x1003f,0x1004e,0x10050,0x1005e,0x10080,0x100fb,0x10100,0x10103,0x10107,0x10134,0x10137,0x1018b,0x10190,0x1019c,0x101d0,0x101fe,0x10280,0x1029d,0x102a0,0x102d1,0x10300,0x1031f,0x10320,0x10324,0x10330,0x1034b,0x10380,0x1039e,0x1039f,0x103c4,0x103c8,0x103d6,0x10400,0x1049e,0x104a0,0x104aa,0x10800,0x10806,0x10808,0x10809,0x1080a,0x10836,0x10837,0x10839,0x1083c,0x1083d,0x1083f,0x10856,0x10857,0x10860,0x10900,0x1091c,0x1091f,0x1093a,0x1093f,0x10940,0x10980,0x109b8,0x109be,0x109c0,0x10a00,0x10a04,0x10a05,0x10a07,0x10a0c,0x10a14,0x10a15,0x10a18,0x10a19,0x10a34,0x10a38,0x10a3b,0x10a3f,0x10a48,0x10a50,0x10a59,0x10a60,0x10a80,0x10b00,0x10b36,0x10b39,0x10b56,0x10b58,0x10b73,0x10b78,0x10b80,0x10c00,0x10c49,0x10e60,0x10e7f,0x11000,0x1104e,0x11052,0x11070,0x11080,0x110c2,0x110d0,0x110e9,0x110f0,0x110fa,0x11100,0x11135,0x11136,0x11144,0x11180,0x111c9,0x111d0,0x111da,0x11680,0x116b8,0x116c0,0x116ca,0x12000,0x1236f,0x12400,0x12463,0x12470,0x12474,0x16800,0x16a39,0x16f00,0x16f45,0x16f50,0x16f7f,0x16f8f,0x16fa0,0x1d400,0x1d455,0x1d456,0x1d49d,0x1d49e,0x1d4a0,0x1d4a2,0x1d4a3,0x1d4a5,0x1d4a7,0x1d4a9,0x1d4ad,0x1d4ae,0x1d4ba,0x1d4bb,0x1d4bc,0x1d4bd,0x1d4c4,0x1d4c5,0x1d506,0x1d507,0x1d50b,0x1d50d,0x1d515,0x1d516,0x1d51d,0x1d51e,0x1d53a,0x1d53b,0x1d53f,0x1d540,0x1d545,0x1d546,0x1d547,0x1d54a,0x1d551,0x1d552,0x1d6a6,0x1d6a8,0x1d7cc,0x1d7ce,0x1d800,0x1ee00,0x1ee04,0x1ee05,0x1ee20,0x1ee21,0x1ee23,0x1ee24,0x1ee25,0x1ee27,0x1ee28,0x1ee29,0x1ee33,0x1ee34,0x1ee38,0x1ee39,0x1ee3a,0x1ee3b,0x1ee3c,0x1ee42,0x1ee43,0x1ee47,0x1ee48,0x1ee49,0x1ee4a,0x1ee4b,0x1ee4c,0x1ee4d,0x1ee50,0x1ee51,0x1ee53,0x1ee54,0x1ee55,0x1ee57,0x1ee58,0x1ee59,0x1ee5a,0x1ee5b,0x1ee5c,0x1ee5d,0x1ee5e,0x1ee5f,0x1ee60,0x1ee61,0x1ee63,0x1ee64,0x1ee65,0x1ee67,0x1ee6b,0x1ee6c,0x1ee73,0x1ee74,0x1ee78,0x1ee79,0x1ee7d,0x1ee7e,0x1ee7f,0x1ee80,0x1ee8a,0x1ee8b,0x1ee9c,0x1eea1,0x1eea4,0x1eea5,0x1eeaa,0x1eeab,0x1eebc,0x1eef0,0x1eef2,0xe0100,0xe01f0
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/GraphicsContext.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/GraphicsContext.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/GraphicsContext.h	(revision 43814)
@@ -147,7 +147,8 @@
         InterpolationNone,
         InterpolationLow,
         InterpolationMedium,
-        InterpolationHigh
+        InterpolationHigh,
+        InterpolationHighWithDither
     };
 
     struct GraphicsContextState {
@@ -513,7 +514,10 @@
         void markDirtyRect(const IntRect&); // Hints that a portion of the backing store is dirty.
 
         static void adjustLineToPixelBoundaries(FloatPoint& p1, FloatPoint& p2, float strokeWidth, StrokeStyle);
-
+        
+#if USE(SKIA)
+        bool isPrinting();
+#endif
     private:
         void platformInit(PlatformGraphicsContext*);
         void platformDestroy();
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/SurrogatePairAwareTextIterator.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/SurrogatePairAwareTextIterator.cpp	(revision 0)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/SurrogatePairAwareTextIterator.cpp	(revision 43814)
@@ -0,0 +1,119 @@
+/*
+ * Copyright (C) 2003, 2006, 2008, 2009, 2010, 2011 Apple Inc. All rights reserved.
+ * Copyright (C) 2008 Holger Hans Peter Freyther
+ * Copyright (C) Research In Motion Limited 2011. All rights reserved.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Library General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Library General Public License for more details.
+ *
+ * You should have received a copy of the GNU Library General Public License
+ * along with this library; see the file COPYING.LIB.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+ * Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "config.h"
+#include "SurrogatePairAwareTextIterator.h"
+
+#if USE(ICU_UNICODE)
+#include <unicode/unorm.h>
+#endif
+
+using namespace WTF;
+using namespace Unicode;
+
+namespace WebCore {
+
+SurrogatePairAwareTextIterator::SurrogatePairAwareTextIterator(const UChar* characters, int currentCharacter, int lastCharacter, int endCharacter)
+    : m_characters(characters)
+    , m_currentCharacter(currentCharacter)
+    , m_lastCharacter(lastCharacter)
+    , m_endCharacter(endCharacter)
+{
+}
+
+bool SurrogatePairAwareTextIterator::consume(UChar32& character, unsigned& clusterLength)
+{
+    if (m_currentCharacter >= m_lastCharacter)
+        return false;
+
+    character = *m_characters;
+    clusterLength = 1;
+
+    if (character < 0x3041)
+        return true;
+
+    if (character <= 0x30FE) {
+        // Deal with Hiragana and Katakana voiced and semi-voiced syllables.
+        // Normalize into composed form, and then look for glyph with base + combined mark.
+        // Check above for character range to minimize performance impact.
+        if (UChar32 normalized = normalizeVoicingMarks()) {
+            character = normalized;
+            clusterLength = 2;
+        }
+        return true;
+    }
+
+    if (!U16_IS_SURROGATE(character))
+        return true;
+
+    // If we have a surrogate pair, make sure it starts with the high part.
+    if (!U16_IS_SURROGATE_LEAD(character))
+        return false;
+
+    // Do we have a surrogate pair? If so, determine the full Unicode (32 bit) code point before glyph lookup.
+    // Make sure we have another character and it's a low surrogate.
+    if (m_currentCharacter + 1 >= m_endCharacter)
+        return false;
+
+    UChar low = m_characters[1];
+    if (!U16_IS_TRAIL(low))
+        return false;
+
+    character = U16_GET_SUPPLEMENTARY(character, low);
+    clusterLength = 2;
+    return true;
+}
+
+void SurrogatePairAwareTextIterator::advance(unsigned advanceLength)
+{
+    m_characters += advanceLength;
+    m_currentCharacter += advanceLength;
+}
+
+UChar32 SurrogatePairAwareTextIterator::normalizeVoicingMarks()
+{
+    // According to http://www.unicode.org/Public/UNIDATA/UCD.html#Canonical_Combining_Class_Values
+    static const uint8_t hiraganaKatakanaVoicingMarksCombiningClass = 8;
+
+    if (m_currentCharacter + 1 >= m_endCharacter)
+        return 0;
+
+    if (combiningClass(m_characters[1]) == hiraganaKatakanaVoicingMarksCombiningClass) {
+#if USE(ICU_UNICODE)
+        // Normalize into composed form using 3.2 rules.
+        UChar normalizedCharacters[2] = { 0, 0 };
+        UErrorCode uStatus = U_ZERO_ERROR;  
+        int32_t resultLength = unorm_normalize(m_characters, 2, UNORM_NFC, UNORM_UNICODE_3_2, &normalizedCharacters[0], 2, &uStatus);
+        if (resultLength == 1 && !uStatus)
+            return normalizedCharacters[0];
+#elif USE(QT4_UNICODE)
+        QString tmp(reinterpret_cast<const QChar*>(m_characters), 2);
+        QString res = tmp.normalized(QString::NormalizationForm_C, QChar::Unicode_3_2);
+        if (res.length() == 1)
+            return res.at(0).unicode();
+#endif
+    }
+
+    return 0;
+}
+
+}
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/FontCache.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/FontCache.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/FontCache.cpp	(revision 43814)
@@ -58,7 +58,8 @@
 public:
     FontPlatformDataCacheKey(const AtomicString& family = AtomicString(), unsigned size = 0, unsigned weight = 0, bool italic = false,
                              bool isPrinterFont = false, FontRenderingMode renderingMode = NormalRenderingMode, FontOrientation orientation = Horizontal,
-                             TextOrientation textOrientation = TextOrientationVerticalRight, FontWidthVariant widthVariant = RegularWidth)
+                             TextOrientation textOrientation = TextOrientationVerticalRight, FontWidthVariant widthVariant = RegularWidth,
+                             double sharpness = 0.0, double thickness = 0.0)
         : m_size(size)
         , m_weight(weight)
         , m_family(family)
@@ -68,6 +69,8 @@
         , m_orientation(orientation)
         , m_textOrientation(textOrientation)
         , m_widthVariant(widthVariant)
+        , m_thickness(thickness)
+        , m_sharpness(sharpness)
     {
     }
 
@@ -78,7 +81,7 @@
     {
         return equalIgnoringCase(m_family, other.m_family) && m_size == other.m_size && 
                m_weight == other.m_weight && m_italic == other.m_italic && m_printerFont == other.m_printerFont &&
-               m_renderingMode == other.m_renderingMode && m_orientation == other.m_orientation && m_textOrientation == other.m_textOrientation && m_widthVariant == other.m_widthVariant;
+               m_renderingMode == other.m_renderingMode && m_orientation == other.m_orientation && m_textOrientation == other.m_textOrientation && m_widthVariant == other.m_widthVariant && m_thickness == other.m_thickness && m_sharpness == other.m_sharpness;
     }
 
     unsigned m_size;
@@ -90,6 +93,8 @@
     FontOrientation m_orientation;
     TextOrientation m_textOrientation;
     FontWidthVariant m_widthVariant;
+    double m_thickness;
+    double m_sharpness;
 
 private:
     static unsigned hashTableDeletedSize() { return 0xFFFFFFFFU; }
@@ -97,12 +102,14 @@
 
 inline unsigned computeHash(const FontPlatformDataCacheKey& fontKey)
 {
-    unsigned hashCodes[5] = {
+    unsigned hashCodes[7] = {
         CaseFoldingHash::hash(fontKey.m_family),
         fontKey.m_size,
         fontKey.m_weight,
         fontKey.m_widthVariant,
-        static_cast<unsigned>(fontKey.m_textOrientation) << 4 | static_cast<unsigned>(fontKey.m_orientation) << 3 | static_cast<unsigned>(fontKey.m_italic) << 2 | static_cast<unsigned>(fontKey.m_printerFont) << 1 | static_cast<unsigned>(fontKey.m_renderingMode)
+        static_cast<unsigned>(fontKey.m_textOrientation) << 4 | static_cast<unsigned>(fontKey.m_orientation) << 3 | static_cast<unsigned>(fontKey.m_italic) << 2 | static_cast<unsigned>(fontKey.m_printerFont) << 1 | static_cast<unsigned>(fontKey.m_renderingMode),
+        fontKey.m_thickness,
+        fontKey.m_sharpness
     };
     return StringHasher::hashMemory<sizeof(hashCodes)>(hashCodes);
 }
@@ -187,7 +194,8 @@
 
     FontPlatformDataCacheKey key(familyName, fontDescription.computedPixelSize(), fontDescription.weight(), fontDescription.italic(),
                                  fontDescription.usePrinterFont(), fontDescription.renderingMode(), fontDescription.orientation(),
-                                 fontDescription.textOrientation(), fontDescription.widthVariant());
+                                 fontDescription.textOrientation(), fontDescription.widthVariant(),
+                                 fontDescription.thickness(), fontDescription.sharpness());
     FontPlatformData* result = 0;
     bool foundResult;
     FontPlatformDataCache::iterator it = gFontPlatformDataCache->find(key);
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/SurrogatePairAwareTextIterator.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/SurrogatePairAwareTextIterator.h	(revision 0)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/SurrogatePairAwareTextIterator.h	(revision 43814)
@@ -0,0 +1,51 @@
+/*
+ * Copyright (C) Research In Motion Limited 2011. All rights reserved.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Library General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Library General Public License for more details.
+ *
+ * You should have received a copy of the GNU Library General Public License
+ * along with this library; see the file COPYING.LIB.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+ * Boston, MA 02110-1301, USA.
+ *
+ */
+
+#ifndef SurrogatePairAwareTextIterator_h
+#define SurrogatePairAwareTextIterator_h
+
+#include <wtf/text/WTFString.h>
+
+namespace WebCore {
+
+class SurrogatePairAwareTextIterator {
+public:
+    // The passed in UChar pointer starts at 'currentCharacter'. The iterator operatoes on the range [currentCharacter, lastCharacter].
+    // 'endCharacter' denotes the maximum length of the UChar array, which might exceed 'lastCharacter'.
+    SurrogatePairAwareTextIterator(const UChar*, int currentCharacter, int lastCharacter, int endCharacter);
+
+    bool consume(UChar32& character, unsigned& clusterLength);
+    void advance(unsigned advanceLength);
+
+    int currentCharacter() const { return m_currentCharacter; }
+    const UChar* characters() const { return m_characters; }
+
+private:
+    UChar32 normalizeVoicingMarks();
+
+    const UChar* m_characters;
+    int m_currentCharacter;
+    int m_lastCharacter;
+    int m_endCharacter;
+};
+
+}
+
+#endif
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/Font.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/Font.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/Font.cpp	(revision 43814)
@@ -419,6 +419,59 @@
     return result;
 }
 
+bool Font::isUnbreakableCharactersPair(UChar32 current, UChar32 next)
+{
+    switch (next)
+    {
+    case 0x009B: // RIGHT SIGNLE ANGLE QUOTATION MARK
+    case 0x00BB: // RIGHT DOUBLE ANGLE QUOTATION MARK
+    case 0x2019: // RIGHT SINGLE QUOTATION MARK
+    case 0x201D: // RIGHT DOUBLE QUOTATION MARK
+        return true;
+    }
+    switch (current) {
+    // Requirements for Japanese Text Layout
+    // 3.1.10 Unbreakable Character Sequences
+    // http://www.w3.org/TR/2012/NOTE-jlreq-20120403/#unbreakable_character_sequences
+    // LEADERS
+    case 0x2026: // HORIZONTAL ELLIPSIS 
+    case 0x2025: // TWO DOT LEADER
+    // DASHES
+    case 0x2014: // EM DASH
+    case 0x2015: // HORIZONTAL BAR
+        return current == next;
+    case 0x2019: // RIGHT SINGLE QUOTATION MARK
+        return !isInterIdeographExpansionTarget(next);
+    // VERTICAL KANA REPEAT MARKS
+    case 0x3033: // VERTICAL KANA REPEAT MARK UPPER HALF
+    case 0x3034: // VERTICAL KANA REPEAT WITH VOICED SOUND MARK UPPER HALF
+        if (next == 0x3035) // VERTICAL KANA REPEAT MARK LOWER HALF
+            return true;
+
+    // There is no spec. But, These may be good for japanese text.
+    // LEADERS
+    case 0x22EF: // MIDLINE HORIZONTAL ELLIPSIS
+    case 0xFE19: // PRESENTATION FORM FOR VERTICAL HORIZONTAL ELLIPSIS
+    case 0xFE30: // PRESENTATION FORM FOR VERTICAL TWO DOT LEADER
+    case 0x205D: // TORICOLON
+    case 0x205A: // TWO DOT PUNCTUATION
+    // DASHES
+    case 0x2012: // FIGURE DASH
+    case 0x2013: // EN DASH
+    case 0x2053: // SWUNG DASH
+    case 0x301C: // WAVE DASH
+    case 0x3030: // WAVY DASH
+        return current == next;
+    case 0x008B: // LEFT SINGLE ANGLE QUOTATION MARK
+    case 0x00AB: // LEFT DOUBLE ANGLE QUOTATION MARK
+    case 0x2018: // LEFT SINGLE QUOTATION MARK
+    case 0x201C: // LEFT DOUBLE QUOTATION MARK
+        return true;
+    default:
+        return false;
+    }
+}
+
 bool Font::isCJKIdeograph(UChar32 c)
 {
     // The basic CJK Unified Ideographs block.
@@ -466,6 +519,9 @@
 
 bool Font::isCJKIdeographOrSymbol(UChar32 c)
 {
+#if ENABLE(EPUB)
+    return isUprightOrientation(c);
+#endif
     // 0x2C7 Caron, Mandarin Chinese 3rd Tone
     // 0x2CA Modifier Letter Acute Accent, Mandarin Chinese 2nd Tone
     // 0x2CB Modifier Letter Grave Access, Mandarin Chinese 4th Tone 
@@ -521,15 +577,132 @@
     return isCJKIdeograph(c);
 }
 
+bool Font::isInterIdeographExpansionTarget(UChar32 c)
+{
+#if ENABLE(EPUB)
+    // There is no spec. But, These may be good for japanese text.
+    // General Punctuation except HYPHEN and NON-BREAKING HYPHEN
+    if (c >= 0x2000 && c <= 0x206F && c != 0x2010 && c != 0x2011)
+        return true;
+    
+    // Number Forms
+    if (c >= 0x2150 && c <= 0x218F)
+        return true;
+    
+    // Enclosed Alphanumerics
+    if (c >= 0x2460 && c <= 0x24FF)
+        return true;
+    
+    // Geometric Shapes
+    if (c >= 0x25A0 && c <= 0x25FF)
+        return true;
+    
+    // Miscellaneous Symbol
+    if (c >= 0x2600 && c <= 0x26FF)
+        return true;
+
+    if (c == 0xFF1A // FULLWIDTH COLON, Full width ASCII variants
+       || c == 0xFF1B // FULLWIDTH SEMICOLON, Full width ASCII variants
+       || c == 0xFF1C // FULLWIDTH LESS-THAN SIGN, Full width ASCII variants
+       || c == 0xFF1E) // FULLWIDTH GREATER-THAN SIGN, Full width ASCII variants
+        return false;
+
+    if (c == 0x00B6 // PILCROW SIGN, Latin-1 punctuation and symbols
+       || c == 0x2103 // DEGREE CELSIUS, Letterlike symbols
+       || c == 0x212B // ANGSTROM SIGN, Letterlike symbols
+       || c == 0x22EF // MIDLINE HORIZONTAL ELLIPSIS
+       || c == 0xFE19) // PRESENTATION FORM FOR VERTICAL HORIZONTAL ELLIPSIS
+        return true;
+
+    // Halfwidth and Fullwidth Forms
+    // Usually only used in CJK
+    // Character codes for Halfwidth and Fullwidth Forms
+    // http://unicode.org/charts/PDF/UFF00.pdf
+
+    // Fullwidth ASCII variants
+    if (c >= 0xFF00 && c <= 0xFF5E)
+        return true;
+
+    // Fullwidth brackets
+    if (c >= 0xFF5F && c <= 0xFF60)
+        return true;
+
+    // Halfwidth CJK punctuation
+    if (c >= 0xFF61 && c <= 0xFF64)
+        return false;
+
+    // Halfwidth Katakana variants
+    if (c >= 0xFF65 && c <= 0xFF9F)
+        return false;
+
+    // Halfwidth Hangul variants
+    if (c >= 0xFFA0 && c <= 0xFFDC)
+        return false;
+
+    // Fullwidth symbol variants
+    if (c >= 0xFFE0 && c <= 0xFFE6)
+        return true;
+
+    // Halfwidth symbol variants
+    if (c >= 0xFFE8 && c <= 0xFFEE)
+        return false;
+
+#endif
+    return isCJKIdeographOrSymbol(c);
+}
+
+#if ENABLE(EPUB)
+unsigned int Font::searchOrientation(unsigned int c, unsigned int *boundaries, size_t length) {
+    unsigned int from = 0;
+    unsigned int to = length - 1;
+
+    // This case should be handle out of this function.
+    ASSERT(c <= boundaries[to]);
+
+    // binary search
+    while(to - from > 1) {
+        unsigned int middle = (from + to) / 2;
+        if (c < boundaries[middle])
+            to = middle;
+        else
+            from = middle;
+    }
+    return from;
+}
+
+bool Font::isUprightOrientation(UChar32 target) {
+    const unsigned int SIDEWAYS = 0;
+    const unsigned int UPRIGHT = 1;
+    unsigned int startsFrom = SIDEWAYS; // U+0000 is SIDEWAYS
+    bool isOddMeansUpright = startsFrom == SIDEWAYS;
+
+    //  Each number of this array is an of the unicode orientation table, and the index is same with the value of codepoint of unicode.
+    // The index means the place where orientation property "switches" UPRIGHT to SIDEWAYS, and vice versa.
+    // ex. If table is [RRUURRRU], it means 0x0000 is sideways, 0x0001 is sideways, 0x0002 is upright, 0x0003 is upright 0x0004 is sideways and so on.
+    //    From this table, boundaries is expressed as [0, 2, 4, 7, 8].
+    unsigned int boundaries[] = {
+        #include "orientation.csv"
+    };
+    unsigned int length = sizeof(boundaries) / sizeof(boundaries[0]);
+    unsigned int rotateType = UPRIGHT;
+    if (static_cast<unsigned int>(target) < boundaries[length-1])
+        rotateType = searchOrientation(target, boundaries, length) % 2; // odd number is UPRIGHT, even is SIDEWAYS
+
+    return isOddMeansUpright ? rotateType == UPRIGHT : rotateType == SIDEWAYS;
+}
+#endif
+
 unsigned Font::expansionOpportunityCount(const UChar* characters, size_t length, TextDirection direction, bool& isAfterExpansion)
 {
     static bool expandAroundIdeographs = canExpandAroundIdeographsInComplexText();
     unsigned count = 0;
     if (direction == LTR) {
+		UChar32 prev = 0;
         for (size_t i = 0; i < length; ++i) {
             UChar32 character = characters[i];
             if (treatAsSpace(character)) {
                 count++;
+                prev = character;
                 isAfterExpansion = true;
                 continue;
             }
@@ -537,20 +710,34 @@
                 character = U16_GET_SUPPLEMENTARY(character, characters[i + 1]);
                 i++;
             }
-            if (expandAroundIdeographs && isCJKIdeographOrSymbol(character)) {
-                if (!isAfterExpansion)
+
+            size_t j = i + 1;
+            UChar32 next = j < length ? characters[j] : 0;
+            if (U16_IS_LEAD(next) && j + 1 < length && U16_IS_TRAIL(characters[j + 1]))
+                next = U16_GET_SUPPLEMENTARY(next, characters[j + 1]);
+
+            if (expandAroundIdeographs && isInterIdeographExpansionTarget(character)) {
+                if (!isAfterExpansion && !isUnbreakableCharactersPair(prev, character))
                     count++;
-                count++;
-                isAfterExpansion = true;
+
+                if (!isUnbreakableCharactersPair(character, next)) {
+                    count++;
+                    isAfterExpansion = true;
+                } else
+                    isAfterExpansion = false;
+                prev = character;
                 continue;
             }
+            prev = character;
             isAfterExpansion = false;
         }
     } else {
+		UChar32 next = 0;
         for (size_t i = length; i > 0; --i) {
             UChar32 character = characters[i - 1];
             if (treatAsSpace(character)) {
                 count++;
+                next = character;
                 isAfterExpansion = true;
                 continue;
             }
@@ -558,13 +745,25 @@
                 character = U16_GET_SUPPLEMENTARY(characters[i - 2], character);
                 i--;
             }
-            if (expandAroundIdeographs && isCJKIdeographOrSymbol(character)) {
-                if (!isAfterExpansion)
+            size_t j = i - 1;
+            UChar32 prev = j > 1 ? characters[j - 1] : 0;
+            if (prev && U16_IS_TRAIL(prev) && U16_IS_LEAD(characters[j - 2]))
+                prev = U16_GET_SUPPLEMENTARY(characters[j - 2], prev);
+
+            if (expandAroundIdeographs && isInterIdeographExpansionTarget(character)) {
+                if (!isAfterExpansion && !isUnbreakableCharactersPair(prev, character))
                     count++;
-                count++;
-                isAfterExpansion = true;
+
+                if (!isUnbreakableCharactersPair(character, next)) {
+                    count++;
+                    isAfterExpansion = true;
+                } else
+                    isAfterExpansion = false;
+
+                next = character;
                 continue;
             }
+            next = character;
             isAfterExpansion = false;
         }
     }
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/WidthIterator.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/WidthIterator.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/WidthIterator.cpp	(revision 43814)
@@ -93,9 +93,13 @@
     const SimpleFontData* primaryFont = m_font->primaryFont();
     const SimpleFontData* lastFontData = primaryFont;
 
+    UChar32 prev = 0;
     while (currentCharacter < offset) {
         UChar32 c = *cp;
         unsigned clusterLength = 1;
+        int nextCharacter = currentCharacter + clusterLength;
+        UChar32 next = nextCharacter < offset ? *(cp + clusterLength) : 0;
+
         if (c >= 0x3041) {
             if (c <= 0x30FE) {
                 // Deal with Hiragana and Katakana voiced and semi-voiced syllables.
@@ -105,6 +109,8 @@
                 if (normalized) {
                     c = normalized;
                     clusterLength = 2;
+                    nextCharacter = currentCharacter + clusterLength;
+                    next = nextCharacter < offset ? *(cp + clusterLength) : 0;
                 }
             } else if (U16_IS_SURROGATE(c)) {
                 if (!U16_IS_SURROGATE_LEAD(c))
@@ -120,6 +126,21 @@
                     break;
                 c = U16_GET_SUPPLEMENTARY(c, low);
                 clusterLength = 2;
+
+                // We need not deal with Hiragana and Katakana voiced and semi-voiced syllables for next character
+                nextCharacter = currentCharacter + clusterLength;
+                next = nextCharacter < offset ? *(cp + clusterLength) : 0;
+                if (!U16_IS_SURROGATE(next)){
+                    if (!U16_IS_SURROGATE_LEAD(next))
+                        break;
+
+                    if ( nextCharacter + 1 >= m_run.length())
+                        break;
+                    UChar nextLow = (cp + clusterLength)[1];
+                    if(!U16_IS_TRAIL(nextLow))
+                        break;
+                    next = U16_GET_SUPPLEMENTARY(next, nextLow);
+                } 
             }
         }
 
@@ -165,25 +186,32 @@
 
             static bool expandAroundIdeographs = Font::canExpandAroundIdeographsInComplexText();
             bool treatAsSpace = Font::treatAsSpace(c);
-            if (treatAsSpace || (expandAroundIdeographs && Font::isCJKIdeographOrSymbol(c))) {
+            if (treatAsSpace || (expandAroundIdeographs && Font::isInterIdeographExpansionTarget(c) )) {
                 // Distribute the run's total expansion evenly over all expansion opportunities in the run.
                 if (m_expansion) {
-                    if (!treatAsSpace && !m_isAfterExpansion) {
+                    if (!treatAsSpace && !m_isAfterExpansion && !Font::isUnbreakableCharactersPair(prev, c)) {
                         // Take the expansion opportunity before this ideograph.
                         m_expansion -= m_expansionPerOpportunity;
                         m_runWidthSoFar += m_expansionPerOpportunity;
                         if (glyphBuffer) {
-                            if (glyphBuffer->isEmpty())
-                                glyphBuffer->add(fontData->spaceGlyph(), fontData, m_expansionPerOpportunity);
-                            else
+                            if (glyphBuffer->isEmpty()){
+                                if (m_forTextEmphasis)
+                                    glyphBuffer->add(0, fontData, m_expansionPerOpportunity);
+                                else
+                                    glyphBuffer->add(fontData->spaceGlyph(), fontData, m_expansionPerOpportunity);
+                            } else
                                 glyphBuffer->expandLastAdvance(m_expansionPerOpportunity);
                         }
                     }
+
                     if (m_run.allowsTrailingExpansion() || (m_run.ltr() && currentCharacter + clusterLength < static_cast<size_t>(m_run.length()))
-                        || (m_run.rtl() && currentCharacter)) {
-                        m_expansion -= m_expansionPerOpportunity;
-                        width += m_expansionPerOpportunity;
-                        m_isAfterExpansion = true;
+                                                        || (m_run.rtl() && currentCharacter)) {
+                        if(!Font::isUnbreakableCharactersPair(c, next)){
+                            m_expansion -= m_expansionPerOpportunity;
+                            width += m_expansionPerOpportunity;
+                            m_isAfterExpansion = true;
+                        } else
+                            m_isAfterExpansion = false;
                     }
                 } else
                     m_isAfterExpansion = false;
@@ -208,6 +236,7 @@
         // Advance past the character we just dealt with.
         cp += clusterLength;
         currentCharacter += clusterLength;
+        prev = c;
 
         m_runWidthSoFar += width;
 
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/Font.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/Font.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/Font.h	(revision 43814)
@@ -144,7 +144,14 @@
 
     static bool isCJKIdeograph(UChar32);
     static bool isCJKIdeographOrSymbol(UChar32);
+    static bool isInterIdeographExpansionTarget(UChar32);
+#if ENABLE(EPUB)
+    static unsigned int searchOrientation(unsigned int c, unsigned int *boundaries, size_t length);
+    static bool isUprightOrientation(UChar32 target);
+#endif
 
+    static bool isUnbreakableCharactersPair(UChar32, UChar32);
+
     static unsigned expansionOpportunityCount(const UChar*, size_t length, TextDirection, bool& isAfterExpansion);
 
 #if PLATFORM(QT)
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/FontFastPath.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/FontFastPath.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/FontFastPath.cpp	(revision 43814)
@@ -81,7 +81,15 @@
                     return data;
                 
                 if (data.fontData) {
-                    if (isCJKIdeographOrSymbol(c)) {
+                    TextOrientation textOrientation = m_fontDescription.textOrientation();
+                    if (textOrientation == TextOrientationSidewaysLeft
+                        || textOrientation == TextOrientationSideways) {
+                        // FIXME: For now just support TextOrientationSidewaysRight.
+                        textOrientation = TextOrientationSidewaysRight;
+                    }
+                    if (textOrientation != TextOrientationSidewaysRight
+                        && textOrientation != TextOrientationSidewaysLeft
+                        && isCJKIdeographOrSymbol(c)) {
                         if (!data.fontData->hasVerticalGlyphs()) {
                             // Use the broken ideograph font data. The broken ideograph font will use the horizontal width of glyphs
                             // to make sure you get a square (even for broken glyphs like symbols used for punctuation).
@@ -98,7 +106,9 @@
                             ASSERT_NOT_REACHED();
                         }
                     } else {
-                        if (m_fontDescription.textOrientation() == TextOrientationVerticalRight) {
+                        if (textOrientation == TextOrientationVerticalRight
+                            || textOrientation == TextOrientationUprightRight
+                            || textOrientation == TextOrientationSidewaysRight) {
                             const SimpleFontData* verticalRightFontData = data.fontData->verticalRightOrientationFontData();
                             GlyphPageTreeNode* verticalRightNode = GlyphPageTreeNode::getRootChild(verticalRightFontData, pageNumber);
                             const GlyphPage* verticalRightPage = verticalRightNode->page();
@@ -106,13 +116,13 @@
                                 GlyphData verticalRightData = verticalRightPage->glyphDataForCharacter(c);
                                 // If the glyphs are distinct, we will make the assumption that the font has a vertical-right glyph baked
                                 // into it.
-                                if (data.glyph != verticalRightData.glyph)
+                                if (data.glyph != verticalRightData.glyph && textOrientation != TextOrientationSidewaysRight)
                                     return data;
                                 // The glyphs are identical, meaning that we should just use the horizontal glyph.
                                 if (verticalRightData.fontData)
                                     return verticalRightData;
                             }
-                        } else if (m_fontDescription.textOrientation() == TextOrientationUpright) {
+                        } else if (textOrientation == TextOrientationUpright) {
                             const SimpleFontData* uprightFontData = data.fontData->uprightOrientationFontData();
                             GlyphPageTreeNode* uprightNode = GlyphPageTreeNode::getRootChild(uprightFontData, pageNumber);
                             const GlyphPage* uprightPage = uprightNode->page();
@@ -133,7 +143,6 @@
                     }
                     return data;
                 }
-
                 if (node->isSystemFallback())
                     break;
             }
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/FontDescription.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/FontDescription.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/FontDescription.h	(revision 43814)
@@ -82,6 +82,8 @@
         , m_fontSmoothing(AutoSmoothing)
         , m_textRendering(AutoTextRendering)
         , m_isSpecifiedFont(false)
+        , m_thickness(.0)
+        , m_sharpness(.0)
     {
     }
 
@@ -138,6 +140,11 @@
     void setTextOrientation(TextOrientation textOrientation) { m_textOrientation = textOrientation; }
     void setWidthVariant(FontWidthVariant widthVariant) { m_widthVariant = widthVariant; }
 
+    void setThickness(double s) { m_thickness = s; }
+    void setSharpness(double s) { m_sharpness = s; }
+    double thickness() const { return m_thickness; }
+    double sharpness() const { return m_sharpness; }
+
 private:
     FontFamily m_familyList; // The list of font families to be used.
 
@@ -167,6 +174,9 @@
     unsigned m_fontSmoothing : 2; // FontSmoothingMode
     unsigned m_textRendering : 2; // TextRenderingMode
     bool m_isSpecifiedFont : 1; // True if a web page specifies a non-generic font family as the first font family.
+
+    double m_thickness;
+    double m_sharpness;
 };
 
 inline bool FontDescription::operator==(const FontDescription& other) const
@@ -187,7 +197,9 @@
         && m_isSpecifiedFont == other.m_isSpecifiedFont
         && m_orientation == other.m_orientation
         && m_textOrientation == other.m_textOrientation
-        && m_widthVariant == other.m_widthVariant;
+        && m_widthVariant == other.m_widthVariant
+        && m_thickness == other.m_thickness
+        && m_sharpness == other.m_sharpness;
 }
 
 }
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/mac/MediaPlayerPrivateQTKit.mm
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/mac/MediaPlayerPrivateQTKit.mm	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/mac/MediaPlayerPrivateQTKit.mm	(revision 43814)
@@ -47,6 +47,9 @@
 #import "SoftLinking.h"
 #import "TimeRanges.h"
 #import "WebCoreSystemInterface.h"
+#if defined(slots)
+#undef slots
+#endif
 #import <QTKit/QTKit.h>
 #import <objc/objc-runtime.h>
 #import <wtf/UnusedParam.h>
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/GraphicsContext.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/GraphicsContext.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/GraphicsContext.cpp	(revision 43814)
@@ -34,6 +34,9 @@
 #include "RoundedIntRect.h"
 #include "TextRun.h"
 
+// gross...
+#include <QSettings>
+
 using namespace std;
 
 namespace WebCore {
@@ -434,7 +437,25 @@
     if (paintingDisabled())
         return;
 
-    fillRect(font.selectionRectForText(run, point, h, from, to), backgroundColor, colorSpace);
+    QSettings settings;
+    if (settings.value("selectionStyle", "underline") == "underline") {
+	FloatRect rect(font.selectionRectForText(run, point, h, from, to));
+	rect.setY(rect.y() + rect.height() - 3);
+	rect.setHeight(3);
+	rect.setWidth(rect.width() - 1);
+	Color color(0,0,0);
+	fillRect(rect, color, colorSpace);    
+	} else if (settings.value("selectionStyle", "underline") == "overline") {
+		FloatRect rect(font.selectionRectForText(run, point, h, from, to));
+		rect.setY(rect.y());
+		rect.setHeight(3);
+		rect.setWidth(rect.width() - 1);
+		Color color(0,0,0);
+		fillRect(rect, color, colorSpace);
+	}
+    else {
+	fillRect(font.selectionRectForText(run, point, h, from, to), backgroundColor, colorSpace);
+    }
 }
 
 void GraphicsContext::drawImage(Image* image, ColorSpace styleColorSpace, const FloatRect& dest, const FloatRect& src, CompositeOperator op, bool useLowQualityScale)
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/SimpleFontData.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/SimpleFontData.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/SimpleFontData.cpp	(revision 43814)
@@ -221,7 +221,7 @@
     if (!m_derivedFontData)
         m_derivedFontData = DerivedFontData::create(isCustomFont());
     if (!m_derivedFontData->uprightOrientation)
-        m_derivedFontData->uprightOrientation = adoptPtr(new SimpleFontData(m_platformData, isCustomFont(), false, true));
+        m_derivedFontData->uprightOrientation = adoptPtr(new SimpleFontData(m_platformData, isCustomFont(), false, false));
     return m_derivedFontData->uprightOrientation.get();
 }
 
Index: src/3rdparty/webkit/Source/WebCore/platform/graphics/WidthIterator.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/graphics/WidthIterator.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/graphics/WidthIterator.h	(revision 43814)
@@ -69,3 +69,4 @@
 }
 
 #endif
+
Index: src/3rdparty/webkit/Source/WebCore/platform/text/qt/hyphen.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/text/qt/hyphen.h	(revision 0)
+++ src/3rdparty/webkit/Source/WebCore/platform/text/qt/hyphen.h	(revision 43814)
@@ -0,0 +1,172 @@
+/* Hyphen - hyphenation library using converted TeX hyphenation patterns
+ *
+ * (C) 1998 Raph Levien
+ * (C) 2001 ALTLinux, Moscow
+ * (C) 2006, 2007, 2008 László Németh
+ *
+ * This was part of libHnj library by Raph Levien.
+ *
+ * Peter Novodvorsky from ALTLinux cut hyphenation part from libHnj
+ * to use it in OpenOffice.org.
+ *
+ * Non-standard and compound word hyphenation support by László Németh.
+ * 
+ * License is the original LibHnj license:
+ *
+ * LibHnj is dual licensed under LGPL and MPL. Boilerplate for both
+ * licenses follows.
+ */
+
+/* LibHnj - a library for high quality hyphenation and justification
+ * Copyright (C) 1998 Raph Levien
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Library General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Library General Public License for more details.
+ *
+ * You should have received a copy of the GNU Library General Public
+ * License along with this library; if not, write to the 
+ * Free Software Foundation, Inc., 59 Temple Place - Suite 330, 
+ * Boston, MA  02111-1307  USA.
+*/
+
+/*
+ * The contents of this file are subject to the Mozilla Public License
+ * Version 1.0 (the "MPL"); you may not use this file except in
+ * compliance with the MPL.  You may obtain a copy of the MPL at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the MPL is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the MPL
+ * for the specific language governing rights and limitations under the
+ * MPL.
+ *
+ */
+#ifndef __HYPHEN_H__
+#define __HYPHEN_H__
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+typedef struct _HyphenDict HyphenDict;
+typedef struct _HyphenState HyphenState;
+typedef struct _HyphenTrans HyphenTrans;
+#define MAX_CHARS 100
+#define MAX_NAME 20
+
+struct _HyphenDict {
+  /* user options */
+  char lhmin;    /* lefthyphenmin: min. hyph. distance from the left side */
+  char rhmin;    /* righthyphenmin: min. hyph. distance from the right side */
+  char clhmin;   /* min. hyph. distance from the left compound boundary */
+  char crhmin;   /* min. hyph. distance from the right compound boundary */
+  char * nohyphen; /* comma separated list of characters or character
+                    sequences with forbidden hyphenation */
+  int nohyphenl; /* count of elements in nohyphen */
+  /* system variables */
+  int num_states;
+  char cset[MAX_NAME];
+  int utf8;
+  HyphenState *states;
+  HyphenDict *nextlevel;
+};
+
+struct _HyphenState {
+  char *match;
+  char *repl;
+  signed char replindex;
+  signed char replcut;
+  int fallback_state;
+  int num_trans;
+  HyphenTrans *trans;
+};
+
+struct _HyphenTrans {
+  char ch;
+  int new_state;
+};
+
+HyphenDict *hnj_hyphen_load (const char *fn);
+void hnj_hyphen_free (HyphenDict *dict);
+
+/* obsolete, use hnj_hyphen_hyphenate2() or *hyphenate3() functions) */
+int hnj_hyphen_hyphenate (HyphenDict *dict,
+			   const char *word, int word_size,
+			   char *hyphens);
+
+/*
+
+ int hnj_hyphen_hyphenate2(): non-standard hyphenation.
+
+ (It supports Catalan, Dutch, German, Hungarian, Norwegian, Swedish
+  etc. orthography, see documentation.)
+ 
+ input data:
+ word:      input word
+ word_size: byte length of the input word
+ 
+ hyphens:   allocated character buffer (size = word_size + 5)
+ hyphenated_word: allocated character buffer (size ~ word_size * 2) or NULL
+ rep, pos, cut: pointers (point to the allocated and _zeroed_ buffers
+                (size=word_size) or with NULL value) or NULL
+
+ output data:
+ hyphens:   hyphenation vector (hyphenation points signed with odd numbers)
+ hyphenated_word: hyphenated input word (hyphens signed with `='),
+                  optional (NULL input)
+ rep:       NULL (only standard hyph.), or replacements (hyphenation points
+            signed with `=' in replacements);
+ pos:       NULL, or difference of the actual position and the beginning
+            positions of the change in input words;
+ cut:       NULL, or counts of the removed characters of the original words
+            at hyphenation,
+
+ Note: rep, pos, cut are complementary arrays to the hyphens, indexed with the
+       character positions of the input word.
+
+ For example:
+ Schiffahrt -> Schiff=fahrt,
+ pattern: f1f/ff=f,1,2
+ output: rep[5]="ff=f", pos[5] = 1, cut[5] = 2
+
+ Note: hnj_hyphen_hyphenate2() can allocate rep, pos, cut (word_size
+       length arrays):
+
+ char ** rep = NULL;
+ int * pos = NULL;
+ int * cut = NULL;
+ char hyphens[MAXWORDLEN];
+ hnj_hyphen_hyphenate2(dict, "example", 7, hyphens, NULL, &rep, &pos, &cut);
+ 
+ See example in the source distribution.
+
+*/
+
+int hnj_hyphen_hyphenate2 (HyphenDict *dict,
+        const char *word, int word_size, char * hyphens,
+        char *hyphenated_word, char *** rep, int ** pos, int ** cut);
+
+/* like hnj_hyphen_hyphenate2, but with hyphenmin parameters */
+/* lhmin: lefthyphenmin
+ * rhmin: righthyphenmin
+ * clhmin: compoundlefthyphemin
+ * crhmin: compoundrighthyphenmin
+ * (see documentation) */
+
+int hnj_hyphen_hyphenate3 (HyphenDict *dict,
+	const char *word, int word_size, char * hyphens,
+	char *hyphword, char *** rep, int ** pos, int ** cut,
+	int lhmin, int rhmin, int clhmin, int crhmin);
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* __HYPHEN_H__ */
Index: src/3rdparty/webkit/Source/WebCore/platform/text/qt/HyphenationQt.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/text/qt/HyphenationQt.cpp	(revision 0)
+++ src/3rdparty/webkit/Source/WebCore/platform/text/qt/HyphenationQt.cpp	(revision 43814)
@@ -0,0 +1,140 @@
+#include "config.h"
+#include "Hyphenation.h"
+#include "hyphen.h"
+#include <wtf/text/AtomicString.h>
+#include <string.h>
+#if OS(LINUX) || OS(DARWIN)
+#include <dlfcn.h>
+#endif
+#if OS(WINDOWS)
+#include <windows.h>
+#include <psapi.h>
+#define dlsym(hnd, sym) GetProcAddress(hnd, sym)
+#endif
+#include <QCoreApplication>
+#include <QRegExp>
+#include <QDebug>
+#include <QFile>
+#include <QHash>
+
+namespace WebCore {
+
+static QHash<AtomicString, bool> availableDictionaries;
+
+static QByteArray dictionaryPathForLocale(const AtomicString& localeIdentifier)
+{
+    QString locale(reinterpret_cast<const QChar *>(localeIdentifier.characters()), localeIdentifier.length());
+    QByteArray dictionaryPath = QString("/usr/share/hyphen/hyph_%1.dic").arg(locale).toAscii();
+    if (QFile::exists(dictionaryPath)) {
+        return dictionaryPath;
+    }
+    dictionaryPath = QString("%1/hyphenDicts/hyph_%2.dic").arg(QCoreApplication::applicationDirPath()).arg(locale).toAscii();
+    if (QFile::exists(dictionaryPath)) {
+        return dictionaryPath;
+    }
+    dictionaryPath = QString("%1/hyphenDicts/hyph_%2.dic").arg(QCoreApplication::applicationDirPath()).arg(locale.left(2)).toAscii();
+    if (QFile::exists(dictionaryPath)) {
+        return dictionaryPath;
+    }
+    return QByteArray();
+}
+
+bool canHyphenate(const AtomicString& localeIdentifier)
+{
+    if (!availableDictionaries.contains(localeIdentifier)) {
+        availableDictionaries[localeIdentifier] = dictionaryPathForLocale(localeIdentifier).size() > 0;
+    }
+    return availableDictionaries[localeIdentifier];
+}
+
+size_t lastHyphenLocation(const UChar* characters, size_t length, size_t beforeIndex, const AtomicString& localeIdentifier)
+{
+    static bool initialized = false;
+    static HyphenDict *(*hnj_hyphen_load)(const char *);
+    static void (*hnj_hyphen_free)(HyphenDict *);
+    static int (*hnj_hyphen_hyphenate2)(HyphenDict *, const char *, int, char *, char *, char ***, int **, int **);
+    if (!initialized) {
+#if OS(LINUX) || OS(DARWIN)
+        void *lib = dlopen(NULL, RTLD_LAZY);
+#endif
+#if OS(WINDOWS)
+        HMODULE modules[32];
+        DWORD count;
+        EnumProcessModules(GetCurrentProcess(), modules, sizeof(modules), &count);
+        HMODULE lib = 0;
+        for (int i = 0; i < count / sizeof(HMODULE); i++) {
+            HMODULE d  = modules[i];
+            if (dlsym(d, "hnj_hyphen_load") != NULL) {
+                lib = d;
+                break;
+            }
+        }
+#endif
+        if (lib == NULL) {
+            return 0;
+        }
+
+        hnj_hyphen_load = (HyphenDict *(*)(const char *)) dlsym(lib, "hnj_hyphen_load");
+        hnj_hyphen_free = (void (*)(HyphenDict *)) dlsym(lib, "hnj_hyphen_free");
+        hnj_hyphen_hyphenate2 = (int (*)(HyphenDict *, const char *, int, char *, char *, char ***, int **, int **)) dlsym(lib, "hnj_hyphen_hyphenate2");
+        if (hnj_hyphen_load == NULL) {
+            return 0;
+        }
+        initialized = true;
+    }
+    static HyphenDict *dict = NULL;
+    static AtomicString dictLocale;
+    if (dict == NULL || dictLocale != localeIdentifier) {
+        if (dict) {
+            hnj_hyphen_free(dict);
+            dict = NULL;
+        }
+        QByteArray dictionaryPath = dictionaryPathForLocale(localeIdentifier);
+        dict = hnj_hyphen_load(dictionaryPath.constData());
+        dictLocale = localeIdentifier;
+        if (dict == NULL) {
+            qWarning() << "Couldn't load a hyphenation dictionary!";
+            return 0;
+        }
+    }
+
+    static QRegExp punctuation("[^A-Z0-9]", Qt::CaseInsensitive);
+    static QRegExp spaces("\\s+$");
+    QString s = QString(reinterpret_cast<const QChar *>(characters), length).replace(punctuation, " ").remove(spaces).toLower().toUtf8();
+    QByteArray c = s.simplified().toUtf8();
+    int leadingSpaces = length - c.length();
+
+    if (c.length() - c.lastIndexOf(" ") <= 5) {
+        return 0;
+    }
+
+    char *hyphens = (char *) malloc(c.size() + 5);
+    char *hword = (char *) malloc(c.size() * 2);
+    memset(hyphens, 0, c.size() + 5);
+    memset(hword, 0, c.size() * 2);
+
+    char **rep = NULL;
+    int *pos = NULL;
+    int *cut = NULL;
+    int index = 0;
+
+    hnj_hyphen_hyphenate2(dict, c.constData(), c.size(), hyphens, hword, &rep, &pos, &cut);
+
+    for (int i = beforeIndex - 2 - leadingSpaces; i > 0; i--) {
+        if (hyphens[i] & 1) {
+            index = i + 1 + leadingSpaces;
+            break;
+        }
+    }
+
+    free(rep);
+    free(pos);
+    free(cut);
+
+    free(hyphens);
+    free(hword);
+
+    return index;
+}
+
+}
Index: src/3rdparty/webkit/Source/WebCore/platform/text/TextOrientation.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/platform/text/TextOrientation.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/platform/text/TextOrientation.h	(revision 43814)
@@ -28,7 +28,14 @@
 
 namespace WebCore {
 
-enum TextOrientation { TextOrientationVerticalRight, TextOrientationUpright };
+enum TextOrientation {
+    TextOrientationVerticalRight,
+    TextOrientationUpright,
+    TextOrientationUprightRight,
+    TextOrientationSidewaysRight,
+    TextOrientationSidewaysLeft,
+    TextOrientationSideways
+};
 
 }
 
Index: src/3rdparty/webkit/Source/WebCore/WebCore.gypi
===================================================================
--- src/3rdparty/webkit/Source/WebCore/WebCore.gypi	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/WebCore.gypi	(revision 43814)
@@ -3899,6 +3899,8 @@
             'platform/graphics/SVGGlyph.cpp',
             'platform/graphics/StringTruncator.cpp',
             'platform/graphics/StrokeStyleApplier.h',
+            'platform/graphics/SurrogatePairAwareTextIterator.cpp',
+            'platform/graphics/SurrogatePairAwareTextIterator.h',
             'platform/graphics/Tile.h',
             'platform/graphics/TiledBackingStore.cpp',
             'platform/graphics/TiledBackingStore.h',
Index: src/3rdparty/webkit/Source/WebCore/CMakeLists.txt
===================================================================
--- src/3rdparty/webkit/Source/WebCore/CMakeLists.txt	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/CMakeLists.txt	(revision 43814)
@@ -1101,6 +1101,7 @@
     platform/graphics/ShadowBlur.cpp
     platform/graphics/SimpleFontData.cpp
     platform/graphics/StringTruncator.cpp
+    platform/graphics/SurrogatePairAwareTextIterator.cpp
     platform/graphics/WidthIterator.cpp
 
     platform/graphics/filters/DistantLightSource.cpp
Index: src/3rdparty/webkit/Source/WebCore/rendering/InlineTextBox.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/InlineTextBox.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/InlineTextBox.h	(revision 43814)
@@ -96,9 +96,10 @@
 private:
     int selectionTop();
     int selectionBottom();
-    int selectionHeight();
 
+
 public:
+    int selectionHeight();
     virtual IntRect calculateBoundaries() const { return IntRect(x(), y(), width(), height()); }
 
     virtual IntRect selectionRect(int absx, int absy, int startPos, int endPos);
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderObject.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderObject.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderObject.cpp	(revision 43814)
@@ -1457,7 +1457,13 @@
     if (style()->userSelect() != SELECT_NONE) {
         RefPtr<RenderStyle> pseudoStyle = getUncachedPseudoStyle(SELECTION);
         if (pseudoStyle && pseudoStyle->visitedDependentColor(CSSPropertyBackgroundColor).isValid())
+// HACK: we don't want this to be blended with white on the Nickel, because we want our selections
+// to actually be white, instead of off-white
+#if OS(LINUX) && !(CPU(X86) || CPU(X86_64))
+            color = pseudoStyle->visitedDependentColor(CSSPropertyBackgroundColor);
+#else
             color = pseudoStyle->visitedDependentColor(CSSPropertyBackgroundColor).blendWithWhite();
+#endif            
         else
             color = frame()->selection()->isFocusedAndActive() ?
                     theme()->activeSelectionBackgroundColor() :
@@ -1865,7 +1871,7 @@
 FloatPoint RenderObject::localToAbsolute(const FloatPoint& localPoint, bool fixed, bool useTransforms) const
 {
     TransformState transformState(TransformState::ApplyTransformDirection, localPoint);
-    mapLocalToContainer(0, fixed, useTransforms, transformState);
+    mapLocalToContainer(0, fixed, useTransforms, transformState, ApplyContainerFlip);
     transformState.flatten();
     
     return transformState.lastPlanarPoint();
@@ -1880,7 +1886,7 @@
     return transformState.lastPlanarPoint();
 }
 
-void RenderObject::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState& transformState) const
+void RenderObject::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState& transformState, ApplyContainerFlipOrNot) const
 {
     if (repaintContainer == this)
         return;
@@ -1901,7 +1907,7 @@
     if (o->hasOverflowClip())
         transformState.move(-toRenderBox(o)->layer()->scrolledContentOffset());
 
-    o->mapLocalToContainer(repaintContainer, fixed, useTransforms, transformState);
+    o->mapLocalToContainer(repaintContainer, fixed, useTransforms, transformState, DoNotApplyContainerFlip);
 }
 
 void RenderObject::mapAbsoluteToLocalPoint(bool fixed, bool useTransforms, TransformState& transformState) const
@@ -1957,7 +1963,7 @@
     // Track the point at the center of the quad's bounding box. As mapLocalToContainer() calls offsetFromContainer(),
     // it will use that point as the reference point to decide which column's transform to apply in multiple-column blocks.
     TransformState transformState(TransformState::ApplyTransformDirection, localQuad.boundingBox().center(), &localQuad);
-    mapLocalToContainer(repaintContainer, fixed, true, transformState);
+    mapLocalToContainer(repaintContainer, fixed, true, transformState, ApplyContainerFlip);
     transformState.flatten();
     
     return transformState.lastPlanarQuad();
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderRubyRun.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderRubyRun.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderRubyRun.h	(revision 43814)
@@ -56,6 +56,8 @@
     virtual RenderObject* layoutSpecialExcludedChild(bool relayoutChildren);
     virtual void layout();
 
+    virtual int minPreferredLogicalWidth() const;
+
     virtual bool isChildAllowed(RenderObject*, RenderStyle*) const;
     virtual void addChild(RenderObject* child, RenderObject* beforeChild = 0);
     virtual void removeChild(RenderObject* child);
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderBox.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderBox.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderBox.h	(revision 43814)
@@ -421,7 +421,7 @@
     
     virtual bool shouldComputeSizeAsReplaced() const { return isReplaced() && !isInlineBlockOrInlineTable(); }
 
-    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState&) const;
+    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState&, ApplyContainerFlipOrNot = ApplyContainerFlip) const;
     virtual void mapAbsoluteToLocalPoint(bool fixed, bool useTransforms, TransformState&) const;
 
     void paintRootBoxFillLayers(const PaintInfo&);
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderObject.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderObject.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderObject.h	(revision 43814)
@@ -775,7 +775,8 @@
 
     // Map points and quads through elements, potentially via 3d transforms. You should never need to call these directly; use
     // localToAbsolute/absoluteToLocal methods instead.
-    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState&) const;
+    enum ApplyContainerFlipOrNot { DoNotApplyContainerFlip, ApplyContainerFlip };
+    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState&, ApplyContainerFlipOrNot = ApplyContainerFlip) const;
     virtual void mapAbsoluteToLocalPoint(bool fixed, bool useTransforms, TransformState&) const;
 
     bool shouldUseTransformFromContainer(const RenderObject* container) const;
Index: src/3rdparty/webkit/Source/WebCore/rendering/break_lines.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/break_lines.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/break_lines.cpp	(revision 43814)
@@ -26,9 +26,11 @@
 #include "config.h"
 #include "break_lines.h"
 
+#include "Font.h"
 #include "TextBreakIterator.h"
 #include <wtf/StdLibExtras.h>
 #include <wtf/unicode/CharacterNames.h>
+#include <unicode/uchar.h>
 
 #if PLATFORM(MAC)
 #include <CoreServices/CoreServices.h>
@@ -117,6 +119,75 @@
 
 COMPILE_ASSERT(WTF_ARRAY_LENGTH(asciiLineBreakTable) == asciiLineBreakTableLastChar - asciiLineBreakTableFirstChar + 1, TestLineBreakTableConsistency);
 
+bool isNonStarterCharacter(UChar ch)
+{
+    // As we cannot use ubrk_following here. we check the line break property
+    // to guess if the line can be broken before this.
+    ULineBreak lineBreak = (ULineBreak)u_getIntPropertyValue(ch, UCHAR_LINE_BREAK);
+    // Using Table 2 Example Pair Table of
+    // http://www.unicode.org/reports/tr14/tr14-15.html
+    // (Unicode 4.0.1) for MacOS.
+    // http://www.unicode.org/reports/tr14/tr14-22.html
+    // (Unicode 5.1) for Android.
+    // And Requirements for Japanese Text Layout, 3.1.7 Characters Not Starting a Line
+    // http://www.w3.org/TR/2012/NOTE-jlreq-20120403/#characters_not_starting_a_line
+    switch (lineBreak) {
+    case U_LB_NONSTARTER:
+    case U_LB_CLOSE_PARENTHESIS:
+    case U_LB_CLOSE_PUNCTUATION:
+    case U_LB_EXCLAMATION:
+    case U_LB_BREAK_SYMBOLS:
+    case U_LB_INFIX_NUMERIC:
+    case U_LB_ZWSPACE:
+    case U_LB_WORD_JOINER:
+        return true;
+    default:
+        break;
+    }
+    // Special care for Requirements for Japanese Text Layout
+    switch (ch) {
+    case 0x2019: // RIGHT SINGLE QUOTATION MARK
+    case 0x201D: // RIGHT DOUBLE QUOTATION MARK
+    case 0x00BB: // RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
+    case 0x2010: // HYPHEN
+    case 0x2013: // EN DASH
+        return true;
+    default:
+        break;
+    }
+    return false;
+}
+
+bool isNonEndingCharacter(UChar ch)
+{
+    // As we cannot use ubrk_following here. we checks the line break property
+    // to guess if the line can be broken before this.
+    ULineBreak lineBreak = (ULineBreak)u_getIntPropertyValue(ch, UCHAR_LINE_BREAK);
+    // Using Table 2 Example Pair Table of
+    // http://www.unicode.org/reports/tr14/tr14-15.html
+    // (Unicode 4.0.1) for MacOS.
+    // http://www.unicode.org/reports/tr14/tr14-22.html
+    // (Unicode 5.1) for Android.
+    // And Requirements for Japanese Text Layout, 3.1.8 Characters Not Ending a Line
+    // http://www.w3.org/TR/2012/NOTE-jlreq-20120403/#characters_not_ending_a_line
+    switch (lineBreak) {
+    case U_LB_OPEN_PUNCTUATION:
+        return true;
+    default:
+        break;
+    }
+    // Special care for Requirements for Japanese Text Layout
+    switch (ch) {
+    case 0x2018: // LEFT SINGLE QUOTATION MARK
+    case 0x201C: // LEFT DOUBLE QUOTATION MARK
+    case 0x00AB: // LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
+        return true;
+    default:
+        break;
+    }
+    return false;
+}
+    
 static inline bool shouldBreakAfter(UChar ch, UChar nextCh)
 {
     switch (ch) {
@@ -125,7 +196,7 @@
         // FIXME: cases for ideographicComma and ideographicFullStop are a workaround for an issue in Unicode 5.0
         // which is likely to be resolved in Unicode 5.1 <http://bugs.webkit.org/show_bug.cgi?id=17411>.
         // We may want to remove or conditionalize this workaround at some point.
-        return true;
+        return !isNonStarterCharacter(nextCh);
     default:
         // If both ch and nextCh are ASCII characters, use a lookup table for enhanced speed and for compatibility
         // with other browsers (see comments for asciiLineBreakTable for details).
@@ -164,7 +235,11 @@
                 if (breakIterator)
                     nextBreak = textBreakFollowing(breakIterator, i - 1);
             }
-            if (i == nextBreak && !isBreakableSpace(lastCh, treatNoBreakSpaceAsBreak))
+            // These characters are not kinsoku characters according to Unicode 6.0,
+            // However, they are in JLreq (http://www.w3.org/TR/jlreq/). We need
+            // special treatment here.
+            if (i == nextBreak && !isBreakableSpace(lastCh, treatNoBreakSpaceAsBreak)
+                && !Font::isUnbreakableCharactersPair(lastCh, ch))
                 return i;
         }
 
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderTableRow.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderTableRow.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderTableRow.cpp	(revision 43814)
@@ -146,6 +146,7 @@
                 cell->setChildNeedsLayout(true, false);
 
             if (child->needsLayout()) {
+                cell->clearIntrinsicPadding();
                 cell->computeBlockDirectionMargins(table());
                 cell->layout();
             }
Index: src/3rdparty/webkit/Source/WebCore/rendering/break_lines.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/break_lines.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/break_lines.h	(revision 43814)
@@ -27,6 +27,9 @@
 
 class LazyLineBreakIterator;
 
+bool isNonStarterCharacter(UChar);
+bool isNonEndingCharacter(UChar);
+
 int nextBreakablePosition(LazyLineBreakIterator&, int pos, bool breakNBSP = false);
 
 inline bool isBreakable(LazyLineBreakIterator& lazyBreakIterator, int pos, int& nextBreakable, bool breakNBSP = false)
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderText.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderText.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderText.cpp	(revision 43814)
@@ -352,6 +352,15 @@
                         r.setX(box->x());
                     }
                 }
+                if (!box->isHorizontal()) {
+                    RenderBlock* block = box->renderer()->containingBlock();
+                    if (!block->parent() || !block->parent()->parent() || block->parent()->parent()->isBody()) {
+                        r.setX(r.x() - box->width());
+                    }
+                    else {
+                        r.setX(box->renderer()->containingBlock()->width() - r.x() - box->selectionHeight() + box->width());
+                    }
+                }
                 rects.append(localToAbsoluteQuad(FloatQuad(r)).enclosingBoundingBox());
             }
         }
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderTreeAsText.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderTreeAsText.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderTreeAsText.cpp	(revision 43814)
@@ -68,8 +68,13 @@
 
 #if PLATFORM(QT)
 #include <QWidget>
+#include <QDebug>
 #endif
 
+#include "RenderRubyRun.h"
+#include "RenderRubyBase.h"
+#include "RenderRubyText.h"
+
 namespace WebCore {
 
 using namespace HTMLNames;
@@ -193,6 +198,19 @@
     return (!inlineStyleDecl || inlineStyleDecl->length() == 0);
 }
 
+static bool containsOnlyUnicodeWhitespace(const RenderText& renderText)
+{
+    // Most common Unicode space is 0x3000 (Ideographic Space)
+    // Full list : {0x00a0, 0x1680, 0x180e, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200a, 0x2028, 0x2029, 0x202f, 0x205f, 0x3000};
+    const UChar* text = renderText.characters();
+    for (unsigned k = 0; k < renderText.textLength(); k++) {
+        if (text[k] != 0x3000) {
+            return false;
+        }
+    }
+    return true;
+}
+
 String quoteAndEscapeNonPrintables(const String& s)
 {
     Vector<UChar> result;
@@ -825,4 +843,194 @@
     return toRenderListItem(renderer)->markerText();
 }
 
+static void getRunRectsRecursively(QList<QRect>& out, const RenderObject& o, bool imgRun, bool docVertical/*, int indent*/)
+{
+    /* Figure out what the runs' positions are relative to. */
+    FloatPoint origin;
+    bool flippedVertical = false;
+    bool isRubyBlock = false;
+    bool horizontalInVerticalDoc = false;
+    int rubyRunBlockWidth = 0;
+    int verticalBlockLineHeight = 0;
+    static float EXPANSION_SCALE = 1.48f;
+
+    if (RenderBlock* block = o.containingBlock()) {
+        if (dynamic_cast< RenderRubyText* > (block) ) {
+             // Ignore the ruby text block, since the ruby base block rect will be enlarged to cover the whole ruby run
+             return;
+        }
+        else if (dynamic_cast< RenderRubyBase* > (block) ) {
+            isRubyBlock = true;
+        }
+        origin = block->localToAbsolute(FloatPoint());
+        flippedVertical = !block->style()->isHorizontalWritingMode() && block->style()->isFlippedBlocksWritingMode();
+        if (flippedVertical) {
+            RenderObject* pa = o.parent();
+            RenderBlock* paBlock = NULL;
+            RenderObject* grandPa = NULL;
+            RenderBlock* grandPaBlock = NULL;
+            RenderObject* greatGrandPa = NULL;
+            RenderBlock* greatGrandPaBlock = NULL;
+            verticalBlockLineHeight = block->lineHeight(true, VerticalLine);
+            if (pa) {
+                paBlock = pa->containingBlock();
+                grandPa = pa->parent();
+                if (grandPa) {
+                    greatGrandPa = grandPa->parent();
+                    if (greatGrandPa) {
+                        grandPaBlock = grandPa->containingBlock();
+                        greatGrandPaBlock = greatGrandPa->containingBlock();
+                    }
+                }
+            }
+            if (isRubyBlock) {
+                if (grandPaBlock && greatGrandPaBlock) {
+                    FloatPoint greatGrandPaOrigin = greatGrandPaBlock->localToAbsolute(FloatPoint());
+                    greatGrandPaOrigin.setX(greatGrandPaOrigin.x() + greatGrandPaBlock->width());
+                    if (grandPaBlock->x() != greatGrandPaBlock->x()) {
+                        origin.setX(greatGrandPaOrigin.x() - grandPaBlock->x());
+                    }
+                    else {
+                        origin.setX(greatGrandPaOrigin.x() - paBlock->x());
+                    }
+                    rubyRunBlockWidth = block->width();
+                }
+            }
+            else if (o.isImage() && paBlock && grandPaBlock && imgRun) {
+                if ((grandPaBlock->x() == paBlock->x()) && ( grandPaBlock->y() == paBlock->y())) {
+                    FloatPoint paOrigin = paBlock->localToAbsolute(FloatPoint());
+                    out.append(QRect(paOrigin.x() + paBlock->width() - block->width() + 1, block->y(), block->width(), block->height()));
+                }
+                else {
+                    out.append(QRect(origin.x() + 1, origin.y(), block->width(), block->height()));
+                }
+                return;
+            }
+            else  if(o.isText() && pa && paBlock && pa->isTableCell()) {
+                FloatPoint paOrigin = paBlock->localToAbsolute(FloatPoint());
+                origin.setX(paOrigin.x() + paBlock->width() - block->x());
+            }
+            else {
+                origin.setX(origin.x() + block->width());
+            }
+        }
+        else {
+            if (docVertical) {
+                RenderObject* pa = o.parent();
+                RenderBlock* paBlock = NULL;
+                RenderObject* grandPa = NULL;
+                RenderObject* greatGrandPa = NULL;
+                verticalBlockLineHeight = block->lineHeight(true, VerticalLine);
+                if (pa) {
+                    paBlock = pa->containingBlock();
+                    grandPa = pa->parent();
+                    if (grandPa) {
+                        greatGrandPa = grandPa->parent();
+                    }
+                }
+
+                if (pa && paBlock) {
+                    horizontalInVerticalDoc = !paBlock->style()->isHorizontalWritingMode() && paBlock->style()->isFlippedBlocksWritingMode();
+                    if (horizontalInVerticalDoc) {
+                        FloatPoint paOrigin = paBlock->localToAbsolute(FloatPoint());
+                        origin.setX(paOrigin.x() + paBlock->width() - block->x() - block->width());
+                    }
+                }
+            }
+        }
+    }
+
+    if (o.isText() && !o.isBR() && !imgRun) {
+        const RenderText& text = *toRenderText(&o);
+        bool isVerticalWhitespaceText = (flippedVertical && containsOnlyUnicodeWhitespace(text));
+        if (!isVerticalWhitespaceText) {
+            for (InlineTextBox* box = text.firstTextBox(); box; box = box->nextTextBox()) {
+                InlineTextBox& run = *box;
+                int dy = 0;
+                if (o.containingBlock()->isTableCell()) {
+                    dy = toRenderTableCell(o.containingBlock())->intrinsicPaddingBefore();
+                }
+                QRect r(run.m_x+origin.x(), run.m_y+origin.y(), run.width(), run.height());
+                if (flippedVertical) {
+                    if (isRubyBlock) {
+                        r = QRect(origin.x() - run.width() - run.m_x, run.m_y + origin.y(), rubyRunBlockWidth, run.height());
+                    }
+                    else {
+                        if (verticalBlockLineHeight < 1) {
+                            // Assume there is always a ruby block and scale up the original width (add padding), so that first text block of each page has roughly the same right-side margin
+                            verticalBlockLineHeight = run.width() * EXPANSION_SCALE;
+                        }
+                        else {
+                            verticalBlockLineHeight = qMin(verticalBlockLineHeight, int(run.width() * EXPANSION_SCALE));
+                        }
+                        r = QRect(origin.x() - run.width() - run.m_x, run.m_y + origin.y(), verticalBlockLineHeight, run.height());
+                    }
+                }
+                else if (horizontalInVerticalDoc) {
+                    r = QRect(run.m_x + origin.x(), run.m_y + origin.y(), run.width(), run.height());
+                }
+                else if (isRubyBlock) {
+                    int newHeight = run.height() * EXPANSION_SCALE;
+                    r = QRect(r.x(), r.y() - (newHeight - run.height()), run.width(), newHeight);
+                }
+                out.append(r);
+            }
+        }
+    }
+
+    for (RenderObject* child = o.firstChild(); child; child = child->nextSibling()) {
+        if (child->hasLayer()) {
+            continue;
+        }
+        getRunRectsRecursively(out, *child, imgRun, docVertical);
+    }
+}
+
+static void getRunRectsForAllLayers(
+    QList<QRect>& out,
+    RenderLayer* l,
+    bool imgRun,
+    bool docVertical)
+{
+    /* heavily based on writeLayers, mostly without any understanding of what "layers" even are. */
+
+    // Ensure our lists are up-to-date.
+    l->updateZOrderLists();
+    l->updateNormalFlowList();
+
+    Vector<RenderLayer*>* negList = l->negZOrderList();
+    if (negList) {
+        for (unsigned i = 0; i != negList->size(); ++i)
+            getRunRectsForAllLayers(out, negList->at(i), imgRun, docVertical);
+    }
+
+    getRunRectsRecursively(out, *l->renderer(), imgRun, docVertical);
+
+    Vector<RenderLayer*>* normalFlowList = l->normalFlowList();
+    if (normalFlowList) {
+        for (unsigned i = 0; i != normalFlowList->size(); ++i)
+            getRunRectsForAllLayers(out, normalFlowList->at(i), imgRun, docVertical);
+    }
+
+    Vector<RenderLayer*>* posList = l->posZOrderList();
+    if (posList) {
+        for (unsigned i = 0; i != posList->size(); ++i)
+            getRunRectsForAllLayers(out, posList->at(i), imgRun, docVertical);
+    }
+}
+
+QList<QRect> getRunRects(RenderObject* o, bool imgRun, bool docVertical)
+{
+    if (o->view()->frameView())
+        o->view()->frameView()->layout();
+
+    QList<QRect> ret;
+    if (o->hasLayer()) {
+        RenderLayer* l = toRenderBox(o)->layer();
+        getRunRectsForAllLayers(ret, l, imgRun, docVertical);
+    }
+
+    return ret;
+}
+
 } // namespace WebCore
Index: src/3rdparty/webkit/Source/WebCore/rendering/InlineTextBox.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/InlineTextBox.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/InlineTextBox.cpp	(revision 43814)
@@ -44,6 +44,7 @@
 #include "Text.h"
 #include "break_lines.h"
 #include <wtf/AlwaysInline.h>
+#include <QSettings>
 
 using namespace std;
 
@@ -600,6 +601,10 @@
     float selectionStrokeWidth = textStrokeWidth;
     const ShadowData* selectionShadow = textShadow;
     if (haveSelection) {
+
+        QSettings settings;
+        paintInfo.forceBlackText = paintInfo.forceBlackText || settings.value("selectionForceBlackText",false).toBool();
+
         // Check foreground color first.
         Color foreground = paintInfo.forceBlackText ? Color::black : renderer()->selectionForegroundColor();
         if (foreground.isValid() && foreground != selectionFillColor) {
@@ -685,7 +690,15 @@
         if (!emphasisMark.isEmpty()) {
             updateGraphicsContext(context, emphasisMarkColor, textStrokeColor, textStrokeWidth, styleToUse->colorSpace());
 
+#if ENABLE(EPUB) && PLATFORM(QT)
+            UChar tmpObjectReplacementCharacter = objectReplacementCharacter;
+            GlyphData data = font.glyphDataForCharacter(objectReplacementCharacter, textRun.rtl());
+            if (data.glyph == 0) // missing glyph data
+                tmpObjectReplacementCharacter = 'X';
+            TextRun objectReplacementCharacterTextRun(&tmpObjectReplacementCharacter, 1);
+#else
             static TextRun objectReplacementCharacterTextRun(&objectReplacementCharacter, 1);
+#endif
             TextRun& emphasisMarkTextRun = combinedText ? objectReplacementCharacterTextRun : textRun;
             FloatPoint emphasisMarkTextOrigin = combinedText ? FloatPoint(boxOrigin.x() + boxRect.width() / 2, boxOrigin.y() + font.fontMetrics().ascent()) : textOrigin;
             if (combinedText)
@@ -711,7 +724,15 @@
         if (!emphasisMark.isEmpty()) {
             updateGraphicsContext(context, selectionEmphasisMarkColor, textStrokeColor, textStrokeWidth, styleToUse->colorSpace());
 
+#if ENABLE(EPUB) && PLATFORM(QT)
+            UChar tmpObjectReplacementCharacter = objectReplacementCharacter;
+            GlyphData data = font.glyphDataForCharacter(objectReplacementCharacter, textRun.rtl());
+            if (data.glyph == 0) // missing glyph data
+                tmpObjectReplacementCharacter = 'X';
+            TextRun objectReplacementCharacterTextRun(&tmpObjectReplacementCharacter, 1);
+#else
             static TextRun objectReplacementCharacterTextRun(&objectReplacementCharacter, 1);
+#endif
             TextRun& emphasisMarkTextRun = combinedText ? objectReplacementCharacterTextRun : textRun;
             FloatPoint emphasisMarkTextOrigin = combinedText ? FloatPoint(boxOrigin.x() + boxRect.width() / 2, boxOrigin.y() + font.fontMetrics().ascent()) : textOrigin;
             if (combinedText)
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderInline.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderInline.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderInline.cpp	(revision 43814)
@@ -1111,7 +1111,7 @@
     return offset;
 }
 
-void RenderInline::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState& transformState) const
+void RenderInline::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState& transformState, ApplyContainerFlipOrNot applyContainerFlip) const
 {
     if (repaintContainer == this)
         return;
@@ -1132,9 +1132,11 @@
     if (!o)
         return;
 
-    IntPoint centerPoint = roundedIntPoint(transformState.mappedPoint());
-    if (o->isBox() && o->style()->isFlippedBlocksWritingMode())
-        transformState.move(toRenderBox(o)->flipForWritingModeIncludingColumns(roundedIntPoint(transformState.mappedPoint())) - centerPoint);
+    if (applyContainerFlip && o->isBox() && o->style()->isFlippedBlocksWritingMode()) {
+        IntPoint centerPoint = roundedIntPoint(transformState.mappedPoint());
+        transformState.move(toRenderBox(o)->flipForWritingModeIncludingColumns(centerPoint) - centerPoint);
+        applyContainerFlip = DoNotApplyContainerFlip;
+    }
 
     IntSize containerOffset = offsetFromContainer(o, roundedIntPoint(transformState.mappedPoint()));
 
@@ -1154,7 +1156,7 @@
         return;
     }
 
-    o->mapLocalToContainer(repaintContainer, fixed, useTransforms, transformState);
+    o->mapLocalToContainer(repaintContainer, fixed, useTransforms, transformState, applyContainerFlip);
 }
 
 void RenderInline::mapAbsoluteToLocalPoint(bool fixed, bool useTransforms, TransformState& transformState) const
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderBox.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderBox.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderBox.cpp	(revision 43814)
@@ -1220,7 +1220,7 @@
     return cb->computeContentBoxLogicalHeight(logicalHeightLength.value());
 }
 
-void RenderBox::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState& transformState) const
+void RenderBox::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState& transformState, ApplyContainerFlipOrNot) const
 {
     if (repaintContainer == this)
         return;
@@ -1269,7 +1269,7 @@
         return;
     }
     
-    o->mapLocalToContainer(repaintContainer, fixed, useTransforms, transformState);
+    o->mapLocalToContainer(repaintContainer, fixed, useTransforms, transformState, DoNotApplyContainerFlip);
 }
 
 void RenderBox::mapAbsoluteToLocalPoint(bool fixed, bool useTransforms, TransformState& transformState) const
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderBlock.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderBlock.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderBlock.cpp	(revision 43814)
@@ -1298,7 +1298,7 @@
     statePusher.pop();
 
     if (view()->layoutState()->m_pageLogicalHeight)
-        setPageLogicalOffset(view()->layoutState()->pageLogicalOffset(logicalTop()));
+        setPageLogicalOffset(view()->layoutState()->pageLogicalOffset(logicalTop(), isHorizontalWritingMode()));
 
     updateLayerTransform();
 
@@ -2235,7 +2235,7 @@
     if (needsLayout())
         return;
 
-    if (view()->layoutState()->pageLogicalHeightChanged() || (view()->layoutState()->pageLogicalHeight() && view()->layoutState()->pageLogicalOffset(logicalTop()) != pageLogicalOffset()))
+    if (view()->layoutState()->pageLogicalHeightChanged() || (view()->layoutState()->pageLogicalHeight() && view()->layoutState()->pageLogicalOffset(logicalTop(), isHorizontalWritingMode()) != pageLogicalOffset()))
         setChildNeedsLayout(true, false);
 }
 
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderBlockLineLayout.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderBlockLineLayout.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderBlockLineLayout.cpp	(revision 43814)
@@ -1099,6 +1099,28 @@
     }
 }
 
+    
+bool RenderBlock::getFirstChar(UChar* c)
+{
+    if (!childrenInline())
+        return false;
+
+    if (!firstChild())
+        return false;
+
+    bool endOfInline = false;
+    RenderObject* o = bidiFirstNotSkippingInlines(this);
+    while (o) {
+        if (o->isText()) {
+            RenderText* t = toRenderText(o);
+            *c = t->characters()[0];
+            return true;
+        }
+        o = bidiNext(this, o, 0, false, &endOfInline);
+    }
+    return false;
+}
+
 void RenderBlock::layoutInlineChildren(bool relayoutChildren, int& repaintLogicalTop, int& repaintLogicalBottom)
 {
     m_overflow.clear();
@@ -1811,6 +1833,17 @@
     m_clear = CNONE;
 }
 
+static bool isRubyRunAncestor(RenderObject *r)
+{
+    r = r->parent();
+    while (r) {
+        if (r->isRubyRun())
+            return true;
+        r = r->parent();
+    }
+    return false;
+}
+
 InlineIterator RenderBlock::LineBreaker::nextLineBreak(InlineBidiResolver& resolver, LineInfo& lineInfo,
     LineBreakIteratorInfo& lineBreakIteratorInfo, FloatingObject* lastFloatFromPreviousLine)
 {
@@ -1859,6 +1892,12 @@
     // Not supporting the quirk has caused us to mis-render some real sites. (See Bugzilla 10517.)
     bool allowImagesToBreak = !m_block->document()->inQuirksMode() || !m_block->isTableCell() || !m_block->style()->logicalWidth().isIntrinsicOrAuto();
 
+    // FIXME: CSS3 Ruby 3.4 Ruby box and line breaking says
+    // "we have added ruby annotations should not cause a line breaking opportunity"
+    // We ignore the limitaion and always add line breaking opprtunity.
+    // http://www.w3.org/TR/2011/WD-css3-ruby-20110630/#ruby-line-breaking
+    const bool isOverwriteAutoWrapByRubyRun = isRubyRunAncestor(current.m_obj);
+
     EWhiteSpace currWS = m_block->style()->whiteSpace();
     EWhiteSpace lastWS = currWS;
     while (current.m_obj) {
@@ -1867,7 +1906,7 @@
         currWS = current.m_obj->isReplaced() ? current.m_obj->parent()->style()->whiteSpace() : current.m_obj->style()->whiteSpace();
         lastWS = last->isReplaced() ? last->parent()->style()->whiteSpace() : last->style()->whiteSpace();
 
-        bool autoWrap = RenderStyle::autoWrap(currWS);
+        bool autoWrap = isOverwriteAutoWrapByRubyRun ? false : RenderStyle::autoWrap(currWS);
         autoWrapWasEverTrueOnLine = autoWrapWasEverTrueOnLine || autoWrap;
 
 #if ENABLE(SVG)
@@ -1878,6 +1917,8 @@
 
         bool collapseWhiteSpace = RenderStyle::collapseWhiteSpace(currWS);
 
+        bool canStart = true;
+
         if (current.m_obj->isBR()) {
             if (width.fitsOnLine()) {
                 lBreak.moveToStartOf(current.m_obj);
@@ -1968,10 +2009,28 @@
         } else if (current.m_obj->isReplaced()) {
             RenderBox* replacedBox = toRenderBox(current.m_obj);
 
+            if (replacedBox->isInlineBlockOrInlineTable()) {
+                RenderBlock* block = toRenderBlock(replacedBox);
+                UChar c;
+                if (block->getFirstChar(&c))
+                    canStart = !isNonStarterCharacter(c);
+            }
+
             // Break on replaced elements if either has normal white-space.
-            if ((autoWrap || RenderStyle::autoWrap(lastWS)) && (!current.m_obj->isImage() || allowImagesToBreak)) {
-                width.commit();
-                lBreak.moveToStartOf(current.m_obj);
+            bool lastAutoWrap = isOverwriteAutoWrapByRubyRun ? false : RenderStyle::autoWrap(lastWS);
+            if (canStart && (autoWrap || lastAutoWrap) && (!current.m_obj->isImage() || allowImagesToBreak)) {
+                bool commit = true;
+                if (last->isText()) {
+                    RenderText* lastText = toRenderText(last);
+                    if (lastText->textLength()) {
+                        UChar c = lastText->characters()[lastText->textLength() - 1];
+                        commit = !isNonEndingCharacter(c);
+                    }
+                }
+                if (commit) {
+                    width.commit();
+                    lBreak.moveToStartOf(current.m_obj);
+                }
             }
 
             if (ignoringSpaces)
@@ -2258,7 +2317,9 @@
         bool checkForBreak = autoWrap;
         if (width.committedWidth() && !width.fitsOnLine() && lBreak.m_obj && currWS == NOWRAP)
             checkForBreak = true;
-        else if (next && current.m_obj->isText() && next->isText() && !next->isBR() && (autoWrap || (next->style()->autoWrap()))) {
+        else if (next && (current.m_obj->isText() || current.m_obj->isRubyRun()
+                          || current.m_obj->isInlineBlockOrInlineTable() || (current.m_obj->isImage() && allowImagesToBreak))
+                 && next->isText() && !next->isBR() && (autoWrap || (next->style()->autoWrap()))) {
             if (currentCharacterIsSpace)
                 checkForBreak = true;
             else {
@@ -2266,6 +2327,8 @@
                 if (nextText->textLength()) {
                     UChar c = nextText->characters()[0];
                     checkForBreak = (c == ' ' || c == '\t' || (c == '\n' && !next->preservesNewline()));
+                    if (!checkForBreak && current.m_obj->isReplaced())
+                        checkForBreak = !isNonStarterCharacter(c);
                     // If the next item on the line is text, and if we did not end with
                     // a space, then the next text run continues our word (and so it needs to
                     // keep adding to |tmpW|. Just update and continue.
@@ -2281,9 +2344,15 @@
                     lBreak.moveToStartOf(next);
                 }
             }
+        } else if (checkForBreak && next && next->isInlineBlockOrInlineTable()) {
+            // Check that the next block is able to become a line start.
+            RenderBlock* block = toRenderBlock(next);
+            UChar c;
+            if (block->getFirstChar(&c))
+                checkForBreak = !isNonStarterCharacter(c);
         }
 
-        if (checkForBreak && !width.fitsOnLine()) {
+        if (checkForBreak && canStart && !width.fitsOnLine()) {
             // if we have floats, try to get below them.
             if (currentCharacterIsSpace && !ignoringSpaces && current.m_obj->style()->collapseWhiteSpace())
                 trailingObjects.clear();
@@ -2302,7 +2371,8 @@
 
         if (!current.m_obj->isFloatingOrPositioned()) {
             last = current.m_obj;
-            if (last->isReplaced() && autoWrap && (!last->isImage() || allowImagesToBreak) && (!last->isListMarker() || toRenderListMarker(last)->isInside())) {
+            if (last->isReplaced() && autoWrap && !last->isRubyRun() && !last->isInlineBlockOrInlineTable() && !last->isImage()
+                && (!last->isListMarker() || toRenderListMarker(last)->isInside())) {
                 width.commit();
                 lBreak.moveToStartOf(next);
             }
@@ -2317,7 +2387,7 @@
         atStart = false;
     }
 
-    if (width.fitsOnLine() || lastWS == NOWRAP)
+    if (width.fitsOnLine() || lastWS == NOWRAP || isOverwriteAutoWrapByRubyRun)
         lBreak.clear();
 
  end:
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderInline.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderInline.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderInline.h	(revision 43814)
@@ -130,7 +130,7 @@
     virtual IntRect rectWithOutlineForRepaint(RenderBoxModelObject* repaintContainer, int outlineWidth);
     virtual void computeRectForRepaint(RenderBoxModelObject* repaintContainer, IntRect& rect, bool fixed);
 
-    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState&) const;
+    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState&, ApplyContainerFlipOrNot = ApplyContainerFlip) const;
     virtual void mapAbsoluteToLocalPoint(bool fixed, bool useTransforms, TransformState&) const;
 
     virtual VisiblePosition positionForPoint(const IntPoint&);
Index: src/3rdparty/webkit/Source/WebCore/rendering/RootInlineBox.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RootInlineBox.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RootInlineBox.cpp	(revision 43814)
@@ -403,7 +403,7 @@
     if (m_hasAnnotationsBefore)
         selectionTop -= !renderer()->style()->isFlippedLinesWritingMode() ? computeOverAnnotationAdjustment(m_lineTop) : computeUnderAnnotationAdjustment(m_lineTop);
 
-    if (renderer()->style()->isFlippedLinesWritingMode())
+    if (!renderer()->style()->isFlippedLinesWritingMode())
         return selectionTop;
 
     int prevBottom = prevRootBox() ? prevRootBox()->selectionBottom() : block()->borderBefore() + block()->paddingBefore();
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderBlock.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderBlock.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderBlock.h	(revision 43814)
@@ -230,6 +230,8 @@
 #ifndef NDEBUG
     void showLineTreeAndMark(const InlineBox* = 0, const char* = 0, const InlineBox* = 0, const char* = 0, const RenderObject* = 0) const;
 #endif
+
+    bool getFirstChar(UChar*);
 protected:
     // These functions are only used internally to manipulate the render tree structure via remove/insert/appendChildNode.
     // Since they are typically called only to move objects around within anonymous blocks (which only have layers in
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderView.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderView.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderView.cpp	(revision 43814)
@@ -34,6 +34,7 @@
 #include "RenderWidget.h"
 #include "RenderWidgetProtector.h"
 #include "TransformState.h"
+#include "Settings.h"
 
 #if USE(ACCELERATED_COMPOSITING)
 #include "RenderLayerCompositor.h"
@@ -65,6 +66,15 @@
     m_maxPreferredLogicalWidth = 0;
 
     setPreferredLogicalWidthsDirty(true, false);
+
+#if ENABLE(EPUB)
+    Settings* settings = document()->settings();
+    ASSERT(settings);
+    if (settings) {
+        setPageLogicalHeight(settings->pageHeight());
+        setWidth(settings->pageWidth());
+    }
+#endif
     
     setPositioned(true); // to 0,0 :)
 }
@@ -136,7 +146,7 @@
     setNeedsLayout(false);
 }
 
-void RenderView::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState& transformState) const
+void RenderView::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState& transformState, ApplyContainerFlipOrNot) const
 {
     // If a container was specified, and was not 0 or the RenderView,
     // then we should have found it by now.
Index: src/3rdparty/webkit/Source/WebCore/rendering/LayoutState.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/LayoutState.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/LayoutState.cpp	(revision 43814)
@@ -162,9 +162,12 @@
     m_columnInfo = m_next->m_columnInfo;
 }
 
-int LayoutState::pageLogicalOffset(int childLogicalOffset) const
+int LayoutState::pageLogicalOffset(int childLogicalOffset, bool horizontalWritingMode) const
 {
-    return m_layoutOffset.height() + childLogicalOffset - m_pageOffset.height();
+    if (horizontalWritingMode)
+        return m_layoutOffset.height() + childLogicalOffset - m_pageOffset.height();
+    else
+        return m_layoutOffset.width() + childLogicalOffset - m_pageOffset.width();
 }
 
 void LayoutState::addForcedColumnBreak(int childLogicalOffset)
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderTable.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderTable.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderTable.cpp	(revision 43814)
@@ -400,7 +400,7 @@
     statePusher.pop();
 
     if (view()->layoutState()->pageLogicalHeight())
-        setPageLogicalOffset(view()->layoutState()->pageLogicalOffset(logicalTop()));
+        setPageLogicalOffset(view()->layoutState()->pageLogicalOffset(logicalTop(), isHorizontalWritingMode()));
 
     bool didFullRepaint = repainter.repaintAfterLayout();
     // Repaint with our new bounds if they are different from our old bounds.
Index: src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGInline.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGInline.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGInline.h	(revision 43814)
@@ -47,7 +47,7 @@
 
     virtual IntRect clippedOverflowRectForRepaint(RenderBoxModelObject* repaintContainer);
     virtual void computeRectForRepaint(RenderBoxModelObject* repaintContainer, IntRect&, bool fixed = false);
-    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState&) const;
+    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState&, ApplyContainerFlipOrNot = ApplyContainerFlip) const;
     virtual void absoluteQuads(Vector<FloatQuad>&);
 
 private:
Index: src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGForeignObject.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGForeignObject.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGForeignObject.cpp	(revision 43814)
@@ -158,7 +158,7 @@
     return false;
 }
 
-void RenderSVGForeignObject::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState& transformState) const
+void RenderSVGForeignObject::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState& transformState, ApplyContainerFlipOrNot) const
 {
     // When crawling up the hierachy starting from foreignObject child content, useTransforms may not be set to true.
     if (!useTransforms)
Index: src/3rdparty/webkit/Source/WebCore/rendering/svg/SVGRenderSupport.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/svg/SVGRenderSupport.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/svg/SVGRenderSupport.cpp	(revision 43814)
@@ -74,7 +74,7 @@
     ASSERT(!fixed); // We should have no fixed content in the SVG rendering tree.
     ASSERT(useTransforms); // Mapping a point through SVG w/o respecting transforms is useless.
     transformState.applyTransform(object->localToParentTransform());
-    object->parent()->mapLocalToContainer(repaintContainer, fixed, useTransforms, transformState);
+    object->parent()->mapLocalToContainer(repaintContainer, fixed, useTransforms, transformState, RenderObject::DoNotApplyContainerFlip);
 }
 
 bool SVGRenderSupport::prepareToRenderSVGContent(RenderObject* object, PaintInfo& paintInfo)
Index: src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGText.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGText.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGText.cpp	(revision 43814)
@@ -92,7 +92,7 @@
     SVGRenderSupport::computeRectForRepaint(this, repaintContainer, repaintRect, fixed);
 }
 
-void RenderSVGText::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState& transformState) const
+void RenderSVGText::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed, bool useTransforms, TransformState& transformState, ApplyContainerFlipOrNot) const
 {
     SVGRenderSupport::mapLocalToContainer(this, repaintContainer, fixed, useTransforms, transformState);
 }
Index: src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGForeignObject.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGForeignObject.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGForeignObject.h	(revision 43814)
@@ -53,7 +53,7 @@
     virtual bool nodeAtPoint(const HitTestRequest&, HitTestResult&, int x, int y, int tx, int ty, HitTestAction);
     virtual bool isSVGForeignObject() const { return true; }
 
-    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed , bool useTransforms, TransformState&) const;
+    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed , bool useTransforms, TransformState&, ApplyContainerFlipOrNot = ApplyContainerFlip) const;
     virtual void setNeedsTransformUpdate() { m_needsTransformUpdate = true; }
 
 private:
Index: src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGRoot.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGRoot.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGRoot.h	(revision 43814)
@@ -78,7 +78,7 @@
     virtual IntRect clippedOverflowRectForRepaint(RenderBoxModelObject* repaintContainer);
     virtual void computeRectForRepaint(RenderBoxModelObject* repaintContainer, IntRect& repaintRect, bool fixed);
 
-    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState&) const;
+    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState&, ApplyContainerFlipOrNot = ApplyContainerFlip) const;
 
     void calcViewport();
 
Index: src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGModelObject.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGModelObject.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGModelObject.h	(revision 43814)
@@ -60,7 +60,7 @@
 
     virtual void destroy();
 
-    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState&) const;
+    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState&, ApplyContainerFlipOrNot = ApplyContainerFlip) const;
     virtual void styleWillChange(StyleDifference, const RenderStyle* newStyle);
     virtual void styleDidChange(StyleDifference, const RenderStyle* oldStyle);
     virtual void updateFromElement();
Index: src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGInline.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGInline.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGInline.cpp	(revision 43814)
@@ -77,7 +77,7 @@
     SVGRenderSupport::computeRectForRepaint(this, repaintContainer, repaintRect, fixed);
 }
 
-void RenderSVGInline::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState& transformState) const
+void RenderSVGInline::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState& transformState, ApplyContainerFlipOrNot) const
 {
     SVGRenderSupport::mapLocalToContainer(this, repaintContainer, useTransforms, fixed, transformState);
 }
Index: src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGRoot.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGRoot.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGRoot.cpp	(revision 43814)
@@ -294,14 +294,14 @@
     RenderBox::computeRectForRepaint(repaintContainer, repaintRect, fixed);
 }
 
-void RenderSVGRoot::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed , bool useTransforms, TransformState& transformState) const
+void RenderSVGRoot::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed , bool useTransforms, TransformState& transformState, ApplyContainerFlipOrNot) const
 {
     ASSERT(!fixed); // We should have no fixed content in the SVG rendering tree.
     ASSERT(useTransforms); // mapping a point through SVG w/o respecting trasnforms is useless.
 
     // Transform to our border box and let RenderBox transform the rest of the way.
     transformState.applyTransform(localToBorderBoxTransform());
-    RenderBox::mapLocalToContainer(repaintContainer, fixed, useTransforms, transformState);
+    RenderBox::mapLocalToContainer(repaintContainer, fixed, useTransforms, transformState, ApplyContainerFlip);
 }
 
 void RenderSVGRoot::updateCachedBoundaries()
Index: src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGModelObject.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGModelObject.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGModelObject.cpp	(revision 43814)
@@ -53,7 +53,7 @@
     SVGRenderSupport::computeRectForRepaint(this, repaintContainer, repaintRect, fixed);
 }
 
-void RenderSVGModelObject::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed , bool useTransforms, TransformState& transformState) const
+void RenderSVGModelObject::mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool fixed , bool useTransforms, TransformState& transformState, ApplyContainerFlipOrNot) const
 {
     SVGRenderSupport::mapLocalToContainer(this, repaintContainer, fixed, useTransforms, transformState);
 }
Index: src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGText.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGText.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/svg/RenderSVGText.h	(revision 43814)
@@ -65,7 +65,7 @@
     virtual IntRect clippedOverflowRectForRepaint(RenderBoxModelObject* repaintContainer);
     virtual void computeRectForRepaint(RenderBoxModelObject* repaintContainer, IntRect&, bool fixed = false);
 
-    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState&) const;
+    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransfoms, bool fixed, TransformState&, ApplyContainerFlipOrNot = ApplyContainerFlip) const;
 
     virtual FloatRect objectBoundingBox() const { return frameRect(); }
     virtual FloatRect strokeBoundingBox() const;
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderReplaced.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderReplaced.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderReplaced.cpp	(revision 43814)
@@ -128,6 +128,14 @@
         return;
     
     bool drawSelectionTint = selectionState() != SelectionNone && !document()->printing();
+
+// On the device our selection background is opaque white,
+// which means images get turned white when they're selected.
+// Just draw them as if they weren't selected.
+#if OS(LINUX) && !(CPU(X86) || CPU(X86_64))
+    drawSelectionTint = false;
+#endif
+
     if (paintInfo.phase == PaintPhaseSelection) {
         if (selectionState() == SelectionNone)
             return;
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderView.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderView.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderView.h	(revision 43814)
@@ -177,7 +177,7 @@
     IntRect documentRect() const { return IntRect(docLeft(), docTop(), docWidth(), docHeight()); }
 
 protected:
-    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState&) const;
+    virtual void mapLocalToContainer(RenderBoxModelObject* repaintContainer, bool useTransforms, bool fixed, TransformState&, ApplyContainerFlipOrNot = ApplyContainerFlip) const;
     virtual void mapAbsoluteToLocalPoint(bool fixed, bool useTransforms, TransformState&) const;
 
 private:
Index: src/3rdparty/webkit/Source/WebCore/rendering/LayoutState.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/LayoutState.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/LayoutState.h	(revision 43814)
@@ -69,7 +69,7 @@
     
     // The page logical offset is the object's offset from the top of the page in the page progression
     // direction (so an x-offset in vertical text and a y-offset for horizontal text).
-    int pageLogicalOffset(int childLogicalOffset) const;
+    int pageLogicalOffset(int childLogicalOffset, bool horizontalWritingMode = true) const;
 
     void addForcedColumnBreak(int childLogicalOffset);
     
Index: src/3rdparty/webkit/Source/WebCore/rendering/HitTestResult.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/HitTestResult.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/HitTestResult.cpp	(revision 43814)
@@ -39,6 +39,7 @@
 #if ENABLE(SVG)
 #include "SVGNames.h"
 #include "XLinkNames.h"
+#include "RenderSVGImage.h"
 #endif
 
 namespace WebCore {
@@ -271,6 +272,10 @@
         RenderImage* image = static_cast<WebCore::RenderImage*>(renderer);
         if (image->cachedImage() && !image->cachedImage()->errorOccurred())
             return image->cachedImage()->image();
+    } else if (renderer && renderer->isSVGImage()) {
+        RenderSVGImage* image = static_cast<WebCore::RenderSVGImage*>(renderer);
+        if (image->imageResource()->cachedImage() && !image->imageResource()->cachedImage()->errorOccurred())
+            return image->imageResource()->cachedImage()->image();
     }
 
     return 0;
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderRubyRun.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderRubyRun.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderRubyRun.cpp	(revision 43814)
@@ -227,11 +227,14 @@
 {
     RenderBlock::layout();
     
-    // Place the RenderRubyText such that its bottom is flush with the lineTop of the first line of the RenderRubyBase.
     RenderRubyText* rt = rubyText();
     if (!rt)
         return;
+
+    // Logical left of RenderRubyText should always be 0.
+    rt->setLogicalLeft(0);
     
+    // Place the RenderRubyText such that its bottom is flush with the lineTop of the first line of the RenderRubyBase.
     int lastLineRubyTextBottom = rt->logicalHeight();
     int firstLineRubyTextTop = 0;
     RootInlineBox* rootBox = rt->lastRootBox();
@@ -268,6 +271,15 @@
     computeOverflow(clientLogicalBottom());
 }
 
+int RenderRubyRun::minPreferredLogicalWidth() const
+{
+    // CSS3 Ruby 3.4 Ruby box and line breaking
+    // http://www.w3.org/TR/2011/WD-css3-ruby-20110630/#ruby-line-breaking
+    // RenderRubyRun don't make line breaking opprtunity.
+    // This make min preferred logical width same as max preferred logical width.
+    return maxPreferredLogicalWidth();
+}
+
 void RenderRubyRun::getOverhang(bool firstLine, RenderObject* startRenderer, RenderObject* endRenderer, int& startOverhang, int& endOverhang) const
 {
     ASSERT(!needsLayout());
Index: src/3rdparty/webkit/Source/WebCore/rendering/RenderCombineText.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/rendering/RenderCombineText.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/rendering/RenderCombineText.cpp	(revision 43814)
@@ -102,6 +102,10 @@
     m_combinedTextWidth = originalFont().width(run);
     m_isCombined = m_combinedTextWidth <= emWidth;
 
+    // Backup FontSelector for style()->font().update()	
+    // because style()->font().fontSelector() is initialized by setFontDescription().	
+    RefPtr<FontSelector> backupSelector = style()->font().fontSelector();
+
     if (m_isCombined)
         shouldUpdateFont = style()->setFontDescription(description); // Need to change font orientation to horizontal.
     else {
@@ -112,7 +116,7 @@
             Font compressedFont = Font(description, style()->font().letterSpacing(), style()->font().wordSpacing());
             compressedFont.update(style()->font().fontSelector());
             float runWidth = compressedFont.width(run);
-            if (runWidth <= emWidth) {
+            if (i == WTF_ARRAY_LENGTH(widthVariants) - 1 || runWidth <= emWidth) {
                 m_combinedTextWidth = runWidth;
                 m_isCombined = true;
 
@@ -127,7 +131,7 @@
         shouldUpdateFont = style()->setFontDescription(originalFont().fontDescription());
 
     if (shouldUpdateFont)
-        style()->font().update(style()->font().fontSelector());
+        style()->font().update(backupSelector);
 
     if (m_isCombined) {
         DEFINE_STATIC_LOCAL(String, objectReplacementCharacterString, (&objectReplacementCharacter, 1));
Index: src/3rdparty/webkit/Source/WebCore/css/CSSValueKeywords.in
===================================================================
--- src/3rdparty/webkit/Source/WebCore/css/CSSValueKeywords.in	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/css/CSSValueKeywords.in	(revision 43814)
@@ -796,7 +796,12 @@
 # -webkit-text-orientation
 upright
 vertical-right
+upright-right
+sideways-right
+sideways-left
+sideways
 
+
 # -webkit-line-box-contain
 font
 glyphs
Index: src/3rdparty/webkit/Source/WebCore/css/CSSStyleSelector.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/css/CSSStyleSelector.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/css/CSSStyleSelector.cpp	(revision 43814)
@@ -368,7 +368,7 @@
 static void loadFullDefaultStyle();
 static void loadSimpleDefaultStyle();
 // FIXME: It would be nice to use some mechanism that guarantees this is in sync with the real UA stylesheet.
-static const char* simpleUserAgentStyleSheet = "html,body,div{display:block}head{display:none}body{margin:8px}div:focus,span:focus{outline:auto 5px -webkit-focus-ring-color}a:-webkit-any-link{color:-webkit-link;text-decoration:underline}a:-webkit-any-link:active{color:-webkit-activelink}";
+static const char* simpleUserAgentStyleSheet = "html,body,div{display:block}head{display:none}body{margin:8px}div:focus,span:focus{outline:auto 5px -webkit-focus-ring-color}a:-webkit-any-link{color:-webkit-link;text-decoration:underline}a:-webkit-any-link:active{color:-webkit-activelink}html{word-wrap:break-word}";
 
 static inline bool elementCanUseSimpleDefaultStyle(Element* e)
 {
@@ -3922,6 +3922,40 @@
         return;
     }
 
+    case CSSPropertyKoboFontSharpness: {
+        FontDescription fontDescription = m_style->fontDescription();
+        if (isInherit) 
+            fontDescription.setSharpness(m_parentStyle->fontDescription().sharpness());
+        else if (isInitial)
+            fontDescription.setSharpness(0.0);
+        else {
+            if (!primitiveValue)
+                return;
+            float sharpness = primitiveValue->getFloatValue();
+            fontDescription.setSharpness(sharpness);
+        }
+        if (m_style->setFontDescription(fontDescription))
+            m_fontDirty = true;
+        return;
+    }
+
+    case CSSPropertyKoboFontThickness: {
+        FontDescription fontDescription = m_style->fontDescription();
+        if (isInherit) 
+            fontDescription.setThickness(m_parentStyle->fontDescription().thickness());
+        else if (isInitial)
+            fontDescription.setThickness(0.0);
+        else {
+            if (!primitiveValue)
+                return;
+            float thickness = primitiveValue->getFloatValue();
+            fontDescription.setThickness(thickness);
+        }
+        if (m_style->setFontDescription(fontDescription))
+            m_fontDirty = true;
+        return;
+    }
+
     case CSSPropertyLetterSpacing:
     case CSSPropertyWordSpacing:
     {
@@ -4411,23 +4445,28 @@
                         break;
                     case CSSValueSerif:
                         face = "-webkit-serif";
-                        fontDescription.setGenericFamily(FontDescription::SerifFamily);
+                        if (fontDescription.genericFamily() == FontDescription::NoFamily)
+                            fontDescription.setGenericFamily(FontDescription::SerifFamily);
                         break;
                     case CSSValueSansSerif:
                         face = "-webkit-sans-serif";
-                        fontDescription.setGenericFamily(FontDescription::SansSerifFamily);
+                        if (fontDescription.genericFamily() == FontDescription::NoFamily)
+                            fontDescription.setGenericFamily(FontDescription::SansSerifFamily);
                         break;
                     case CSSValueCursive:
                         face = "-webkit-cursive";
-                        fontDescription.setGenericFamily(FontDescription::CursiveFamily);
+                        if (fontDescription.genericFamily() == FontDescription::NoFamily)
+                            fontDescription.setGenericFamily(FontDescription::CursiveFamily);
                         break;
                     case CSSValueFantasy:
                         face = "-webkit-fantasy";
-                        fontDescription.setGenericFamily(FontDescription::FantasyFamily);
+                        if (fontDescription.genericFamily() == FontDescription::NoFamily)
+                            fontDescription.setGenericFamily(FontDescription::FantasyFamily);
                         break;
                     case CSSValueMonospace:
                         face = "-webkit-monospace";
-                        fontDescription.setGenericFamily(FontDescription::MonospaceFamily);
+                        if (fontDescription.genericFamily() == FontDescription::NoFamily)
+                            fontDescription.setGenericFamily(FontDescription::MonospaceFamily);
                         break;
                 }
             }
Index: src/3rdparty/webkit/Source/WebCore/css/CSSParser.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/css/CSSParser.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/css/CSSParser.cpp	(revision 43814)
@@ -1797,6 +1797,12 @@
             validPrimitive = true;
         break;
 
+    case CSSPropertyKoboFontSharpness:
+    case CSSPropertyKoboFontThickness:
+        if (validUnit(value, FNumber, true))
+            validPrimitive = true;
+        break;
+
 #if ENABLE(DASHBOARD_SUPPORT)
     case CSSPropertyWebkitDashboardRegion: // <dashboard-region> | <dashboard-region>
         if (value->unit == CSSParserValue::Function || id == CSSValueNone)
@@ -1996,9 +2002,17 @@
         return parseTextEmphasisStyle(important);
 
     case CSSPropertyWebkitTextOrientation:
-        // FIXME: For now just support upright and vertical-right.
-        if (id == CSSValueVerticalRight || id == CSSValueUpright)
+        // FIXME: For now just support upright and vertical-right upright-right sideways-right sideways-left sideways.
+        switch (id) {
+        case CSSValueVerticalRight:
+        case CSSValueUpright:
+        case CSSValueUprightRight:
+        case CSSValueSidewaysRight:
+        case CSSValueSidewaysLeft:
+        case CSSValueSideways:
             validPrimitive = true;
+            break;
+        }
         break;
 
     case CSSPropertyWebkitLineBoxContain:
Index: src/3rdparty/webkit/Source/WebCore/css/CSSPropertyNames.in
===================================================================
--- src/3rdparty/webkit/Source/WebCore/css/CSSPropertyNames.in	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/css/CSSPropertyNames.in	(revision 43814)
@@ -325,3 +325,46 @@
 -webkit-user-drag
 -webkit-user-modify
 -webkit-user-select
+clip-path
+clip-rule
+mask
+enable-background
+filter
+flood-color
+flood-opacity
+lighting-color
+stop-color
+stop-opacity
+color-interpolation
+color-interpolation-filters
+color-profile
+color-rendering
+fill
+fill-opacity
+fill-rule
+image-rendering
+marker
+marker-end
+marker-mid
+marker-start
+shape-rendering
+stroke
+stroke-dasharray
+stroke-dashoffset
+stroke-linecap
+stroke-linejoin
+stroke-miterlimit
+stroke-opacity
+stroke-width
+alignment-baseline
+baseline-shift
+dominant-baseline
+glyph-orientation-horizontal
+glyph-orientation-vertical
+kerning
+text-anchor
+vector-effect
+writing-mode
+-webkit-svg-shadow
+-kobo-font-sharpness
+-kobo-font-thickness
Index: src/3rdparty/webkit/Source/WebCore/css/html.css
===================================================================
--- src/3rdparty/webkit/Source/WebCore/css/html.css	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/css/html.css	(revision 43814)
@@ -24,7 +24,8 @@
 @namespace "http://www.w3.org/1999/xhtml";
 
 html {
-    display: block
+    display: block;
+    word-wrap: break-word;
 }
 
 /* children of the <head> element all have display:none */
Index: src/3rdparty/webkit/Source/WebCore/css/CSSPrimitiveValueMappings.h
===================================================================
--- src/3rdparty/webkit/Source/WebCore/css/CSSPrimitiveValueMappings.h	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/css/CSSPrimitiveValueMappings.h	(revision 43814)
@@ -2201,6 +2201,15 @@
     case TextOrientationUpright:
         m_value.ident = CSSValueUpright;
         break;
+    case TextOrientationSidewaysRight:
+        m_value.ident = CSSValueSidewaysRight;
+        break;
+    case TextOrientationSidewaysLeft:
+        m_value.ident = CSSValueSidewaysLeft;
+        break;
+    case TextOrientationSideways:
+        m_value.ident = CSSValueSideways;
+        break;
     }
 }
 
@@ -2211,6 +2220,14 @@
         return TextOrientationVerticalRight;
     case CSSValueUpright:
         return TextOrientationUpright;
+    case CSSValueUprightRight:
+        return TextOrientationUprightRight;
+    case CSSValueSidewaysRight:
+        return TextOrientationSidewaysRight;
+    case CSSValueSidewaysLeft:
+        return TextOrientationSidewaysLeft;
+    case CSSValueSideways:
+        return TextOrientationSideways;
     default:
         ASSERT_NOT_REACHED();
         return TextOrientationVerticalRight;
Index: src/3rdparty/webkit/Source/WebCore/loader/cache/CachedFont.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/loader/cache/CachedFont.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/loader/cache/CachedFont.cpp	(revision 43814)
@@ -53,6 +53,7 @@
 #include "SVGNames.h"
 #endif
 
+#include <QtCore/QtDebug>
 namespace WebCore {
 
 CachedFont::CachedFont(const String &url)
Index: src/3rdparty/webkit/Source/WebCore/loader/cache/CachedResourceLoader.cpp
===================================================================
--- src/3rdparty/webkit/Source/WebCore/loader/cache/CachedResourceLoader.cpp	(revision 36094)
+++ src/3rdparty/webkit/Source/WebCore/loader/cache/CachedResourceLoader.cpp	(revision 43814)
@@ -299,6 +299,9 @@
 
 CachedResource* CachedResourceLoader::requestResource(CachedResource::Type type, const String& resourceURL, const String& charset, ResourceLoadPriority priority, bool forPreload)
 {
+    if (resourceURL == "") {
+        return 0;
+    }
     KURL url = m_document->completeURL(resourceURL);
     
     LOG(ResourceLoading, "CachedResourceLoader::requestResource '%s', charset '%s', priority=%d, forPreload=%u", url.string().latin1().data(), charset.latin1().data(), priority, forPreload);
Index: src/3rdparty/webkit/Source/WebKit.pri
===================================================================
--- src/3rdparty/webkit/Source/WebKit.pri	(revision 36094)
+++ src/3rdparty/webkit/Source/WebKit.pri	(revision 43814)
@@ -102,7 +102,7 @@
 
 # Treat warnings as errors on x86/Linux/GCC
 linux-g++* {
-    isEqual(QT_ARCH,x86_64)|isEqual(QT_ARCH,i386): QMAKE_CXXFLAGS += -Werror
+#    isEqual(QT_ARCH,x86_64)|isEqual(QT_ARCH,i386): QMAKE_CXXFLAGS += -Werror
 
     greaterThan(QT_GCC_MAJOR_VERSION, 3):greaterThan(QT_GCC_MINOR_VERSION, 5) {
         if (!contains(QMAKE_CXXFLAGS, -std=c++0x) && !contains(QMAKE_CXXFLAGS, -std=gnu++0x)) {
@@ -199,3 +199,7 @@
 }
 
 contains(DEFINES, QT_NO_UITOOLS): CONFIG -= uitools
+
+macx-g++|linux*: LIBS += -ldl
+win32*: DEFINES += PSAPI_VERSION=1
+win32*: LIBS += -lpsapi
Index: src/3rdparty/webkit/Tools/access/VerticalTypesettingSynthesisSpec.csv
===================================================================
--- src/3rdparty/webkit/Tools/access/VerticalTypesettingSynthesisSpec.csv	(revision 0)
+++ src/3rdparty/webkit/Tools/access/VerticalTypesettingSynthesisSpec.csv	(revision 43814)
@@ -0,0 +1,24327 @@
+Unicode,MVOsimple
+U+0000,R
+U+0001,R
+U+0002,R
+U+0003,R
+U+0004,R
+U+0005,R
+U+0006,R
+U+0007,R
+U+0008,R
+U+0009,R
+U+000A,R
+U+000B,R
+U+000C,R
+U+000D,R
+U+000E,R
+U+000F,R
+U+0010,R
+U+0011,R
+U+0012,R
+U+0013,R
+U+0014,R
+U+0015,R
+U+0016,R
+U+0017,R
+U+0018,R
+U+0019,R
+U+001A,R
+U+001B,R
+U+001C,R
+U+001D,R
+U+001E,R
+U+001F,R
+U+0020,R
+U+0021,R
+U+0022,R
+U+0023,R
+U+0024,R
+U+0025,R
+U+0026,R
+U+0027,R
+U+0028,R
+U+0029,R
+U+002A,R
+U+002B,R
+U+002C,R
+U+002D,R
+U+002E,R
+U+002F,R
+U+0030,R
+U+0031,R
+U+0032,R
+U+0033,R
+U+0034,R
+U+0035,R
+U+0036,R
+U+0037,R
+U+0038,R
+U+0039,R
+U+003A,R
+U+003B,R
+U+003C,R
+U+003D,R
+U+003E,R
+U+003F,R
+U+0040,R
+U+0041,R
+U+0042,R
+U+0043,R
+U+0044,R
+U+0045,R
+U+0046,R
+U+0047,R
+U+0048,R
+U+0049,R
+U+004A,R
+U+004B,R
+U+004C,R
+U+004D,R
+U+004E,R
+U+004F,R
+U+0050,R
+U+0051,R
+U+0052,R
+U+0053,R
+U+0054,R
+U+0055,R
+U+0056,R
+U+0057,R
+U+0058,R
+U+0059,R
+U+005A,R
+U+005B,R
+U+005C,R
+U+005D,R
+U+005E,R
+U+005F,R
+U+0060,R
+U+0061,R
+U+0062,R
+U+0063,R
+U+0064,R
+U+0065,R
+U+0066,R
+U+0067,R
+U+0068,R
+U+0069,R
+U+006A,R
+U+006B,R
+U+006C,R
+U+006D,R
+U+006E,R
+U+006F,R
+U+0070,R
+U+0071,R
+U+0072,R
+U+0073,R
+U+0074,R
+U+0075,R
+U+0076,R
+U+0077,R
+U+0078,R
+U+0079,R
+U+007A,R
+U+007B,R
+U+007C,R
+U+007D,R
+U+007E,R
+U+007F,R
+U+0080,R
+U+0081,R
+U+0082,R
+U+0083,R
+U+0084,R
+U+0085,R
+U+0086,R
+U+0087,R
+U+0088,R
+U+0089,R
+U+008A,R
+U+008B,R
+U+008C,R
+U+008D,R
+U+008E,R
+U+008F,R
+U+0090,R
+U+0091,R
+U+0092,R
+U+0093,R
+U+0094,R
+U+0095,R
+U+0096,R
+U+0097,R
+U+0098,R
+U+0099,R
+U+009A,R
+U+009B,R
+U+009C,R
+U+009D,R
+U+009E,R
+U+009F,R
+U+00A0,R
+U+00A1,R
+U+00A2,R
+U+00A3,R
+U+00A4,R
+U+00A5,R
+U+00A6,R
+U+00A7,U
+U+00A8,R
+U+00A9,U
+U+00AA,R
+U+00AB,R
+U+00AC,R
+U+00AD,R
+U+00AE,U
+U+00AF,R
+U+00B0,R
+U+00B1,R
+U+00B2,R
+U+00B3,R
+U+00B4,R
+U+00B5,R
+U+00B6,U
+U+00B7,R
+U+00B8,R
+U+00B9,R
+U+00BA,R
+U+00BB,R
+U+00BC,U
+U+00BD,U
+U+00BE,U
+U+00BF,R
+U+00C0,R
+U+00C1,R
+U+00C2,R
+U+00C3,R
+U+00C4,R
+U+00C5,R
+U+00C6,R
+U+00C7,R
+U+00C8,R
+U+00C9,R
+U+00CA,R
+U+00CB,R
+U+00CC,R
+U+00CD,R
+U+00CE,R
+U+00CF,R
+U+00D0,R
+U+00D1,R
+U+00D2,R
+U+00D3,R
+U+00D4,R
+U+00D5,R
+U+00D6,R
+U+00D7,R
+U+00D8,R
+U+00D9,R
+U+00DA,R
+U+00DB,R
+U+00DC,R
+U+00DD,R
+U+00DE,R
+U+00DF,R
+U+00E0,R
+U+00E1,R
+U+00E2,R
+U+00E3,R
+U+00E4,R
+U+00E5,R
+U+00E6,R
+U+00E7,R
+U+00E8,R
+U+00E9,R
+U+00EA,R
+U+00EB,R
+U+00EC,R
+U+00ED,R
+U+00EE,R
+U+00EF,R
+U+00F0,R
+U+00F1,R
+U+00F2,R
+U+00F3,R
+U+00F4,R
+U+00F5,R
+U+00F6,R
+U+00F7,R
+U+00F8,R
+U+00F9,R
+U+00FA,R
+U+00FB,R
+U+00FC,R
+U+00FD,R
+U+00FE,R
+U+00FF,R
+U+0100,R
+U+0101,R
+U+0102,R
+U+0103,R
+U+0104,R
+U+0105,R
+U+0106,R
+U+0107,R
+U+0108,R
+U+0109,R
+U+010A,R
+U+010B,R
+U+010C,R
+U+010D,R
+U+010E,R
+U+010F,R
+U+0110,R
+U+0111,R
+U+0112,R
+U+0113,R
+U+0114,R
+U+0115,R
+U+0116,R
+U+0117,R
+U+0118,R
+U+0119,R
+U+011A,R
+U+011B,R
+U+011C,R
+U+011D,R
+U+011E,R
+U+011F,R
+U+0120,R
+U+0121,R
+U+0122,R
+U+0123,R
+U+0124,R
+U+0125,R
+U+0126,R
+U+0127,R
+U+0128,R
+U+0129,R
+U+012A,R
+U+012B,R
+U+012C,R
+U+012D,R
+U+012E,R
+U+012F,R
+U+0130,R
+U+0131,R
+U+0132,R
+U+0133,R
+U+0134,R
+U+0135,R
+U+0136,R
+U+0137,R
+U+0138,R
+U+0139,R
+U+013A,R
+U+013B,R
+U+013C,R
+U+013D,R
+U+013E,R
+U+013F,R
+U+0140,R
+U+0141,R
+U+0142,R
+U+0143,R
+U+0144,R
+U+0145,R
+U+0146,R
+U+0147,R
+U+0148,R
+U+0149,R
+U+014A,R
+U+014B,R
+U+014C,R
+U+014D,R
+U+014E,R
+U+014F,R
+U+0150,R
+U+0151,R
+U+0152,R
+U+0153,R
+U+0154,R
+U+0155,R
+U+0156,R
+U+0157,R
+U+0158,R
+U+0159,R
+U+015A,R
+U+015B,R
+U+015C,R
+U+015D,R
+U+015E,R
+U+015F,R
+U+0160,R
+U+0161,R
+U+0162,R
+U+0163,R
+U+0164,R
+U+0165,R
+U+0166,R
+U+0167,R
+U+0168,R
+U+0169,R
+U+016A,R
+U+016B,R
+U+016C,R
+U+016D,R
+U+016E,R
+U+016F,R
+U+0170,R
+U+0171,R
+U+0172,R
+U+0173,R
+U+0174,R
+U+0175,R
+U+0176,R
+U+0177,R
+U+0178,R
+U+0179,R
+U+017A,R
+U+017B,R
+U+017C,R
+U+017D,R
+U+017E,R
+U+017F,R
+U+0180,R
+U+0181,R
+U+0182,R
+U+0183,R
+U+0184,R
+U+0185,R
+U+0186,R
+U+0187,R
+U+0188,R
+U+0189,R
+U+018A,R
+U+018B,R
+U+018C,R
+U+018D,R
+U+018E,R
+U+018F,R
+U+0190,R
+U+0191,R
+U+0192,R
+U+0193,R
+U+0194,R
+U+0195,R
+U+0196,R
+U+0197,R
+U+0198,R
+U+0199,R
+U+019A,R
+U+019B,R
+U+019C,R
+U+019D,R
+U+019E,R
+U+019F,R
+U+01A0,R
+U+01A1,R
+U+01A2,R
+U+01A3,R
+U+01A4,R
+U+01A5,R
+U+01A6,R
+U+01A7,R
+U+01A8,R
+U+01A9,R
+U+01AA,R
+U+01AB,R
+U+01AC,R
+U+01AD,R
+U+01AE,R
+U+01AF,R
+U+01B0,R
+U+01B1,R
+U+01B2,R
+U+01B3,R
+U+01B4,R
+U+01B5,R
+U+01B6,R
+U+01B7,R
+U+01B8,R
+U+01B9,R
+U+01BA,R
+U+01BB,R
+U+01BC,R
+U+01BD,R
+U+01BE,R
+U+01BF,R
+U+01C0,R
+U+01C1,R
+U+01C2,R
+U+01C3,R
+U+01C4,R
+U+01C5,R
+U+01C6,R
+U+01C7,R
+U+01C8,R
+U+01C9,R
+U+01CA,R
+U+01CB,R
+U+01CC,R
+U+01CD,R
+U+01CE,R
+U+01CF,R
+U+01D0,R
+U+01D1,R
+U+01D2,R
+U+01D3,R
+U+01D4,R
+U+01D5,R
+U+01D6,R
+U+01D7,R
+U+01D8,R
+U+01D9,R
+U+01DA,R
+U+01DB,R
+U+01DC,R
+U+01DD,R
+U+01DE,R
+U+01DF,R
+U+01E0,R
+U+01E1,R
+U+01E2,R
+U+01E3,R
+U+01E4,R
+U+01E5,R
+U+01E6,R
+U+01E7,R
+U+01E8,R
+U+01E9,R
+U+01EA,R
+U+01EB,R
+U+01EC,R
+U+01ED,R
+U+01EE,R
+U+01EF,R
+U+01F0,R
+U+01F1,R
+U+01F2,R
+U+01F3,R
+U+01F4,R
+U+01F5,R
+U+01F6,R
+U+01F7,R
+U+01F8,R
+U+01F9,R
+U+01FA,R
+U+01FB,R
+U+01FC,R
+U+01FD,R
+U+01FE,R
+U+01FF,R
+U+0200,R
+U+0201,R
+U+0202,R
+U+0203,R
+U+0204,R
+U+0205,R
+U+0206,R
+U+0207,R
+U+0208,R
+U+0209,R
+U+020A,R
+U+020B,R
+U+020C,R
+U+020D,R
+U+020E,R
+U+020F,R
+U+0210,R
+U+0211,R
+U+0212,R
+U+0213,R
+U+0214,R
+U+0215,R
+U+0216,R
+U+0217,R
+U+0218,R
+U+0219,R
+U+021A,R
+U+021B,R
+U+021C,R
+U+021D,R
+U+021E,R
+U+021F,R
+U+0220,R
+U+0221,R
+U+0222,R
+U+0223,R
+U+0224,R
+U+0225,R
+U+0226,R
+U+0227,R
+U+0228,R
+U+0229,R
+U+022A,R
+U+022B,R
+U+022C,R
+U+022D,R
+U+022E,R
+U+022F,R
+U+0230,R
+U+0231,R
+U+0232,R
+U+0233,R
+U+0234,R
+U+0235,R
+U+0236,R
+U+0237,R
+U+0238,R
+U+0239,R
+U+023A,R
+U+023B,R
+U+023C,R
+U+023D,R
+U+023E,R
+U+023F,R
+U+0240,R
+U+0241,R
+U+0242,R
+U+0243,R
+U+0244,R
+U+0245,R
+U+0246,R
+U+0247,R
+U+0248,R
+U+0249,R
+U+024A,R
+U+024B,R
+U+024C,R
+U+024D,R
+U+024E,R
+U+024F,R
+U+0250,R
+U+0251,R
+U+0252,R
+U+0253,R
+U+0254,R
+U+0255,R
+U+0256,R
+U+0257,R
+U+0258,R
+U+0259,R
+U+025A,R
+U+025B,R
+U+025C,R
+U+025D,R
+U+025E,R
+U+025F,R
+U+0260,R
+U+0261,R
+U+0262,R
+U+0263,R
+U+0264,R
+U+0265,R
+U+0266,R
+U+0267,R
+U+0268,R
+U+0269,R
+U+026A,R
+U+026B,R
+U+026C,R
+U+026D,R
+U+026E,R
+U+026F,R
+U+0270,R
+U+0271,R
+U+0272,R
+U+0273,R
+U+0274,R
+U+0275,R
+U+0276,R
+U+0277,R
+U+0278,R
+U+0279,R
+U+027A,R
+U+027B,R
+U+027C,R
+U+027D,R
+U+027E,R
+U+027F,R
+U+0280,R
+U+0281,R
+U+0282,R
+U+0283,R
+U+0284,R
+U+0285,R
+U+0286,R
+U+0287,R
+U+0288,R
+U+0289,R
+U+028A,R
+U+028B,R
+U+028C,R
+U+028D,R
+U+028E,R
+U+028F,R
+U+0290,R
+U+0291,R
+U+0292,R
+U+0293,R
+U+0294,R
+U+0295,R
+U+0296,R
+U+0297,R
+U+0298,R
+U+0299,R
+U+029A,R
+U+029B,R
+U+029C,R
+U+029D,R
+U+029E,R
+U+029F,R
+U+02A0,R
+U+02A1,R
+U+02A2,R
+U+02A3,R
+U+02A4,R
+U+02A5,R
+U+02A6,R
+U+02A7,R
+U+02A8,R
+U+02A9,R
+U+02AA,R
+U+02AB,R
+U+02AC,R
+U+02AD,R
+U+02AE,R
+U+02AF,R
+U+02B0,R
+U+02B1,R
+U+02B2,R
+U+02B3,R
+U+02B4,R
+U+02B5,R
+U+02B6,R
+U+02B7,R
+U+02B8,R
+U+02B9,R
+U+02BA,R
+U+02BB,R
+U+02BC,R
+U+02BD,R
+U+02BE,R
+U+02BF,R
+U+02C0,R
+U+02C1,R
+U+02C2,R
+U+02C3,R
+U+02C4,R
+U+02C5,R
+U+02C6,R
+U+02C7,R
+U+02C8,R
+U+02C9,R
+U+02CA,R
+U+02CB,R
+U+02CC,R
+U+02CD,R
+U+02CE,R
+U+02CF,R
+U+02D0,R
+U+02D1,R
+U+02D2,R
+U+02D3,R
+U+02D4,R
+U+02D5,R
+U+02D6,R
+U+02D7,R
+U+02D8,R
+U+02D9,R
+U+02DA,R
+U+02DB,R
+U+02DC,R
+U+02DD,R
+U+02DE,R
+U+02DF,R
+U+02E0,R
+U+02E1,R
+U+02E2,R
+U+02E3,R
+U+02E4,R
+U+02E5,R
+U+02E6,R
+U+02E7,R
+U+02E8,R
+U+02E9,R
+U+02EA,U
+U+02EB,U
+U+02EC,R
+U+02ED,R
+U+02EE,R
+U+02EF,R
+U+02F0,R
+U+02F1,R
+U+02F2,R
+U+02F3,R
+U+02F4,R
+U+02F5,R
+U+02F6,R
+U+02F7,R
+U+02F8,R
+U+02F9,R
+U+02FA,R
+U+02FB,R
+U+02FC,R
+U+02FD,R
+U+02FE,R
+U+02FF,R
+U+0300,R
+U+0301,R
+U+0302,R
+U+0303,R
+U+0304,R
+U+0305,R
+U+0306,R
+U+0307,R
+U+0308,R
+U+0309,R
+U+030A,R
+U+030B,R
+U+030C,R
+U+030D,R
+U+030E,R
+U+030F,R
+U+0310,R
+U+0311,R
+U+0312,R
+U+0313,R
+U+0314,R
+U+0315,R
+U+0316,R
+U+0317,R
+U+0318,R
+U+0319,R
+U+031A,R
+U+031B,R
+U+031C,R
+U+031D,R
+U+031E,R
+U+031F,R
+U+0320,R
+U+0321,R
+U+0322,R
+U+0323,R
+U+0324,R
+U+0325,R
+U+0326,R
+U+0327,R
+U+0328,R
+U+0329,R
+U+032A,R
+U+032B,R
+U+032C,R
+U+032D,R
+U+032E,R
+U+032F,R
+U+0330,R
+U+0331,R
+U+0332,R
+U+0333,R
+U+0334,R
+U+0335,R
+U+0336,R
+U+0337,R
+U+0338,R
+U+0339,R
+U+033A,R
+U+033B,R
+U+033C,R
+U+033D,R
+U+033E,R
+U+033F,R
+U+0340,R
+U+0341,R
+U+0342,R
+U+0343,R
+U+0344,R
+U+0345,R
+U+0346,R
+U+0347,R
+U+0348,R
+U+0349,R
+U+034A,R
+U+034B,R
+U+034C,R
+U+034D,R
+U+034E,R
+U+034F,R
+U+0350,R
+U+0351,R
+U+0352,R
+U+0353,R
+U+0354,R
+U+0355,R
+U+0356,R
+U+0357,R
+U+0358,R
+U+0359,R
+U+035A,R
+U+035B,R
+U+035C,R
+U+035D,R
+U+035E,R
+U+035F,R
+U+0360,R
+U+0361,R
+U+0362,R
+U+0363,R
+U+0364,R
+U+0365,R
+U+0366,R
+U+0367,R
+U+0368,R
+U+0369,R
+U+036A,R
+U+036B,R
+U+036C,R
+U+036D,R
+U+036E,R
+U+036F,R
+U+0370,R
+U+0371,R
+U+0372,R
+U+0373,R
+U+0374,R
+U+0375,R
+U+0376,R
+U+0377,R
+U+037A,R
+U+037B,R
+U+037C,R
+U+037D,R
+U+037E,R
+U+0384,R
+U+0385,R
+U+0386,R
+U+0387,R
+U+0388,R
+U+0389,R
+U+038A,R
+U+038C,R
+U+038E,R
+U+038F,R
+U+0390,R
+U+0391,R
+U+0392,R
+U+0393,R
+U+0394,R
+U+0395,R
+U+0396,R
+U+0397,R
+U+0398,R
+U+0399,R
+U+039A,R
+U+039B,R
+U+039C,R
+U+039D,R
+U+039E,R
+U+039F,R
+U+03A0,R
+U+03A1,R
+U+03A3,R
+U+03A4,R
+U+03A5,R
+U+03A6,R
+U+03A7,R
+U+03A8,R
+U+03A9,R
+U+03AA,R
+U+03AB,R
+U+03AC,R
+U+03AD,R
+U+03AE,R
+U+03AF,R
+U+03B0,R
+U+03B1,R
+U+03B2,R
+U+03B3,R
+U+03B4,R
+U+03B5,R
+U+03B6,R
+U+03B7,R
+U+03B8,R
+U+03B9,R
+U+03BA,R
+U+03BB,R
+U+03BC,R
+U+03BD,R
+U+03BE,R
+U+03BF,R
+U+03C0,R
+U+03C1,R
+U+03C2,R
+U+03C3,R
+U+03C4,R
+U+03C5,R
+U+03C6,R
+U+03C7,R
+U+03C8,R
+U+03C9,R
+U+03CA,R
+U+03CB,R
+U+03CC,R
+U+03CD,R
+U+03CE,R
+U+03CF,R
+U+03D0,R
+U+03D1,R
+U+03D2,R
+U+03D3,R
+U+03D4,R
+U+03D5,R
+U+03D6,R
+U+03D7,R
+U+03D8,R
+U+03D9,R
+U+03DA,R
+U+03DB,R
+U+03DC,R
+U+03DD,R
+U+03DE,R
+U+03DF,R
+U+03E0,R
+U+03E1,R
+U+03E2,R
+U+03E3,R
+U+03E4,R
+U+03E5,R
+U+03E6,R
+U+03E7,R
+U+03E8,R
+U+03E9,R
+U+03EA,R
+U+03EB,R
+U+03EC,R
+U+03ED,R
+U+03EE,R
+U+03EF,R
+U+03F0,R
+U+03F1,R
+U+03F2,R
+U+03F3,R
+U+03F4,R
+U+03F5,R
+U+03F6,R
+U+03F7,R
+U+03F8,R
+U+03F9,R
+U+03FA,R
+U+03FB,R
+U+03FC,R
+U+03FD,R
+U+03FE,R
+U+03FF,R
+U+0400,R
+U+0401,R
+U+0402,R
+U+0403,R
+U+0404,R
+U+0405,R
+U+0406,R
+U+0407,R
+U+0408,R
+U+0409,R
+U+040A,R
+U+040B,R
+U+040C,R
+U+040D,R
+U+040E,R
+U+040F,R
+U+0410,R
+U+0411,R
+U+0412,R
+U+0413,R
+U+0414,R
+U+0415,R
+U+0416,R
+U+0417,R
+U+0418,R
+U+0419,R
+U+041A,R
+U+041B,R
+U+041C,R
+U+041D,R
+U+041E,R
+U+041F,R
+U+0420,R
+U+0421,R
+U+0422,R
+U+0423,R
+U+0424,R
+U+0425,R
+U+0426,R
+U+0427,R
+U+0428,R
+U+0429,R
+U+042A,R
+U+042B,R
+U+042C,R
+U+042D,R
+U+042E,R
+U+042F,R
+U+0430,R
+U+0431,R
+U+0432,R
+U+0433,R
+U+0434,R
+U+0435,R
+U+0436,R
+U+0437,R
+U+0438,R
+U+0439,R
+U+043A,R
+U+043B,R
+U+043C,R
+U+043D,R
+U+043E,R
+U+043F,R
+U+0440,R
+U+0441,R
+U+0442,R
+U+0443,R
+U+0444,R
+U+0445,R
+U+0446,R
+U+0447,R
+U+0448,R
+U+0449,R
+U+044A,R
+U+044B,R
+U+044C,R
+U+044D,R
+U+044E,R
+U+044F,R
+U+0450,R
+U+0451,R
+U+0452,R
+U+0453,R
+U+0454,R
+U+0455,R
+U+0456,R
+U+0457,R
+U+0458,R
+U+0459,R
+U+045A,R
+U+045B,R
+U+045C,R
+U+045D,R
+U+045E,R
+U+045F,R
+U+0460,R
+U+0461,R
+U+0462,R
+U+0463,R
+U+0464,R
+U+0465,R
+U+0466,R
+U+0467,R
+U+0468,R
+U+0469,R
+U+046A,R
+U+046B,R
+U+046C,R
+U+046D,R
+U+046E,R
+U+046F,R
+U+0470,R
+U+0471,R
+U+0472,R
+U+0473,R
+U+0474,R
+U+0475,R
+U+0476,R
+U+0477,R
+U+0478,R
+U+0479,R
+U+047A,R
+U+047B,R
+U+047C,R
+U+047D,R
+U+047E,R
+U+047F,R
+U+0480,R
+U+0481,R
+U+0482,R
+U+0483,R
+U+0484,R
+U+0485,R
+U+0486,R
+U+0487,R
+U+0488,R
+U+0489,R
+U+048A,R
+U+048B,R
+U+048C,R
+U+048D,R
+U+048E,R
+U+048F,R
+U+0490,R
+U+0491,R
+U+0492,R
+U+0493,R
+U+0494,R
+U+0495,R
+U+0496,R
+U+0497,R
+U+0498,R
+U+0499,R
+U+049A,R
+U+049B,R
+U+049C,R
+U+049D,R
+U+049E,R
+U+049F,R
+U+04A0,R
+U+04A1,R
+U+04A2,R
+U+04A3,R
+U+04A4,R
+U+04A5,R
+U+04A6,R
+U+04A7,R
+U+04A8,R
+U+04A9,R
+U+04AA,R
+U+04AB,R
+U+04AC,R
+U+04AD,R
+U+04AE,R
+U+04AF,R
+U+04B0,R
+U+04B1,R
+U+04B2,R
+U+04B3,R
+U+04B4,R
+U+04B5,R
+U+04B6,R
+U+04B7,R
+U+04B8,R
+U+04B9,R
+U+04BA,R
+U+04BB,R
+U+04BC,R
+U+04BD,R
+U+04BE,R
+U+04BF,R
+U+04C0,R
+U+04C1,R
+U+04C2,R
+U+04C3,R
+U+04C4,R
+U+04C5,R
+U+04C6,R
+U+04C7,R
+U+04C8,R
+U+04C9,R
+U+04CA,R
+U+04CB,R
+U+04CC,R
+U+04CD,R
+U+04CE,R
+U+04CF,R
+U+04D0,R
+U+04D1,R
+U+04D2,R
+U+04D3,R
+U+04D4,R
+U+04D5,R
+U+04D6,R
+U+04D7,R
+U+04D8,R
+U+04D9,R
+U+04DA,R
+U+04DB,R
+U+04DC,R
+U+04DD,R
+U+04DE,R
+U+04DF,R
+U+04E0,R
+U+04E1,R
+U+04E2,R
+U+04E3,R
+U+04E4,R
+U+04E5,R
+U+04E6,R
+U+04E7,R
+U+04E8,R
+U+04E9,R
+U+04EA,R
+U+04EB,R
+U+04EC,R
+U+04ED,R
+U+04EE,R
+U+04EF,R
+U+04F0,R
+U+04F1,R
+U+04F2,R
+U+04F3,R
+U+04F4,R
+U+04F5,R
+U+04F6,R
+U+04F7,R
+U+04F8,R
+U+04F9,R
+U+04FA,R
+U+04FB,R
+U+04FC,R
+U+04FD,R
+U+04FE,R
+U+04FF,R
+U+0500,R
+U+0501,R
+U+0502,R
+U+0503,R
+U+0504,R
+U+0505,R
+U+0506,R
+U+0507,R
+U+0508,R
+U+0509,R
+U+050A,R
+U+050B,R
+U+050C,R
+U+050D,R
+U+050E,R
+U+050F,R
+U+0510,R
+U+0511,R
+U+0512,R
+U+0513,R
+U+0514,R
+U+0515,R
+U+0516,R
+U+0517,R
+U+0518,R
+U+0519,R
+U+051A,R
+U+051B,R
+U+051C,R
+U+051D,R
+U+051E,R
+U+051F,R
+U+0520,R
+U+0521,R
+U+0522,R
+U+0523,R
+U+0524,R
+U+0525,R
+U+0526,R
+U+0527,R
+U+0531,R
+U+0532,R
+U+0533,R
+U+0534,R
+U+0535,R
+U+0536,R
+U+0537,R
+U+0538,R
+U+0539,R
+U+053A,R
+U+053B,R
+U+053C,R
+U+053D,R
+U+053E,R
+U+053F,R
+U+0540,R
+U+0541,R
+U+0542,R
+U+0543,R
+U+0544,R
+U+0545,R
+U+0546,R
+U+0547,R
+U+0548,R
+U+0549,R
+U+054A,R
+U+054B,R
+U+054C,R
+U+054D,R
+U+054E,R
+U+054F,R
+U+0550,R
+U+0551,R
+U+0552,R
+U+0553,R
+U+0554,R
+U+0555,R
+U+0556,R
+U+0559,R
+U+055A,R
+U+055B,R
+U+055C,R
+U+055D,R
+U+055E,R
+U+055F,R
+U+0561,R
+U+0562,R
+U+0563,R
+U+0564,R
+U+0565,R
+U+0566,R
+U+0567,R
+U+0568,R
+U+0569,R
+U+056A,R
+U+056B,R
+U+056C,R
+U+056D,R
+U+056E,R
+U+056F,R
+U+0570,R
+U+0571,R
+U+0572,R
+U+0573,R
+U+0574,R
+U+0575,R
+U+0576,R
+U+0577,R
+U+0578,R
+U+0579,R
+U+057A,R
+U+057B,R
+U+057C,R
+U+057D,R
+U+057E,R
+U+057F,R
+U+0580,R
+U+0581,R
+U+0582,R
+U+0583,R
+U+0584,R
+U+0585,R
+U+0586,R
+U+0587,R
+U+0589,R
+U+058A,R
+U+058F,R
+U+0591,R
+U+0592,R
+U+0593,R
+U+0594,R
+U+0595,R
+U+0596,R
+U+0597,R
+U+0598,R
+U+0599,R
+U+059A,R
+U+059B,R
+U+059C,R
+U+059D,R
+U+059E,R
+U+059F,R
+U+05A0,R
+U+05A1,R
+U+05A2,R
+U+05A3,R
+U+05A4,R
+U+05A5,R
+U+05A6,R
+U+05A7,R
+U+05A8,R
+U+05A9,R
+U+05AA,R
+U+05AB,R
+U+05AC,R
+U+05AD,R
+U+05AE,R
+U+05AF,R
+U+05B0,R
+U+05B1,R
+U+05B2,R
+U+05B3,R
+U+05B4,R
+U+05B5,R
+U+05B6,R
+U+05B7,R
+U+05B8,R
+U+05B9,R
+U+05BA,R
+U+05BB,R
+U+05BC,R
+U+05BD,R
+U+05BE,R
+U+05BF,R
+U+05C0,R
+U+05C1,R
+U+05C2,R
+U+05C3,R
+U+05C4,R
+U+05C5,R
+U+05C6,R
+U+05C7,R
+U+05D0,R
+U+05D1,R
+U+05D2,R
+U+05D3,R
+U+05D4,R
+U+05D5,R
+U+05D6,R
+U+05D7,R
+U+05D8,R
+U+05D9,R
+U+05DA,R
+U+05DB,R
+U+05DC,R
+U+05DD,R
+U+05DE,R
+U+05DF,R
+U+05E0,R
+U+05E1,R
+U+05E2,R
+U+05E3,R
+U+05E4,R
+U+05E5,R
+U+05E6,R
+U+05E7,R
+U+05E8,R
+U+05E9,R
+U+05EA,R
+U+05F0,R
+U+05F1,R
+U+05F2,R
+U+05F3,R
+U+05F4,R
+U+0600,R
+U+0601,R
+U+0602,R
+U+0603,R
+U+0604,R
+U+0606,R
+U+0607,R
+U+0608,R
+U+0609,R
+U+060A,R
+U+060B,R
+U+060C,R
+U+060D,R
+U+060E,R
+U+060F,R
+U+0610,R
+U+0611,R
+U+0612,R
+U+0613,R
+U+0614,R
+U+0615,R
+U+0616,R
+U+0617,R
+U+0618,R
+U+0619,R
+U+061A,R
+U+061B,R
+U+061E,R
+U+061F,R
+U+0620,R
+U+0621,R
+U+0622,R
+U+0623,R
+U+0624,R
+U+0625,R
+U+0626,R
+U+0627,R
+U+0628,R
+U+0629,R
+U+062A,R
+U+062B,R
+U+062C,R
+U+062D,R
+U+062E,R
+U+062F,R
+U+0630,R
+U+0631,R
+U+0632,R
+U+0633,R
+U+0634,R
+U+0635,R
+U+0636,R
+U+0637,R
+U+0638,R
+U+0639,R
+U+063A,R
+U+063B,R
+U+063C,R
+U+063D,R
+U+063E,R
+U+063F,R
+U+0640,R
+U+0641,R
+U+0642,R
+U+0643,R
+U+0644,R
+U+0645,R
+U+0646,R
+U+0647,R
+U+0648,R
+U+0649,R
+U+064A,R
+U+064B,R
+U+064C,R
+U+064D,R
+U+064E,R
+U+064F,R
+U+0650,R
+U+0651,R
+U+0652,R
+U+0653,R
+U+0654,R
+U+0655,R
+U+0656,R
+U+0657,R
+U+0658,R
+U+0659,R
+U+065A,R
+U+065B,R
+U+065C,R
+U+065D,R
+U+065E,R
+U+065F,R
+U+0660,R
+U+0661,R
+U+0662,R
+U+0663,R
+U+0664,R
+U+0665,R
+U+0666,R
+U+0667,R
+U+0668,R
+U+0669,R
+U+066A,R
+U+066B,R
+U+066C,R
+U+066D,R
+U+066E,R
+U+066F,R
+U+0670,R
+U+0671,R
+U+0672,R
+U+0673,R
+U+0674,R
+U+0675,R
+U+0676,R
+U+0677,R
+U+0678,R
+U+0679,R
+U+067A,R
+U+067B,R
+U+067C,R
+U+067D,R
+U+067E,R
+U+067F,R
+U+0680,R
+U+0681,R
+U+0682,R
+U+0683,R
+U+0684,R
+U+0685,R
+U+0686,R
+U+0687,R
+U+0688,R
+U+0689,R
+U+068A,R
+U+068B,R
+U+068C,R
+U+068D,R
+U+068E,R
+U+068F,R
+U+0690,R
+U+0691,R
+U+0692,R
+U+0693,R
+U+0694,R
+U+0695,R
+U+0696,R
+U+0697,R
+U+0698,R
+U+0699,R
+U+069A,R
+U+069B,R
+U+069C,R
+U+069D,R
+U+069E,R
+U+069F,R
+U+06A0,R
+U+06A1,R
+U+06A2,R
+U+06A3,R
+U+06A4,R
+U+06A5,R
+U+06A6,R
+U+06A7,R
+U+06A8,R
+U+06A9,R
+U+06AA,R
+U+06AB,R
+U+06AC,R
+U+06AD,R
+U+06AE,R
+U+06AF,R
+U+06B0,R
+U+06B1,R
+U+06B2,R
+U+06B3,R
+U+06B4,R
+U+06B5,R
+U+06B6,R
+U+06B7,R
+U+06B8,R
+U+06B9,R
+U+06BA,R
+U+06BB,R
+U+06BC,R
+U+06BD,R
+U+06BE,R
+U+06BF,R
+U+06C0,R
+U+06C1,R
+U+06C2,R
+U+06C3,R
+U+06C4,R
+U+06C5,R
+U+06C6,R
+U+06C7,R
+U+06C8,R
+U+06C9,R
+U+06CA,R
+U+06CB,R
+U+06CC,R
+U+06CD,R
+U+06CE,R
+U+06CF,R
+U+06D0,R
+U+06D1,R
+U+06D2,R
+U+06D3,R
+U+06D4,R
+U+06D5,R
+U+06D6,R
+U+06D7,R
+U+06D8,R
+U+06D9,R
+U+06DA,R
+U+06DB,R
+U+06DC,R
+U+06DD,R
+U+06DE,R
+U+06DF,R
+U+06E0,R
+U+06E1,R
+U+06E2,R
+U+06E3,R
+U+06E4,R
+U+06E5,R
+U+06E6,R
+U+06E7,R
+U+06E8,R
+U+06E9,R
+U+06EA,R
+U+06EB,R
+U+06EC,R
+U+06ED,R
+U+06EE,R
+U+06EF,R
+U+06F0,R
+U+06F1,R
+U+06F2,R
+U+06F3,R
+U+06F4,R
+U+06F5,R
+U+06F6,R
+U+06F7,R
+U+06F8,R
+U+06F9,R
+U+06FA,R
+U+06FB,R
+U+06FC,R
+U+06FD,R
+U+06FE,R
+U+06FF,R
+U+0700,R
+U+0701,R
+U+0702,R
+U+0703,R
+U+0704,R
+U+0705,R
+U+0706,R
+U+0707,R
+U+0708,R
+U+0709,R
+U+070A,R
+U+070B,R
+U+070C,R
+U+070D,R
+U+070F,R
+U+0710,R
+U+0711,R
+U+0712,R
+U+0713,R
+U+0714,R
+U+0715,R
+U+0716,R
+U+0717,R
+U+0718,R
+U+0719,R
+U+071A,R
+U+071B,R
+U+071C,R
+U+071D,R
+U+071E,R
+U+071F,R
+U+0720,R
+U+0721,R
+U+0722,R
+U+0723,R
+U+0724,R
+U+0725,R
+U+0726,R
+U+0727,R
+U+0728,R
+U+0729,R
+U+072A,R
+U+072B,R
+U+072C,R
+U+072D,R
+U+072E,R
+U+072F,R
+U+0730,R
+U+0731,R
+U+0732,R
+U+0733,R
+U+0734,R
+U+0735,R
+U+0736,R
+U+0737,R
+U+0738,R
+U+0739,R
+U+073A,R
+U+073B,R
+U+073C,R
+U+073D,R
+U+073E,R
+U+073F,R
+U+0740,R
+U+0741,R
+U+0742,R
+U+0743,R
+U+0744,R
+U+0745,R
+U+0746,R
+U+0747,R
+U+0748,R
+U+0749,R
+U+074A,R
+U+074D,R
+U+074E,R
+U+074F,R
+U+0750,R
+U+0751,R
+U+0752,R
+U+0753,R
+U+0754,R
+U+0755,R
+U+0756,R
+U+0757,R
+U+0758,R
+U+0759,R
+U+075A,R
+U+075B,R
+U+075C,R
+U+075D,R
+U+075E,R
+U+075F,R
+U+0760,R
+U+0761,R
+U+0762,R
+U+0763,R
+U+0764,R
+U+0765,R
+U+0766,R
+U+0767,R
+U+0768,R
+U+0769,R
+U+076A,R
+U+076B,R
+U+076C,R
+U+076D,R
+U+076E,R
+U+076F,R
+U+0770,R
+U+0771,R
+U+0772,R
+U+0773,R
+U+0774,R
+U+0775,R
+U+0776,R
+U+0777,R
+U+0778,R
+U+0779,R
+U+077A,R
+U+077B,R
+U+077C,R
+U+077D,R
+U+077E,R
+U+077F,R
+U+0780,R
+U+0781,R
+U+0782,R
+U+0783,R
+U+0784,R
+U+0785,R
+U+0786,R
+U+0787,R
+U+0788,R
+U+0789,R
+U+078A,R
+U+078B,R
+U+078C,R
+U+078D,R
+U+078E,R
+U+078F,R
+U+0790,R
+U+0791,R
+U+0792,R
+U+0793,R
+U+0794,R
+U+0795,R
+U+0796,R
+U+0797,R
+U+0798,R
+U+0799,R
+U+079A,R
+U+079B,R
+U+079C,R
+U+079D,R
+U+079E,R
+U+079F,R
+U+07A0,R
+U+07A1,R
+U+07A2,R
+U+07A3,R
+U+07A4,R
+U+07A5,R
+U+07A6,R
+U+07A7,R
+U+07A8,R
+U+07A9,R
+U+07AA,R
+U+07AB,R
+U+07AC,R
+U+07AD,R
+U+07AE,R
+U+07AF,R
+U+07B0,R
+U+07B1,R
+U+07C0,R
+U+07C1,R
+U+07C2,R
+U+07C3,R
+U+07C4,R
+U+07C5,R
+U+07C6,R
+U+07C7,R
+U+07C8,R
+U+07C9,R
+U+07CA,R
+U+07CB,R
+U+07CC,R
+U+07CD,R
+U+07CE,R
+U+07CF,R
+U+07D0,R
+U+07D1,R
+U+07D2,R
+U+07D3,R
+U+07D4,R
+U+07D5,R
+U+07D6,R
+U+07D7,R
+U+07D8,R
+U+07D9,R
+U+07DA,R
+U+07DB,R
+U+07DC,R
+U+07DD,R
+U+07DE,R
+U+07DF,R
+U+07E0,R
+U+07E1,R
+U+07E2,R
+U+07E3,R
+U+07E4,R
+U+07E5,R
+U+07E6,R
+U+07E7,R
+U+07E8,R
+U+07E9,R
+U+07EA,R
+U+07EB,R
+U+07EC,R
+U+07ED,R
+U+07EE,R
+U+07EF,R
+U+07F0,R
+U+07F1,R
+U+07F2,R
+U+07F3,R
+U+07F4,R
+U+07F5,R
+U+07F6,R
+U+07F7,R
+U+07F8,R
+U+07F9,R
+U+07FA,R
+U+0800,R
+U+0801,R
+U+0802,R
+U+0803,R
+U+0804,R
+U+0805,R
+U+0806,R
+U+0807,R
+U+0808,R
+U+0809,R
+U+080A,R
+U+080B,R
+U+080C,R
+U+080D,R
+U+080E,R
+U+080F,R
+U+0810,R
+U+0811,R
+U+0812,R
+U+0813,R
+U+0814,R
+U+0815,R
+U+0816,R
+U+0817,R
+U+0818,R
+U+0819,R
+U+081A,R
+U+081B,R
+U+081C,R
+U+081D,R
+U+081E,R
+U+081F,R
+U+0820,R
+U+0821,R
+U+0822,R
+U+0823,R
+U+0824,R
+U+0825,R
+U+0826,R
+U+0827,R
+U+0828,R
+U+0829,R
+U+082A,R
+U+082B,R
+U+082C,R
+U+082D,R
+U+0830,R
+U+0831,R
+U+0832,R
+U+0833,R
+U+0834,R
+U+0835,R
+U+0836,R
+U+0837,R
+U+0838,R
+U+0839,R
+U+083A,R
+U+083B,R
+U+083C,R
+U+083D,R
+U+083E,R
+U+0840,R
+U+0841,R
+U+0842,R
+U+0843,R
+U+0844,R
+U+0845,R
+U+0846,R
+U+0847,R
+U+0848,R
+U+0849,R
+U+084A,R
+U+084B,R
+U+084C,R
+U+084D,R
+U+084E,R
+U+084F,R
+U+0850,R
+U+0851,R
+U+0852,R
+U+0853,R
+U+0854,R
+U+0855,R
+U+0856,R
+U+0857,R
+U+0858,R
+U+0859,R
+U+085A,R
+U+085B,R
+U+085E,R
+U+08A0,R
+U+08A2,R
+U+08A3,R
+U+08A4,R
+U+08A5,R
+U+08A6,R
+U+08A7,R
+U+08A8,R
+U+08A9,R
+U+08AA,R
+U+08AB,R
+U+08AC,R
+U+08E4,R
+U+08E5,R
+U+08E6,R
+U+08E7,R
+U+08E8,R
+U+08E9,R
+U+08EA,R
+U+08EB,R
+U+08EC,R
+U+08ED,R
+U+08EE,R
+U+08EF,R
+U+08F0,R
+U+08F1,R
+U+08F2,R
+U+08F3,R
+U+08F4,R
+U+08F5,R
+U+08F6,R
+U+08F7,R
+U+08F8,R
+U+08F9,R
+U+08FA,R
+U+08FB,R
+U+08FC,R
+U+08FD,R
+U+08FE,R
+U+0900,R
+U+0901,R
+U+0902,R
+U+0903,R
+U+0904,R
+U+0905,R
+U+0906,R
+U+0907,R
+U+0908,R
+U+0909,R
+U+090A,R
+U+090B,R
+U+090C,R
+U+090D,R
+U+090E,R
+U+090F,R
+U+0910,R
+U+0911,R
+U+0912,R
+U+0913,R
+U+0914,R
+U+0915,R
+U+0916,R
+U+0917,R
+U+0918,R
+U+0919,R
+U+091A,R
+U+091B,R
+U+091C,R
+U+091D,R
+U+091E,R
+U+091F,R
+U+0920,R
+U+0921,R
+U+0922,R
+U+0923,R
+U+0924,R
+U+0925,R
+U+0926,R
+U+0927,R
+U+0928,R
+U+0929,R
+U+092A,R
+U+092B,R
+U+092C,R
+U+092D,R
+U+092E,R
+U+092F,R
+U+0930,R
+U+0931,R
+U+0932,R
+U+0933,R
+U+0934,R
+U+0935,R
+U+0936,R
+U+0937,R
+U+0938,R
+U+0939,R
+U+093A,R
+U+093B,R
+U+093C,R
+U+093D,R
+U+093E,R
+U+093F,R
+U+0940,R
+U+0941,R
+U+0942,R
+U+0943,R
+U+0944,R
+U+0945,R
+U+0946,R
+U+0947,R
+U+0948,R
+U+0949,R
+U+094A,R
+U+094B,R
+U+094C,R
+U+094D,R
+U+094E,R
+U+094F,R
+U+0950,R
+U+0951,R
+U+0952,R
+U+0953,R
+U+0954,R
+U+0955,R
+U+0956,R
+U+0957,R
+U+0958,R
+U+0959,R
+U+095A,R
+U+095B,R
+U+095C,R
+U+095D,R
+U+095E,R
+U+095F,R
+U+0960,R
+U+0961,R
+U+0962,R
+U+0963,R
+U+0964,R
+U+0965,R
+U+0966,R
+U+0967,R
+U+0968,R
+U+0969,R
+U+096A,R
+U+096B,R
+U+096C,R
+U+096D,R
+U+096E,R
+U+096F,R
+U+0970,R
+U+0971,R
+U+0972,R
+U+0973,R
+U+0974,R
+U+0975,R
+U+0976,R
+U+0977,R
+U+0979,R
+U+097A,R
+U+097B,R
+U+097C,R
+U+097D,R
+U+097E,R
+U+097F,R
+U+0981,R
+U+0982,R
+U+0983,R
+U+0985,R
+U+0986,R
+U+0987,R
+U+0988,R
+U+0989,R
+U+098A,R
+U+098B,R
+U+098C,R
+U+098F,R
+U+0990,R
+U+0993,R
+U+0994,R
+U+0995,R
+U+0996,R
+U+0997,R
+U+0998,R
+U+0999,R
+U+099A,R
+U+099B,R
+U+099C,R
+U+099D,R
+U+099E,R
+U+099F,R
+U+09A0,R
+U+09A1,R
+U+09A2,R
+U+09A3,R
+U+09A4,R
+U+09A5,R
+U+09A6,R
+U+09A7,R
+U+09A8,R
+U+09AA,R
+U+09AB,R
+U+09AC,R
+U+09AD,R
+U+09AE,R
+U+09AF,R
+U+09B0,R
+U+09B2,R
+U+09B6,R
+U+09B7,R
+U+09B8,R
+U+09B9,R
+U+09BC,R
+U+09BD,R
+U+09BE,R
+U+09BF,R
+U+09C0,R
+U+09C1,R
+U+09C2,R
+U+09C3,R
+U+09C4,R
+U+09C7,R
+U+09C8,R
+U+09CB,R
+U+09CC,R
+U+09CD,R
+U+09CE,R
+U+09D7,R
+U+09DC,R
+U+09DD,R
+U+09DF,R
+U+09E0,R
+U+09E1,R
+U+09E2,R
+U+09E3,R
+U+09E6,R
+U+09E7,R
+U+09E8,R
+U+09E9,R
+U+09EA,R
+U+09EB,R
+U+09EC,R
+U+09ED,R
+U+09EE,R
+U+09EF,R
+U+09F0,R
+U+09F1,R
+U+09F2,R
+U+09F3,R
+U+09F4,R
+U+09F5,R
+U+09F6,R
+U+09F7,R
+U+09F8,R
+U+09F9,R
+U+09FA,R
+U+09FB,R
+U+0A01,R
+U+0A02,R
+U+0A03,R
+U+0A05,R
+U+0A06,R
+U+0A07,R
+U+0A08,R
+U+0A09,R
+U+0A0A,R
+U+0A0F,R
+U+0A10,R
+U+0A13,R
+U+0A14,R
+U+0A15,R
+U+0A16,R
+U+0A17,R
+U+0A18,R
+U+0A19,R
+U+0A1A,R
+U+0A1B,R
+U+0A1C,R
+U+0A1D,R
+U+0A1E,R
+U+0A1F,R
+U+0A20,R
+U+0A21,R
+U+0A22,R
+U+0A23,R
+U+0A24,R
+U+0A25,R
+U+0A26,R
+U+0A27,R
+U+0A28,R
+U+0A2A,R
+U+0A2B,R
+U+0A2C,R
+U+0A2D,R
+U+0A2E,R
+U+0A2F,R
+U+0A30,R
+U+0A32,R
+U+0A33,R
+U+0A35,R
+U+0A36,R
+U+0A38,R
+U+0A39,R
+U+0A3C,R
+U+0A3E,R
+U+0A3F,R
+U+0A40,R
+U+0A41,R
+U+0A42,R
+U+0A47,R
+U+0A48,R
+U+0A4B,R
+U+0A4C,R
+U+0A4D,R
+U+0A51,R
+U+0A59,R
+U+0A5A,R
+U+0A5B,R
+U+0A5C,R
+U+0A5E,R
+U+0A66,R
+U+0A67,R
+U+0A68,R
+U+0A69,R
+U+0A6A,R
+U+0A6B,R
+U+0A6C,R
+U+0A6D,R
+U+0A6E,R
+U+0A6F,R
+U+0A70,R
+U+0A71,R
+U+0A72,R
+U+0A73,R
+U+0A74,R
+U+0A75,R
+U+0A81,R
+U+0A82,R
+U+0A83,R
+U+0A85,R
+U+0A86,R
+U+0A87,R
+U+0A88,R
+U+0A89,R
+U+0A8A,R
+U+0A8B,R
+U+0A8C,R
+U+0A8D,R
+U+0A8F,R
+U+0A90,R
+U+0A91,R
+U+0A93,R
+U+0A94,R
+U+0A95,R
+U+0A96,R
+U+0A97,R
+U+0A98,R
+U+0A99,R
+U+0A9A,R
+U+0A9B,R
+U+0A9C,R
+U+0A9D,R
+U+0A9E,R
+U+0A9F,R
+U+0AA0,R
+U+0AA1,R
+U+0AA2,R
+U+0AA3,R
+U+0AA4,R
+U+0AA5,R
+U+0AA6,R
+U+0AA7,R
+U+0AA8,R
+U+0AAA,R
+U+0AAB,R
+U+0AAC,R
+U+0AAD,R
+U+0AAE,R
+U+0AAF,R
+U+0AB0,R
+U+0AB2,R
+U+0AB3,R
+U+0AB5,R
+U+0AB6,R
+U+0AB7,R
+U+0AB8,R
+U+0AB9,R
+U+0ABC,R
+U+0ABD,R
+U+0ABE,R
+U+0ABF,R
+U+0AC0,R
+U+0AC1,R
+U+0AC2,R
+U+0AC3,R
+U+0AC4,R
+U+0AC5,R
+U+0AC7,R
+U+0AC8,R
+U+0AC9,R
+U+0ACB,R
+U+0ACC,R
+U+0ACD,R
+U+0AD0,R
+U+0AE0,R
+U+0AE1,R
+U+0AE2,R
+U+0AE3,R
+U+0AE6,R
+U+0AE7,R
+U+0AE8,R
+U+0AE9,R
+U+0AEA,R
+U+0AEB,R
+U+0AEC,R
+U+0AED,R
+U+0AEE,R
+U+0AEF,R
+U+0AF0,R
+U+0AF1,R
+U+0B01,R
+U+0B02,R
+U+0B03,R
+U+0B05,R
+U+0B06,R
+U+0B07,R
+U+0B08,R
+U+0B09,R
+U+0B0A,R
+U+0B0B,R
+U+0B0C,R
+U+0B0F,R
+U+0B10,R
+U+0B13,R
+U+0B14,R
+U+0B15,R
+U+0B16,R
+U+0B17,R
+U+0B18,R
+U+0B19,R
+U+0B1A,R
+U+0B1B,R
+U+0B1C,R
+U+0B1D,R
+U+0B1E,R
+U+0B1F,R
+U+0B20,R
+U+0B21,R
+U+0B22,R
+U+0B23,R
+U+0B24,R
+U+0B25,R
+U+0B26,R
+U+0B27,R
+U+0B28,R
+U+0B2A,R
+U+0B2B,R
+U+0B2C,R
+U+0B2D,R
+U+0B2E,R
+U+0B2F,R
+U+0B30,R
+U+0B32,R
+U+0B33,R
+U+0B35,R
+U+0B36,R
+U+0B37,R
+U+0B38,R
+U+0B39,R
+U+0B3C,R
+U+0B3D,R
+U+0B3E,R
+U+0B3F,R
+U+0B40,R
+U+0B41,R
+U+0B42,R
+U+0B43,R
+U+0B44,R
+U+0B47,R
+U+0B48,R
+U+0B4B,R
+U+0B4C,R
+U+0B4D,R
+U+0B56,R
+U+0B57,R
+U+0B5C,R
+U+0B5D,R
+U+0B5F,R
+U+0B60,R
+U+0B61,R
+U+0B62,R
+U+0B63,R
+U+0B66,R
+U+0B67,R
+U+0B68,R
+U+0B69,R
+U+0B6A,R
+U+0B6B,R
+U+0B6C,R
+U+0B6D,R
+U+0B6E,R
+U+0B6F,R
+U+0B70,R
+U+0B71,R
+U+0B72,R
+U+0B73,R
+U+0B74,R
+U+0B75,R
+U+0B76,R
+U+0B77,R
+U+0B82,R
+U+0B83,R
+U+0B85,R
+U+0B86,R
+U+0B87,R
+U+0B88,R
+U+0B89,R
+U+0B8A,R
+U+0B8E,R
+U+0B8F,R
+U+0B90,R
+U+0B92,R
+U+0B93,R
+U+0B94,R
+U+0B95,R
+U+0B99,R
+U+0B9A,R
+U+0B9C,R
+U+0B9E,R
+U+0B9F,R
+U+0BA3,R
+U+0BA4,R
+U+0BA8,R
+U+0BA9,R
+U+0BAA,R
+U+0BAE,R
+U+0BAF,R
+U+0BB0,R
+U+0BB1,R
+U+0BB2,R
+U+0BB3,R
+U+0BB4,R
+U+0BB5,R
+U+0BB6,R
+U+0BB7,R
+U+0BB8,R
+U+0BB9,R
+U+0BBE,R
+U+0BBF,R
+U+0BC0,R
+U+0BC1,R
+U+0BC2,R
+U+0BC6,R
+U+0BC7,R
+U+0BC8,R
+U+0BCA,R
+U+0BCB,R
+U+0BCC,R
+U+0BCD,R
+U+0BD0,R
+U+0BD7,R
+U+0BE6,R
+U+0BE7,R
+U+0BE8,R
+U+0BE9,R
+U+0BEA,R
+U+0BEB,R
+U+0BEC,R
+U+0BED,R
+U+0BEE,R
+U+0BEF,R
+U+0BF0,R
+U+0BF1,R
+U+0BF2,R
+U+0BF3,R
+U+0BF4,R
+U+0BF5,R
+U+0BF6,R
+U+0BF7,R
+U+0BF8,R
+U+0BF9,R
+U+0BFA,R
+U+0C01,R
+U+0C02,R
+U+0C03,R
+U+0C05,R
+U+0C06,R
+U+0C07,R
+U+0C08,R
+U+0C09,R
+U+0C0A,R
+U+0C0B,R
+U+0C0C,R
+U+0C0E,R
+U+0C0F,R
+U+0C10,R
+U+0C12,R
+U+0C13,R
+U+0C14,R
+U+0C15,R
+U+0C16,R
+U+0C17,R
+U+0C18,R
+U+0C19,R
+U+0C1A,R
+U+0C1B,R
+U+0C1C,R
+U+0C1D,R
+U+0C1E,R
+U+0C1F,R
+U+0C20,R
+U+0C21,R
+U+0C22,R
+U+0C23,R
+U+0C24,R
+U+0C25,R
+U+0C26,R
+U+0C27,R
+U+0C28,R
+U+0C2A,R
+U+0C2B,R
+U+0C2C,R
+U+0C2D,R
+U+0C2E,R
+U+0C2F,R
+U+0C30,R
+U+0C31,R
+U+0C32,R
+U+0C33,R
+U+0C35,R
+U+0C36,R
+U+0C37,R
+U+0C38,R
+U+0C39,R
+U+0C3D,R
+U+0C3E,R
+U+0C3F,R
+U+0C40,R
+U+0C41,R
+U+0C42,R
+U+0C43,R
+U+0C44,R
+U+0C46,R
+U+0C47,R
+U+0C48,R
+U+0C4A,R
+U+0C4B,R
+U+0C4C,R
+U+0C4D,R
+U+0C55,R
+U+0C56,R
+U+0C58,R
+U+0C59,R
+U+0C60,R
+U+0C61,R
+U+0C62,R
+U+0C63,R
+U+0C66,R
+U+0C67,R
+U+0C68,R
+U+0C69,R
+U+0C6A,R
+U+0C6B,R
+U+0C6C,R
+U+0C6D,R
+U+0C6E,R
+U+0C6F,R
+U+0C78,R
+U+0C79,R
+U+0C7A,R
+U+0C7B,R
+U+0C7C,R
+U+0C7D,R
+U+0C7E,R
+U+0C7F,R
+U+0C82,R
+U+0C83,R
+U+0C85,R
+U+0C86,R
+U+0C87,R
+U+0C88,R
+U+0C89,R
+U+0C8A,R
+U+0C8B,R
+U+0C8C,R
+U+0C8E,R
+U+0C8F,R
+U+0C90,R
+U+0C92,R
+U+0C93,R
+U+0C94,R
+U+0C95,R
+U+0C96,R
+U+0C97,R
+U+0C98,R
+U+0C99,R
+U+0C9A,R
+U+0C9B,R
+U+0C9C,R
+U+0C9D,R
+U+0C9E,R
+U+0C9F,R
+U+0CA0,R
+U+0CA1,R
+U+0CA2,R
+U+0CA3,R
+U+0CA4,R
+U+0CA5,R
+U+0CA6,R
+U+0CA7,R
+U+0CA8,R
+U+0CAA,R
+U+0CAB,R
+U+0CAC,R
+U+0CAD,R
+U+0CAE,R
+U+0CAF,R
+U+0CB0,R
+U+0CB1,R
+U+0CB2,R
+U+0CB3,R
+U+0CB5,R
+U+0CB6,R
+U+0CB7,R
+U+0CB8,R
+U+0CB9,R
+U+0CBC,R
+U+0CBD,R
+U+0CBE,R
+U+0CBF,R
+U+0CC0,R
+U+0CC1,R
+U+0CC2,R
+U+0CC3,R
+U+0CC4,R
+U+0CC6,R
+U+0CC7,R
+U+0CC8,R
+U+0CCA,R
+U+0CCB,R
+U+0CCC,R
+U+0CCD,R
+U+0CD5,R
+U+0CD6,R
+U+0CDE,R
+U+0CE0,R
+U+0CE1,R
+U+0CE2,R
+U+0CE3,R
+U+0CE6,R
+U+0CE7,R
+U+0CE8,R
+U+0CE9,R
+U+0CEA,R
+U+0CEB,R
+U+0CEC,R
+U+0CED,R
+U+0CEE,R
+U+0CEF,R
+U+0CF1,R
+U+0CF2,R
+U+0D02,R
+U+0D03,R
+U+0D05,R
+U+0D06,R
+U+0D07,R
+U+0D08,R
+U+0D09,R
+U+0D0A,R
+U+0D0B,R
+U+0D0C,R
+U+0D0E,R
+U+0D0F,R
+U+0D10,R
+U+0D12,R
+U+0D13,R
+U+0D14,R
+U+0D15,R
+U+0D16,R
+U+0D17,R
+U+0D18,R
+U+0D19,R
+U+0D1A,R
+U+0D1B,R
+U+0D1C,R
+U+0D1D,R
+U+0D1E,R
+U+0D1F,R
+U+0D20,R
+U+0D21,R
+U+0D22,R
+U+0D23,R
+U+0D24,R
+U+0D25,R
+U+0D26,R
+U+0D27,R
+U+0D28,R
+U+0D29,R
+U+0D2A,R
+U+0D2B,R
+U+0D2C,R
+U+0D2D,R
+U+0D2E,R
+U+0D2F,R
+U+0D30,R
+U+0D31,R
+U+0D32,R
+U+0D33,R
+U+0D34,R
+U+0D35,R
+U+0D36,R
+U+0D37,R
+U+0D38,R
+U+0D39,R
+U+0D3A,R
+U+0D3D,R
+U+0D3E,R
+U+0D3F,R
+U+0D40,R
+U+0D41,R
+U+0D42,R
+U+0D43,R
+U+0D44,R
+U+0D46,R
+U+0D47,R
+U+0D48,R
+U+0D4A,R
+U+0D4B,R
+U+0D4C,R
+U+0D4D,R
+U+0D4E,R
+U+0D57,R
+U+0D60,R
+U+0D61,R
+U+0D62,R
+U+0D63,R
+U+0D66,R
+U+0D67,R
+U+0D68,R
+U+0D69,R
+U+0D6A,R
+U+0D6B,R
+U+0D6C,R
+U+0D6D,R
+U+0D6E,R
+U+0D6F,R
+U+0D70,R
+U+0D71,R
+U+0D72,R
+U+0D73,R
+U+0D74,R
+U+0D75,R
+U+0D79,R
+U+0D7A,R
+U+0D7B,R
+U+0D7C,R
+U+0D7D,R
+U+0D7E,R
+U+0D7F,R
+U+0D82,R
+U+0D83,R
+U+0D85,R
+U+0D86,R
+U+0D87,R
+U+0D88,R
+U+0D89,R
+U+0D8A,R
+U+0D8B,R
+U+0D8C,R
+U+0D8D,R
+U+0D8E,R
+U+0D8F,R
+U+0D90,R
+U+0D91,R
+U+0D92,R
+U+0D93,R
+U+0D94,R
+U+0D95,R
+U+0D96,R
+U+0D9A,R
+U+0D9B,R
+U+0D9C,R
+U+0D9D,R
+U+0D9E,R
+U+0D9F,R
+U+0DA0,R
+U+0DA1,R
+U+0DA2,R
+U+0DA3,R
+U+0DA4,R
+U+0DA5,R
+U+0DA6,R
+U+0DA7,R
+U+0DA8,R
+U+0DA9,R
+U+0DAA,R
+U+0DAB,R
+U+0DAC,R
+U+0DAD,R
+U+0DAE,R
+U+0DAF,R
+U+0DB0,R
+U+0DB1,R
+U+0DB3,R
+U+0DB4,R
+U+0DB5,R
+U+0DB6,R
+U+0DB7,R
+U+0DB8,R
+U+0DB9,R
+U+0DBA,R
+U+0DBB,R
+U+0DBD,R
+U+0DC0,R
+U+0DC1,R
+U+0DC2,R
+U+0DC3,R
+U+0DC4,R
+U+0DC5,R
+U+0DC6,R
+U+0DCA,R
+U+0DCF,R
+U+0DD0,R
+U+0DD1,R
+U+0DD2,R
+U+0DD3,R
+U+0DD4,R
+U+0DD6,R
+U+0DD8,R
+U+0DD9,R
+U+0DDA,R
+U+0DDB,R
+U+0DDC,R
+U+0DDD,R
+U+0DDE,R
+U+0DDF,R
+U+0DF2,R
+U+0DF3,R
+U+0DF4,R
+U+0E01,R
+U+0E02,R
+U+0E03,R
+U+0E04,R
+U+0E05,R
+U+0E06,R
+U+0E07,R
+U+0E08,R
+U+0E09,R
+U+0E0A,R
+U+0E0B,R
+U+0E0C,R
+U+0E0D,R
+U+0E0E,R
+U+0E0F,R
+U+0E10,R
+U+0E11,R
+U+0E12,R
+U+0E13,R
+U+0E14,R
+U+0E15,R
+U+0E16,R
+U+0E17,R
+U+0E18,R
+U+0E19,R
+U+0E1A,R
+U+0E1B,R
+U+0E1C,R
+U+0E1D,R
+U+0E1E,R
+U+0E1F,R
+U+0E20,R
+U+0E21,R
+U+0E22,R
+U+0E23,R
+U+0E24,R
+U+0E25,R
+U+0E26,R
+U+0E27,R
+U+0E28,R
+U+0E29,R
+U+0E2A,R
+U+0E2B,R
+U+0E2C,R
+U+0E2D,R
+U+0E2E,R
+U+0E2F,R
+U+0E30,R
+U+0E31,R
+U+0E32,R
+U+0E33,R
+U+0E34,R
+U+0E35,R
+U+0E36,R
+U+0E37,R
+U+0E38,R
+U+0E39,R
+U+0E3A,R
+U+0E3F,R
+U+0E40,R
+U+0E41,R
+U+0E42,R
+U+0E43,R
+U+0E44,R
+U+0E45,R
+U+0E46,R
+U+0E47,R
+U+0E48,R
+U+0E49,R
+U+0E4A,R
+U+0E4B,R
+U+0E4C,R
+U+0E4D,R
+U+0E4E,R
+U+0E4F,R
+U+0E50,R
+U+0E51,R
+U+0E52,R
+U+0E53,R
+U+0E54,R
+U+0E55,R
+U+0E56,R
+U+0E57,R
+U+0E58,R
+U+0E59,R
+U+0E5A,R
+U+0E5B,R
+U+0E81,R
+U+0E82,R
+U+0E84,R
+U+0E87,R
+U+0E88,R
+U+0E8A,R
+U+0E8D,R
+U+0E94,R
+U+0E95,R
+U+0E96,R
+U+0E97,R
+U+0E99,R
+U+0E9A,R
+U+0E9B,R
+U+0E9C,R
+U+0E9D,R
+U+0E9E,R
+U+0E9F,R
+U+0EA1,R
+U+0EA2,R
+U+0EA3,R
+U+0EA5,R
+U+0EA7,R
+U+0EAA,R
+U+0EAB,R
+U+0EAD,R
+U+0EAE,R
+U+0EAF,R
+U+0EB0,R
+U+0EB1,R
+U+0EB2,R
+U+0EB3,R
+U+0EB4,R
+U+0EB5,R
+U+0EB6,R
+U+0EB7,R
+U+0EB8,R
+U+0EB9,R
+U+0EBB,R
+U+0EBC,R
+U+0EBD,R
+U+0EC0,R
+U+0EC1,R
+U+0EC2,R
+U+0EC3,R
+U+0EC4,R
+U+0EC6,R
+U+0EC8,R
+U+0EC9,R
+U+0ECA,R
+U+0ECB,R
+U+0ECC,R
+U+0ECD,R
+U+0ED0,R
+U+0ED1,R
+U+0ED2,R
+U+0ED3,R
+U+0ED4,R
+U+0ED5,R
+U+0ED6,R
+U+0ED7,R
+U+0ED8,R
+U+0ED9,R
+U+0EDC,R
+U+0EDD,R
+U+0EDE,R
+U+0EDF,R
+U+0F00,R
+U+0F01,R
+U+0F02,R
+U+0F03,R
+U+0F04,R
+U+0F05,R
+U+0F06,R
+U+0F07,R
+U+0F08,R
+U+0F09,R
+U+0F0A,R
+U+0F0B,R
+U+0F0C,R
+U+0F0D,R
+U+0F0E,R
+U+0F0F,R
+U+0F10,R
+U+0F11,R
+U+0F12,R
+U+0F13,R
+U+0F14,R
+U+0F15,R
+U+0F16,R
+U+0F17,R
+U+0F18,R
+U+0F19,R
+U+0F1A,R
+U+0F1B,R
+U+0F1C,R
+U+0F1D,R
+U+0F1E,R
+U+0F1F,R
+U+0F20,R
+U+0F21,R
+U+0F22,R
+U+0F23,R
+U+0F24,R
+U+0F25,R
+U+0F26,R
+U+0F27,R
+U+0F28,R
+U+0F29,R
+U+0F2A,R
+U+0F2B,R
+U+0F2C,R
+U+0F2D,R
+U+0F2E,R
+U+0F2F,R
+U+0F30,R
+U+0F31,R
+U+0F32,R
+U+0F33,R
+U+0F34,R
+U+0F35,R
+U+0F36,R
+U+0F37,R
+U+0F38,R
+U+0F39,R
+U+0F3A,R
+U+0F3B,R
+U+0F3C,R
+U+0F3D,R
+U+0F3E,R
+U+0F3F,R
+U+0F40,R
+U+0F41,R
+U+0F42,R
+U+0F43,R
+U+0F44,R
+U+0F45,R
+U+0F46,R
+U+0F47,R
+U+0F49,R
+U+0F4A,R
+U+0F4B,R
+U+0F4C,R
+U+0F4D,R
+U+0F4E,R
+U+0F4F,R
+U+0F50,R
+U+0F51,R
+U+0F52,R
+U+0F53,R
+U+0F54,R
+U+0F55,R
+U+0F56,R
+U+0F57,R
+U+0F58,R
+U+0F59,R
+U+0F5A,R
+U+0F5B,R
+U+0F5C,R
+U+0F5D,R
+U+0F5E,R
+U+0F5F,R
+U+0F60,R
+U+0F61,R
+U+0F62,R
+U+0F63,R
+U+0F64,R
+U+0F65,R
+U+0F66,R
+U+0F67,R
+U+0F68,R
+U+0F69,R
+U+0F6A,R
+U+0F6B,R
+U+0F6C,R
+U+0F71,R
+U+0F72,R
+U+0F73,R
+U+0F74,R
+U+0F75,R
+U+0F76,R
+U+0F77,R
+U+0F78,R
+U+0F79,R
+U+0F7A,R
+U+0F7B,R
+U+0F7C,R
+U+0F7D,R
+U+0F7E,R
+U+0F7F,R
+U+0F80,R
+U+0F81,R
+U+0F82,R
+U+0F83,R
+U+0F84,R
+U+0F85,R
+U+0F86,R
+U+0F87,R
+U+0F88,R
+U+0F89,R
+U+0F8A,R
+U+0F8B,R
+U+0F8C,R
+U+0F8D,R
+U+0F8E,R
+U+0F8F,R
+U+0F90,R
+U+0F91,R
+U+0F92,R
+U+0F93,R
+U+0F94,R
+U+0F95,R
+U+0F96,R
+U+0F97,R
+U+0F99,R
+U+0F9A,R
+U+0F9B,R
+U+0F9C,R
+U+0F9D,R
+U+0F9E,R
+U+0F9F,R
+U+0FA0,R
+U+0FA1,R
+U+0FA2,R
+U+0FA3,R
+U+0FA4,R
+U+0FA5,R
+U+0FA6,R
+U+0FA7,R
+U+0FA8,R
+U+0FA9,R
+U+0FAA,R
+U+0FAB,R
+U+0FAC,R
+U+0FAD,R
+U+0FAE,R
+U+0FAF,R
+U+0FB0,R
+U+0FB1,R
+U+0FB2,R
+U+0FB3,R
+U+0FB4,R
+U+0FB5,R
+U+0FB6,R
+U+0FB7,R
+U+0FB8,R
+U+0FB9,R
+U+0FBA,R
+U+0FBB,R
+U+0FBC,R
+U+0FBE,R
+U+0FBF,R
+U+0FC0,R
+U+0FC1,R
+U+0FC2,R
+U+0FC3,R
+U+0FC4,R
+U+0FC5,R
+U+0FC6,R
+U+0FC7,R
+U+0FC8,R
+U+0FC9,R
+U+0FCA,R
+U+0FCB,R
+U+0FCC,R
+U+0FCE,R
+U+0FCF,R
+U+0FD0,R
+U+0FD1,R
+U+0FD2,R
+U+0FD3,R
+U+0FD4,R
+U+0FD5,R
+U+0FD6,R
+U+0FD7,R
+U+0FD8,R
+U+0FD9,R
+U+0FDA,R
+U+1000,R
+U+1001,R
+U+1002,R
+U+1003,R
+U+1004,R
+U+1005,R
+U+1006,R
+U+1007,R
+U+1008,R
+U+1009,R
+U+100A,R
+U+100B,R
+U+100C,R
+U+100D,R
+U+100E,R
+U+100F,R
+U+1010,R
+U+1011,R
+U+1012,R
+U+1013,R
+U+1014,R
+U+1015,R
+U+1016,R
+U+1017,R
+U+1018,R
+U+1019,R
+U+101A,R
+U+101B,R
+U+101C,R
+U+101D,R
+U+101E,R
+U+101F,R
+U+1020,R
+U+1021,R
+U+1022,R
+U+1023,R
+U+1024,R
+U+1025,R
+U+1026,R
+U+1027,R
+U+1028,R
+U+1029,R
+U+102A,R
+U+102B,R
+U+102C,R
+U+102D,R
+U+102E,R
+U+102F,R
+U+1030,R
+U+1031,R
+U+1032,R
+U+1033,R
+U+1034,R
+U+1035,R
+U+1036,R
+U+1037,R
+U+1038,R
+U+1039,R
+U+103A,R
+U+103B,R
+U+103C,R
+U+103D,R
+U+103E,R
+U+103F,R
+U+1040,R
+U+1041,R
+U+1042,R
+U+1043,R
+U+1044,R
+U+1045,R
+U+1046,R
+U+1047,R
+U+1048,R
+U+1049,R
+U+104A,R
+U+104B,R
+U+104C,R
+U+104D,R
+U+104E,R
+U+104F,R
+U+1050,R
+U+1051,R
+U+1052,R
+U+1053,R
+U+1054,R
+U+1055,R
+U+1056,R
+U+1057,R
+U+1058,R
+U+1059,R
+U+105A,R
+U+105B,R
+U+105C,R
+U+105D,R
+U+105E,R
+U+105F,R
+U+1060,R
+U+1061,R
+U+1062,R
+U+1063,R
+U+1064,R
+U+1065,R
+U+1066,R
+U+1067,R
+U+1068,R
+U+1069,R
+U+106A,R
+U+106B,R
+U+106C,R
+U+106D,R
+U+106E,R
+U+106F,R
+U+1070,R
+U+1071,R
+U+1072,R
+U+1073,R
+U+1074,R
+U+1075,R
+U+1076,R
+U+1077,R
+U+1078,R
+U+1079,R
+U+107A,R
+U+107B,R
+U+107C,R
+U+107D,R
+U+107E,R
+U+107F,R
+U+1080,R
+U+1081,R
+U+1082,R
+U+1083,R
+U+1084,R
+U+1085,R
+U+1086,R
+U+1087,R
+U+1088,R
+U+1089,R
+U+108A,R
+U+108B,R
+U+108C,R
+U+108D,R
+U+108E,R
+U+108F,R
+U+1090,R
+U+1091,R
+U+1092,R
+U+1093,R
+U+1094,R
+U+1095,R
+U+1096,R
+U+1097,R
+U+1098,R
+U+1099,R
+U+109A,R
+U+109B,R
+U+109C,R
+U+109D,R
+U+109E,R
+U+109F,R
+U+10A0,R
+U+10A1,R
+U+10A2,R
+U+10A3,R
+U+10A4,R
+U+10A5,R
+U+10A6,R
+U+10A7,R
+U+10A8,R
+U+10A9,R
+U+10AA,R
+U+10AB,R
+U+10AC,R
+U+10AD,R
+U+10AE,R
+U+10AF,R
+U+10B0,R
+U+10B1,R
+U+10B2,R
+U+10B3,R
+U+10B4,R
+U+10B5,R
+U+10B6,R
+U+10B7,R
+U+10B8,R
+U+10B9,R
+U+10BA,R
+U+10BB,R
+U+10BC,R
+U+10BD,R
+U+10BE,R
+U+10BF,R
+U+10C0,R
+U+10C1,R
+U+10C2,R
+U+10C3,R
+U+10C4,R
+U+10C5,R
+U+10C7,R
+U+10CD,R
+U+10D0,R
+U+10D1,R
+U+10D2,R
+U+10D3,R
+U+10D4,R
+U+10D5,R
+U+10D6,R
+U+10D7,R
+U+10D8,R
+U+10D9,R
+U+10DA,R
+U+10DB,R
+U+10DC,R
+U+10DD,R
+U+10DE,R
+U+10DF,R
+U+10E0,R
+U+10E1,R
+U+10E2,R
+U+10E3,R
+U+10E4,R
+U+10E5,R
+U+10E6,R
+U+10E7,R
+U+10E8,R
+U+10E9,R
+U+10EA,R
+U+10EB,R
+U+10EC,R
+U+10ED,R
+U+10EE,R
+U+10EF,R
+U+10F0,R
+U+10F1,R
+U+10F2,R
+U+10F3,R
+U+10F4,R
+U+10F5,R
+U+10F6,R
+U+10F7,R
+U+10F8,R
+U+10F9,R
+U+10FA,R
+U+10FB,R
+U+10FC,R
+U+10FD,R
+U+10FE,R
+U+10FF,R
+U+1100,U
+U+1101,U
+U+1102,U
+U+1103,U
+U+1104,U
+U+1105,U
+U+1106,U
+U+1107,U
+U+1108,U
+U+1109,U
+U+110A,U
+U+110B,U
+U+110C,U
+U+110D,U
+U+110E,U
+U+110F,U
+U+1110,U
+U+1111,U
+U+1112,U
+U+1113,U
+U+1114,U
+U+1115,U
+U+1116,U
+U+1117,U
+U+1118,U
+U+1119,U
+U+111A,U
+U+111B,U
+U+111C,U
+U+111D,U
+U+111E,U
+U+111F,U
+U+1120,U
+U+1121,U
+U+1122,U
+U+1123,U
+U+1124,U
+U+1125,U
+U+1126,U
+U+1127,U
+U+1128,U
+U+1129,U
+U+112A,U
+U+112B,U
+U+112C,U
+U+112D,U
+U+112E,U
+U+112F,U
+U+1130,U
+U+1131,U
+U+1132,U
+U+1133,U
+U+1134,U
+U+1135,U
+U+1136,U
+U+1137,U
+U+1138,U
+U+1139,U
+U+113A,U
+U+113B,U
+U+113C,U
+U+113D,U
+U+113E,U
+U+113F,U
+U+1140,U
+U+1141,U
+U+1142,U
+U+1143,U
+U+1144,U
+U+1145,U
+U+1146,U
+U+1147,U
+U+1148,U
+U+1149,U
+U+114A,U
+U+114B,U
+U+114C,U
+U+114D,U
+U+114E,U
+U+114F,U
+U+1150,U
+U+1151,U
+U+1152,U
+U+1153,U
+U+1154,U
+U+1155,U
+U+1156,U
+U+1157,U
+U+1158,U
+U+1159,U
+U+115A,U
+U+115B,U
+U+115C,U
+U+115D,U
+U+115E,U
+U+115F,U
+U+1160,U
+U+1161,U
+U+1162,U
+U+1163,U
+U+1164,U
+U+1165,U
+U+1166,U
+U+1167,U
+U+1168,U
+U+1169,U
+U+116A,U
+U+116B,U
+U+116C,U
+U+116D,U
+U+116E,U
+U+116F,U
+U+1170,U
+U+1171,U
+U+1172,U
+U+1173,U
+U+1174,U
+U+1175,U
+U+1176,U
+U+1177,U
+U+1178,U
+U+1179,U
+U+117A,U
+U+117B,U
+U+117C,U
+U+117D,U
+U+117E,U
+U+117F,U
+U+1180,U
+U+1181,U
+U+1182,U
+U+1183,U
+U+1184,U
+U+1185,U
+U+1186,U
+U+1187,U
+U+1188,U
+U+1189,U
+U+118A,U
+U+118B,U
+U+118C,U
+U+118D,U
+U+118E,U
+U+118F,U
+U+1190,U
+U+1191,U
+U+1192,U
+U+1193,U
+U+1194,U
+U+1195,U
+U+1196,U
+U+1197,U
+U+1198,U
+U+1199,U
+U+119A,U
+U+119B,U
+U+119C,U
+U+119D,U
+U+119E,U
+U+119F,U
+U+11A0,U
+U+11A1,U
+U+11A2,U
+U+11A3,U
+U+11A4,U
+U+11A5,U
+U+11A6,U
+U+11A7,U
+U+11A8,U
+U+11A9,U
+U+11AA,U
+U+11AB,U
+U+11AC,U
+U+11AD,U
+U+11AE,U
+U+11AF,U
+U+11B0,U
+U+11B1,U
+U+11B2,U
+U+11B3,U
+U+11B4,U
+U+11B5,U
+U+11B6,U
+U+11B7,U
+U+11B8,U
+U+11B9,U
+U+11BA,U
+U+11BB,U
+U+11BC,U
+U+11BD,U
+U+11BE,U
+U+11BF,U
+U+11C0,U
+U+11C1,U
+U+11C2,U
+U+11C3,U
+U+11C4,U
+U+11C5,U
+U+11C6,U
+U+11C7,U
+U+11C8,U
+U+11C9,U
+U+11CA,U
+U+11CB,U
+U+11CC,U
+U+11CD,U
+U+11CE,U
+U+11CF,U
+U+11D0,U
+U+11D1,U
+U+11D2,U
+U+11D3,U
+U+11D4,U
+U+11D5,U
+U+11D6,U
+U+11D7,U
+U+11D8,U
+U+11D9,U
+U+11DA,U
+U+11DB,U
+U+11DC,U
+U+11DD,U
+U+11DE,U
+U+11DF,U
+U+11E0,U
+U+11E1,U
+U+11E2,U
+U+11E3,U
+U+11E4,U
+U+11E5,U
+U+11E6,U
+U+11E7,U
+U+11E8,U
+U+11E9,U
+U+11EA,U
+U+11EB,U
+U+11EC,U
+U+11ED,U
+U+11EE,U
+U+11EF,U
+U+11F0,U
+U+11F1,U
+U+11F2,U
+U+11F3,U
+U+11F4,U
+U+11F5,U
+U+11F6,U
+U+11F7,U
+U+11F8,U
+U+11F9,U
+U+11FA,U
+U+11FB,U
+U+11FC,U
+U+11FD,U
+U+11FE,U
+U+11FF,U
+U+1200,R
+U+1201,R
+U+1202,R
+U+1203,R
+U+1204,R
+U+1205,R
+U+1206,R
+U+1207,R
+U+1208,R
+U+1209,R
+U+120A,R
+U+120B,R
+U+120C,R
+U+120D,R
+U+120E,R
+U+120F,R
+U+1210,R
+U+1211,R
+U+1212,R
+U+1213,R
+U+1214,R
+U+1215,R
+U+1216,R
+U+1217,R
+U+1218,R
+U+1219,R
+U+121A,R
+U+121B,R
+U+121C,R
+U+121D,R
+U+121E,R
+U+121F,R
+U+1220,R
+U+1221,R
+U+1222,R
+U+1223,R
+U+1224,R
+U+1225,R
+U+1226,R
+U+1227,R
+U+1228,R
+U+1229,R
+U+122A,R
+U+122B,R
+U+122C,R
+U+122D,R
+U+122E,R
+U+122F,R
+U+1230,R
+U+1231,R
+U+1232,R
+U+1233,R
+U+1234,R
+U+1235,R
+U+1236,R
+U+1237,R
+U+1238,R
+U+1239,R
+U+123A,R
+U+123B,R
+U+123C,R
+U+123D,R
+U+123E,R
+U+123F,R
+U+1240,R
+U+1241,R
+U+1242,R
+U+1243,R
+U+1244,R
+U+1245,R
+U+1246,R
+U+1247,R
+U+1248,R
+U+124A,R
+U+124B,R
+U+124C,R
+U+124D,R
+U+1250,R
+U+1251,R
+U+1252,R
+U+1253,R
+U+1254,R
+U+1255,R
+U+1256,R
+U+1258,R
+U+125A,R
+U+125B,R
+U+125C,R
+U+125D,R
+U+1260,R
+U+1261,R
+U+1262,R
+U+1263,R
+U+1264,R
+U+1265,R
+U+1266,R
+U+1267,R
+U+1268,R
+U+1269,R
+U+126A,R
+U+126B,R
+U+126C,R
+U+126D,R
+U+126E,R
+U+126F,R
+U+1270,R
+U+1271,R
+U+1272,R
+U+1273,R
+U+1274,R
+U+1275,R
+U+1276,R
+U+1277,R
+U+1278,R
+U+1279,R
+U+127A,R
+U+127B,R
+U+127C,R
+U+127D,R
+U+127E,R
+U+127F,R
+U+1280,R
+U+1281,R
+U+1282,R
+U+1283,R
+U+1284,R
+U+1285,R
+U+1286,R
+U+1287,R
+U+1288,R
+U+128A,R
+U+128B,R
+U+128C,R
+U+128D,R
+U+1290,R
+U+1291,R
+U+1292,R
+U+1293,R
+U+1294,R
+U+1295,R
+U+1296,R
+U+1297,R
+U+1298,R
+U+1299,R
+U+129A,R
+U+129B,R
+U+129C,R
+U+129D,R
+U+129E,R
+U+129F,R
+U+12A0,R
+U+12A1,R
+U+12A2,R
+U+12A3,R
+U+12A4,R
+U+12A5,R
+U+12A6,R
+U+12A7,R
+U+12A8,R
+U+12A9,R
+U+12AA,R
+U+12AB,R
+U+12AC,R
+U+12AD,R
+U+12AE,R
+U+12AF,R
+U+12B0,R
+U+12B2,R
+U+12B3,R
+U+12B4,R
+U+12B5,R
+U+12B8,R
+U+12B9,R
+U+12BA,R
+U+12BB,R
+U+12BC,R
+U+12BD,R
+U+12BE,R
+U+12C0,R
+U+12C2,R
+U+12C3,R
+U+12C4,R
+U+12C5,R
+U+12C8,R
+U+12C9,R
+U+12CA,R
+U+12CB,R
+U+12CC,R
+U+12CD,R
+U+12CE,R
+U+12CF,R
+U+12D0,R
+U+12D1,R
+U+12D2,R
+U+12D3,R
+U+12D4,R
+U+12D5,R
+U+12D6,R
+U+12D8,R
+U+12D9,R
+U+12DA,R
+U+12DB,R
+U+12DC,R
+U+12DD,R
+U+12DE,R
+U+12DF,R
+U+12E0,R
+U+12E1,R
+U+12E2,R
+U+12E3,R
+U+12E4,R
+U+12E5,R
+U+12E6,R
+U+12E7,R
+U+12E8,R
+U+12E9,R
+U+12EA,R
+U+12EB,R
+U+12EC,R
+U+12ED,R
+U+12EE,R
+U+12EF,R
+U+12F0,R
+U+12F1,R
+U+12F2,R
+U+12F3,R
+U+12F4,R
+U+12F5,R
+U+12F6,R
+U+12F7,R
+U+12F8,R
+U+12F9,R
+U+12FA,R
+U+12FB,R
+U+12FC,R
+U+12FD,R
+U+12FE,R
+U+12FF,R
+U+1300,R
+U+1301,R
+U+1302,R
+U+1303,R
+U+1304,R
+U+1305,R
+U+1306,R
+U+1307,R
+U+1308,R
+U+1309,R
+U+130A,R
+U+130B,R
+U+130C,R
+U+130D,R
+U+130E,R
+U+130F,R
+U+1310,R
+U+1312,R
+U+1313,R
+U+1314,R
+U+1315,R
+U+1318,R
+U+1319,R
+U+131A,R
+U+131B,R
+U+131C,R
+U+131D,R
+U+131E,R
+U+131F,R
+U+1320,R
+U+1321,R
+U+1322,R
+U+1323,R
+U+1324,R
+U+1325,R
+U+1326,R
+U+1327,R
+U+1328,R
+U+1329,R
+U+132A,R
+U+132B,R
+U+132C,R
+U+132D,R
+U+132E,R
+U+132F,R
+U+1330,R
+U+1331,R
+U+1332,R
+U+1333,R
+U+1334,R
+U+1335,R
+U+1336,R
+U+1337,R
+U+1338,R
+U+1339,R
+U+133A,R
+U+133B,R
+U+133C,R
+U+133D,R
+U+133E,R
+U+133F,R
+U+1340,R
+U+1341,R
+U+1342,R
+U+1343,R
+U+1344,R
+U+1345,R
+U+1346,R
+U+1347,R
+U+1348,R
+U+1349,R
+U+134A,R
+U+134B,R
+U+134C,R
+U+134D,R
+U+134E,R
+U+134F,R
+U+1350,R
+U+1351,R
+U+1352,R
+U+1353,R
+U+1354,R
+U+1355,R
+U+1356,R
+U+1357,R
+U+1358,R
+U+1359,R
+U+135A,R
+U+135D,R
+U+135E,R
+U+135F,R
+U+1360,R
+U+1361,R
+U+1362,R
+U+1363,R
+U+1364,R
+U+1365,R
+U+1366,R
+U+1367,R
+U+1368,R
+U+1369,R
+U+136A,R
+U+136B,R
+U+136C,R
+U+136D,R
+U+136E,R
+U+136F,R
+U+1370,R
+U+1371,R
+U+1372,R
+U+1373,R
+U+1374,R
+U+1375,R
+U+1376,R
+U+1377,R
+U+1378,R
+U+1379,R
+U+137A,R
+U+137B,R
+U+137C,R
+U+1380,R
+U+1381,R
+U+1382,R
+U+1383,R
+U+1384,R
+U+1385,R
+U+1386,R
+U+1387,R
+U+1388,R
+U+1389,R
+U+138A,R
+U+138B,R
+U+138C,R
+U+138D,R
+U+138E,R
+U+138F,R
+U+1390,R
+U+1391,R
+U+1392,R
+U+1393,R
+U+1394,R
+U+1395,R
+U+1396,R
+U+1397,R
+U+1398,R
+U+1399,R
+U+13A0,R
+U+13A1,R
+U+13A2,R
+U+13A3,R
+U+13A4,R
+U+13A5,R
+U+13A6,R
+U+13A7,R
+U+13A8,R
+U+13A9,R
+U+13AA,R
+U+13AB,R
+U+13AC,R
+U+13AD,R
+U+13AE,R
+U+13AF,R
+U+13B0,R
+U+13B1,R
+U+13B2,R
+U+13B3,R
+U+13B4,R
+U+13B5,R
+U+13B6,R
+U+13B7,R
+U+13B8,R
+U+13B9,R
+U+13BA,R
+U+13BB,R
+U+13BC,R
+U+13BD,R
+U+13BE,R
+U+13BF,R
+U+13C0,R
+U+13C1,R
+U+13C2,R
+U+13C3,R
+U+13C4,R
+U+13C5,R
+U+13C6,R
+U+13C7,R
+U+13C8,R
+U+13C9,R
+U+13CA,R
+U+13CB,R
+U+13CC,R
+U+13CD,R
+U+13CE,R
+U+13CF,R
+U+13D0,R
+U+13D1,R
+U+13D2,R
+U+13D3,R
+U+13D4,R
+U+13D5,R
+U+13D6,R
+U+13D7,R
+U+13D8,R
+U+13D9,R
+U+13DA,R
+U+13DB,R
+U+13DC,R
+U+13DD,R
+U+13DE,R
+U+13DF,R
+U+13E0,R
+U+13E1,R
+U+13E2,R
+U+13E3,R
+U+13E4,R
+U+13E5,R
+U+13E6,R
+U+13E7,R
+U+13E8,R
+U+13E9,R
+U+13EA,R
+U+13EB,R
+U+13EC,R
+U+13ED,R
+U+13EE,R
+U+13EF,R
+U+13F0,R
+U+13F1,R
+U+13F2,R
+U+13F3,R
+U+13F4,R
+U+1400,R
+U+1401,U
+U+1402,U
+U+1403,U
+U+1404,U
+U+1405,U
+U+1406,U
+U+1407,U
+U+1408,U
+U+1409,U
+U+140A,U
+U+140B,U
+U+140C,U
+U+140D,U
+U+140E,U
+U+140F,U
+U+1410,U
+U+1411,U
+U+1412,U
+U+1413,U
+U+1414,U
+U+1415,U
+U+1416,U
+U+1417,U
+U+1418,U
+U+1419,U
+U+141A,U
+U+141B,U
+U+141C,U
+U+141D,U
+U+141E,U
+U+141F,U
+U+1420,U
+U+1421,U
+U+1422,U
+U+1423,U
+U+1424,U
+U+1425,U
+U+1426,U
+U+1427,U
+U+1428,U
+U+1429,U
+U+142A,U
+U+142B,U
+U+142C,U
+U+142D,U
+U+142E,U
+U+142F,U
+U+1430,U
+U+1431,U
+U+1432,U
+U+1433,U
+U+1434,U
+U+1435,U
+U+1436,U
+U+1437,U
+U+1438,U
+U+1439,U
+U+143A,U
+U+143B,U
+U+143C,U
+U+143D,U
+U+143E,U
+U+143F,U
+U+1440,U
+U+1441,U
+U+1442,U
+U+1443,U
+U+1444,U
+U+1445,U
+U+1446,U
+U+1447,U
+U+1448,U
+U+1449,U
+U+144A,U
+U+144B,U
+U+144C,U
+U+144D,U
+U+144E,U
+U+144F,U
+U+1450,U
+U+1451,U
+U+1452,U
+U+1453,U
+U+1454,U
+U+1455,U
+U+1456,U
+U+1457,U
+U+1458,U
+U+1459,U
+U+145A,U
+U+145B,U
+U+145C,U
+U+145D,U
+U+145E,U
+U+145F,U
+U+1460,U
+U+1461,U
+U+1462,U
+U+1463,U
+U+1464,U
+U+1465,U
+U+1466,U
+U+1467,U
+U+1468,U
+U+1469,U
+U+146A,U
+U+146B,U
+U+146C,U
+U+146D,U
+U+146E,U
+U+146F,U
+U+1470,U
+U+1471,U
+U+1472,U
+U+1473,U
+U+1474,U
+U+1475,U
+U+1476,U
+U+1477,U
+U+1478,U
+U+1479,U
+U+147A,U
+U+147B,U
+U+147C,U
+U+147D,U
+U+147E,U
+U+147F,U
+U+1480,U
+U+1481,U
+U+1482,U
+U+1483,U
+U+1484,U
+U+1485,U
+U+1486,U
+U+1487,U
+U+1488,U
+U+1489,U
+U+148A,U
+U+148B,U
+U+148C,U
+U+148D,U
+U+148E,U
+U+148F,U
+U+1490,U
+U+1491,U
+U+1492,U
+U+1493,U
+U+1494,U
+U+1495,U
+U+1496,U
+U+1497,U
+U+1498,U
+U+1499,U
+U+149A,U
+U+149B,U
+U+149C,U
+U+149D,U
+U+149E,U
+U+149F,U
+U+14A0,U
+U+14A1,U
+U+14A2,U
+U+14A3,U
+U+14A4,U
+U+14A5,U
+U+14A6,U
+U+14A7,U
+U+14A8,U
+U+14A9,U
+U+14AA,U
+U+14AB,U
+U+14AC,U
+U+14AD,U
+U+14AE,U
+U+14AF,U
+U+14B0,U
+U+14B1,U
+U+14B2,U
+U+14B3,U
+U+14B4,U
+U+14B5,U
+U+14B6,U
+U+14B7,U
+U+14B8,U
+U+14B9,U
+U+14BA,U
+U+14BB,U
+U+14BC,U
+U+14BD,U
+U+14BE,U
+U+14BF,U
+U+14C0,U
+U+14C1,U
+U+14C2,U
+U+14C3,U
+U+14C4,U
+U+14C5,U
+U+14C6,U
+U+14C7,U
+U+14C8,U
+U+14C9,U
+U+14CA,U
+U+14CB,U
+U+14CC,U
+U+14CD,U
+U+14CE,U
+U+14CF,U
+U+14D0,U
+U+14D1,U
+U+14D2,U
+U+14D3,U
+U+14D4,U
+U+14D5,U
+U+14D6,U
+U+14D7,U
+U+14D8,U
+U+14D9,U
+U+14DA,U
+U+14DB,U
+U+14DC,U
+U+14DD,U
+U+14DE,U
+U+14DF,U
+U+14E0,U
+U+14E1,U
+U+14E2,U
+U+14E3,U
+U+14E4,U
+U+14E5,U
+U+14E6,U
+U+14E7,U
+U+14E8,U
+U+14E9,U
+U+14EA,U
+U+14EB,U
+U+14EC,U
+U+14ED,U
+U+14EE,U
+U+14EF,U
+U+14F0,U
+U+14F1,U
+U+14F2,U
+U+14F3,U
+U+14F4,U
+U+14F5,U
+U+14F6,U
+U+14F7,U
+U+14F8,U
+U+14F9,U
+U+14FA,U
+U+14FB,U
+U+14FC,U
+U+14FD,U
+U+14FE,U
+U+14FF,U
+U+1500,U
+U+1501,U
+U+1502,U
+U+1503,U
+U+1504,U
+U+1505,U
+U+1506,U
+U+1507,U
+U+1508,U
+U+1509,U
+U+150A,U
+U+150B,U
+U+150C,U
+U+150D,U
+U+150E,U
+U+150F,U
+U+1510,U
+U+1511,U
+U+1512,U
+U+1513,U
+U+1514,U
+U+1515,U
+U+1516,U
+U+1517,U
+U+1518,U
+U+1519,U
+U+151A,U
+U+151B,U
+U+151C,U
+U+151D,U
+U+151E,U
+U+151F,U
+U+1520,U
+U+1521,U
+U+1522,U
+U+1523,U
+U+1524,U
+U+1525,U
+U+1526,U
+U+1527,U
+U+1528,U
+U+1529,U
+U+152A,U
+U+152B,U
+U+152C,U
+U+152D,U
+U+152E,U
+U+152F,U
+U+1530,U
+U+1531,U
+U+1532,U
+U+1533,U
+U+1534,U
+U+1535,U
+U+1536,U
+U+1537,U
+U+1538,U
+U+1539,U
+U+153A,U
+U+153B,U
+U+153C,U
+U+153D,U
+U+153E,U
+U+153F,U
+U+1540,U
+U+1541,U
+U+1542,U
+U+1543,U
+U+1544,U
+U+1545,U
+U+1546,U
+U+1547,U
+U+1548,U
+U+1549,U
+U+154A,U
+U+154B,U
+U+154C,U
+U+154D,U
+U+154E,U
+U+154F,U
+U+1550,U
+U+1551,U
+U+1552,U
+U+1553,U
+U+1554,U
+U+1555,U
+U+1556,U
+U+1557,U
+U+1558,U
+U+1559,U
+U+155A,U
+U+155B,U
+U+155C,U
+U+155D,U
+U+155E,U
+U+155F,U
+U+1560,U
+U+1561,U
+U+1562,U
+U+1563,U
+U+1564,U
+U+1565,U
+U+1566,U
+U+1567,U
+U+1568,U
+U+1569,U
+U+156A,U
+U+156B,U
+U+156C,U
+U+156D,U
+U+156E,U
+U+156F,U
+U+1570,U
+U+1571,U
+U+1572,U
+U+1573,U
+U+1574,U
+U+1575,U
+U+1576,U
+U+1577,U
+U+1578,U
+U+1579,U
+U+157A,U
+U+157B,U
+U+157C,U
+U+157D,U
+U+157E,U
+U+157F,U
+U+1580,U
+U+1581,U
+U+1582,U
+U+1583,U
+U+1584,U
+U+1585,U
+U+1586,U
+U+1587,U
+U+1588,U
+U+1589,U
+U+158A,U
+U+158B,U
+U+158C,U
+U+158D,U
+U+158E,U
+U+158F,U
+U+1590,U
+U+1591,U
+U+1592,U
+U+1593,U
+U+1594,U
+U+1595,U
+U+1596,U
+U+1597,U
+U+1598,U
+U+1599,U
+U+159A,U
+U+159B,U
+U+159C,U
+U+159D,U
+U+159E,U
+U+159F,U
+U+15A0,U
+U+15A1,U
+U+15A2,U
+U+15A3,U
+U+15A4,U
+U+15A5,U
+U+15A6,U
+U+15A7,U
+U+15A8,U
+U+15A9,U
+U+15AA,U
+U+15AB,U
+U+15AC,U
+U+15AD,U
+U+15AE,U
+U+15AF,U
+U+15B0,U
+U+15B1,U
+U+15B2,U
+U+15B3,U
+U+15B4,U
+U+15B5,U
+U+15B6,U
+U+15B7,U
+U+15B8,U
+U+15B9,U
+U+15BA,U
+U+15BB,U
+U+15BC,U
+U+15BD,U
+U+15BE,U
+U+15BF,U
+U+15C0,U
+U+15C1,U
+U+15C2,U
+U+15C3,U
+U+15C4,U
+U+15C5,U
+U+15C6,U
+U+15C7,U
+U+15C8,U
+U+15C9,U
+U+15CA,U
+U+15CB,U
+U+15CC,U
+U+15CD,U
+U+15CE,U
+U+15CF,U
+U+15D0,U
+U+15D1,U
+U+15D2,U
+U+15D3,U
+U+15D4,U
+U+15D5,U
+U+15D6,U
+U+15D7,U
+U+15D8,U
+U+15D9,U
+U+15DA,U
+U+15DB,U
+U+15DC,U
+U+15DD,U
+U+15DE,U
+U+15DF,U
+U+15E0,U
+U+15E1,U
+U+15E2,U
+U+15E3,U
+U+15E4,U
+U+15E5,U
+U+15E6,U
+U+15E7,U
+U+15E8,U
+U+15E9,U
+U+15EA,U
+U+15EB,U
+U+15EC,U
+U+15ED,U
+U+15EE,U
+U+15EF,U
+U+15F0,U
+U+15F1,U
+U+15F2,U
+U+15F3,U
+U+15F4,U
+U+15F5,U
+U+15F6,U
+U+15F7,U
+U+15F8,U
+U+15F9,U
+U+15FA,U
+U+15FB,U
+U+15FC,U
+U+15FD,U
+U+15FE,U
+U+15FF,U
+U+1600,U
+U+1601,U
+U+1602,U
+U+1603,U
+U+1604,U
+U+1605,U
+U+1606,U
+U+1607,U
+U+1608,U
+U+1609,U
+U+160A,U
+U+160B,U
+U+160C,U
+U+160D,U
+U+160E,U
+U+160F,U
+U+1610,U
+U+1611,U
+U+1612,U
+U+1613,U
+U+1614,U
+U+1615,U
+U+1616,U
+U+1617,U
+U+1618,U
+U+1619,U
+U+161A,U
+U+161B,U
+U+161C,U
+U+161D,U
+U+161E,U
+U+161F,U
+U+1620,U
+U+1621,U
+U+1622,U
+U+1623,U
+U+1624,U
+U+1625,U
+U+1626,U
+U+1627,U
+U+1628,U
+U+1629,U
+U+162A,U
+U+162B,U
+U+162C,U
+U+162D,U
+U+162E,U
+U+162F,U
+U+1630,U
+U+1631,U
+U+1632,U
+U+1633,U
+U+1634,U
+U+1635,U
+U+1636,U
+U+1637,U
+U+1638,U
+U+1639,U
+U+163A,U
+U+163B,U
+U+163C,U
+U+163D,U
+U+163E,U
+U+163F,U
+U+1640,U
+U+1641,U
+U+1642,U
+U+1643,U
+U+1644,U
+U+1645,U
+U+1646,U
+U+1647,U
+U+1648,U
+U+1649,U
+U+164A,U
+U+164B,U
+U+164C,U
+U+164D,U
+U+164E,U
+U+164F,U
+U+1650,U
+U+1651,U
+U+1652,U
+U+1653,U
+U+1654,U
+U+1655,U
+U+1656,U
+U+1657,U
+U+1658,U
+U+1659,U
+U+165A,U
+U+165B,U
+U+165C,U
+U+165D,U
+U+165E,U
+U+165F,U
+U+1660,U
+U+1661,U
+U+1662,U
+U+1663,U
+U+1664,U
+U+1665,U
+U+1666,U
+U+1667,U
+U+1668,U
+U+1669,U
+U+166A,U
+U+166B,U
+U+166C,U
+U+166D,U
+U+166E,U
+U+166F,U
+U+1670,U
+U+1671,U
+U+1672,U
+U+1673,U
+U+1674,U
+U+1675,U
+U+1676,U
+U+1677,U
+U+1678,U
+U+1679,U
+U+167A,U
+U+167B,U
+U+167C,U
+U+167D,U
+U+167E,U
+U+167F,U
+U+1680,R
+U+1681,R
+U+1682,R
+U+1683,R
+U+1684,R
+U+1685,R
+U+1686,R
+U+1687,R
+U+1688,R
+U+1689,R
+U+168A,R
+U+168B,R
+U+168C,R
+U+168D,R
+U+168E,R
+U+168F,R
+U+1690,R
+U+1691,R
+U+1692,R
+U+1693,R
+U+1694,R
+U+1695,R
+U+1696,R
+U+1697,R
+U+1698,R
+U+1699,R
+U+169A,R
+U+169B,R
+U+169C,R
+U+16A0,R
+U+16A1,R
+U+16A2,R
+U+16A3,R
+U+16A4,R
+U+16A5,R
+U+16A6,R
+U+16A7,R
+U+16A8,R
+U+16A9,R
+U+16AA,R
+U+16AB,R
+U+16AC,R
+U+16AD,R
+U+16AE,R
+U+16AF,R
+U+16B0,R
+U+16B1,R
+U+16B2,R
+U+16B3,R
+U+16B4,R
+U+16B5,R
+U+16B6,R
+U+16B7,R
+U+16B8,R
+U+16B9,R
+U+16BA,R
+U+16BB,R
+U+16BC,R
+U+16BD,R
+U+16BE,R
+U+16BF,R
+U+16C0,R
+U+16C1,R
+U+16C2,R
+U+16C3,R
+U+16C4,R
+U+16C5,R
+U+16C6,R
+U+16C7,R
+U+16C8,R
+U+16C9,R
+U+16CA,R
+U+16CB,R
+U+16CC,R
+U+16CD,R
+U+16CE,R
+U+16CF,R
+U+16D0,R
+U+16D1,R
+U+16D2,R
+U+16D3,R
+U+16D4,R
+U+16D5,R
+U+16D6,R
+U+16D7,R
+U+16D8,R
+U+16D9,R
+U+16DA,R
+U+16DB,R
+U+16DC,R
+U+16DD,R
+U+16DE,R
+U+16DF,R
+U+16E0,R
+U+16E1,R
+U+16E2,R
+U+16E3,R
+U+16E4,R
+U+16E5,R
+U+16E6,R
+U+16E7,R
+U+16E8,R
+U+16E9,R
+U+16EA,R
+U+16EB,R
+U+16EC,R
+U+16ED,R
+U+16EE,R
+U+16EF,R
+U+16F0,R
+U+1700,R
+U+1701,R
+U+1702,R
+U+1703,R
+U+1704,R
+U+1705,R
+U+1706,R
+U+1707,R
+U+1708,R
+U+1709,R
+U+170A,R
+U+170B,R
+U+170C,R
+U+170E,R
+U+170F,R
+U+1710,R
+U+1711,R
+U+1712,R
+U+1713,R
+U+1714,R
+U+1720,R
+U+1721,R
+U+1722,R
+U+1723,R
+U+1724,R
+U+1725,R
+U+1726,R
+U+1727,R
+U+1728,R
+U+1729,R
+U+172A,R
+U+172B,R
+U+172C,R
+U+172D,R
+U+172E,R
+U+172F,R
+U+1730,R
+U+1731,R
+U+1732,R
+U+1733,R
+U+1734,R
+U+1735,R
+U+1736,R
+U+1740,R
+U+1741,R
+U+1742,R
+U+1743,R
+U+1744,R
+U+1745,R
+U+1746,R
+U+1747,R
+U+1748,R
+U+1749,R
+U+174A,R
+U+174B,R
+U+174C,R
+U+174D,R
+U+174E,R
+U+174F,R
+U+1750,R
+U+1751,R
+U+1752,R
+U+1753,R
+U+1760,R
+U+1761,R
+U+1762,R
+U+1763,R
+U+1764,R
+U+1765,R
+U+1766,R
+U+1767,R
+U+1768,R
+U+1769,R
+U+176A,R
+U+176B,R
+U+176C,R
+U+176E,R
+U+176F,R
+U+1770,R
+U+1772,R
+U+1773,R
+U+1780,R
+U+1781,R
+U+1782,R
+U+1783,R
+U+1784,R
+U+1785,R
+U+1786,R
+U+1787,R
+U+1788,R
+U+1789,R
+U+178A,R
+U+178B,R
+U+178C,R
+U+178D,R
+U+178E,R
+U+178F,R
+U+1790,R
+U+1791,R
+U+1792,R
+U+1793,R
+U+1794,R
+U+1795,R
+U+1796,R
+U+1797,R
+U+1798,R
+U+1799,R
+U+179A,R
+U+179B,R
+U+179C,R
+U+179D,R
+U+179E,R
+U+179F,R
+U+17A0,R
+U+17A1,R
+U+17A2,R
+U+17A3,R
+U+17A4,R
+U+17A5,R
+U+17A6,R
+U+17A7,R
+U+17A8,R
+U+17A9,R
+U+17AA,R
+U+17AB,R
+U+17AC,R
+U+17AD,R
+U+17AE,R
+U+17AF,R
+U+17B0,R
+U+17B1,R
+U+17B2,R
+U+17B3,R
+U+17B4,R
+U+17B5,R
+U+17B6,R
+U+17B7,R
+U+17B8,R
+U+17B9,R
+U+17BA,R
+U+17BB,R
+U+17BC,R
+U+17BD,R
+U+17BE,R
+U+17BF,R
+U+17C0,R
+U+17C1,R
+U+17C2,R
+U+17C3,R
+U+17C4,R
+U+17C5,R
+U+17C6,R
+U+17C7,R
+U+17C8,R
+U+17C9,R
+U+17CA,R
+U+17CB,R
+U+17CC,R
+U+17CD,R
+U+17CE,R
+U+17CF,R
+U+17D0,R
+U+17D1,R
+U+17D2,R
+U+17D3,R
+U+17D4,R
+U+17D5,R
+U+17D6,R
+U+17D7,R
+U+17D8,R
+U+17D9,R
+U+17DA,R
+U+17DB,R
+U+17DC,R
+U+17DD,R
+U+17E0,R
+U+17E1,R
+U+17E2,R
+U+17E3,R
+U+17E4,R
+U+17E5,R
+U+17E6,R
+U+17E7,R
+U+17E8,R
+U+17E9,R
+U+17F0,R
+U+17F1,R
+U+17F2,R
+U+17F3,R
+U+17F4,R
+U+17F5,R
+U+17F6,R
+U+17F7,R
+U+17F8,R
+U+17F9,R
+U+1800,R
+U+1801,R
+U+1802,R
+U+1803,R
+U+1804,R
+U+1805,R
+U+1806,R
+U+1807,R
+U+1808,R
+U+1809,R
+U+180A,R
+U+180B,R
+U+180C,R
+U+180D,R
+U+180E,R
+U+1810,R
+U+1811,R
+U+1812,R
+U+1813,R
+U+1814,R
+U+1815,R
+U+1816,R
+U+1817,R
+U+1818,R
+U+1819,R
+U+1820,R
+U+1821,R
+U+1822,R
+U+1823,R
+U+1824,R
+U+1825,R
+U+1826,R
+U+1827,R
+U+1828,R
+U+1829,R
+U+182A,R
+U+182B,R
+U+182C,R
+U+182D,R
+U+182E,R
+U+182F,R
+U+1830,R
+U+1831,R
+U+1832,R
+U+1833,R
+U+1834,R
+U+1835,R
+U+1836,R
+U+1837,R
+U+1838,R
+U+1839,R
+U+183A,R
+U+183B,R
+U+183C,R
+U+183D,R
+U+183E,R
+U+183F,R
+U+1840,R
+U+1841,R
+U+1842,R
+U+1843,R
+U+1844,R
+U+1845,R
+U+1846,R
+U+1847,R
+U+1848,R
+U+1849,R
+U+184A,R
+U+184B,R
+U+184C,R
+U+184D,R
+U+184E,R
+U+184F,R
+U+1850,R
+U+1851,R
+U+1852,R
+U+1853,R
+U+1854,R
+U+1855,R
+U+1856,R
+U+1857,R
+U+1858,R
+U+1859,R
+U+185A,R
+U+185B,R
+U+185C,R
+U+185D,R
+U+185E,R
+U+185F,R
+U+1860,R
+U+1861,R
+U+1862,R
+U+1863,R
+U+1864,R
+U+1865,R
+U+1866,R
+U+1867,R
+U+1868,R
+U+1869,R
+U+186A,R
+U+186B,R
+U+186C,R
+U+186D,R
+U+186E,R
+U+186F,R
+U+1870,R
+U+1871,R
+U+1872,R
+U+1873,R
+U+1874,R
+U+1875,R
+U+1876,R
+U+1877,R
+U+1880,R
+U+1881,R
+U+1882,R
+U+1883,R
+U+1884,R
+U+1885,R
+U+1886,R
+U+1887,R
+U+1888,R
+U+1889,R
+U+188A,R
+U+188B,R
+U+188C,R
+U+188D,R
+U+188E,R
+U+188F,R
+U+1890,R
+U+1891,R
+U+1892,R
+U+1893,R
+U+1894,R
+U+1895,R
+U+1896,R
+U+1897,R
+U+1898,R
+U+1899,R
+U+189A,R
+U+189B,R
+U+189C,R
+U+189D,R
+U+189E,R
+U+189F,R
+U+18A0,R
+U+18A1,R
+U+18A2,R
+U+18A3,R
+U+18A4,R
+U+18A5,R
+U+18A6,R
+U+18A7,R
+U+18A8,R
+U+18A9,R
+U+18AA,R
+U+18B0,U
+U+18B1,U
+U+18B2,U
+U+18B3,U
+U+18B4,U
+U+18B5,U
+U+18B6,U
+U+18B7,U
+U+18B8,U
+U+18B9,U
+U+18BA,U
+U+18BB,U
+U+18BC,U
+U+18BD,U
+U+18BE,U
+U+18BF,U
+U+18C0,U
+U+18C1,U
+U+18C2,U
+U+18C3,U
+U+18C4,U
+U+18C5,U
+U+18C6,U
+U+18C7,U
+U+18C8,U
+U+18C9,U
+U+18CA,U
+U+18CB,U
+U+18CC,U
+U+18CD,U
+U+18CE,U
+U+18CF,U
+U+18D0,U
+U+18D1,U
+U+18D2,U
+U+18D3,U
+U+18D4,U
+U+18D5,U
+U+18D6,U
+U+18D7,U
+U+18D8,U
+U+18D9,U
+U+18DA,U
+U+18DB,U
+U+18DC,U
+U+18DD,U
+U+18DE,U
+U+18DF,U
+U+18E0,U
+U+18E1,U
+U+18E2,U
+U+18E3,U
+U+18E4,U
+U+18E5,U
+U+18E6,U
+U+18E7,U
+U+18E8,U
+U+18E9,U
+U+18EA,U
+U+18EB,U
+U+18EC,U
+U+18ED,U
+U+18EE,U
+U+18EF,U
+U+18F0,U
+U+18F1,U
+U+18F2,U
+U+18F3,U
+U+18F4,U
+U+18F5,U
+U+1900,R
+U+1901,R
+U+1902,R
+U+1903,R
+U+1904,R
+U+1905,R
+U+1906,R
+U+1907,R
+U+1908,R
+U+1909,R
+U+190A,R
+U+190B,R
+U+190C,R
+U+190D,R
+U+190E,R
+U+190F,R
+U+1910,R
+U+1911,R
+U+1912,R
+U+1913,R
+U+1914,R
+U+1915,R
+U+1916,R
+U+1917,R
+U+1918,R
+U+1919,R
+U+191A,R
+U+191B,R
+U+191C,R
+U+1920,R
+U+1921,R
+U+1922,R
+U+1923,R
+U+1924,R
+U+1925,R
+U+1926,R
+U+1927,R
+U+1928,R
+U+1929,R
+U+192A,R
+U+192B,R
+U+1930,R
+U+1931,R
+U+1932,R
+U+1933,R
+U+1934,R
+U+1935,R
+U+1936,R
+U+1937,R
+U+1938,R
+U+1939,R
+U+193A,R
+U+193B,R
+U+1940,R
+U+1944,R
+U+1945,R
+U+1946,R
+U+1947,R
+U+1948,R
+U+1949,R
+U+194A,R
+U+194B,R
+U+194C,R
+U+194D,R
+U+194E,R
+U+194F,R
+U+1950,R
+U+1951,R
+U+1952,R
+U+1953,R
+U+1954,R
+U+1955,R
+U+1956,R
+U+1957,R
+U+1958,R
+U+1959,R
+U+195A,R
+U+195B,R
+U+195C,R
+U+195D,R
+U+195E,R
+U+195F,R
+U+1960,R
+U+1961,R
+U+1962,R
+U+1963,R
+U+1964,R
+U+1965,R
+U+1966,R
+U+1967,R
+U+1968,R
+U+1969,R
+U+196A,R
+U+196B,R
+U+196C,R
+U+196D,R
+U+1970,R
+U+1971,R
+U+1972,R
+U+1973,R
+U+1974,R
+U+1980,R
+U+1981,R
+U+1982,R
+U+1983,R
+U+1984,R
+U+1985,R
+U+1986,R
+U+1987,R
+U+1988,R
+U+1989,R
+U+198A,R
+U+198B,R
+U+198C,R
+U+198D,R
+U+198E,R
+U+198F,R
+U+1990,R
+U+1991,R
+U+1992,R
+U+1993,R
+U+1994,R
+U+1995,R
+U+1996,R
+U+1997,R
+U+1998,R
+U+1999,R
+U+199A,R
+U+199B,R
+U+199C,R
+U+199D,R
+U+199E,R
+U+199F,R
+U+19A0,R
+U+19A1,R
+U+19A2,R
+U+19A3,R
+U+19A4,R
+U+19A5,R
+U+19A6,R
+U+19A7,R
+U+19A8,R
+U+19A9,R
+U+19AA,R
+U+19AB,R
+U+19B0,R
+U+19B1,R
+U+19B2,R
+U+19B3,R
+U+19B4,R
+U+19B5,R
+U+19B6,R
+U+19B7,R
+U+19B8,R
+U+19B9,R
+U+19BA,R
+U+19BB,R
+U+19BC,R
+U+19BD,R
+U+19BE,R
+U+19BF,R
+U+19C0,R
+U+19C1,R
+U+19C2,R
+U+19C3,R
+U+19C4,R
+U+19C5,R
+U+19C6,R
+U+19C7,R
+U+19C8,R
+U+19C9,R
+U+19D0,R
+U+19D1,R
+U+19D2,R
+U+19D3,R
+U+19D4,R
+U+19D5,R
+U+19D6,R
+U+19D7,R
+U+19D8,R
+U+19D9,R
+U+19DA,R
+U+19DE,R
+U+19DF,R
+U+19E0,R
+U+19E1,R
+U+19E2,R
+U+19E3,R
+U+19E4,R
+U+19E5,R
+U+19E6,R
+U+19E7,R
+U+19E8,R
+U+19E9,R
+U+19EA,R
+U+19EB,R
+U+19EC,R
+U+19ED,R
+U+19EE,R
+U+19EF,R
+U+19F0,R
+U+19F1,R
+U+19F2,R
+U+19F3,R
+U+19F4,R
+U+19F5,R
+U+19F6,R
+U+19F7,R
+U+19F8,R
+U+19F9,R
+U+19FA,R
+U+19FB,R
+U+19FC,R
+U+19FD,R
+U+19FE,R
+U+19FF,R
+U+1A00,R
+U+1A01,R
+U+1A02,R
+U+1A03,R
+U+1A04,R
+U+1A05,R
+U+1A06,R
+U+1A07,R
+U+1A08,R
+U+1A09,R
+U+1A0A,R
+U+1A0B,R
+U+1A0C,R
+U+1A0D,R
+U+1A0E,R
+U+1A0F,R
+U+1A10,R
+U+1A11,R
+U+1A12,R
+U+1A13,R
+U+1A14,R
+U+1A15,R
+U+1A16,R
+U+1A17,R
+U+1A18,R
+U+1A19,R
+U+1A1A,R
+U+1A1B,R
+U+1A1E,R
+U+1A1F,R
+U+1A20,R
+U+1A21,R
+U+1A22,R
+U+1A23,R
+U+1A24,R
+U+1A25,R
+U+1A26,R
+U+1A27,R
+U+1A28,R
+U+1A29,R
+U+1A2A,R
+U+1A2B,R
+U+1A2C,R
+U+1A2D,R
+U+1A2E,R
+U+1A2F,R
+U+1A30,R
+U+1A31,R
+U+1A32,R
+U+1A33,R
+U+1A34,R
+U+1A35,R
+U+1A36,R
+U+1A37,R
+U+1A38,R
+U+1A39,R
+U+1A3A,R
+U+1A3B,R
+U+1A3C,R
+U+1A3D,R
+U+1A3E,R
+U+1A3F,R
+U+1A40,R
+U+1A41,R
+U+1A42,R
+U+1A43,R
+U+1A44,R
+U+1A45,R
+U+1A46,R
+U+1A47,R
+U+1A48,R
+U+1A49,R
+U+1A4A,R
+U+1A4B,R
+U+1A4C,R
+U+1A4D,R
+U+1A4E,R
+U+1A4F,R
+U+1A50,R
+U+1A51,R
+U+1A52,R
+U+1A53,R
+U+1A54,R
+U+1A55,R
+U+1A56,R
+U+1A57,R
+U+1A58,R
+U+1A59,R
+U+1A5A,R
+U+1A5B,R
+U+1A5C,R
+U+1A5D,R
+U+1A5E,R
+U+1A60,R
+U+1A61,R
+U+1A62,R
+U+1A63,R
+U+1A64,R
+U+1A65,R
+U+1A66,R
+U+1A67,R
+U+1A68,R
+U+1A69,R
+U+1A6A,R
+U+1A6B,R
+U+1A6C,R
+U+1A6D,R
+U+1A6E,R
+U+1A6F,R
+U+1A70,R
+U+1A71,R
+U+1A72,R
+U+1A73,R
+U+1A74,R
+U+1A75,R
+U+1A76,R
+U+1A77,R
+U+1A78,R
+U+1A79,R
+U+1A7A,R
+U+1A7B,R
+U+1A7C,R
+U+1A7F,R
+U+1A80,R
+U+1A81,R
+U+1A82,R
+U+1A83,R
+U+1A84,R
+U+1A85,R
+U+1A86,R
+U+1A87,R
+U+1A88,R
+U+1A89,R
+U+1A90,R
+U+1A91,R
+U+1A92,R
+U+1A93,R
+U+1A94,R
+U+1A95,R
+U+1A96,R
+U+1A97,R
+U+1A98,R
+U+1A99,R
+U+1AA0,R
+U+1AA1,R
+U+1AA2,R
+U+1AA3,R
+U+1AA4,R
+U+1AA5,R
+U+1AA6,R
+U+1AA7,R
+U+1AA8,R
+U+1AA9,R
+U+1AAA,R
+U+1AAB,R
+U+1AAC,R
+U+1AAD,R
+U+1B00,R
+U+1B01,R
+U+1B02,R
+U+1B03,R
+U+1B04,R
+U+1B05,R
+U+1B06,R
+U+1B07,R
+U+1B08,R
+U+1B09,R
+U+1B0A,R
+U+1B0B,R
+U+1B0C,R
+U+1B0D,R
+U+1B0E,R
+U+1B0F,R
+U+1B10,R
+U+1B11,R
+U+1B12,R
+U+1B13,R
+U+1B14,R
+U+1B15,R
+U+1B16,R
+U+1B17,R
+U+1B18,R
+U+1B19,R
+U+1B1A,R
+U+1B1B,R
+U+1B1C,R
+U+1B1D,R
+U+1B1E,R
+U+1B1F,R
+U+1B20,R
+U+1B21,R
+U+1B22,R
+U+1B23,R
+U+1B24,R
+U+1B25,R
+U+1B26,R
+U+1B27,R
+U+1B28,R
+U+1B29,R
+U+1B2A,R
+U+1B2B,R
+U+1B2C,R
+U+1B2D,R
+U+1B2E,R
+U+1B2F,R
+U+1B30,R
+U+1B31,R
+U+1B32,R
+U+1B33,R
+U+1B34,R
+U+1B35,R
+U+1B36,R
+U+1B37,R
+U+1B38,R
+U+1B39,R
+U+1B3A,R
+U+1B3B,R
+U+1B3C,R
+U+1B3D,R
+U+1B3E,R
+U+1B3F,R
+U+1B40,R
+U+1B41,R
+U+1B42,R
+U+1B43,R
+U+1B44,R
+U+1B45,R
+U+1B46,R
+U+1B47,R
+U+1B48,R
+U+1B49,R
+U+1B4A,R
+U+1B4B,R
+U+1B50,R
+U+1B51,R
+U+1B52,R
+U+1B53,R
+U+1B54,R
+U+1B55,R
+U+1B56,R
+U+1B57,R
+U+1B58,R
+U+1B59,R
+U+1B5A,R
+U+1B5B,R
+U+1B5C,R
+U+1B5D,R
+U+1B5E,R
+U+1B5F,R
+U+1B60,R
+U+1B61,R
+U+1B62,R
+U+1B63,R
+U+1B64,R
+U+1B65,R
+U+1B66,R
+U+1B67,R
+U+1B68,R
+U+1B69,R
+U+1B6A,R
+U+1B6B,R
+U+1B6C,R
+U+1B6D,R
+U+1B6E,R
+U+1B6F,R
+U+1B70,R
+U+1B71,R
+U+1B72,R
+U+1B73,R
+U+1B74,R
+U+1B75,R
+U+1B76,R
+U+1B77,R
+U+1B78,R
+U+1B79,R
+U+1B7A,R
+U+1B7B,R
+U+1B7C,R
+U+1B80,R
+U+1B81,R
+U+1B82,R
+U+1B83,R
+U+1B84,R
+U+1B85,R
+U+1B86,R
+U+1B87,R
+U+1B88,R
+U+1B89,R
+U+1B8A,R
+U+1B8B,R
+U+1B8C,R
+U+1B8D,R
+U+1B8E,R
+U+1B8F,R
+U+1B90,R
+U+1B91,R
+U+1B92,R
+U+1B93,R
+U+1B94,R
+U+1B95,R
+U+1B96,R
+U+1B97,R
+U+1B98,R
+U+1B99,R
+U+1B9A,R
+U+1B9B,R
+U+1B9C,R
+U+1B9D,R
+U+1B9E,R
+U+1B9F,R
+U+1BA0,R
+U+1BA1,R
+U+1BA2,R
+U+1BA3,R
+U+1BA4,R
+U+1BA5,R
+U+1BA6,R
+U+1BA7,R
+U+1BA8,R
+U+1BA9,R
+U+1BAA,R
+U+1BAB,R
+U+1BAC,R
+U+1BAD,R
+U+1BAE,R
+U+1BAF,R
+U+1BB0,R
+U+1BB1,R
+U+1BB2,R
+U+1BB3,R
+U+1BB4,R
+U+1BB5,R
+U+1BB6,R
+U+1BB7,R
+U+1BB8,R
+U+1BB9,R
+U+1BBA,R
+U+1BBB,R
+U+1BBC,R
+U+1BBD,R
+U+1BBE,R
+U+1BBF,R
+U+1BC0,R
+U+1BC1,R
+U+1BC2,R
+U+1BC3,R
+U+1BC4,R
+U+1BC5,R
+U+1BC6,R
+U+1BC7,R
+U+1BC8,R
+U+1BC9,R
+U+1BCA,R
+U+1BCB,R
+U+1BCC,R
+U+1BCD,R
+U+1BCE,R
+U+1BCF,R
+U+1BD0,R
+U+1BD1,R
+U+1BD2,R
+U+1BD3,R
+U+1BD4,R
+U+1BD5,R
+U+1BD6,R
+U+1BD7,R
+U+1BD8,R
+U+1BD9,R
+U+1BDA,R
+U+1BDB,R
+U+1BDC,R
+U+1BDD,R
+U+1BDE,R
+U+1BDF,R
+U+1BE0,R
+U+1BE1,R
+U+1BE2,R
+U+1BE3,R
+U+1BE4,R
+U+1BE5,R
+U+1BE6,R
+U+1BE7,R
+U+1BE8,R
+U+1BE9,R
+U+1BEA,R
+U+1BEB,R
+U+1BEC,R
+U+1BED,R
+U+1BEE,R
+U+1BEF,R
+U+1BF0,R
+U+1BF1,R
+U+1BF2,R
+U+1BF3,R
+U+1BFC,R
+U+1BFD,R
+U+1BFE,R
+U+1BFF,R
+U+1C00,R
+U+1C01,R
+U+1C02,R
+U+1C03,R
+U+1C04,R
+U+1C05,R
+U+1C06,R
+U+1C07,R
+U+1C08,R
+U+1C09,R
+U+1C0A,R
+U+1C0B,R
+U+1C0C,R
+U+1C0D,R
+U+1C0E,R
+U+1C0F,R
+U+1C10,R
+U+1C11,R
+U+1C12,R
+U+1C13,R
+U+1C14,R
+U+1C15,R
+U+1C16,R
+U+1C17,R
+U+1C18,R
+U+1C19,R
+U+1C1A,R
+U+1C1B,R
+U+1C1C,R
+U+1C1D,R
+U+1C1E,R
+U+1C1F,R
+U+1C20,R
+U+1C21,R
+U+1C22,R
+U+1C23,R
+U+1C24,R
+U+1C25,R
+U+1C26,R
+U+1C27,R
+U+1C28,R
+U+1C29,R
+U+1C2A,R
+U+1C2B,R
+U+1C2C,R
+U+1C2D,R
+U+1C2E,R
+U+1C2F,R
+U+1C30,R
+U+1C31,R
+U+1C32,R
+U+1C33,R
+U+1C34,R
+U+1C35,R
+U+1C36,R
+U+1C37,R
+U+1C3B,R
+U+1C3C,R
+U+1C3D,R
+U+1C3E,R
+U+1C3F,R
+U+1C40,R
+U+1C41,R
+U+1C42,R
+U+1C43,R
+U+1C44,R
+U+1C45,R
+U+1C46,R
+U+1C47,R
+U+1C48,R
+U+1C49,R
+U+1C4D,R
+U+1C4E,R
+U+1C4F,R
+U+1C50,R
+U+1C51,R
+U+1C52,R
+U+1C53,R
+U+1C54,R
+U+1C55,R
+U+1C56,R
+U+1C57,R
+U+1C58,R
+U+1C59,R
+U+1C5A,R
+U+1C5B,R
+U+1C5C,R
+U+1C5D,R
+U+1C5E,R
+U+1C5F,R
+U+1C60,R
+U+1C61,R
+U+1C62,R
+U+1C63,R
+U+1C64,R
+U+1C65,R
+U+1C66,R
+U+1C67,R
+U+1C68,R
+U+1C69,R
+U+1C6A,R
+U+1C6B,R
+U+1C6C,R
+U+1C6D,R
+U+1C6E,R
+U+1C6F,R
+U+1C70,R
+U+1C71,R
+U+1C72,R
+U+1C73,R
+U+1C74,R
+U+1C75,R
+U+1C76,R
+U+1C77,R
+U+1C78,R
+U+1C79,R
+U+1C7A,R
+U+1C7B,R
+U+1C7C,R
+U+1C7D,R
+U+1C7E,R
+U+1C7F,R
+U+1CC0,R
+U+1CC1,R
+U+1CC2,R
+U+1CC3,R
+U+1CC4,R
+U+1CC5,R
+U+1CC6,R
+U+1CC7,R
+U+1CD0,R
+U+1CD1,R
+U+1CD2,R
+U+1CD3,R
+U+1CD4,R
+U+1CD5,R
+U+1CD6,R
+U+1CD7,R
+U+1CD8,R
+U+1CD9,R
+U+1CDA,R
+U+1CDB,R
+U+1CDC,R
+U+1CDD,R
+U+1CDE,R
+U+1CDF,R
+U+1CE0,R
+U+1CE1,R
+U+1CE2,R
+U+1CE3,R
+U+1CE4,R
+U+1CE5,R
+U+1CE6,R
+U+1CE7,R
+U+1CE8,R
+U+1CE9,R
+U+1CEA,R
+U+1CEB,R
+U+1CEC,R
+U+1CED,R
+U+1CEE,R
+U+1CEF,R
+U+1CF0,R
+U+1CF1,R
+U+1CF2,R
+U+1CF3,R
+U+1CF4,R
+U+1CF5,R
+U+1CF6,R
+U+1D00,R
+U+1D01,R
+U+1D02,R
+U+1D03,R
+U+1D04,R
+U+1D05,R
+U+1D06,R
+U+1D07,R
+U+1D08,R
+U+1D09,R
+U+1D0A,R
+U+1D0B,R
+U+1D0C,R
+U+1D0D,R
+U+1D0E,R
+U+1D0F,R
+U+1D10,R
+U+1D11,R
+U+1D12,R
+U+1D13,R
+U+1D14,R
+U+1D15,R
+U+1D16,R
+U+1D17,R
+U+1D18,R
+U+1D19,R
+U+1D1A,R
+U+1D1B,R
+U+1D1C,R
+U+1D1D,R
+U+1D1E,R
+U+1D1F,R
+U+1D20,R
+U+1D21,R
+U+1D22,R
+U+1D23,R
+U+1D24,R
+U+1D25,R
+U+1D26,R
+U+1D27,R
+U+1D28,R
+U+1D29,R
+U+1D2A,R
+U+1D2B,R
+U+1D2C,R
+U+1D2D,R
+U+1D2E,R
+U+1D2F,R
+U+1D30,R
+U+1D31,R
+U+1D32,R
+U+1D33,R
+U+1D34,R
+U+1D35,R
+U+1D36,R
+U+1D37,R
+U+1D38,R
+U+1D39,R
+U+1D3A,R
+U+1D3B,R
+U+1D3C,R
+U+1D3D,R
+U+1D3E,R
+U+1D3F,R
+U+1D40,R
+U+1D41,R
+U+1D42,R
+U+1D43,R
+U+1D44,R
+U+1D45,R
+U+1D46,R
+U+1D47,R
+U+1D48,R
+U+1D49,R
+U+1D4A,R
+U+1D4B,R
+U+1D4C,R
+U+1D4D,R
+U+1D4E,R
+U+1D4F,R
+U+1D50,R
+U+1D51,R
+U+1D52,R
+U+1D53,R
+U+1D54,R
+U+1D55,R
+U+1D56,R
+U+1D57,R
+U+1D58,R
+U+1D59,R
+U+1D5A,R
+U+1D5B,R
+U+1D5C,R
+U+1D5D,R
+U+1D5E,R
+U+1D5F,R
+U+1D60,R
+U+1D61,R
+U+1D62,R
+U+1D63,R
+U+1D64,R
+U+1D65,R
+U+1D66,R
+U+1D67,R
+U+1D68,R
+U+1D69,R
+U+1D6A,R
+U+1D6B,R
+U+1D6C,R
+U+1D6D,R
+U+1D6E,R
+U+1D6F,R
+U+1D70,R
+U+1D71,R
+U+1D72,R
+U+1D73,R
+U+1D74,R
+U+1D75,R
+U+1D76,R
+U+1D77,R
+U+1D78,R
+U+1D79,R
+U+1D7A,R
+U+1D7B,R
+U+1D7C,R
+U+1D7D,R
+U+1D7E,R
+U+1D7F,R
+U+1D80,R
+U+1D81,R
+U+1D82,R
+U+1D83,R
+U+1D84,R
+U+1D85,R
+U+1D86,R
+U+1D87,R
+U+1D88,R
+U+1D89,R
+U+1D8A,R
+U+1D8B,R
+U+1D8C,R
+U+1D8D,R
+U+1D8E,R
+U+1D8F,R
+U+1D90,R
+U+1D91,R
+U+1D92,R
+U+1D93,R
+U+1D94,R
+U+1D95,R
+U+1D96,R
+U+1D97,R
+U+1D98,R
+U+1D99,R
+U+1D9A,R
+U+1D9B,R
+U+1D9C,R
+U+1D9D,R
+U+1D9E,R
+U+1D9F,R
+U+1DA0,R
+U+1DA1,R
+U+1DA2,R
+U+1DA3,R
+U+1DA4,R
+U+1DA5,R
+U+1DA6,R
+U+1DA7,R
+U+1DA8,R
+U+1DA9,R
+U+1DAA,R
+U+1DAB,R
+U+1DAC,R
+U+1DAD,R
+U+1DAE,R
+U+1DAF,R
+U+1DB0,R
+U+1DB1,R
+U+1DB2,R
+U+1DB3,R
+U+1DB4,R
+U+1DB5,R
+U+1DB6,R
+U+1DB7,R
+U+1DB8,R
+U+1DB9,R
+U+1DBA,R
+U+1DBB,R
+U+1DBC,R
+U+1DBD,R
+U+1DBE,R
+U+1DBF,R
+U+1DC0,R
+U+1DC1,R
+U+1DC2,R
+U+1DC3,R
+U+1DC4,R
+U+1DC5,R
+U+1DC6,R
+U+1DC7,R
+U+1DC8,R
+U+1DC9,R
+U+1DCA,R
+U+1DCB,R
+U+1DCC,R
+U+1DCD,R
+U+1DCE,R
+U+1DCF,R
+U+1DD0,R
+U+1DD1,R
+U+1DD2,R
+U+1DD3,R
+U+1DD4,R
+U+1DD5,R
+U+1DD6,R
+U+1DD7,R
+U+1DD8,R
+U+1DD9,R
+U+1DDA,R
+U+1DDB,R
+U+1DDC,R
+U+1DDD,R
+U+1DDE,R
+U+1DDF,R
+U+1DE0,R
+U+1DE1,R
+U+1DE2,R
+U+1DE3,R
+U+1DE4,R
+U+1DE5,R
+U+1DE6,R
+U+1DFC,R
+U+1DFD,R
+U+1DFE,R
+U+1DFF,R
+U+1E00,R
+U+1E01,R
+U+1E02,R
+U+1E03,R
+U+1E04,R
+U+1E05,R
+U+1E06,R
+U+1E07,R
+U+1E08,R
+U+1E09,R
+U+1E0A,R
+U+1E0B,R
+U+1E0C,R
+U+1E0D,R
+U+1E0E,R
+U+1E0F,R
+U+1E10,R
+U+1E11,R
+U+1E12,R
+U+1E13,R
+U+1E14,R
+U+1E15,R
+U+1E16,R
+U+1E17,R
+U+1E18,R
+U+1E19,R
+U+1E1A,R
+U+1E1B,R
+U+1E1C,R
+U+1E1D,R
+U+1E1E,R
+U+1E1F,R
+U+1E20,R
+U+1E21,R
+U+1E22,R
+U+1E23,R
+U+1E24,R
+U+1E25,R
+U+1E26,R
+U+1E27,R
+U+1E28,R
+U+1E29,R
+U+1E2A,R
+U+1E2B,R
+U+1E2C,R
+U+1E2D,R
+U+1E2E,R
+U+1E2F,R
+U+1E30,R
+U+1E31,R
+U+1E32,R
+U+1E33,R
+U+1E34,R
+U+1E35,R
+U+1E36,R
+U+1E37,R
+U+1E38,R
+U+1E39,R
+U+1E3A,R
+U+1E3B,R
+U+1E3C,R
+U+1E3D,R
+U+1E3E,R
+U+1E3F,R
+U+1E40,R
+U+1E41,R
+U+1E42,R
+U+1E43,R
+U+1E44,R
+U+1E45,R
+U+1E46,R
+U+1E47,R
+U+1E48,R
+U+1E49,R
+U+1E4A,R
+U+1E4B,R
+U+1E4C,R
+U+1E4D,R
+U+1E4E,R
+U+1E4F,R
+U+1E50,R
+U+1E51,R
+U+1E52,R
+U+1E53,R
+U+1E54,R
+U+1E55,R
+U+1E56,R
+U+1E57,R
+U+1E58,R
+U+1E59,R
+U+1E5A,R
+U+1E5B,R
+U+1E5C,R
+U+1E5D,R
+U+1E5E,R
+U+1E5F,R
+U+1E60,R
+U+1E61,R
+U+1E62,R
+U+1E63,R
+U+1E64,R
+U+1E65,R
+U+1E66,R
+U+1E67,R
+U+1E68,R
+U+1E69,R
+U+1E6A,R
+U+1E6B,R
+U+1E6C,R
+U+1E6D,R
+U+1E6E,R
+U+1E6F,R
+U+1E70,R
+U+1E71,R
+U+1E72,R
+U+1E73,R
+U+1E74,R
+U+1E75,R
+U+1E76,R
+U+1E77,R
+U+1E78,R
+U+1E79,R
+U+1E7A,R
+U+1E7B,R
+U+1E7C,R
+U+1E7D,R
+U+1E7E,R
+U+1E7F,R
+U+1E80,R
+U+1E81,R
+U+1E82,R
+U+1E83,R
+U+1E84,R
+U+1E85,R
+U+1E86,R
+U+1E87,R
+U+1E88,R
+U+1E89,R
+U+1E8A,R
+U+1E8B,R
+U+1E8C,R
+U+1E8D,R
+U+1E8E,R
+U+1E8F,R
+U+1E90,R
+U+1E91,R
+U+1E92,R
+U+1E93,R
+U+1E94,R
+U+1E95,R
+U+1E96,R
+U+1E97,R
+U+1E98,R
+U+1E99,R
+U+1E9A,R
+U+1E9B,R
+U+1E9C,R
+U+1E9D,R
+U+1E9E,R
+U+1E9F,R
+U+1EA0,R
+U+1EA1,R
+U+1EA2,R
+U+1EA3,R
+U+1EA4,R
+U+1EA5,R
+U+1EA6,R
+U+1EA7,R
+U+1EA8,R
+U+1EA9,R
+U+1EAA,R
+U+1EAB,R
+U+1EAC,R
+U+1EAD,R
+U+1EAE,R
+U+1EAF,R
+U+1EB0,R
+U+1EB1,R
+U+1EB2,R
+U+1EB3,R
+U+1EB4,R
+U+1EB5,R
+U+1EB6,R
+U+1EB7,R
+U+1EB8,R
+U+1EB9,R
+U+1EBA,R
+U+1EBB,R
+U+1EBC,R
+U+1EBD,R
+U+1EBE,R
+U+1EBF,R
+U+1EC0,R
+U+1EC1,R
+U+1EC2,R
+U+1EC3,R
+U+1EC4,R
+U+1EC5,R
+U+1EC6,R
+U+1EC7,R
+U+1EC8,R
+U+1EC9,R
+U+1ECA,R
+U+1ECB,R
+U+1ECC,R
+U+1ECD,R
+U+1ECE,R
+U+1ECF,R
+U+1ED0,R
+U+1ED1,R
+U+1ED2,R
+U+1ED3,R
+U+1ED4,R
+U+1ED5,R
+U+1ED6,R
+U+1ED7,R
+U+1ED8,R
+U+1ED9,R
+U+1EDA,R
+U+1EDB,R
+U+1EDC,R
+U+1EDD,R
+U+1EDE,R
+U+1EDF,R
+U+1EE0,R
+U+1EE1,R
+U+1EE2,R
+U+1EE3,R
+U+1EE4,R
+U+1EE5,R
+U+1EE6,R
+U+1EE7,R
+U+1EE8,R
+U+1EE9,R
+U+1EEA,R
+U+1EEB,R
+U+1EEC,R
+U+1EED,R
+U+1EEE,R
+U+1EEF,R
+U+1EF0,R
+U+1EF1,R
+U+1EF2,R
+U+1EF3,R
+U+1EF4,R
+U+1EF5,R
+U+1EF6,R
+U+1EF7,R
+U+1EF8,R
+U+1EF9,R
+U+1EFA,R
+U+1EFB,R
+U+1EFC,R
+U+1EFD,R
+U+1EFE,R
+U+1EFF,R
+U+1F00,R
+U+1F01,R
+U+1F02,R
+U+1F03,R
+U+1F04,R
+U+1F05,R
+U+1F06,R
+U+1F07,R
+U+1F08,R
+U+1F09,R
+U+1F0A,R
+U+1F0B,R
+U+1F0C,R
+U+1F0D,R
+U+1F0E,R
+U+1F0F,R
+U+1F10,R
+U+1F11,R
+U+1F12,R
+U+1F13,R
+U+1F14,R
+U+1F15,R
+U+1F18,R
+U+1F19,R
+U+1F1A,R
+U+1F1B,R
+U+1F1C,R
+U+1F1D,R
+U+1F20,R
+U+1F21,R
+U+1F22,R
+U+1F23,R
+U+1F24,R
+U+1F25,R
+U+1F26,R
+U+1F27,R
+U+1F28,R
+U+1F29,R
+U+1F2A,R
+U+1F2B,R
+U+1F2C,R
+U+1F2D,R
+U+1F2E,R
+U+1F2F,R
+U+1F30,R
+U+1F31,R
+U+1F32,R
+U+1F33,R
+U+1F34,R
+U+1F35,R
+U+1F36,R
+U+1F37,R
+U+1F38,R
+U+1F39,R
+U+1F3A,R
+U+1F3B,R
+U+1F3C,R
+U+1F3D,R
+U+1F3E,R
+U+1F3F,R
+U+1F40,R
+U+1F41,R
+U+1F42,R
+U+1F43,R
+U+1F44,R
+U+1F45,R
+U+1F48,R
+U+1F49,R
+U+1F4A,R
+U+1F4B,R
+U+1F4C,R
+U+1F4D,R
+U+1F50,R
+U+1F51,R
+U+1F52,R
+U+1F53,R
+U+1F54,R
+U+1F55,R
+U+1F56,R
+U+1F57,R
+U+1F59,R
+U+1F5B,R
+U+1F5D,R
+U+1F5F,R
+U+1F60,R
+U+1F61,R
+U+1F62,R
+U+1F63,R
+U+1F64,R
+U+1F65,R
+U+1F66,R
+U+1F67,R
+U+1F68,R
+U+1F69,R
+U+1F6A,R
+U+1F6B,R
+U+1F6C,R
+U+1F6D,R
+U+1F6E,R
+U+1F6F,R
+U+1F70,R
+U+1F71,R
+U+1F72,R
+U+1F73,R
+U+1F74,R
+U+1F75,R
+U+1F76,R
+U+1F77,R
+U+1F78,R
+U+1F79,R
+U+1F7A,R
+U+1F7B,R
+U+1F7C,R
+U+1F7D,R
+U+1F80,R
+U+1F81,R
+U+1F82,R
+U+1F83,R
+U+1F84,R
+U+1F85,R
+U+1F86,R
+U+1F87,R
+U+1F88,R
+U+1F89,R
+U+1F8A,R
+U+1F8B,R
+U+1F8C,R
+U+1F8D,R
+U+1F8E,R
+U+1F8F,R
+U+1F90,R
+U+1F91,R
+U+1F92,R
+U+1F93,R
+U+1F94,R
+U+1F95,R
+U+1F96,R
+U+1F97,R
+U+1F98,R
+U+1F99,R
+U+1F9A,R
+U+1F9B,R
+U+1F9C,R
+U+1F9D,R
+U+1F9E,R
+U+1F9F,R
+U+1FA0,R
+U+1FA1,R
+U+1FA2,R
+U+1FA3,R
+U+1FA4,R
+U+1FA5,R
+U+1FA6,R
+U+1FA7,R
+U+1FA8,R
+U+1FA9,R
+U+1FAA,R
+U+1FAB,R
+U+1FAC,R
+U+1FAD,R
+U+1FAE,R
+U+1FAF,R
+U+1FB0,R
+U+1FB1,R
+U+1FB2,R
+U+1FB3,R
+U+1FB4,R
+U+1FB6,R
+U+1FB7,R
+U+1FB8,R
+U+1FB9,R
+U+1FBA,R
+U+1FBB,R
+U+1FBC,R
+U+1FBD,R
+U+1FBE,R
+U+1FBF,R
+U+1FC0,R
+U+1FC1,R
+U+1FC2,R
+U+1FC3,R
+U+1FC4,R
+U+1FC6,R
+U+1FC7,R
+U+1FC8,R
+U+1FC9,R
+U+1FCA,R
+U+1FCB,R
+U+1FCC,R
+U+1FCD,R
+U+1FCE,R
+U+1FCF,R
+U+1FD0,R
+U+1FD1,R
+U+1FD2,R
+U+1FD3,R
+U+1FD6,R
+U+1FD7,R
+U+1FD8,R
+U+1FD9,R
+U+1FDA,R
+U+1FDB,R
+U+1FDD,R
+U+1FDE,R
+U+1FDF,R
+U+1FE0,R
+U+1FE1,R
+U+1FE2,R
+U+1FE3,R
+U+1FE4,R
+U+1FE5,R
+U+1FE6,R
+U+1FE7,R
+U+1FE8,R
+U+1FE9,R
+U+1FEA,R
+U+1FEB,R
+U+1FEC,R
+U+1FED,R
+U+1FEE,R
+U+1FEF,R
+U+1FF2,R
+U+1FF3,R
+U+1FF4,R
+U+1FF6,R
+U+1FF7,R
+U+1FF8,R
+U+1FF9,R
+U+1FFA,R
+U+1FFB,R
+U+1FFC,R
+U+1FFD,R
+U+1FFE,R
+U+2000,R
+U+2001,R
+U+2002,R
+U+2003,R
+U+2004,R
+U+2005,R
+U+2006,R
+U+2007,R
+U+2008,R
+U+2009,R
+U+200A,R
+U+200B,R
+U+200C,R
+U+200D,R
+U+200E,R
+U+200F,R
+U+2010,R
+U+2011,R
+U+2012,R
+U+2013,R
+U+2014,R
+U+2015,R
+U+2016,U
+U+2017,R
+U+2018,R
+U+2019,R
+U+201A,R
+U+201B,R
+U+201C,U
+U+201D,U
+U+201E,U
+U+201F,U
+U+2020,U
+U+2021,U
+U+2022,R
+U+2023,R
+U+2024,R
+U+2025,R
+U+2026,R
+U+2027,R
+U+2028,R
+U+2029,R
+U+202A,R
+U+202B,R
+U+202C,R
+U+202D,R
+U+202E,R
+U+202F,R
+U+2030,U
+U+2031,U
+U+2032,R
+U+2033,R
+U+2034,R
+U+2035,R
+U+2036,R
+U+2037,R
+U+2038,R
+U+2039,R
+U+203A,R
+U+203B,U
+U+203C,U
+U+203D,U
+U+203E,R
+U+203F,R
+U+2040,R
+U+2041,R
+U+2042,U
+U+2043,R
+U+2044,U
+U+2045,R
+U+2046,R
+U+2047,U
+U+2048,U
+U+2049,U
+U+204A,R
+U+204B,R
+U+204C,R
+U+204D,R
+U+204E,R
+U+204F,R
+U+2050,R
+U+2051,U
+U+2052,R
+U+2053,R
+U+2054,R
+U+2055,R
+U+2056,R
+U+2057,R
+U+2058,R
+U+2059,R
+U+205A,R
+U+205B,R
+U+205C,R
+U+205D,R
+U+205E,R
+U+205F,R
+U+2060,R
+U+2061,R
+U+2062,R
+U+2063,R
+U+2064,R
+U+206A,R
+U+206B,R
+U+206C,R
+U+206D,R
+U+206E,R
+U+206F,R
+U+2070,R
+U+2071,R
+U+2074,R
+U+2075,R
+U+2076,R
+U+2077,R
+U+2078,R
+U+2079,R
+U+207A,R
+U+207B,R
+U+207C,R
+U+207D,R
+U+207E,R
+U+207F,R
+U+2080,R
+U+2081,R
+U+2082,R
+U+2083,R
+U+2084,R
+U+2085,R
+U+2086,R
+U+2087,R
+U+2088,R
+U+2089,R
+U+208A,R
+U+208B,R
+U+208C,R
+U+208D,R
+U+208E,R
+U+2090,R
+U+2091,R
+U+2092,R
+U+2093,R
+U+2094,R
+U+2095,R
+U+2096,R
+U+2097,R
+U+2098,R
+U+2099,R
+U+209A,R
+U+209B,R
+U+209C,R
+U+20A0,R
+U+20A1,R
+U+20A2,R
+U+20A3,R
+U+20A4,R
+U+20A5,R
+U+20A6,R
+U+20A7,R
+U+20A8,R
+U+20A9,R
+U+20AA,R
+U+20AB,R
+U+20AC,R
+U+20AD,R
+U+20AE,R
+U+20AF,R
+U+20B0,R
+U+20B1,R
+U+20B2,R
+U+20B3,R
+U+20B4,R
+U+20B5,R
+U+20B6,R
+U+20B7,R
+U+20B8,R
+U+20B9,R
+U+20D0,U
+U+20D1,U
+U+20D2,U
+U+20D3,U
+U+20D4,U
+U+20D5,U
+U+20D6,U
+U+20D7,U
+U+20D8,U
+U+20D9,U
+U+20DA,U
+U+20DB,U
+U+20DC,U
+U+20DD,U
+U+20DE,U
+U+20DF,U
+U+20E0,U
+U+20E1,U
+U+20E2,U
+U+20E3,U
+U+20E4,U
+U+20E5,U
+U+20E6,U
+U+20E7,U
+U+20E8,U
+U+20E9,U
+U+20EA,U
+U+20EB,U
+U+20EC,U
+U+20ED,U
+U+20EE,U
+U+20EF,U
+U+20F0,U
+U+2100,U
+U+2101,U
+U+2102,U
+U+2103,U
+U+2104,U
+U+2105,U
+U+2106,U
+U+2107,U
+U+2108,U
+U+2109,U
+U+210A,U
+U+210B,U
+U+210C,U
+U+210D,U
+U+210E,U
+U+210F,U
+U+2110,U
+U+2111,U
+U+2112,U
+U+2113,U
+U+2114,U
+U+2115,U
+U+2116,U
+U+2117,U
+U+2118,R
+U+2119,U
+U+211A,U
+U+211B,U
+U+211C,U
+U+211D,U
+U+211E,U
+U+211F,U
+U+2120,U
+U+2121,U
+U+2122,U
+U+2123,U
+U+2124,U
+U+2125,U
+U+2126,U
+U+2127,U
+U+2128,U
+U+2129,U
+U+212A,U
+U+212B,U
+U+212C,U
+U+212D,U
+U+212E,U
+U+212F,U
+U+2130,U
+U+2131,U
+U+2132,U
+U+2133,U
+U+2134,U
+U+2135,U
+U+2136,U
+U+2137,U
+U+2138,U
+U+2139,U
+U+213A,U
+U+213B,U
+U+213C,U
+U+213D,U
+U+213E,U
+U+213F,U
+U+2140,R
+U+2141,R
+U+2142,R
+U+2143,R
+U+2144,R
+U+2145,U
+U+2146,U
+U+2147,U
+U+2148,U
+U+2149,U
+U+214A,U
+U+214B,R
+U+214C,U
+U+214D,U
+U+214E,U
+U+214F,U
+U+2150,U
+U+2151,U
+U+2152,U
+U+2153,U
+U+2154,U
+U+2155,U
+U+2156,U
+U+2157,U
+U+2158,U
+U+2159,U
+U+215A,U
+U+215B,U
+U+215C,U
+U+215D,U
+U+215E,U
+U+215F,U
+U+2160,U
+U+2161,U
+U+2162,U
+U+2163,U
+U+2164,U
+U+2165,U
+U+2166,U
+U+2167,U
+U+2168,U
+U+2169,U
+U+216A,U
+U+216B,U
+U+216C,U
+U+216D,U
+U+216E,U
+U+216F,U
+U+2170,U
+U+2171,U
+U+2172,U
+U+2173,U
+U+2174,U
+U+2175,U
+U+2176,U
+U+2177,U
+U+2178,U
+U+2179,U
+U+217A,U
+U+217B,U
+U+217C,U
+U+217D,U
+U+217E,U
+U+217F,U
+U+2180,U
+U+2181,U
+U+2182,U
+U+2183,U
+U+2184,U
+U+2185,U
+U+2186,U
+U+2187,U
+U+2188,U
+U+2189,U
+U+2190,R
+U+2191,R
+U+2192,R
+U+2193,R
+U+2194,R
+U+2195,R
+U+2196,R
+U+2197,R
+U+2198,R
+U+2199,R
+U+219A,R
+U+219B,R
+U+219C,R
+U+219D,R
+U+219E,R
+U+219F,R
+U+21A0,R
+U+21A1,R
+U+21A2,R
+U+21A3,R
+U+21A4,R
+U+21A5,R
+U+21A6,R
+U+21A7,R
+U+21A8,R
+U+21A9,R
+U+21AA,R
+U+21AB,R
+U+21AC,R
+U+21AD,R
+U+21AE,R
+U+21AF,R
+U+21B0,R
+U+21B1,R
+U+21B2,R
+U+21B3,R
+U+21B4,R
+U+21B5,R
+U+21B6,R
+U+21B7,R
+U+21B8,R
+U+21B9,R
+U+21BA,R
+U+21BB,R
+U+21BC,R
+U+21BD,R
+U+21BE,R
+U+21BF,R
+U+21C0,R
+U+21C1,R
+U+21C2,R
+U+21C3,R
+U+21C4,R
+U+21C5,R
+U+21C6,R
+U+21C7,R
+U+21C8,R
+U+21C9,R
+U+21CA,R
+U+21CB,R
+U+21CC,R
+U+21CD,R
+U+21CE,R
+U+21CF,R
+U+21D0,R
+U+21D1,R
+U+21D2,R
+U+21D3,R
+U+21D4,R
+U+21D5,R
+U+21D6,R
+U+21D7,R
+U+21D8,R
+U+21D9,R
+U+21DA,R
+U+21DB,R
+U+21DC,R
+U+21DD,R
+U+21DE,R
+U+21DF,R
+U+21E0,R
+U+21E1,R
+U+21E2,R
+U+21E3,R
+U+21E4,R
+U+21E5,R
+U+21E6,R
+U+21E7,R
+U+21E8,R
+U+21E9,R
+U+21EA,R
+U+21EB,R
+U+21EC,R
+U+21ED,R
+U+21EE,R
+U+21EF,R
+U+21F0,R
+U+21F1,R
+U+21F2,R
+U+21F3,R
+U+21F4,R
+U+21F5,R
+U+21F6,R
+U+21F7,R
+U+21F8,R
+U+21F9,R
+U+21FA,R
+U+21FB,R
+U+21FC,R
+U+21FD,R
+U+21FE,R
+U+21FF,R
+U+2200,R
+U+2201,R
+U+2202,R
+U+2203,R
+U+2204,R
+U+2205,R
+U+2206,R
+U+2207,R
+U+2208,R
+U+2209,R
+U+220A,R
+U+220B,R
+U+220C,R
+U+220D,R
+U+220E,R
+U+220F,R
+U+2210,R
+U+2211,R
+U+2212,R
+U+2213,R
+U+2214,R
+U+2215,R
+U+2216,R
+U+2217,R
+U+2218,R
+U+2219,R
+U+221A,R
+U+221B,R
+U+221C,R
+U+221D,R
+U+221E,R
+U+221F,R
+U+2220,R
+U+2221,R
+U+2222,R
+U+2223,R
+U+2224,R
+U+2225,R
+U+2226,R
+U+2227,R
+U+2228,R
+U+2229,R
+U+222A,R
+U+222B,R
+U+222C,R
+U+222D,R
+U+222E,R
+U+222F,R
+U+2230,R
+U+2231,R
+U+2232,R
+U+2233,R
+U+2234,R
+U+2235,R
+U+2236,R
+U+2237,R
+U+2238,R
+U+2239,R
+U+223A,R
+U+223B,R
+U+223C,R
+U+223D,R
+U+223E,R
+U+223F,R
+U+2240,R
+U+2241,R
+U+2242,R
+U+2243,R
+U+2244,R
+U+2245,R
+U+2246,R
+U+2247,R
+U+2248,R
+U+2249,R
+U+224A,R
+U+224B,R
+U+224C,R
+U+224D,R
+U+224E,R
+U+224F,R
+U+2250,R
+U+2251,R
+U+2252,R
+U+2253,R
+U+2254,R
+U+2255,R
+U+2256,R
+U+2257,R
+U+2258,R
+U+2259,R
+U+225A,R
+U+225B,R
+U+225C,R
+U+225D,R
+U+225E,R
+U+225F,R
+U+2260,R
+U+2261,R
+U+2262,R
+U+2263,R
+U+2264,R
+U+2265,R
+U+2266,R
+U+2267,R
+U+2268,R
+U+2269,R
+U+226A,R
+U+226B,R
+U+226C,R
+U+226D,R
+U+226E,R
+U+226F,R
+U+2270,R
+U+2271,R
+U+2272,R
+U+2273,R
+U+2274,R
+U+2275,R
+U+2276,R
+U+2277,R
+U+2278,R
+U+2279,R
+U+227A,R
+U+227B,R
+U+227C,R
+U+227D,R
+U+227E,R
+U+227F,R
+U+2280,R
+U+2281,R
+U+2282,R
+U+2283,R
+U+2284,R
+U+2285,R
+U+2286,R
+U+2287,R
+U+2288,R
+U+2289,R
+U+228A,R
+U+228B,R
+U+228C,R
+U+228D,R
+U+228E,R
+U+228F,R
+U+2290,R
+U+2291,R
+U+2292,R
+U+2293,R
+U+2294,R
+U+2295,R
+U+2296,R
+U+2297,R
+U+2298,R
+U+2299,R
+U+229A,R
+U+229B,R
+U+229C,R
+U+229D,R
+U+229E,R
+U+229F,R
+U+22A0,R
+U+22A1,R
+U+22A2,R
+U+22A3,R
+U+22A4,R
+U+22A5,R
+U+22A6,R
+U+22A7,R
+U+22A8,R
+U+22A9,R
+U+22AA,R
+U+22AB,R
+U+22AC,R
+U+22AD,R
+U+22AE,R
+U+22AF,R
+U+22B0,R
+U+22B1,R
+U+22B2,R
+U+22B3,R
+U+22B4,R
+U+22B5,R
+U+22B6,R
+U+22B7,R
+U+22B8,R
+U+22B9,R
+U+22BA,R
+U+22BB,R
+U+22BC,R
+U+22BD,R
+U+22BE,R
+U+22BF,R
+U+22C0,R
+U+22C1,R
+U+22C2,R
+U+22C3,R
+U+22C4,R
+U+22C5,R
+U+22C6,R
+U+22C7,R
+U+22C8,R
+U+22C9,R
+U+22CA,R
+U+22CB,R
+U+22CC,R
+U+22CD,R
+U+22CE,R
+U+22CF,R
+U+22D0,R
+U+22D1,R
+U+22D2,R
+U+22D3,R
+U+22D4,R
+U+22D5,R
+U+22D6,R
+U+22D7,R
+U+22D8,R
+U+22D9,R
+U+22DA,R
+U+22DB,R
+U+22DC,R
+U+22DD,R
+U+22DE,R
+U+22DF,R
+U+22E0,R
+U+22E1,R
+U+22E2,R
+U+22E3,R
+U+22E4,R
+U+22E5,R
+U+22E6,R
+U+22E7,R
+U+22E8,R
+U+22E9,R
+U+22EA,R
+U+22EB,R
+U+22EC,R
+U+22ED,R
+U+22EE,R
+U+22EF,R
+U+22F0,R
+U+22F1,R
+U+22F2,R
+U+22F3,R
+U+22F4,R
+U+22F5,R
+U+22F6,R
+U+22F7,R
+U+22F8,R
+U+22F9,R
+U+22FA,R
+U+22FB,R
+U+22FC,R
+U+22FD,R
+U+22FE,R
+U+22FF,R
+U+2300,U
+U+2301,U
+U+2302,U
+U+2303,U
+U+2304,U
+U+2305,U
+U+2306,U
+U+2307,U
+U+2308,R
+U+2309,R
+U+230A,R
+U+230B,R
+U+230C,U
+U+230D,U
+U+230E,U
+U+230F,U
+U+2310,U
+U+2311,U
+U+2312,U
+U+2313,U
+U+2314,U
+U+2315,U
+U+2316,U
+U+2317,U
+U+2318,U
+U+2319,U
+U+231A,U
+U+231B,U
+U+231C,U
+U+231D,U
+U+231E,U
+U+231F,U
+U+2320,R
+U+2321,R
+U+2322,U
+U+2323,U
+U+2324,U
+U+2325,U
+U+2326,U
+U+2327,U
+U+2328,U
+U+2329,R
+U+232A,R
+U+232B,U
+U+232C,R
+U+232D,R
+U+232E,R
+U+232F,R
+U+2330,R
+U+2331,R
+U+2332,R
+U+2333,R
+U+2334,R
+U+2335,R
+U+2336,R
+U+2337,R
+U+2338,R
+U+2339,R
+U+233A,R
+U+233B,R
+U+233C,R
+U+233D,R
+U+233E,R
+U+233F,R
+U+2340,R
+U+2341,R
+U+2342,R
+U+2343,R
+U+2344,R
+U+2345,R
+U+2346,R
+U+2347,R
+U+2348,R
+U+2349,R
+U+234A,R
+U+234B,R
+U+234C,R
+U+234D,R
+U+234E,R
+U+234F,R
+U+2350,R
+U+2351,R
+U+2352,R
+U+2353,R
+U+2354,R
+U+2355,R
+U+2356,R
+U+2357,R
+U+2358,R
+U+2359,R
+U+235A,R
+U+235B,R
+U+235C,R
+U+235D,R
+U+235E,R
+U+235F,R
+U+2360,R
+U+2361,R
+U+2362,R
+U+2363,R
+U+2364,R
+U+2365,R
+U+2366,R
+U+2367,R
+U+2368,R
+U+2369,R
+U+236A,R
+U+236B,R
+U+236C,R
+U+236D,R
+U+236E,R
+U+236F,R
+U+2370,R
+U+2371,R
+U+2372,R
+U+2373,R
+U+2374,R
+U+2375,R
+U+2376,R
+U+2377,R
+U+2378,R
+U+2379,R
+U+237A,R
+U+237B,R
+U+237C,R
+U+237D,U
+U+237E,U
+U+237F,U
+U+2380,U
+U+2381,U
+U+2382,U
+U+2383,U
+U+2384,U
+U+2385,U
+U+2386,U
+U+2387,U
+U+2388,U
+U+2389,U
+U+238A,U
+U+238B,U
+U+238C,U
+U+238D,U
+U+238E,U
+U+238F,U
+U+2390,U
+U+2391,U
+U+2392,U
+U+2393,U
+U+2394,U
+U+2395,U
+U+2396,U
+U+2397,U
+U+2398,U
+U+2399,U
+U+239A,U
+U+239B,R
+U+239C,R
+U+239D,R
+U+239E,R
+U+239F,R
+U+23A0,R
+U+23A1,R
+U+23A2,R
+U+23A3,R
+U+23A4,R
+U+23A5,R
+U+23A6,R
+U+23A7,R
+U+23A8,R
+U+23A9,R
+U+23AA,R
+U+23AB,R
+U+23AC,R
+U+23AD,R
+U+23AE,R
+U+23AF,R
+U+23B0,R
+U+23B1,R
+U+23B2,R
+U+23B3,R
+U+23B4,U
+U+23B5,U
+U+23B6,U
+U+23B7,R
+U+23B8,R
+U+23B9,R
+U+23BA,U
+U+23BB,U
+U+23BC,U
+U+23BD,U
+U+23BE,U
+U+23BF,U
+U+23C0,U
+U+23C1,U
+U+23C2,U
+U+23C3,U
+U+23C4,U
+U+23C5,U
+U+23C6,U
+U+23C7,U
+U+23C8,U
+U+23C9,U
+U+23CA,U
+U+23CB,U
+U+23CC,U
+U+23CD,U
+U+23CE,U
+U+23CF,U
+U+23D0,R
+U+23D1,U
+U+23D2,U
+U+23D3,U
+U+23D4,U
+U+23D5,U
+U+23D6,U
+U+23D7,U
+U+23D8,U
+U+23D9,U
+U+23DA,U
+U+23DB,U
+U+23DC,R
+U+23DD,R
+U+23DE,R
+U+23DF,R
+U+23E0,R
+U+23E1,R
+U+23E2,U
+U+23E3,U
+U+23E4,U
+U+23E5,U
+U+23E6,U
+U+23E7,U
+U+23E8,U
+U+23E9,U
+U+23EA,U
+U+23EB,U
+U+23EC,U
+U+23ED,U
+U+23EE,U
+U+23EF,U
+U+23F0,U
+U+23F1,U
+U+23F2,U
+U+23F3,U
+U+2400,U
+U+2401,U
+U+2402,U
+U+2403,U
+U+2404,U
+U+2405,U
+U+2406,U
+U+2407,U
+U+2408,U
+U+2409,U
+U+240A,U
+U+240B,U
+U+240C,U
+U+240D,U
+U+240E,U
+U+240F,U
+U+2410,U
+U+2411,U
+U+2412,U
+U+2413,U
+U+2414,U
+U+2415,U
+U+2416,U
+U+2417,U
+U+2418,U
+U+2419,U
+U+241A,U
+U+241B,U
+U+241C,U
+U+241D,U
+U+241E,U
+U+241F,U
+U+2420,U
+U+2421,U
+U+2422,U
+U+2423,U
+U+2424,U
+U+2425,U
+U+2426,U
+U+2440,U
+U+2441,U
+U+2442,U
+U+2443,U
+U+2444,U
+U+2445,U
+U+2446,U
+U+2447,U
+U+2448,U
+U+2449,U
+U+244A,U
+U+2460,U
+U+2461,U
+U+2462,U
+U+2463,U
+U+2464,U
+U+2465,U
+U+2466,U
+U+2467,U
+U+2468,U
+U+2469,U
+U+246A,U
+U+246B,U
+U+246C,U
+U+246D,U
+U+246E,U
+U+246F,U
+U+2470,U
+U+2471,U
+U+2472,U
+U+2473,U
+U+2474,U
+U+2475,U
+U+2476,U
+U+2477,U
+U+2478,U
+U+2479,U
+U+247A,U
+U+247B,U
+U+247C,U
+U+247D,U
+U+247E,U
+U+247F,U
+U+2480,U
+U+2481,U
+U+2482,U
+U+2483,U
+U+2484,U
+U+2485,U
+U+2486,U
+U+2487,U
+U+2488,U
+U+2489,U
+U+248A,U
+U+248B,U
+U+248C,U
+U+248D,U
+U+248E,U
+U+248F,U
+U+2490,U
+U+2491,U
+U+2492,U
+U+2493,U
+U+2494,U
+U+2495,U
+U+2496,U
+U+2497,U
+U+2498,U
+U+2499,U
+U+249A,U
+U+249B,U
+U+249C,U
+U+249D,U
+U+249E,U
+U+249F,U
+U+24A0,U
+U+24A1,U
+U+24A2,U
+U+24A3,U
+U+24A4,U
+U+24A5,U
+U+24A6,U
+U+24A7,U
+U+24A8,U
+U+24A9,U
+U+24AA,U
+U+24AB,U
+U+24AC,U
+U+24AD,U
+U+24AE,U
+U+24AF,U
+U+24B0,U
+U+24B1,U
+U+24B2,U
+U+24B3,U
+U+24B4,U
+U+24B5,U
+U+24B6,U
+U+24B7,U
+U+24B8,U
+U+24B9,U
+U+24BA,U
+U+24BB,U
+U+24BC,U
+U+24BD,U
+U+24BE,U
+U+24BF,U
+U+24C0,U
+U+24C1,U
+U+24C2,U
+U+24C3,U
+U+24C4,U
+U+24C5,U
+U+24C6,U
+U+24C7,U
+U+24C8,U
+U+24C9,U
+U+24CA,U
+U+24CB,U
+U+24CC,U
+U+24CD,U
+U+24CE,U
+U+24CF,U
+U+24D0,U
+U+24D1,U
+U+24D2,U
+U+24D3,U
+U+24D4,U
+U+24D5,U
+U+24D6,U
+U+24D7,U
+U+24D8,U
+U+24D9,U
+U+24DA,U
+U+24DB,U
+U+24DC,U
+U+24DD,U
+U+24DE,U
+U+24DF,U
+U+24E0,U
+U+24E1,U
+U+24E2,U
+U+24E3,U
+U+24E4,U
+U+24E5,U
+U+24E6,U
+U+24E7,U
+U+24E8,U
+U+24E9,U
+U+24EA,U
+U+24EB,U
+U+24EC,U
+U+24ED,U
+U+24EE,U
+U+24EF,U
+U+24F0,U
+U+24F1,U
+U+24F2,U
+U+24F3,U
+U+24F4,U
+U+24F5,U
+U+24F6,U
+U+24F7,U
+U+24F8,U
+U+24F9,U
+U+24FA,U
+U+24FB,U
+U+24FC,U
+U+24FD,U
+U+24FE,U
+U+24FF,U
+U+2500,R
+U+2501,R
+U+2502,R
+U+2503,R
+U+2504,R
+U+2505,R
+U+2506,R
+U+2507,R
+U+2508,R
+U+2509,R
+U+250A,R
+U+250B,R
+U+250C,R
+U+250D,R
+U+250E,R
+U+250F,R
+U+2510,R
+U+2511,R
+U+2512,R
+U+2513,R
+U+2514,R
+U+2515,R
+U+2516,R
+U+2517,R
+U+2518,R
+U+2519,R
+U+251A,R
+U+251B,R
+U+251C,R
+U+251D,R
+U+251E,R
+U+251F,R
+U+2520,R
+U+2521,R
+U+2522,R
+U+2523,R
+U+2524,R
+U+2525,R
+U+2526,R
+U+2527,R
+U+2528,R
+U+2529,R
+U+252A,R
+U+252B,R
+U+252C,R
+U+252D,R
+U+252E,R
+U+252F,R
+U+2530,R
+U+2531,R
+U+2532,R
+U+2533,R
+U+2534,R
+U+2535,R
+U+2536,R
+U+2537,R
+U+2538,R
+U+2539,R
+U+253A,R
+U+253B,R
+U+253C,R
+U+253D,R
+U+253E,R
+U+253F,R
+U+2540,R
+U+2541,R
+U+2542,R
+U+2543,R
+U+2544,R
+U+2545,R
+U+2546,R
+U+2547,R
+U+2548,R
+U+2549,R
+U+254A,R
+U+254B,R
+U+254C,R
+U+254D,R
+U+254E,R
+U+254F,R
+U+2550,R
+U+2551,R
+U+2552,R
+U+2553,R
+U+2554,R
+U+2555,R
+U+2556,R
+U+2557,R
+U+2558,R
+U+2559,R
+U+255A,R
+U+255B,R
+U+255C,R
+U+255D,R
+U+255E,R
+U+255F,R
+U+2560,R
+U+2561,R
+U+2562,R
+U+2563,R
+U+2564,R
+U+2565,R
+U+2566,R
+U+2567,R
+U+2568,R
+U+2569,R
+U+256A,R
+U+256B,R
+U+256C,R
+U+256D,R
+U+256E,R
+U+256F,R
+U+2570,R
+U+2571,R
+U+2572,R
+U+2573,R
+U+2574,R
+U+2575,R
+U+2576,R
+U+2577,R
+U+2578,R
+U+2579,R
+U+257A,R
+U+257B,R
+U+257C,R
+U+257D,R
+U+257E,R
+U+257F,R
+U+2580,R
+U+2581,R
+U+2582,R
+U+2583,R
+U+2584,R
+U+2585,R
+U+2586,R
+U+2587,R
+U+2588,R
+U+2589,R
+U+258A,R
+U+258B,R
+U+258C,R
+U+258D,R
+U+258E,R
+U+258F,R
+U+2590,R
+U+2591,R
+U+2592,R
+U+2593,R
+U+2594,R
+U+2595,R
+U+2596,R
+U+2597,R
+U+2598,R
+U+2599,R
+U+259A,R
+U+259B,R
+U+259C,R
+U+259D,R
+U+259E,R
+U+259F,R
+U+25A0,U
+U+25A1,U
+U+25A2,U
+U+25A3,U
+U+25A4,U
+U+25A5,U
+U+25A6,U
+U+25A7,U
+U+25A8,U
+U+25A9,U
+U+25AA,U
+U+25AB,U
+U+25AC,U
+U+25AD,U
+U+25AE,U
+U+25AF,U
+U+25B0,U
+U+25B1,U
+U+25B2,U
+U+25B3,U
+U+25B4,U
+U+25B5,U
+U+25B6,U
+U+25B7,U
+U+25B8,U
+U+25B9,U
+U+25BA,U
+U+25BB,U
+U+25BC,U
+U+25BD,U
+U+25BE,U
+U+25BF,U
+U+25C0,U
+U+25C1,U
+U+25C2,U
+U+25C3,U
+U+25C4,U
+U+25C5,U
+U+25C6,U
+U+25C7,U
+U+25C8,U
+U+25C9,U
+U+25CA,U
+U+25CB,U
+U+25CC,U
+U+25CD,U
+U+25CE,U
+U+25CF,U
+U+25D0,U
+U+25D1,U
+U+25D2,U
+U+25D3,U
+U+25D4,U
+U+25D5,U
+U+25D6,U
+U+25D7,U
+U+25D8,U
+U+25D9,U
+U+25DA,U
+U+25DB,U
+U+25DC,U
+U+25DD,U
+U+25DE,U
+U+25DF,U
+U+25E0,U
+U+25E1,U
+U+25E2,U
+U+25E3,U
+U+25E4,U
+U+25E5,U
+U+25E6,U
+U+25E7,U
+U+25E8,U
+U+25E9,U
+U+25EA,U
+U+25EB,U
+U+25EC,U
+U+25ED,U
+U+25EE,U
+U+25EF,U
+U+25F0,U
+U+25F1,U
+U+25F2,U
+U+25F3,U
+U+25F4,U
+U+25F5,U
+U+25F6,U
+U+25F7,U
+U+25F8,U
+U+25F9,U
+U+25FA,U
+U+25FB,U
+U+25FC,U
+U+25FD,U
+U+25FE,U
+U+25FF,U
+U+2600,U
+U+2601,U
+U+2602,U
+U+2603,U
+U+2604,U
+U+2605,U
+U+2606,U
+U+2607,U
+U+2608,U
+U+2609,U
+U+260A,U
+U+260B,U
+U+260C,U
+U+260D,U
+U+260E,U
+U+260F,U
+U+2610,U
+U+2611,U
+U+2612,U
+U+2613,U
+U+2614,U
+U+2615,U
+U+2616,U
+U+2617,U
+U+2618,U
+U+2619,U
+U+261A,R
+U+261B,R
+U+261C,R
+U+261D,R
+U+261E,R
+U+261F,R
+U+2620,U
+U+2621,U
+U+2622,U
+U+2623,U
+U+2624,U
+U+2625,U
+U+2626,U
+U+2627,U
+U+2628,U
+U+2629,U
+U+262A,U
+U+262B,U
+U+262C,U
+U+262D,U
+U+262E,U
+U+262F,U
+U+2630,U
+U+2631,U
+U+2632,U
+U+2633,U
+U+2634,U
+U+2635,U
+U+2636,U
+U+2637,U
+U+2638,U
+U+2639,U
+U+263A,U
+U+263B,U
+U+263C,U
+U+263D,U
+U+263E,U
+U+263F,U
+U+2640,U
+U+2641,U
+U+2642,U
+U+2643,U
+U+2644,U
+U+2645,U
+U+2646,U
+U+2647,U
+U+2648,U
+U+2649,U
+U+264A,U
+U+264B,U
+U+264C,U
+U+264D,U
+U+264E,U
+U+264F,U
+U+2650,U
+U+2651,U
+U+2652,U
+U+2653,U
+U+2654,U
+U+2655,U
+U+2656,U
+U+2657,U
+U+2658,U
+U+2659,U
+U+265A,U
+U+265B,U
+U+265C,U
+U+265D,U
+U+265E,U
+U+265F,U
+U+2660,U
+U+2661,U
+U+2662,U
+U+2663,U
+U+2664,U
+U+2665,U
+U+2666,U
+U+2667,U
+U+2668,U
+U+2669,U
+U+266A,U
+U+266B,U
+U+266C,U
+U+266D,U
+U+266E,U
+U+266F,U
+U+2670,U
+U+2671,U
+U+2672,U
+U+2673,U
+U+2674,U
+U+2675,U
+U+2676,U
+U+2677,U
+U+2678,U
+U+2679,U
+U+267A,U
+U+267B,U
+U+267C,U
+U+267D,U
+U+267E,U
+U+267F,U
+U+2680,U
+U+2681,U
+U+2682,U
+U+2683,U
+U+2684,U
+U+2685,U
+U+2686,U
+U+2687,U
+U+2688,U
+U+2689,U
+U+268A,U
+U+268B,U
+U+268C,U
+U+268D,U
+U+268E,U
+U+268F,U
+U+2690,U
+U+2691,U
+U+2692,U
+U+2693,U
+U+2694,U
+U+2695,U
+U+2696,U
+U+2697,U
+U+2698,U
+U+2699,U
+U+269A,U
+U+269B,U
+U+269C,U
+U+269D,U
+U+269E,U
+U+269F,U
+U+26A0,U
+U+26A1,U
+U+26A2,U
+U+26A3,U
+U+26A4,U
+U+26A5,U
+U+26A6,U
+U+26A7,U
+U+26A8,U
+U+26A9,U
+U+26AA,U
+U+26AB,U
+U+26AC,U
+U+26AD,U
+U+26AE,U
+U+26AF,U
+U+26B0,U
+U+26B1,U
+U+26B2,U
+U+26B3,U
+U+26B4,U
+U+26B5,U
+U+26B6,U
+U+26B7,U
+U+26B8,U
+U+26B9,U
+U+26BA,U
+U+26BB,U
+U+26BC,U
+U+26BD,U
+U+26BE,U
+U+26BF,U
+U+26C0,U
+U+26C1,U
+U+26C2,U
+U+26C3,U
+U+26C4,U
+U+26C5,U
+U+26C6,U
+U+26C7,U
+U+26C8,U
+U+26C9,U
+U+26CA,U
+U+26CB,U
+U+26CC,U
+U+26CD,U
+U+26CE,U
+U+26CF,U
+U+26D0,U
+U+26D1,U
+U+26D2,U
+U+26D3,U
+U+26D4,U
+U+26D5,U
+U+26D6,U
+U+26D7,U
+U+26D8,U
+U+26D9,U
+U+26DA,U
+U+26DB,U
+U+26DC,U
+U+26DD,U
+U+26DE,U
+U+26DF,U
+U+26E0,U
+U+26E1,U
+U+26E2,U
+U+26E3,U
+U+26E4,U
+U+26E5,U
+U+26E6,U
+U+26E7,U
+U+26E8,U
+U+26E9,U
+U+26EA,U
+U+26EB,U
+U+26EC,U
+U+26ED,U
+U+26EE,U
+U+26EF,U
+U+26F0,U
+U+26F1,U
+U+26F2,U
+U+26F3,U
+U+26F4,U
+U+26F5,U
+U+26F6,U
+U+26F7,U
+U+26F8,U
+U+26F9,U
+U+26FA,U
+U+26FB,U
+U+26FC,U
+U+26FD,U
+U+26FE,U
+U+26FF,U
+U+2701,U
+U+2702,U
+U+2703,U
+U+2704,U
+U+2705,U
+U+2706,U
+U+2707,U
+U+2708,U
+U+2709,U
+U+270A,U
+U+270B,U
+U+270C,U
+U+270D,U
+U+270E,U
+U+270F,U
+U+2710,U
+U+2711,U
+U+2712,U
+U+2713,U
+U+2714,U
+U+2715,U
+U+2716,U
+U+2717,U
+U+2718,U
+U+2719,U
+U+271A,U
+U+271B,U
+U+271C,U
+U+271D,U
+U+271E,U
+U+271F,U
+U+2720,U
+U+2721,U
+U+2722,U
+U+2723,U
+U+2724,U
+U+2725,U
+U+2726,U
+U+2727,U
+U+2728,U
+U+2729,U
+U+272A,U
+U+272B,U
+U+272C,U
+U+272D,U
+U+272E,U
+U+272F,U
+U+2730,U
+U+2731,U
+U+2732,U
+U+2733,U
+U+2734,U
+U+2735,U
+U+2736,U
+U+2737,U
+U+2738,U
+U+2739,U
+U+273A,U
+U+273B,U
+U+273C,U
+U+273D,U
+U+273E,U
+U+273F,U
+U+2740,U
+U+2741,U
+U+2742,U
+U+2743,U
+U+2744,U
+U+2745,U
+U+2746,U
+U+2747,U
+U+2748,U
+U+2749,U
+U+274A,U
+U+274B,U
+U+274C,U
+U+274D,U
+U+274E,U
+U+274F,U
+U+2750,U
+U+2751,U
+U+2752,U
+U+2753,U
+U+2754,U
+U+2755,U
+U+2756,U
+U+2757,U
+U+2758,U
+U+2759,U
+U+275A,U
+U+275B,U
+U+275C,U
+U+275D,U
+U+275E,U
+U+275F,U
+U+2760,U
+U+2761,U
+U+2762,U
+U+2763,U
+U+2764,U
+U+2765,U
+U+2766,U
+U+2767,U
+U+2768,R
+U+2769,R
+U+276A,R
+U+276B,R
+U+276C,R
+U+276D,R
+U+276E,R
+U+276F,R
+U+2770,R
+U+2771,R
+U+2772,R
+U+2773,R
+U+2774,R
+U+2775,R
+U+2776,U
+U+2777,U
+U+2778,U
+U+2779,U
+U+277A,U
+U+277B,U
+U+277C,U
+U+277D,U
+U+277E,U
+U+277F,U
+U+2780,U
+U+2781,U
+U+2782,U
+U+2783,U
+U+2784,U
+U+2785,U
+U+2786,U
+U+2787,U
+U+2788,U
+U+2789,U
+U+278A,U
+U+278B,U
+U+278C,U
+U+278D,U
+U+278E,U
+U+278F,U
+U+2790,U
+U+2791,U
+U+2792,U
+U+2793,U
+U+2794,R
+U+2795,R
+U+2796,R
+U+2797,R
+U+2798,R
+U+2799,R
+U+279A,R
+U+279B,R
+U+279C,R
+U+279D,R
+U+279E,R
+U+279F,R
+U+27A0,R
+U+27A1,R
+U+27A2,R
+U+27A3,R
+U+27A4,R
+U+27A5,R
+U+27A6,R
+U+27A7,R
+U+27A8,R
+U+27A9,R
+U+27AA,R
+U+27AB,R
+U+27AC,R
+U+27AD,R
+U+27AE,R
+U+27AF,R
+U+27B0,R
+U+27B1,R
+U+27B2,R
+U+27B3,R
+U+27B4,R
+U+27B5,R
+U+27B6,R
+U+27B7,R
+U+27B8,R
+U+27B9,R
+U+27BA,R
+U+27BB,R
+U+27BC,R
+U+27BD,R
+U+27BE,R
+U+27BF,R
+U+27C0,R
+U+27C1,R
+U+27C2,R
+U+27C3,R
+U+27C4,R
+U+27C5,R
+U+27C6,R
+U+27C7,R
+U+27C8,R
+U+27C9,R
+U+27CA,R
+U+27CB,R
+U+27CC,R
+U+27CD,R
+U+27CE,R
+U+27CF,R
+U+27D0,R
+U+27D1,R
+U+27D2,R
+U+27D3,R
+U+27D4,R
+U+27D5,R
+U+27D6,R
+U+27D7,R
+U+27D8,R
+U+27D9,R
+U+27DA,R
+U+27DB,R
+U+27DC,R
+U+27DD,R
+U+27DE,R
+U+27DF,R
+U+27E0,R
+U+27E1,R
+U+27E2,R
+U+27E3,R
+U+27E4,R
+U+27E5,R
+U+27E6,R
+U+27E7,R
+U+27E8,R
+U+27E9,R
+U+27EA,R
+U+27EB,R
+U+27EC,R
+U+27ED,R
+U+27EE,R
+U+27EF,R
+U+27F0,R
+U+27F1,R
+U+27F2,R
+U+27F3,R
+U+27F4,R
+U+27F5,R
+U+27F6,R
+U+27F7,R
+U+27F8,R
+U+27F9,R
+U+27FA,R
+U+27FB,R
+U+27FC,R
+U+27FD,R
+U+27FE,R
+U+27FF,R
+U+2800,R
+U+2801,R
+U+2802,R
+U+2803,R
+U+2804,R
+U+2805,R
+U+2806,R
+U+2807,R
+U+2808,R
+U+2809,R
+U+280A,R
+U+280B,R
+U+280C,R
+U+280D,R
+U+280E,R
+U+280F,R
+U+2810,R
+U+2811,R
+U+2812,R
+U+2813,R
+U+2814,R
+U+2815,R
+U+2816,R
+U+2817,R
+U+2818,R
+U+2819,R
+U+281A,R
+U+281B,R
+U+281C,R
+U+281D,R
+U+281E,R
+U+281F,R
+U+2820,R
+U+2821,R
+U+2822,R
+U+2823,R
+U+2824,R
+U+2825,R
+U+2826,R
+U+2827,R
+U+2828,R
+U+2829,R
+U+282A,R
+U+282B,R
+U+282C,R
+U+282D,R
+U+282E,R
+U+282F,R
+U+2830,R
+U+2831,R
+U+2832,R
+U+2833,R
+U+2834,R
+U+2835,R
+U+2836,R
+U+2837,R
+U+2838,R
+U+2839,R
+U+283A,R
+U+283B,R
+U+283C,R
+U+283D,R
+U+283E,R
+U+283F,R
+U+2840,R
+U+2841,R
+U+2842,R
+U+2843,R
+U+2844,R
+U+2845,R
+U+2846,R
+U+2847,R
+U+2848,R
+U+2849,R
+U+284A,R
+U+284B,R
+U+284C,R
+U+284D,R
+U+284E,R
+U+284F,R
+U+2850,R
+U+2851,R
+U+2852,R
+U+2853,R
+U+2854,R
+U+2855,R
+U+2856,R
+U+2857,R
+U+2858,R
+U+2859,R
+U+285A,R
+U+285B,R
+U+285C,R
+U+285D,R
+U+285E,R
+U+285F,R
+U+2860,R
+U+2861,R
+U+2862,R
+U+2863,R
+U+2864,R
+U+2865,R
+U+2866,R
+U+2867,R
+U+2868,R
+U+2869,R
+U+286A,R
+U+286B,R
+U+286C,R
+U+286D,R
+U+286E,R
+U+286F,R
+U+2870,R
+U+2871,R
+U+2872,R
+U+2873,R
+U+2874,R
+U+2875,R
+U+2876,R
+U+2877,R
+U+2878,R
+U+2879,R
+U+287A,R
+U+287B,R
+U+287C,R
+U+287D,R
+U+287E,R
+U+287F,R
+U+2880,R
+U+2881,R
+U+2882,R
+U+2883,R
+U+2884,R
+U+2885,R
+U+2886,R
+U+2887,R
+U+2888,R
+U+2889,R
+U+288A,R
+U+288B,R
+U+288C,R
+U+288D,R
+U+288E,R
+U+288F,R
+U+2890,R
+U+2891,R
+U+2892,R
+U+2893,R
+U+2894,R
+U+2895,R
+U+2896,R
+U+2897,R
+U+2898,R
+U+2899,R
+U+289A,R
+U+289B,R
+U+289C,R
+U+289D,R
+U+289E,R
+U+289F,R
+U+28A0,R
+U+28A1,R
+U+28A2,R
+U+28A3,R
+U+28A4,R
+U+28A5,R
+U+28A6,R
+U+28A7,R
+U+28A8,R
+U+28A9,R
+U+28AA,R
+U+28AB,R
+U+28AC,R
+U+28AD,R
+U+28AE,R
+U+28AF,R
+U+28B0,R
+U+28B1,R
+U+28B2,R
+U+28B3,R
+U+28B4,R
+U+28B5,R
+U+28B6,R
+U+28B7,R
+U+28B8,R
+U+28B9,R
+U+28BA,R
+U+28BB,R
+U+28BC,R
+U+28BD,R
+U+28BE,R
+U+28BF,R
+U+28C0,R
+U+28C1,R
+U+28C2,R
+U+28C3,R
+U+28C4,R
+U+28C5,R
+U+28C6,R
+U+28C7,R
+U+28C8,R
+U+28C9,R
+U+28CA,R
+U+28CB,R
+U+28CC,R
+U+28CD,R
+U+28CE,R
+U+28CF,R
+U+28D0,R
+U+28D1,R
+U+28D2,R
+U+28D3,R
+U+28D4,R
+U+28D5,R
+U+28D6,R
+U+28D7,R
+U+28D8,R
+U+28D9,R
+U+28DA,R
+U+28DB,R
+U+28DC,R
+U+28DD,R
+U+28DE,R
+U+28DF,R
+U+28E0,R
+U+28E1,R
+U+28E2,R
+U+28E3,R
+U+28E4,R
+U+28E5,R
+U+28E6,R
+U+28E7,R
+U+28E8,R
+U+28E9,R
+U+28EA,R
+U+28EB,R
+U+28EC,R
+U+28ED,R
+U+28EE,R
+U+28EF,R
+U+28F0,R
+U+28F1,R
+U+28F2,R
+U+28F3,R
+U+28F4,R
+U+28F5,R
+U+28F6,R
+U+28F7,R
+U+28F8,R
+U+28F9,R
+U+28FA,R
+U+28FB,R
+U+28FC,R
+U+28FD,R
+U+28FE,R
+U+28FF,R
+U+2900,R
+U+2901,R
+U+2902,R
+U+2903,R
+U+2904,R
+U+2905,R
+U+2906,R
+U+2907,R
+U+2908,R
+U+2909,R
+U+290A,R
+U+290B,R
+U+290C,R
+U+290D,R
+U+290E,R
+U+290F,R
+U+2910,R
+U+2911,R
+U+2912,R
+U+2913,R
+U+2914,R
+U+2915,R
+U+2916,R
+U+2917,R
+U+2918,R
+U+2919,R
+U+291A,R
+U+291B,R
+U+291C,R
+U+291D,R
+U+291E,R
+U+291F,R
+U+2920,R
+U+2921,R
+U+2922,R
+U+2923,R
+U+2924,R
+U+2925,R
+U+2926,R
+U+2927,R
+U+2928,R
+U+2929,R
+U+292A,R
+U+292B,R
+U+292C,R
+U+292D,R
+U+292E,R
+U+292F,R
+U+2930,R
+U+2931,R
+U+2932,R
+U+2933,R
+U+2934,R
+U+2935,R
+U+2936,R
+U+2937,R
+U+2938,R
+U+2939,R
+U+293A,R
+U+293B,R
+U+293C,R
+U+293D,R
+U+293E,R
+U+293F,R
+U+2940,R
+U+2941,R
+U+2942,R
+U+2943,R
+U+2944,R
+U+2945,R
+U+2946,R
+U+2947,R
+U+2948,R
+U+2949,R
+U+294A,R
+U+294B,R
+U+294C,R
+U+294D,R
+U+294E,R
+U+294F,R
+U+2950,R
+U+2951,R
+U+2952,R
+U+2953,R
+U+2954,R
+U+2955,R
+U+2956,R
+U+2957,R
+U+2958,R
+U+2959,R
+U+295A,R
+U+295B,R
+U+295C,R
+U+295D,R
+U+295E,R
+U+295F,R
+U+2960,R
+U+2961,R
+U+2962,R
+U+2963,R
+U+2964,R
+U+2965,R
+U+2966,R
+U+2967,R
+U+2968,R
+U+2969,R
+U+296A,R
+U+296B,R
+U+296C,R
+U+296D,R
+U+296E,R
+U+296F,R
+U+2970,R
+U+2971,R
+U+2972,R
+U+2973,R
+U+2974,R
+U+2975,R
+U+2976,R
+U+2977,R
+U+2978,R
+U+2979,R
+U+297A,R
+U+297B,R
+U+297C,R
+U+297D,R
+U+297E,R
+U+297F,R
+U+2980,R
+U+2981,R
+U+2982,R
+U+2983,R
+U+2984,R
+U+2985,R
+U+2986,R
+U+2987,R
+U+2988,R
+U+2989,R
+U+298A,R
+U+298B,R
+U+298C,R
+U+298D,R
+U+298E,R
+U+298F,R
+U+2990,R
+U+2991,R
+U+2992,R
+U+2993,R
+U+2994,R
+U+2995,R
+U+2996,R
+U+2997,R
+U+2998,R
+U+2999,R
+U+299A,R
+U+299B,R
+U+299C,R
+U+299D,R
+U+299E,R
+U+299F,R
+U+29A0,R
+U+29A1,R
+U+29A2,R
+U+29A3,R
+U+29A4,R
+U+29A5,R
+U+29A6,R
+U+29A7,R
+U+29A8,R
+U+29A9,R
+U+29AA,R
+U+29AB,R
+U+29AC,R
+U+29AD,R
+U+29AE,R
+U+29AF,R
+U+29B0,R
+U+29B1,R
+U+29B2,R
+U+29B3,R
+U+29B4,R
+U+29B5,R
+U+29B6,R
+U+29B7,R
+U+29B8,R
+U+29B9,R
+U+29BA,R
+U+29BB,R
+U+29BC,R
+U+29BD,R
+U+29BE,R
+U+29BF,R
+U+29C0,R
+U+29C1,R
+U+29C2,R
+U+29C3,R
+U+29C4,R
+U+29C5,R
+U+29C6,R
+U+29C7,R
+U+29C8,R
+U+29C9,R
+U+29CA,R
+U+29CB,R
+U+29CC,R
+U+29CD,R
+U+29CE,R
+U+29CF,R
+U+29D0,R
+U+29D1,R
+U+29D2,R
+U+29D3,R
+U+29D4,R
+U+29D5,R
+U+29D6,R
+U+29D7,R
+U+29D8,R
+U+29D9,R
+U+29DA,R
+U+29DB,R
+U+29DC,R
+U+29DD,R
+U+29DE,R
+U+29DF,R
+U+29E0,R
+U+29E1,R
+U+29E2,R
+U+29E3,R
+U+29E4,R
+U+29E5,R
+U+29E6,R
+U+29E7,R
+U+29E8,R
+U+29E9,R
+U+29EA,R
+U+29EB,R
+U+29EC,R
+U+29ED,R
+U+29EE,R
+U+29EF,R
+U+29F0,R
+U+29F1,R
+U+29F2,R
+U+29F3,R
+U+29F4,R
+U+29F5,R
+U+29F6,R
+U+29F7,R
+U+29F8,R
+U+29F9,R
+U+29FA,R
+U+29FB,R
+U+29FC,R
+U+29FD,R
+U+29FE,R
+U+29FF,R
+U+2A00,R
+U+2A01,R
+U+2A02,R
+U+2A03,R
+U+2A04,R
+U+2A05,R
+U+2A06,R
+U+2A07,R
+U+2A08,R
+U+2A09,R
+U+2A0A,R
+U+2A0B,R
+U+2A0C,R
+U+2A0D,R
+U+2A0E,R
+U+2A0F,R
+U+2A10,R
+U+2A11,R
+U+2A12,R
+U+2A13,R
+U+2A14,R
+U+2A15,R
+U+2A16,R
+U+2A17,R
+U+2A18,R
+U+2A19,R
+U+2A1A,R
+U+2A1B,R
+U+2A1C,R
+U+2A1D,R
+U+2A1E,R
+U+2A1F,R
+U+2A20,R
+U+2A21,R
+U+2A22,R
+U+2A23,R
+U+2A24,R
+U+2A25,R
+U+2A26,R
+U+2A27,R
+U+2A28,R
+U+2A29,R
+U+2A2A,R
+U+2A2B,R
+U+2A2C,R
+U+2A2D,R
+U+2A2E,R
+U+2A2F,R
+U+2A30,R
+U+2A31,R
+U+2A32,R
+U+2A33,R
+U+2A34,R
+U+2A35,R
+U+2A36,R
+U+2A37,R
+U+2A38,R
+U+2A39,R
+U+2A3A,R
+U+2A3B,R
+U+2A3C,R
+U+2A3D,R
+U+2A3E,R
+U+2A3F,R
+U+2A40,R
+U+2A41,R
+U+2A42,R
+U+2A43,R
+U+2A44,R
+U+2A45,R
+U+2A46,R
+U+2A47,R
+U+2A48,R
+U+2A49,R
+U+2A4A,R
+U+2A4B,R
+U+2A4C,R
+U+2A4D,R
+U+2A4E,R
+U+2A4F,R
+U+2A50,R
+U+2A51,R
+U+2A52,R
+U+2A53,R
+U+2A54,R
+U+2A55,R
+U+2A56,R
+U+2A57,R
+U+2A58,R
+U+2A59,R
+U+2A5A,R
+U+2A5B,R
+U+2A5C,R
+U+2A5D,R
+U+2A5E,R
+U+2A5F,R
+U+2A60,R
+U+2A61,R
+U+2A62,R
+U+2A63,R
+U+2A64,R
+U+2A65,R
+U+2A66,R
+U+2A67,R
+U+2A68,R
+U+2A69,R
+U+2A6A,R
+U+2A6B,R
+U+2A6C,R
+U+2A6D,R
+U+2A6E,R
+U+2A6F,R
+U+2A70,R
+U+2A71,R
+U+2A72,R
+U+2A73,R
+U+2A74,R
+U+2A75,R
+U+2A76,R
+U+2A77,R
+U+2A78,R
+U+2A79,R
+U+2A7A,R
+U+2A7B,R
+U+2A7C,R
+U+2A7D,R
+U+2A7E,R
+U+2A7F,R
+U+2A80,R
+U+2A81,R
+U+2A82,R
+U+2A83,R
+U+2A84,R
+U+2A85,R
+U+2A86,R
+U+2A87,R
+U+2A88,R
+U+2A89,R
+U+2A8A,R
+U+2A8B,R
+U+2A8C,R
+U+2A8D,R
+U+2A8E,R
+U+2A8F,R
+U+2A90,R
+U+2A91,R
+U+2A92,R
+U+2A93,R
+U+2A94,R
+U+2A95,R
+U+2A96,R
+U+2A97,R
+U+2A98,R
+U+2A99,R
+U+2A9A,R
+U+2A9B,R
+U+2A9C,R
+U+2A9D,R
+U+2A9E,R
+U+2A9F,R
+U+2AA0,R
+U+2AA1,R
+U+2AA2,R
+U+2AA3,R
+U+2AA4,R
+U+2AA5,R
+U+2AA6,R
+U+2AA7,R
+U+2AA8,R
+U+2AA9,R
+U+2AAA,R
+U+2AAB,R
+U+2AAC,R
+U+2AAD,R
+U+2AAE,R
+U+2AAF,R
+U+2AB0,R
+U+2AB1,R
+U+2AB2,R
+U+2AB3,R
+U+2AB4,R
+U+2AB5,R
+U+2AB6,R
+U+2AB7,R
+U+2AB8,R
+U+2AB9,R
+U+2ABA,R
+U+2ABB,R
+U+2ABC,R
+U+2ABD,R
+U+2ABE,R
+U+2ABF,R
+U+2AC0,R
+U+2AC1,R
+U+2AC2,R
+U+2AC3,R
+U+2AC4,R
+U+2AC5,R
+U+2AC6,R
+U+2AC7,R
+U+2AC8,R
+U+2AC9,R
+U+2ACA,R
+U+2ACB,R
+U+2ACC,R
+U+2ACD,R
+U+2ACE,R
+U+2ACF,R
+U+2AD0,R
+U+2AD1,R
+U+2AD2,R
+U+2AD3,R
+U+2AD4,R
+U+2AD5,R
+U+2AD6,R
+U+2AD7,R
+U+2AD8,R
+U+2AD9,R
+U+2ADA,R
+U+2ADB,R
+U+2ADC,R
+U+2ADD,R
+U+2ADE,R
+U+2ADF,R
+U+2AE0,R
+U+2AE1,R
+U+2AE2,R
+U+2AE3,R
+U+2AE4,R
+U+2AE5,R
+U+2AE6,R
+U+2AE7,R
+U+2AE8,R
+U+2AE9,R
+U+2AEA,R
+U+2AEB,R
+U+2AEC,R
+U+2AED,R
+U+2AEE,R
+U+2AEF,R
+U+2AF0,R
+U+2AF1,R
+U+2AF2,R
+U+2AF3,R
+U+2AF4,R
+U+2AF5,R
+U+2AF6,R
+U+2AF7,R
+U+2AF8,R
+U+2AF9,R
+U+2AFA,R
+U+2AFB,R
+U+2AFC,R
+U+2AFD,R
+U+2AFE,R
+U+2AFF,R
+U+2B00,R
+U+2B01,R
+U+2B02,R
+U+2B03,R
+U+2B04,R
+U+2B05,R
+U+2B06,R
+U+2B07,R
+U+2B08,R
+U+2B09,R
+U+2B0A,R
+U+2B0B,R
+U+2B0C,R
+U+2B0D,R
+U+2B0E,R
+U+2B0F,R
+U+2B10,R
+U+2B11,R
+U+2B12,U
+U+2B13,U
+U+2B14,U
+U+2B15,U
+U+2B16,U
+U+2B17,U
+U+2B18,U
+U+2B19,U
+U+2B1A,U
+U+2B1B,U
+U+2B1C,U
+U+2B1D,U
+U+2B1E,U
+U+2B1F,U
+U+2B20,U
+U+2B21,U
+U+2B22,U
+U+2B23,U
+U+2B24,U
+U+2B25,U
+U+2B26,U
+U+2B27,U
+U+2B28,U
+U+2B29,U
+U+2B2A,U
+U+2B2B,U
+U+2B2C,U
+U+2B2D,U
+U+2B2E,U
+U+2B2F,U
+U+2B30,R
+U+2B31,R
+U+2B32,R
+U+2B33,R
+U+2B34,R
+U+2B35,R
+U+2B36,R
+U+2B37,R
+U+2B38,R
+U+2B39,R
+U+2B3A,R
+U+2B3B,R
+U+2B3C,R
+U+2B3D,R
+U+2B3E,R
+U+2B3F,R
+U+2B40,R
+U+2B41,R
+U+2B42,R
+U+2B43,R
+U+2B44,R
+U+2B45,R
+U+2B46,R
+U+2B47,R
+U+2B48,R
+U+2B49,R
+U+2B4A,R
+U+2B4B,R
+U+2B4C,R
+U+2B50,U
+U+2B51,U
+U+2B52,U
+U+2B53,U
+U+2B54,U
+U+2B55,U
+U+2B56,U
+U+2B57,U
+U+2B58,U
+U+2B59,U
+U+2C00,R
+U+2C01,R
+U+2C02,R
+U+2C03,R
+U+2C04,R
+U+2C05,R
+U+2C06,R
+U+2C07,R
+U+2C08,R
+U+2C09,R
+U+2C0A,R
+U+2C0B,R
+U+2C0C,R
+U+2C0D,R
+U+2C0E,R
+U+2C0F,R
+U+2C10,R
+U+2C11,R
+U+2C12,R
+U+2C13,R
+U+2C14,R
+U+2C15,R
+U+2C16,R
+U+2C17,R
+U+2C18,R
+U+2C19,R
+U+2C1A,R
+U+2C1B,R
+U+2C1C,R
+U+2C1D,R
+U+2C1E,R
+U+2C1F,R
+U+2C20,R
+U+2C21,R
+U+2C22,R
+U+2C23,R
+U+2C24,R
+U+2C25,R
+U+2C26,R
+U+2C27,R
+U+2C28,R
+U+2C29,R
+U+2C2A,R
+U+2C2B,R
+U+2C2C,R
+U+2C2D,R
+U+2C2E,R
+U+2C30,R
+U+2C31,R
+U+2C32,R
+U+2C33,R
+U+2C34,R
+U+2C35,R
+U+2C36,R
+U+2C37,R
+U+2C38,R
+U+2C39,R
+U+2C3A,R
+U+2C3B,R
+U+2C3C,R
+U+2C3D,R
+U+2C3E,R
+U+2C3F,R
+U+2C40,R
+U+2C41,R
+U+2C42,R
+U+2C43,R
+U+2C44,R
+U+2C45,R
+U+2C46,R
+U+2C47,R
+U+2C48,R
+U+2C49,R
+U+2C4A,R
+U+2C4B,R
+U+2C4C,R
+U+2C4D,R
+U+2C4E,R
+U+2C4F,R
+U+2C50,R
+U+2C51,R
+U+2C52,R
+U+2C53,R
+U+2C54,R
+U+2C55,R
+U+2C56,R
+U+2C57,R
+U+2C58,R
+U+2C59,R
+U+2C5A,R
+U+2C5B,R
+U+2C5C,R
+U+2C5D,R
+U+2C5E,R
+U+2C60,R
+U+2C61,R
+U+2C62,R
+U+2C63,R
+U+2C64,R
+U+2C65,R
+U+2C66,R
+U+2C67,R
+U+2C68,R
+U+2C69,R
+U+2C6A,R
+U+2C6B,R
+U+2C6C,R
+U+2C6D,R
+U+2C6E,R
+U+2C6F,R
+U+2C70,R
+U+2C71,R
+U+2C72,R
+U+2C73,R
+U+2C74,R
+U+2C75,R
+U+2C76,R
+U+2C77,R
+U+2C78,R
+U+2C79,R
+U+2C7A,R
+U+2C7B,R
+U+2C7C,R
+U+2C7D,R
+U+2C7E,R
+U+2C7F,R
+U+2C80,R
+U+2C81,R
+U+2C82,R
+U+2C83,R
+U+2C84,R
+U+2C85,R
+U+2C86,R
+U+2C87,R
+U+2C88,R
+U+2C89,R
+U+2C8A,R
+U+2C8B,R
+U+2C8C,R
+U+2C8D,R
+U+2C8E,R
+U+2C8F,R
+U+2C90,R
+U+2C91,R
+U+2C92,R
+U+2C93,R
+U+2C94,R
+U+2C95,R
+U+2C96,R
+U+2C97,R
+U+2C98,R
+U+2C99,R
+U+2C9A,R
+U+2C9B,R
+U+2C9C,R
+U+2C9D,R
+U+2C9E,R
+U+2C9F,R
+U+2CA0,R
+U+2CA1,R
+U+2CA2,R
+U+2CA3,R
+U+2CA4,R
+U+2CA5,R
+U+2CA6,R
+U+2CA7,R
+U+2CA8,R
+U+2CA9,R
+U+2CAA,R
+U+2CAB,R
+U+2CAC,R
+U+2CAD,R
+U+2CAE,R
+U+2CAF,R
+U+2CB0,R
+U+2CB1,R
+U+2CB2,R
+U+2CB3,R
+U+2CB4,R
+U+2CB5,R
+U+2CB6,R
+U+2CB7,R
+U+2CB8,R
+U+2CB9,R
+U+2CBA,R
+U+2CBB,R
+U+2CBC,R
+U+2CBD,R
+U+2CBE,R
+U+2CBF,R
+U+2CC0,R
+U+2CC1,R
+U+2CC2,R
+U+2CC3,R
+U+2CC4,R
+U+2CC5,R
+U+2CC6,R
+U+2CC7,R
+U+2CC8,R
+U+2CC9,R
+U+2CCA,R
+U+2CCB,R
+U+2CCC,R
+U+2CCD,R
+U+2CCE,R
+U+2CCF,R
+U+2CD0,R
+U+2CD1,R
+U+2CD2,R
+U+2CD3,R
+U+2CD4,R
+U+2CD5,R
+U+2CD6,R
+U+2CD7,R
+U+2CD8,R
+U+2CD9,R
+U+2CDA,R
+U+2CDB,R
+U+2CDC,R
+U+2CDD,R
+U+2CDE,R
+U+2CDF,R
+U+2CE0,R
+U+2CE1,R
+U+2CE2,R
+U+2CE3,R
+U+2CE4,R
+U+2CE5,R
+U+2CE6,R
+U+2CE7,R
+U+2CE8,R
+U+2CE9,R
+U+2CEA,R
+U+2CEB,R
+U+2CEC,R
+U+2CED,R
+U+2CEE,R
+U+2CEF,R
+U+2CF0,R
+U+2CF1,R
+U+2CF2,R
+U+2CF3,R
+U+2CF9,R
+U+2CFA,R
+U+2CFB,R
+U+2CFC,R
+U+2CFD,R
+U+2CFE,R
+U+2CFF,R
+U+2D00,R
+U+2D01,R
+U+2D02,R
+U+2D03,R
+U+2D04,R
+U+2D05,R
+U+2D06,R
+U+2D07,R
+U+2D08,R
+U+2D09,R
+U+2D0A,R
+U+2D0B,R
+U+2D0C,R
+U+2D0D,R
+U+2D0E,R
+U+2D0F,R
+U+2D10,R
+U+2D11,R
+U+2D12,R
+U+2D13,R
+U+2D14,R
+U+2D15,R
+U+2D16,R
+U+2D17,R
+U+2D18,R
+U+2D19,R
+U+2D1A,R
+U+2D1B,R
+U+2D1C,R
+U+2D1D,R
+U+2D1E,R
+U+2D1F,R
+U+2D20,R
+U+2D21,R
+U+2D22,R
+U+2D23,R
+U+2D24,R
+U+2D25,R
+U+2D27,R
+U+2D2D,R
+U+2D30,R
+U+2D31,R
+U+2D32,R
+U+2D33,R
+U+2D34,R
+U+2D35,R
+U+2D36,R
+U+2D37,R
+U+2D38,R
+U+2D39,R
+U+2D3A,R
+U+2D3B,R
+U+2D3C,R
+U+2D3D,R
+U+2D3E,R
+U+2D3F,R
+U+2D40,R
+U+2D41,R
+U+2D42,R
+U+2D43,R
+U+2D44,R
+U+2D45,R
+U+2D46,R
+U+2D47,R
+U+2D48,R
+U+2D49,R
+U+2D4A,R
+U+2D4B,R
+U+2D4C,R
+U+2D4D,R
+U+2D4E,R
+U+2D4F,R
+U+2D50,R
+U+2D51,R
+U+2D52,R
+U+2D53,R
+U+2D54,R
+U+2D55,R
+U+2D56,R
+U+2D57,R
+U+2D58,R
+U+2D59,R
+U+2D5A,R
+U+2D5B,R
+U+2D5C,R
+U+2D5D,R
+U+2D5E,R
+U+2D5F,R
+U+2D60,R
+U+2D61,R
+U+2D62,R
+U+2D63,R
+U+2D64,R
+U+2D65,R
+U+2D66,R
+U+2D67,R
+U+2D6F,R
+U+2D70,R
+U+2D7F,R
+U+2D80,R
+U+2D81,R
+U+2D82,R
+U+2D83,R
+U+2D84,R
+U+2D85,R
+U+2D86,R
+U+2D87,R
+U+2D88,R
+U+2D89,R
+U+2D8A,R
+U+2D8B,R
+U+2D8C,R
+U+2D8D,R
+U+2D8E,R
+U+2D8F,R
+U+2D90,R
+U+2D91,R
+U+2D92,R
+U+2D93,R
+U+2D94,R
+U+2D95,R
+U+2D96,R
+U+2DA0,R
+U+2DA1,R
+U+2DA2,R
+U+2DA3,R
+U+2DA4,R
+U+2DA5,R
+U+2DA6,R
+U+2DA8,R
+U+2DA9,R
+U+2DAA,R
+U+2DAB,R
+U+2DAC,R
+U+2DAD,R
+U+2DAE,R
+U+2DB0,R
+U+2DB1,R
+U+2DB2,R
+U+2DB3,R
+U+2DB4,R
+U+2DB5,R
+U+2DB6,R
+U+2DB8,R
+U+2DB9,R
+U+2DBA,R
+U+2DBB,R
+U+2DBC,R
+U+2DBD,R
+U+2DBE,R
+U+2DC0,R
+U+2DC1,R
+U+2DC2,R
+U+2DC3,R
+U+2DC4,R
+U+2DC5,R
+U+2DC6,R
+U+2DC8,R
+U+2DC9,R
+U+2DCA,R
+U+2DCB,R
+U+2DCC,R
+U+2DCD,R
+U+2DCE,R
+U+2DD0,R
+U+2DD1,R
+U+2DD2,R
+U+2DD3,R
+U+2DD4,R
+U+2DD5,R
+U+2DD6,R
+U+2DD8,R
+U+2DD9,R
+U+2DDA,R
+U+2DDB,R
+U+2DDC,R
+U+2DDD,R
+U+2DDE,R
+U+2DE0,R
+U+2DE1,R
+U+2DE2,R
+U+2DE3,R
+U+2DE4,R
+U+2DE5,R
+U+2DE6,R
+U+2DE7,R
+U+2DE8,R
+U+2DE9,R
+U+2DEA,R
+U+2DEB,R
+U+2DEC,R
+U+2DED,R
+U+2DEE,R
+U+2DEF,R
+U+2DF0,R
+U+2DF1,R
+U+2DF2,R
+U+2DF3,R
+U+2DF4,R
+U+2DF5,R
+U+2DF6,R
+U+2DF7,R
+U+2DF8,R
+U+2DF9,R
+U+2DFA,R
+U+2DFB,R
+U+2DFC,R
+U+2DFD,R
+U+2DFE,R
+U+2DFF,R
+U+2E00,R
+U+2E01,R
+U+2E02,R
+U+2E03,R
+U+2E04,R
+U+2E05,R
+U+2E06,R
+U+2E07,R
+U+2E08,R
+U+2E09,R
+U+2E0A,R
+U+2E0B,R
+U+2E0C,R
+U+2E0D,R
+U+2E0E,R
+U+2E0F,R
+U+2E10,R
+U+2E11,R
+U+2E12,R
+U+2E13,R
+U+2E14,R
+U+2E15,R
+U+2E16,R
+U+2E17,R
+U+2E18,R
+U+2E19,R
+U+2E1A,R
+U+2E1B,R
+U+2E1C,R
+U+2E1D,R
+U+2E1E,R
+U+2E1F,R
+U+2E20,R
+U+2E21,R
+U+2E22,R
+U+2E23,R
+U+2E24,R
+U+2E25,R
+U+2E26,R
+U+2E27,R
+U+2E28,R
+U+2E29,R
+U+2E2A,R
+U+2E2B,R
+U+2E2C,R
+U+2E2D,R
+U+2E2E,R
+U+2E2F,R
+U+2E30,R
+U+2E31,R
+U+2E32,R
+U+2E33,R
+U+2E34,R
+U+2E35,R
+U+2E36,R
+U+2E37,R
+U+2E38,R
+U+2E39,R
+U+2E3A,R
+U+2E3B,R
+U+2E80,U
+U+2E81,U
+U+2E82,U
+U+2E83,U
+U+2E84,U
+U+2E85,U
+U+2E86,U
+U+2E87,U
+U+2E88,U
+U+2E89,U
+U+2E8A,U
+U+2E8B,U
+U+2E8C,U
+U+2E8D,U
+U+2E8E,U
+U+2E8F,U
+U+2E90,U
+U+2E91,U
+U+2E92,U
+U+2E93,U
+U+2E94,U
+U+2E95,U
+U+2E96,U
+U+2E97,U
+U+2E98,U
+U+2E99,U
+U+2E9B,U
+U+2E9C,U
+U+2E9D,U
+U+2E9E,U
+U+2E9F,U
+U+2EA0,U
+U+2EA1,U
+U+2EA2,U
+U+2EA3,U
+U+2EA4,U
+U+2EA5,U
+U+2EA6,U
+U+2EA7,U
+U+2EA8,U
+U+2EA9,U
+U+2EAA,U
+U+2EAB,U
+U+2EAC,U
+U+2EAD,U
+U+2EAE,U
+U+2EAF,U
+U+2EB0,U
+U+2EB1,U
+U+2EB2,U
+U+2EB3,U
+U+2EB4,U
+U+2EB5,U
+U+2EB6,U
+U+2EB7,U
+U+2EB8,U
+U+2EB9,U
+U+2EBA,U
+U+2EBB,U
+U+2EBC,U
+U+2EBD,U
+U+2EBE,U
+U+2EBF,U
+U+2EC0,U
+U+2EC1,U
+U+2EC2,U
+U+2EC3,U
+U+2EC4,U
+U+2EC5,U
+U+2EC6,U
+U+2EC7,U
+U+2EC8,U
+U+2EC9,U
+U+2ECA,U
+U+2ECB,U
+U+2ECC,U
+U+2ECD,U
+U+2ECE,U
+U+2ECF,U
+U+2ED0,U
+U+2ED1,U
+U+2ED2,U
+U+2ED3,U
+U+2ED4,U
+U+2ED5,U
+U+2ED6,U
+U+2ED7,U
+U+2ED8,U
+U+2ED9,U
+U+2EDA,U
+U+2EDB,U
+U+2EDC,U
+U+2EDD,U
+U+2EDE,U
+U+2EDF,U
+U+2EE0,U
+U+2EE1,U
+U+2EE2,U
+U+2EE3,U
+U+2EE4,U
+U+2EE5,U
+U+2EE6,U
+U+2EE7,U
+U+2EE8,U
+U+2EE9,U
+U+2EEA,U
+U+2EEB,U
+U+2EEC,U
+U+2EED,U
+U+2EEE,U
+U+2EEF,U
+U+2EF0,U
+U+2EF1,U
+U+2EF2,U
+U+2EF3,U
+U+2F00,U
+U+2F01,U
+U+2F02,U
+U+2F03,U
+U+2F04,U
+U+2F05,U
+U+2F06,U
+U+2F07,U
+U+2F08,U
+U+2F09,U
+U+2F0A,U
+U+2F0B,U
+U+2F0C,U
+U+2F0D,U
+U+2F0E,U
+U+2F0F,U
+U+2F10,U
+U+2F11,U
+U+2F12,U
+U+2F13,U
+U+2F14,U
+U+2F15,U
+U+2F16,U
+U+2F17,U
+U+2F18,U
+U+2F19,U
+U+2F1A,U
+U+2F1B,U
+U+2F1C,U
+U+2F1D,U
+U+2F1E,U
+U+2F1F,U
+U+2F20,U
+U+2F21,U
+U+2F22,U
+U+2F23,U
+U+2F24,U
+U+2F25,U
+U+2F26,U
+U+2F27,U
+U+2F28,U
+U+2F29,U
+U+2F2A,U
+U+2F2B,U
+U+2F2C,U
+U+2F2D,U
+U+2F2E,U
+U+2F2F,U
+U+2F30,U
+U+2F31,U
+U+2F32,U
+U+2F33,U
+U+2F34,U
+U+2F35,U
+U+2F36,U
+U+2F37,U
+U+2F38,U
+U+2F39,U
+U+2F3A,U
+U+2F3B,U
+U+2F3C,U
+U+2F3D,U
+U+2F3E,U
+U+2F3F,U
+U+2F40,U
+U+2F41,U
+U+2F42,U
+U+2F43,U
+U+2F44,U
+U+2F45,U
+U+2F46,U
+U+2F47,U
+U+2F48,U
+U+2F49,U
+U+2F4A,U
+U+2F4B,U
+U+2F4C,U
+U+2F4D,U
+U+2F4E,U
+U+2F4F,U
+U+2F50,U
+U+2F51,U
+U+2F52,U
+U+2F53,U
+U+2F54,U
+U+2F55,U
+U+2F56,U
+U+2F57,U
+U+2F58,U
+U+2F59,U
+U+2F5A,U
+U+2F5B,U
+U+2F5C,U
+U+2F5D,U
+U+2F5E,U
+U+2F5F,U
+U+2F60,U
+U+2F61,U
+U+2F62,U
+U+2F63,U
+U+2F64,U
+U+2F65,U
+U+2F66,U
+U+2F67,U
+U+2F68,U
+U+2F69,U
+U+2F6A,U
+U+2F6B,U
+U+2F6C,U
+U+2F6D,U
+U+2F6E,U
+U+2F6F,U
+U+2F70,U
+U+2F71,U
+U+2F72,U
+U+2F73,U
+U+2F74,U
+U+2F75,U
+U+2F76,U
+U+2F77,U
+U+2F78,U
+U+2F79,U
+U+2F7A,U
+U+2F7B,U
+U+2F7C,U
+U+2F7D,U
+U+2F7E,U
+U+2F7F,U
+U+2F80,U
+U+2F81,U
+U+2F82,U
+U+2F83,U
+U+2F84,U
+U+2F85,U
+U+2F86,U
+U+2F87,U
+U+2F88,U
+U+2F89,U
+U+2F8A,U
+U+2F8B,U
+U+2F8C,U
+U+2F8D,U
+U+2F8E,U
+U+2F8F,U
+U+2F90,U
+U+2F91,U
+U+2F92,U
+U+2F93,U
+U+2F94,U
+U+2F95,U
+U+2F96,U
+U+2F97,U
+U+2F98,U
+U+2F99,U
+U+2F9A,U
+U+2F9B,U
+U+2F9C,U
+U+2F9D,U
+U+2F9E,U
+U+2F9F,U
+U+2FA0,U
+U+2FA1,U
+U+2FA2,U
+U+2FA3,U
+U+2FA4,U
+U+2FA5,U
+U+2FA6,U
+U+2FA7,U
+U+2FA8,U
+U+2FA9,U
+U+2FAA,U
+U+2FAB,U
+U+2FAC,U
+U+2FAD,U
+U+2FAE,U
+U+2FAF,U
+U+2FB0,U
+U+2FB1,U
+U+2FB2,U
+U+2FB3,U
+U+2FB4,U
+U+2FB5,U
+U+2FB6,U
+U+2FB7,U
+U+2FB8,U
+U+2FB9,U
+U+2FBA,U
+U+2FBB,U
+U+2FBC,U
+U+2FBD,U
+U+2FBE,U
+U+2FBF,U
+U+2FC0,U
+U+2FC1,U
+U+2FC2,U
+U+2FC3,U
+U+2FC4,U
+U+2FC5,U
+U+2FC6,U
+U+2FC7,U
+U+2FC8,U
+U+2FC9,U
+U+2FCA,U
+U+2FCB,U
+U+2FCC,U
+U+2FCD,U
+U+2FCE,U
+U+2FCF,U
+U+2FD0,U
+U+2FD1,U
+U+2FD2,U
+U+2FD3,U
+U+2FD4,U
+U+2FD5,U
+U+2FF0,U
+U+2FF1,U
+U+2FF2,U
+U+2FF3,U
+U+2FF4,U
+U+2FF5,U
+U+2FF6,U
+U+2FF7,U
+U+2FF8,U
+U+2FF9,U
+U+2FFA,U
+U+2FFB,U
+U+3000,U
+U+3001,U
+U+3002,U
+U+3003,U
+U+3004,U
+U+3005,U
+U+3006,U
+U+3007,U
+U+3008,U
+U+3009,U
+U+300A,U
+U+300B,U
+U+300C,U
+U+300D,U
+U+300E,U
+U+300F,U
+U+3010,U
+U+3011,U
+U+3012,U
+U+3013,U
+U+3014,U
+U+3015,U
+U+3016,U
+U+3017,U
+U+3018,U
+U+3019,U
+U+301A,U
+U+301B,U
+U+301C,U
+U+301D,U
+U+301E,U
+U+301F,U
+U+3020,U
+U+3021,U
+U+3022,U
+U+3023,U
+U+3024,U
+U+3025,U
+U+3026,U
+U+3027,U
+U+3028,U
+U+3029,U
+U+302A,U
+U+302B,U
+U+302C,U
+U+302D,U
+U+302E,U
+U+302F,U
+U+3030,U
+U+3031,U
+U+3032,U
+U+3033,U
+U+3034,U
+U+3035,U
+U+3036,U
+U+3037,U
+U+3038,U
+U+3039,U
+U+303A,U
+U+303B,U
+U+303C,U
+U+303D,U
+U+303E,U
+U+303F,U
+U+3041,U
+U+3042,U
+U+3043,U
+U+3044,U
+U+3045,U
+U+3046,U
+U+3047,U
+U+3048,U
+U+3049,U
+U+304A,U
+U+304B,U
+U+304C,U
+U+304D,U
+U+304E,U
+U+304F,U
+U+3050,U
+U+3051,U
+U+3052,U
+U+3053,U
+U+3054,U
+U+3055,U
+U+3056,U
+U+3057,U
+U+3058,U
+U+3059,U
+U+305A,U
+U+305B,U
+U+305C,U
+U+305D,U
+U+305E,U
+U+305F,U
+U+3060,U
+U+3061,U
+U+3062,U
+U+3063,U
+U+3064,U
+U+3065,U
+U+3066,U
+U+3067,U
+U+3068,U
+U+3069,U
+U+306A,U
+U+306B,U
+U+306C,U
+U+306D,U
+U+306E,U
+U+306F,U
+U+3070,U
+U+3071,U
+U+3072,U
+U+3073,U
+U+3074,U
+U+3075,U
+U+3076,U
+U+3077,U
+U+3078,U
+U+3079,U
+U+307A,U
+U+307B,U
+U+307C,U
+U+307D,U
+U+307E,U
+U+307F,U
+U+3080,U
+U+3081,U
+U+3082,U
+U+3083,U
+U+3084,U
+U+3085,U
+U+3086,U
+U+3087,U
+U+3088,U
+U+3089,U
+U+308A,U
+U+308B,U
+U+308C,U
+U+308D,U
+U+308E,U
+U+308F,U
+U+3090,U
+U+3091,U
+U+3092,U
+U+3093,U
+U+3094,U
+U+3095,U
+U+3096,U
+U+3099,U
+U+309A,U
+U+309B,U
+U+309C,U
+U+309D,U
+U+309E,U
+U+309F,U
+U+30A0,U
+U+30A1,U
+U+30A2,U
+U+30A3,U
+U+30A4,U
+U+30A5,U
+U+30A6,U
+U+30A7,U
+U+30A8,U
+U+30A9,U
+U+30AA,U
+U+30AB,U
+U+30AC,U
+U+30AD,U
+U+30AE,U
+U+30AF,U
+U+30B0,U
+U+30B1,U
+U+30B2,U
+U+30B3,U
+U+30B4,U
+U+30B5,U
+U+30B6,U
+U+30B7,U
+U+30B8,U
+U+30B9,U
+U+30BA,U
+U+30BB,U
+U+30BC,U
+U+30BD,U
+U+30BE,U
+U+30BF,U
+U+30C0,U
+U+30C1,U
+U+30C2,U
+U+30C3,U
+U+30C4,U
+U+30C5,U
+U+30C6,U
+U+30C7,U
+U+30C8,U
+U+30C9,U
+U+30CA,U
+U+30CB,U
+U+30CC,U
+U+30CD,U
+U+30CE,U
+U+30CF,U
+U+30D0,U
+U+30D1,U
+U+30D2,U
+U+30D3,U
+U+30D4,U
+U+30D5,U
+U+30D6,U
+U+30D7,U
+U+30D8,U
+U+30D9,U
+U+30DA,U
+U+30DB,U
+U+30DC,U
+U+30DD,U
+U+30DE,U
+U+30DF,U
+U+30E0,U
+U+30E1,U
+U+30E2,U
+U+30E3,U
+U+30E4,U
+U+30E5,U
+U+30E6,U
+U+30E7,U
+U+30E8,U
+U+30E9,U
+U+30EA,U
+U+30EB,U
+U+30EC,U
+U+30ED,U
+U+30EE,U
+U+30EF,U
+U+30F0,U
+U+30F1,U
+U+30F2,U
+U+30F3,U
+U+30F4,U
+U+30F5,U
+U+30F6,U
+U+30F7,U
+U+30F8,U
+U+30F9,U
+U+30FA,U
+U+30FB,U
+U+30FC,U
+U+30FD,U
+U+30FE,U
+U+30FF,U
+U+3105,U
+U+3106,U
+U+3107,U
+U+3108,U
+U+3109,U
+U+310A,U
+U+310B,U
+U+310C,U
+U+310D,U
+U+310E,U
+U+310F,U
+U+3110,U
+U+3111,U
+U+3112,U
+U+3113,U
+U+3114,U
+U+3115,U
+U+3116,U
+U+3117,U
+U+3118,U
+U+3119,U
+U+311A,U
+U+311B,U
+U+311C,U
+U+311D,U
+U+311E,U
+U+311F,U
+U+3120,U
+U+3121,U
+U+3122,U
+U+3123,U
+U+3124,U
+U+3125,U
+U+3126,U
+U+3127,U
+U+3128,U
+U+3129,U
+U+312A,U
+U+312B,U
+U+312C,U
+U+312D,U
+U+3131,U
+U+3132,U
+U+3133,U
+U+3134,U
+U+3135,U
+U+3136,U
+U+3137,U
+U+3138,U
+U+3139,U
+U+313A,U
+U+313B,U
+U+313C,U
+U+313D,U
+U+313E,U
+U+313F,U
+U+3140,U
+U+3141,U
+U+3142,U
+U+3143,U
+U+3144,U
+U+3145,U
+U+3146,U
+U+3147,U
+U+3148,U
+U+3149,U
+U+314A,U
+U+314B,U
+U+314C,U
+U+314D,U
+U+314E,U
+U+314F,U
+U+3150,U
+U+3151,U
+U+3152,U
+U+3153,U
+U+3154,U
+U+3155,U
+U+3156,U
+U+3157,U
+U+3158,U
+U+3159,U
+U+315A,U
+U+315B,U
+U+315C,U
+U+315D,U
+U+315E,U
+U+315F,U
+U+3160,U
+U+3161,U
+U+3162,U
+U+3163,U
+U+3164,U
+U+3165,U
+U+3166,U
+U+3167,U
+U+3168,U
+U+3169,U
+U+316A,U
+U+316B,U
+U+316C,U
+U+316D,U
+U+316E,U
+U+316F,U
+U+3170,U
+U+3171,U
+U+3172,U
+U+3173,U
+U+3174,U
+U+3175,U
+U+3176,U
+U+3177,U
+U+3178,U
+U+3179,U
+U+317A,U
+U+317B,U
+U+317C,U
+U+317D,U
+U+317E,U
+U+317F,U
+U+3180,U
+U+3181,U
+U+3182,U
+U+3183,U
+U+3184,U
+U+3185,U
+U+3186,U
+U+3187,U
+U+3188,U
+U+3189,U
+U+318A,U
+U+318B,U
+U+318C,U
+U+318D,U
+U+318E,U
+U+3190,U
+U+3191,U
+U+3192,U
+U+3193,U
+U+3194,U
+U+3195,U
+U+3196,U
+U+3197,U
+U+3198,U
+U+3199,U
+U+319A,U
+U+319B,U
+U+319C,U
+U+319D,U
+U+319E,U
+U+319F,U
+U+31A0,U
+U+31A1,U
+U+31A2,U
+U+31A3,U
+U+31A4,U
+U+31A5,U
+U+31A6,U
+U+31A7,U
+U+31A8,U
+U+31A9,U
+U+31AA,U
+U+31AB,U
+U+31AC,U
+U+31AD,U
+U+31AE,U
+U+31AF,U
+U+31B0,U
+U+31B1,U
+U+31B2,U
+U+31B3,U
+U+31B4,U
+U+31B5,U
+U+31B6,U
+U+31B7,U
+U+31B8,U
+U+31B9,U
+U+31BA,U
+U+31C0,U
+U+31C1,U
+U+31C2,U
+U+31C3,U
+U+31C4,U
+U+31C5,U
+U+31C6,U
+U+31C7,U
+U+31C8,U
+U+31C9,U
+U+31CA,U
+U+31CB,U
+U+31CC,U
+U+31CD,U
+U+31CE,U
+U+31CF,U
+U+31D0,U
+U+31D1,U
+U+31D2,U
+U+31D3,U
+U+31D4,U
+U+31D5,U
+U+31D6,U
+U+31D7,U
+U+31D8,U
+U+31D9,U
+U+31DA,U
+U+31DB,U
+U+31DC,U
+U+31DD,U
+U+31DE,U
+U+31DF,U
+U+31E0,U
+U+31E1,U
+U+31E2,U
+U+31E3,U
+U+31F0,U
+U+31F1,U
+U+31F2,U
+U+31F3,U
+U+31F4,U
+U+31F5,U
+U+31F6,U
+U+31F7,U
+U+31F8,U
+U+31F9,U
+U+31FA,U
+U+31FB,U
+U+31FC,U
+U+31FD,U
+U+31FE,U
+U+31FF,U
+U+3200,U
+U+3201,U
+U+3202,U
+U+3203,U
+U+3204,U
+U+3205,U
+U+3206,U
+U+3207,U
+U+3208,U
+U+3209,U
+U+320A,U
+U+320B,U
+U+320C,U
+U+320D,U
+U+320E,U
+U+320F,U
+U+3210,U
+U+3211,U
+U+3212,U
+U+3213,U
+U+3214,U
+U+3215,U
+U+3216,U
+U+3217,U
+U+3218,U
+U+3219,U
+U+321A,U
+U+321B,U
+U+321C,U
+U+321D,U
+U+321E,U
+U+3220,U
+U+3221,U
+U+3222,U
+U+3223,U
+U+3224,U
+U+3225,U
+U+3226,U
+U+3227,U
+U+3228,U
+U+3229,U
+U+322A,U
+U+322B,U
+U+322C,U
+U+322D,U
+U+322E,U
+U+322F,U
+U+3230,U
+U+3231,U
+U+3232,U
+U+3233,U
+U+3234,U
+U+3235,U
+U+3236,U
+U+3237,U
+U+3238,U
+U+3239,U
+U+323A,U
+U+323B,U
+U+323C,U
+U+323D,U
+U+323E,U
+U+323F,U
+U+3240,U
+U+3241,U
+U+3242,U
+U+3243,U
+U+3244,U
+U+3245,U
+U+3246,U
+U+3247,U
+U+3248,U
+U+3249,U
+U+324A,U
+U+324B,U
+U+324C,U
+U+324D,U
+U+324E,U
+U+324F,U
+U+3250,U
+U+3251,U
+U+3252,U
+U+3253,U
+U+3254,U
+U+3255,U
+U+3256,U
+U+3257,U
+U+3258,U
+U+3259,U
+U+325A,U
+U+325B,U
+U+325C,U
+U+325D,U
+U+325E,U
+U+325F,U
+U+3260,U
+U+3261,U
+U+3262,U
+U+3263,U
+U+3264,U
+U+3265,U
+U+3266,U
+U+3267,U
+U+3268,U
+U+3269,U
+U+326A,U
+U+326B,U
+U+326C,U
+U+326D,U
+U+326E,U
+U+326F,U
+U+3270,U
+U+3271,U
+U+3272,U
+U+3273,U
+U+3274,U
+U+3275,U
+U+3276,U
+U+3277,U
+U+3278,U
+U+3279,U
+U+327A,U
+U+327B,U
+U+327C,U
+U+327D,U
+U+327E,U
+U+327F,U
+U+3280,U
+U+3281,U
+U+3282,U
+U+3283,U
+U+3284,U
+U+3285,U
+U+3286,U
+U+3287,U
+U+3288,U
+U+3289,U
+U+328A,U
+U+328B,U
+U+328C,U
+U+328D,U
+U+328E,U
+U+328F,U
+U+3290,U
+U+3291,U
+U+3292,U
+U+3293,U
+U+3294,U
+U+3295,U
+U+3296,U
+U+3297,U
+U+3298,U
+U+3299,U
+U+329A,U
+U+329B,U
+U+329C,U
+U+329D,U
+U+329E,U
+U+329F,U
+U+32A0,U
+U+32A1,U
+U+32A2,U
+U+32A3,U
+U+32A4,U
+U+32A5,U
+U+32A6,U
+U+32A7,U
+U+32A8,U
+U+32A9,U
+U+32AA,U
+U+32AB,U
+U+32AC,U
+U+32AD,U
+U+32AE,U
+U+32AF,U
+U+32B0,U
+U+32B1,U
+U+32B2,U
+U+32B3,U
+U+32B4,U
+U+32B5,U
+U+32B6,U
+U+32B7,U
+U+32B8,U
+U+32B9,U
+U+32BA,U
+U+32BB,U
+U+32BC,U
+U+32BD,U
+U+32BE,U
+U+32BF,U
+U+32C0,U
+U+32C1,U
+U+32C2,U
+U+32C3,U
+U+32C4,U
+U+32C5,U
+U+32C6,U
+U+32C7,U
+U+32C8,U
+U+32C9,U
+U+32CA,U
+U+32CB,U
+U+32CC,U
+U+32CD,U
+U+32CE,U
+U+32CF,U
+U+32D0,U
+U+32D1,U
+U+32D2,U
+U+32D3,U
+U+32D4,U
+U+32D5,U
+U+32D6,U
+U+32D7,U
+U+32D8,U
+U+32D9,U
+U+32DA,U
+U+32DB,U
+U+32DC,U
+U+32DD,U
+U+32DE,U
+U+32DF,U
+U+32E0,U
+U+32E1,U
+U+32E2,U
+U+32E3,U
+U+32E4,U
+U+32E5,U
+U+32E6,U
+U+32E7,U
+U+32E8,U
+U+32E9,U
+U+32EA,U
+U+32EB,U
+U+32EC,U
+U+32ED,U
+U+32EE,U
+U+32EF,U
+U+32F0,U
+U+32F1,U
+U+32F2,U
+U+32F3,U
+U+32F4,U
+U+32F5,U
+U+32F6,U
+U+32F7,U
+U+32F8,U
+U+32F9,U
+U+32FA,U
+U+32FB,U
+U+32FC,U
+U+32FD,U
+U+32FE,U
+U+3300,U
+U+3301,U
+U+3302,U
+U+3303,U
+U+3304,U
+U+3305,U
+U+3306,U
+U+3307,U
+U+3308,U
+U+3309,U
+U+330A,U
+U+330B,U
+U+330C,U
+U+330D,U
+U+330E,U
+U+330F,U
+U+3310,U
+U+3311,U
+U+3312,U
+U+3313,U
+U+3314,U
+U+3315,U
+U+3316,U
+U+3317,U
+U+3318,U
+U+3319,U
+U+331A,U
+U+331B,U
+U+331C,U
+U+331D,U
+U+331E,U
+U+331F,U
+U+3320,U
+U+3321,U
+U+3322,U
+U+3323,U
+U+3324,U
+U+3325,U
+U+3326,U
+U+3327,U
+U+3328,U
+U+3329,U
+U+332A,U
+U+332B,U
+U+332C,U
+U+332D,U
+U+332E,U
+U+332F,U
+U+3330,U
+U+3331,U
+U+3332,U
+U+3333,U
+U+3334,U
+U+3335,U
+U+3336,U
+U+3337,U
+U+3338,U
+U+3339,U
+U+333A,U
+U+333B,U
+U+333C,U
+U+333D,U
+U+333E,U
+U+333F,U
+U+3340,U
+U+3341,U
+U+3342,U
+U+3343,U
+U+3344,U
+U+3345,U
+U+3346,U
+U+3347,U
+U+3348,U
+U+3349,U
+U+334A,U
+U+334B,U
+U+334C,U
+U+334D,U
+U+334E,U
+U+334F,U
+U+3350,U
+U+3351,U
+U+3352,U
+U+3353,U
+U+3354,U
+U+3355,U
+U+3356,U
+U+3357,U
+U+3358,U
+U+3359,U
+U+335A,U
+U+335B,U
+U+335C,U
+U+335D,U
+U+335E,U
+U+335F,U
+U+3360,U
+U+3361,U
+U+3362,U
+U+3363,U
+U+3364,U
+U+3365,U
+U+3366,U
+U+3367,U
+U+3368,U
+U+3369,U
+U+336A,U
+U+336B,U
+U+336C,U
+U+336D,U
+U+336E,U
+U+336F,U
+U+3370,U
+U+3371,U
+U+3372,U
+U+3373,U
+U+3374,U
+U+3375,U
+U+3376,U
+U+3377,U
+U+3378,U
+U+3379,U
+U+337A,U
+U+337B,U
+U+337C,U
+U+337D,U
+U+337E,U
+U+337F,U
+U+3380,U
+U+3381,U
+U+3382,U
+U+3383,U
+U+3384,U
+U+3385,U
+U+3386,U
+U+3387,U
+U+3388,U
+U+3389,U
+U+338A,U
+U+338B,U
+U+338C,U
+U+338D,U
+U+338E,U
+U+338F,U
+U+3390,U
+U+3391,U
+U+3392,U
+U+3393,U
+U+3394,U
+U+3395,U
+U+3396,U
+U+3397,U
+U+3398,U
+U+3399,U
+U+339A,U
+U+339B,U
+U+339C,U
+U+339D,U
+U+339E,U
+U+339F,U
+U+33A0,U
+U+33A1,U
+U+33A2,U
+U+33A3,U
+U+33A4,U
+U+33A5,U
+U+33A6,U
+U+33A7,U
+U+33A8,U
+U+33A9,U
+U+33AA,U
+U+33AB,U
+U+33AC,U
+U+33AD,U
+U+33AE,U
+U+33AF,U
+U+33B0,U
+U+33B1,U
+U+33B2,U
+U+33B3,U
+U+33B4,U
+U+33B5,U
+U+33B6,U
+U+33B7,U
+U+33B8,U
+U+33B9,U
+U+33BA,U
+U+33BB,U
+U+33BC,U
+U+33BD,U
+U+33BE,U
+U+33BF,U
+U+33C0,U
+U+33C1,U
+U+33C2,U
+U+33C3,U
+U+33C4,U
+U+33C5,U
+U+33C6,U
+U+33C7,U
+U+33C8,U
+U+33C9,U
+U+33CA,U
+U+33CB,U
+U+33CC,U
+U+33CD,U
+U+33CE,U
+U+33CF,U
+U+33D0,U
+U+33D1,U
+U+33D2,U
+U+33D3,U
+U+33D4,U
+U+33D5,U
+U+33D6,U
+U+33D7,U
+U+33D8,U
+U+33D9,U
+U+33DA,U
+U+33DB,U
+U+33DC,U
+U+33DD,U
+U+33DE,U
+U+33DF,U
+U+33E0,U
+U+33E1,U
+U+33E2,U
+U+33E3,U
+U+33E4,U
+U+33E5,U
+U+33E6,U
+U+33E7,U
+U+33E8,U
+U+33E9,U
+U+33EA,U
+U+33EB,U
+U+33EC,U
+U+33ED,U
+U+33EE,U
+U+33EF,U
+U+33F0,U
+U+33F1,U
+U+33F2,U
+U+33F3,U
+U+33F4,U
+U+33F5,U
+U+33F6,U
+U+33F7,U
+U+33F8,U
+U+33F9,U
+U+33FA,U
+U+33FB,U
+U+33FC,U
+U+33FD,U
+U+33FE,U
+U+33FF,U
+U+3400,U
+U+4DB5,U
+U+4DC0,U
+U+4DC1,U
+U+4DC2,U
+U+4DC3,U
+U+4DC4,U
+U+4DC5,U
+U+4DC6,U
+U+4DC7,U
+U+4DC8,U
+U+4DC9,U
+U+4DCA,U
+U+4DCB,U
+U+4DCC,U
+U+4DCD,U
+U+4DCE,U
+U+4DCF,U
+U+4DD0,U
+U+4DD1,U
+U+4DD2,U
+U+4DD3,U
+U+4DD4,U
+U+4DD5,U
+U+4DD6,U
+U+4DD7,U
+U+4DD8,U
+U+4DD9,U
+U+4DDA,U
+U+4DDB,U
+U+4DDC,U
+U+4DDD,U
+U+4DDE,U
+U+4DDF,U
+U+4DE0,U
+U+4DE1,U
+U+4DE2,U
+U+4DE3,U
+U+4DE4,U
+U+4DE5,U
+U+4DE6,U
+U+4DE7,U
+U+4DE8,U
+U+4DE9,U
+U+4DEA,U
+U+4DEB,U
+U+4DEC,U
+U+4DED,U
+U+4DEE,U
+U+4DEF,U
+U+4DF0,U
+U+4DF1,U
+U+4DF2,U
+U+4DF3,U
+U+4DF4,U
+U+4DF5,U
+U+4DF6,U
+U+4DF7,U
+U+4DF8,U
+U+4DF9,U
+U+4DFA,U
+U+4DFB,U
+U+4DFC,U
+U+4DFD,U
+U+4DFE,U
+U+4DFF,U
+U+4E00,U
+U+9FCC,U
+U+A000,U
+U+A001,U
+U+A002,U
+U+A003,U
+U+A004,U
+U+A005,U
+U+A006,U
+U+A007,U
+U+A008,U
+U+A009,U
+U+A00A,U
+U+A00B,U
+U+A00C,U
+U+A00D,U
+U+A00E,U
+U+A00F,U
+U+A010,U
+U+A011,U
+U+A012,U
+U+A013,U
+U+A014,U
+U+A015,U
+U+A016,U
+U+A017,U
+U+A018,U
+U+A019,U
+U+A01A,U
+U+A01B,U
+U+A01C,U
+U+A01D,U
+U+A01E,U
+U+A01F,U
+U+A020,U
+U+A021,U
+U+A022,U
+U+A023,U
+U+A024,U
+U+A025,U
+U+A026,U
+U+A027,U
+U+A028,U
+U+A029,U
+U+A02A,U
+U+A02B,U
+U+A02C,U
+U+A02D,U
+U+A02E,U
+U+A02F,U
+U+A030,U
+U+A031,U
+U+A032,U
+U+A033,U
+U+A034,U
+U+A035,U
+U+A036,U
+U+A037,U
+U+A038,U
+U+A039,U
+U+A03A,U
+U+A03B,U
+U+A03C,U
+U+A03D,U
+U+A03E,U
+U+A03F,U
+U+A040,U
+U+A041,U
+U+A042,U
+U+A043,U
+U+A044,U
+U+A045,U
+U+A046,U
+U+A047,U
+U+A048,U
+U+A049,U
+U+A04A,U
+U+A04B,U
+U+A04C,U
+U+A04D,U
+U+A04E,U
+U+A04F,U
+U+A050,U
+U+A051,U
+U+A052,U
+U+A053,U
+U+A054,U
+U+A055,U
+U+A056,U
+U+A057,U
+U+A058,U
+U+A059,U
+U+A05A,U
+U+A05B,U
+U+A05C,U
+U+A05D,U
+U+A05E,U
+U+A05F,U
+U+A060,U
+U+A061,U
+U+A062,U
+U+A063,U
+U+A064,U
+U+A065,U
+U+A066,U
+U+A067,U
+U+A068,U
+U+A069,U
+U+A06A,U
+U+A06B,U
+U+A06C,U
+U+A06D,U
+U+A06E,U
+U+A06F,U
+U+A070,U
+U+A071,U
+U+A072,U
+U+A073,U
+U+A074,U
+U+A075,U
+U+A076,U
+U+A077,U
+U+A078,U
+U+A079,U
+U+A07A,U
+U+A07B,U
+U+A07C,U
+U+A07D,U
+U+A07E,U
+U+A07F,U
+U+A080,U
+U+A081,U
+U+A082,U
+U+A083,U
+U+A084,U
+U+A085,U
+U+A086,U
+U+A087,U
+U+A088,U
+U+A089,U
+U+A08A,U
+U+A08B,U
+U+A08C,U
+U+A08D,U
+U+A08E,U
+U+A08F,U
+U+A090,U
+U+A091,U
+U+A092,U
+U+A093,U
+U+A094,U
+U+A095,U
+U+A096,U
+U+A097,U
+U+A098,U
+U+A099,U
+U+A09A,U
+U+A09B,U
+U+A09C,U
+U+A09D,U
+U+A09E,U
+U+A09F,U
+U+A0A0,U
+U+A0A1,U
+U+A0A2,U
+U+A0A3,U
+U+A0A4,U
+U+A0A5,U
+U+A0A6,U
+U+A0A7,U
+U+A0A8,U
+U+A0A9,U
+U+A0AA,U
+U+A0AB,U
+U+A0AC,U
+U+A0AD,U
+U+A0AE,U
+U+A0AF,U
+U+A0B0,U
+U+A0B1,U
+U+A0B2,U
+U+A0B3,U
+U+A0B4,U
+U+A0B5,U
+U+A0B6,U
+U+A0B7,U
+U+A0B8,U
+U+A0B9,U
+U+A0BA,U
+U+A0BB,U
+U+A0BC,U
+U+A0BD,U
+U+A0BE,U
+U+A0BF,U
+U+A0C0,U
+U+A0C1,U
+U+A0C2,U
+U+A0C3,U
+U+A0C4,U
+U+A0C5,U
+U+A0C6,U
+U+A0C7,U
+U+A0C8,U
+U+A0C9,U
+U+A0CA,U
+U+A0CB,U
+U+A0CC,U
+U+A0CD,U
+U+A0CE,U
+U+A0CF,U
+U+A0D0,U
+U+A0D1,U
+U+A0D2,U
+U+A0D3,U
+U+A0D4,U
+U+A0D5,U
+U+A0D6,U
+U+A0D7,U
+U+A0D8,U
+U+A0D9,U
+U+A0DA,U
+U+A0DB,U
+U+A0DC,U
+U+A0DD,U
+U+A0DE,U
+U+A0DF,U
+U+A0E0,U
+U+A0E1,U
+U+A0E2,U
+U+A0E3,U
+U+A0E4,U
+U+A0E5,U
+U+A0E6,U
+U+A0E7,U
+U+A0E8,U
+U+A0E9,U
+U+A0EA,U
+U+A0EB,U
+U+A0EC,U
+U+A0ED,U
+U+A0EE,U
+U+A0EF,U
+U+A0F0,U
+U+A0F1,U
+U+A0F2,U
+U+A0F3,U
+U+A0F4,U
+U+A0F5,U
+U+A0F6,U
+U+A0F7,U
+U+A0F8,U
+U+A0F9,U
+U+A0FA,U
+U+A0FB,U
+U+A0FC,U
+U+A0FD,U
+U+A0FE,U
+U+A0FF,U
+U+A100,U
+U+A101,U
+U+A102,U
+U+A103,U
+U+A104,U
+U+A105,U
+U+A106,U
+U+A107,U
+U+A108,U
+U+A109,U
+U+A10A,U
+U+A10B,U
+U+A10C,U
+U+A10D,U
+U+A10E,U
+U+A10F,U
+U+A110,U
+U+A111,U
+U+A112,U
+U+A113,U
+U+A114,U
+U+A115,U
+U+A116,U
+U+A117,U
+U+A118,U
+U+A119,U
+U+A11A,U
+U+A11B,U
+U+A11C,U
+U+A11D,U
+U+A11E,U
+U+A11F,U
+U+A120,U
+U+A121,U
+U+A122,U
+U+A123,U
+U+A124,U
+U+A125,U
+U+A126,U
+U+A127,U
+U+A128,U
+U+A129,U
+U+A12A,U
+U+A12B,U
+U+A12C,U
+U+A12D,U
+U+A12E,U
+U+A12F,U
+U+A130,U
+U+A131,U
+U+A132,U
+U+A133,U
+U+A134,U
+U+A135,U
+U+A136,U
+U+A137,U
+U+A138,U
+U+A139,U
+U+A13A,U
+U+A13B,U
+U+A13C,U
+U+A13D,U
+U+A13E,U
+U+A13F,U
+U+A140,U
+U+A141,U
+U+A142,U
+U+A143,U
+U+A144,U
+U+A145,U
+U+A146,U
+U+A147,U
+U+A148,U
+U+A149,U
+U+A14A,U
+U+A14B,U
+U+A14C,U
+U+A14D,U
+U+A14E,U
+U+A14F,U
+U+A150,U
+U+A151,U
+U+A152,U
+U+A153,U
+U+A154,U
+U+A155,U
+U+A156,U
+U+A157,U
+U+A158,U
+U+A159,U
+U+A15A,U
+U+A15B,U
+U+A15C,U
+U+A15D,U
+U+A15E,U
+U+A15F,U
+U+A160,U
+U+A161,U
+U+A162,U
+U+A163,U
+U+A164,U
+U+A165,U
+U+A166,U
+U+A167,U
+U+A168,U
+U+A169,U
+U+A16A,U
+U+A16B,U
+U+A16C,U
+U+A16D,U
+U+A16E,U
+U+A16F,U
+U+A170,U
+U+A171,U
+U+A172,U
+U+A173,U
+U+A174,U
+U+A175,U
+U+A176,U
+U+A177,U
+U+A178,U
+U+A179,U
+U+A17A,U
+U+A17B,U
+U+A17C,U
+U+A17D,U
+U+A17E,U
+U+A17F,U
+U+A180,U
+U+A181,U
+U+A182,U
+U+A183,U
+U+A184,U
+U+A185,U
+U+A186,U
+U+A187,U
+U+A188,U
+U+A189,U
+U+A18A,U
+U+A18B,U
+U+A18C,U
+U+A18D,U
+U+A18E,U
+U+A18F,U
+U+A190,U
+U+A191,U
+U+A192,U
+U+A193,U
+U+A194,U
+U+A195,U
+U+A196,U
+U+A197,U
+U+A198,U
+U+A199,U
+U+A19A,U
+U+A19B,U
+U+A19C,U
+U+A19D,U
+U+A19E,U
+U+A19F,U
+U+A1A0,U
+U+A1A1,U
+U+A1A2,U
+U+A1A3,U
+U+A1A4,U
+U+A1A5,U
+U+A1A6,U
+U+A1A7,U
+U+A1A8,U
+U+A1A9,U
+U+A1AA,U
+U+A1AB,U
+U+A1AC,U
+U+A1AD,U
+U+A1AE,U
+U+A1AF,U
+U+A1B0,U
+U+A1B1,U
+U+A1B2,U
+U+A1B3,U
+U+A1B4,U
+U+A1B5,U
+U+A1B6,U
+U+A1B7,U
+U+A1B8,U
+U+A1B9,U
+U+A1BA,U
+U+A1BB,U
+U+A1BC,U
+U+A1BD,U
+U+A1BE,U
+U+A1BF,U
+U+A1C0,U
+U+A1C1,U
+U+A1C2,U
+U+A1C3,U
+U+A1C4,U
+U+A1C5,U
+U+A1C6,U
+U+A1C7,U
+U+A1C8,U
+U+A1C9,U
+U+A1CA,U
+U+A1CB,U
+U+A1CC,U
+U+A1CD,U
+U+A1CE,U
+U+A1CF,U
+U+A1D0,U
+U+A1D1,U
+U+A1D2,U
+U+A1D3,U
+U+A1D4,U
+U+A1D5,U
+U+A1D6,U
+U+A1D7,U
+U+A1D8,U
+U+A1D9,U
+U+A1DA,U
+U+A1DB,U
+U+A1DC,U
+U+A1DD,U
+U+A1DE,U
+U+A1DF,U
+U+A1E0,U
+U+A1E1,U
+U+A1E2,U
+U+A1E3,U
+U+A1E4,U
+U+A1E5,U
+U+A1E6,U
+U+A1E7,U
+U+A1E8,U
+U+A1E9,U
+U+A1EA,U
+U+A1EB,U
+U+A1EC,U
+U+A1ED,U
+U+A1EE,U
+U+A1EF,U
+U+A1F0,U
+U+A1F1,U
+U+A1F2,U
+U+A1F3,U
+U+A1F4,U
+U+A1F5,U
+U+A1F6,U
+U+A1F7,U
+U+A1F8,U
+U+A1F9,U
+U+A1FA,U
+U+A1FB,U
+U+A1FC,U
+U+A1FD,U
+U+A1FE,U
+U+A1FF,U
+U+A200,U
+U+A201,U
+U+A202,U
+U+A203,U
+U+A204,U
+U+A205,U
+U+A206,U
+U+A207,U
+U+A208,U
+U+A209,U
+U+A20A,U
+U+A20B,U
+U+A20C,U
+U+A20D,U
+U+A20E,U
+U+A20F,U
+U+A210,U
+U+A211,U
+U+A212,U
+U+A213,U
+U+A214,U
+U+A215,U
+U+A216,U
+U+A217,U
+U+A218,U
+U+A219,U
+U+A21A,U
+U+A21B,U
+U+A21C,U
+U+A21D,U
+U+A21E,U
+U+A21F,U
+U+A220,U
+U+A221,U
+U+A222,U
+U+A223,U
+U+A224,U
+U+A225,U
+U+A226,U
+U+A227,U
+U+A228,U
+U+A229,U
+U+A22A,U
+U+A22B,U
+U+A22C,U
+U+A22D,U
+U+A22E,U
+U+A22F,U
+U+A230,U
+U+A231,U
+U+A232,U
+U+A233,U
+U+A234,U
+U+A235,U
+U+A236,U
+U+A237,U
+U+A238,U
+U+A239,U
+U+A23A,U
+U+A23B,U
+U+A23C,U
+U+A23D,U
+U+A23E,U
+U+A23F,U
+U+A240,U
+U+A241,U
+U+A242,U
+U+A243,U
+U+A244,U
+U+A245,U
+U+A246,U
+U+A247,U
+U+A248,U
+U+A249,U
+U+A24A,U
+U+A24B,U
+U+A24C,U
+U+A24D,U
+U+A24E,U
+U+A24F,U
+U+A250,U
+U+A251,U
+U+A252,U
+U+A253,U
+U+A254,U
+U+A255,U
+U+A256,U
+U+A257,U
+U+A258,U
+U+A259,U
+U+A25A,U
+U+A25B,U
+U+A25C,U
+U+A25D,U
+U+A25E,U
+U+A25F,U
+U+A260,U
+U+A261,U
+U+A262,U
+U+A263,U
+U+A264,U
+U+A265,U
+U+A266,U
+U+A267,U
+U+A268,U
+U+A269,U
+U+A26A,U
+U+A26B,U
+U+A26C,U
+U+A26D,U
+U+A26E,U
+U+A26F,U
+U+A270,U
+U+A271,U
+U+A272,U
+U+A273,U
+U+A274,U
+U+A275,U
+U+A276,U
+U+A277,U
+U+A278,U
+U+A279,U
+U+A27A,U
+U+A27B,U
+U+A27C,U
+U+A27D,U
+U+A27E,U
+U+A27F,U
+U+A280,U
+U+A281,U
+U+A282,U
+U+A283,U
+U+A284,U
+U+A285,U
+U+A286,U
+U+A287,U
+U+A288,U
+U+A289,U
+U+A28A,U
+U+A28B,U
+U+A28C,U
+U+A28D,U
+U+A28E,U
+U+A28F,U
+U+A290,U
+U+A291,U
+U+A292,U
+U+A293,U
+U+A294,U
+U+A295,U
+U+A296,U
+U+A297,U
+U+A298,U
+U+A299,U
+U+A29A,U
+U+A29B,U
+U+A29C,U
+U+A29D,U
+U+A29E,U
+U+A29F,U
+U+A2A0,U
+U+A2A1,U
+U+A2A2,U
+U+A2A3,U
+U+A2A4,U
+U+A2A5,U
+U+A2A6,U
+U+A2A7,U
+U+A2A8,U
+U+A2A9,U
+U+A2AA,U
+U+A2AB,U
+U+A2AC,U
+U+A2AD,U
+U+A2AE,U
+U+A2AF,U
+U+A2B0,U
+U+A2B1,U
+U+A2B2,U
+U+A2B3,U
+U+A2B4,U
+U+A2B5,U
+U+A2B6,U
+U+A2B7,U
+U+A2B8,U
+U+A2B9,U
+U+A2BA,U
+U+A2BB,U
+U+A2BC,U
+U+A2BD,U
+U+A2BE,U
+U+A2BF,U
+U+A2C0,U
+U+A2C1,U
+U+A2C2,U
+U+A2C3,U
+U+A2C4,U
+U+A2C5,U
+U+A2C6,U
+U+A2C7,U
+U+A2C8,U
+U+A2C9,U
+U+A2CA,U
+U+A2CB,U
+U+A2CC,U
+U+A2CD,U
+U+A2CE,U
+U+A2CF,U
+U+A2D0,U
+U+A2D1,U
+U+A2D2,U
+U+A2D3,U
+U+A2D4,U
+U+A2D5,U
+U+A2D6,U
+U+A2D7,U
+U+A2D8,U
+U+A2D9,U
+U+A2DA,U
+U+A2DB,U
+U+A2DC,U
+U+A2DD,U
+U+A2DE,U
+U+A2DF,U
+U+A2E0,U
+U+A2E1,U
+U+A2E2,U
+U+A2E3,U
+U+A2E4,U
+U+A2E5,U
+U+A2E6,U
+U+A2E7,U
+U+A2E8,U
+U+A2E9,U
+U+A2EA,U
+U+A2EB,U
+U+A2EC,U
+U+A2ED,U
+U+A2EE,U
+U+A2EF,U
+U+A2F0,U
+U+A2F1,U
+U+A2F2,U
+U+A2F3,U
+U+A2F4,U
+U+A2F5,U
+U+A2F6,U
+U+A2F7,U
+U+A2F8,U
+U+A2F9,U
+U+A2FA,U
+U+A2FB,U
+U+A2FC,U
+U+A2FD,U
+U+A2FE,U
+U+A2FF,U
+U+A300,U
+U+A301,U
+U+A302,U
+U+A303,U
+U+A304,U
+U+A305,U
+U+A306,U
+U+A307,U
+U+A308,U
+U+A309,U
+U+A30A,U
+U+A30B,U
+U+A30C,U
+U+A30D,U
+U+A30E,U
+U+A30F,U
+U+A310,U
+U+A311,U
+U+A312,U
+U+A313,U
+U+A314,U
+U+A315,U
+U+A316,U
+U+A317,U
+U+A318,U
+U+A319,U
+U+A31A,U
+U+A31B,U
+U+A31C,U
+U+A31D,U
+U+A31E,U
+U+A31F,U
+U+A320,U
+U+A321,U
+U+A322,U
+U+A323,U
+U+A324,U
+U+A325,U
+U+A326,U
+U+A327,U
+U+A328,U
+U+A329,U
+U+A32A,U
+U+A32B,U
+U+A32C,U
+U+A32D,U
+U+A32E,U
+U+A32F,U
+U+A330,U
+U+A331,U
+U+A332,U
+U+A333,U
+U+A334,U
+U+A335,U
+U+A336,U
+U+A337,U
+U+A338,U
+U+A339,U
+U+A33A,U
+U+A33B,U
+U+A33C,U
+U+A33D,U
+U+A33E,U
+U+A33F,U
+U+A340,U
+U+A341,U
+U+A342,U
+U+A343,U
+U+A344,U
+U+A345,U
+U+A346,U
+U+A347,U
+U+A348,U
+U+A349,U
+U+A34A,U
+U+A34B,U
+U+A34C,U
+U+A34D,U
+U+A34E,U
+U+A34F,U
+U+A350,U
+U+A351,U
+U+A352,U
+U+A353,U
+U+A354,U
+U+A355,U
+U+A356,U
+U+A357,U
+U+A358,U
+U+A359,U
+U+A35A,U
+U+A35B,U
+U+A35C,U
+U+A35D,U
+U+A35E,U
+U+A35F,U
+U+A360,U
+U+A361,U
+U+A362,U
+U+A363,U
+U+A364,U
+U+A365,U
+U+A366,U
+U+A367,U
+U+A368,U
+U+A369,U
+U+A36A,U
+U+A36B,U
+U+A36C,U
+U+A36D,U
+U+A36E,U
+U+A36F,U
+U+A370,U
+U+A371,U
+U+A372,U
+U+A373,U
+U+A374,U
+U+A375,U
+U+A376,U
+U+A377,U
+U+A378,U
+U+A379,U
+U+A37A,U
+U+A37B,U
+U+A37C,U
+U+A37D,U
+U+A37E,U
+U+A37F,U
+U+A380,U
+U+A381,U
+U+A382,U
+U+A383,U
+U+A384,U
+U+A385,U
+U+A386,U
+U+A387,U
+U+A388,U
+U+A389,U
+U+A38A,U
+U+A38B,U
+U+A38C,U
+U+A38D,U
+U+A38E,U
+U+A38F,U
+U+A390,U
+U+A391,U
+U+A392,U
+U+A393,U
+U+A394,U
+U+A395,U
+U+A396,U
+U+A397,U
+U+A398,U
+U+A399,U
+U+A39A,U
+U+A39B,U
+U+A39C,U
+U+A39D,U
+U+A39E,U
+U+A39F,U
+U+A3A0,U
+U+A3A1,U
+U+A3A2,U
+U+A3A3,U
+U+A3A4,U
+U+A3A5,U
+U+A3A6,U
+U+A3A7,U
+U+A3A8,U
+U+A3A9,U
+U+A3AA,U
+U+A3AB,U
+U+A3AC,U
+U+A3AD,U
+U+A3AE,U
+U+A3AF,U
+U+A3B0,U
+U+A3B1,U
+U+A3B2,U
+U+A3B3,U
+U+A3B4,U
+U+A3B5,U
+U+A3B6,U
+U+A3B7,U
+U+A3B8,U
+U+A3B9,U
+U+A3BA,U
+U+A3BB,U
+U+A3BC,U
+U+A3BD,U
+U+A3BE,U
+U+A3BF,U
+U+A3C0,U
+U+A3C1,U
+U+A3C2,U
+U+A3C3,U
+U+A3C4,U
+U+A3C5,U
+U+A3C6,U
+U+A3C7,U
+U+A3C8,U
+U+A3C9,U
+U+A3CA,U
+U+A3CB,U
+U+A3CC,U
+U+A3CD,U
+U+A3CE,U
+U+A3CF,U
+U+A3D0,U
+U+A3D1,U
+U+A3D2,U
+U+A3D3,U
+U+A3D4,U
+U+A3D5,U
+U+A3D6,U
+U+A3D7,U
+U+A3D8,U
+U+A3D9,U
+U+A3DA,U
+U+A3DB,U
+U+A3DC,U
+U+A3DD,U
+U+A3DE,U
+U+A3DF,U
+U+A3E0,U
+U+A3E1,U
+U+A3E2,U
+U+A3E3,U
+U+A3E4,U
+U+A3E5,U
+U+A3E6,U
+U+A3E7,U
+U+A3E8,U
+U+A3E9,U
+U+A3EA,U
+U+A3EB,U
+U+A3EC,U
+U+A3ED,U
+U+A3EE,U
+U+A3EF,U
+U+A3F0,U
+U+A3F1,U
+U+A3F2,U
+U+A3F3,U
+U+A3F4,U
+U+A3F5,U
+U+A3F6,U
+U+A3F7,U
+U+A3F8,U
+U+A3F9,U
+U+A3FA,U
+U+A3FB,U
+U+A3FC,U
+U+A3FD,U
+U+A3FE,U
+U+A3FF,U
+U+A400,U
+U+A401,U
+U+A402,U
+U+A403,U
+U+A404,U
+U+A405,U
+U+A406,U
+U+A407,U
+U+A408,U
+U+A409,U
+U+A40A,U
+U+A40B,U
+U+A40C,U
+U+A40D,U
+U+A40E,U
+U+A40F,U
+U+A410,U
+U+A411,U
+U+A412,U
+U+A413,U
+U+A414,U
+U+A415,U
+U+A416,U
+U+A417,U
+U+A418,U
+U+A419,U
+U+A41A,U
+U+A41B,U
+U+A41C,U
+U+A41D,U
+U+A41E,U
+U+A41F,U
+U+A420,U
+U+A421,U
+U+A422,U
+U+A423,U
+U+A424,U
+U+A425,U
+U+A426,U
+U+A427,U
+U+A428,U
+U+A429,U
+U+A42A,U
+U+A42B,U
+U+A42C,U
+U+A42D,U
+U+A42E,U
+U+A42F,U
+U+A430,U
+U+A431,U
+U+A432,U
+U+A433,U
+U+A434,U
+U+A435,U
+U+A436,U
+U+A437,U
+U+A438,U
+U+A439,U
+U+A43A,U
+U+A43B,U
+U+A43C,U
+U+A43D,U
+U+A43E,U
+U+A43F,U
+U+A440,U
+U+A441,U
+U+A442,U
+U+A443,U
+U+A444,U
+U+A445,U
+U+A446,U
+U+A447,U
+U+A448,U
+U+A449,U
+U+A44A,U
+U+A44B,U
+U+A44C,U
+U+A44D,U
+U+A44E,U
+U+A44F,U
+U+A450,U
+U+A451,U
+U+A452,U
+U+A453,U
+U+A454,U
+U+A455,U
+U+A456,U
+U+A457,U
+U+A458,U
+U+A459,U
+U+A45A,U
+U+A45B,U
+U+A45C,U
+U+A45D,U
+U+A45E,U
+U+A45F,U
+U+A460,U
+U+A461,U
+U+A462,U
+U+A463,U
+U+A464,U
+U+A465,U
+U+A466,U
+U+A467,U
+U+A468,U
+U+A469,U
+U+A46A,U
+U+A46B,U
+U+A46C,U
+U+A46D,U
+U+A46E,U
+U+A46F,U
+U+A470,U
+U+A471,U
+U+A472,U
+U+A473,U
+U+A474,U
+U+A475,U
+U+A476,U
+U+A477,U
+U+A478,U
+U+A479,U
+U+A47A,U
+U+A47B,U
+U+A47C,U
+U+A47D,U
+U+A47E,U
+U+A47F,U
+U+A480,U
+U+A481,U
+U+A482,U
+U+A483,U
+U+A484,U
+U+A485,U
+U+A486,U
+U+A487,U
+U+A488,U
+U+A489,U
+U+A48A,U
+U+A48B,U
+U+A48C,U
+U+A490,U
+U+A491,U
+U+A492,U
+U+A493,U
+U+A494,U
+U+A495,U
+U+A496,U
+U+A497,U
+U+A498,U
+U+A499,U
+U+A49A,U
+U+A49B,U
+U+A49C,U
+U+A49D,U
+U+A49E,U
+U+A49F,U
+U+A4A0,U
+U+A4A1,U
+U+A4A2,U
+U+A4A3,U
+U+A4A4,U
+U+A4A5,U
+U+A4A6,U
+U+A4A7,U
+U+A4A8,U
+U+A4A9,U
+U+A4AA,U
+U+A4AB,U
+U+A4AC,U
+U+A4AD,U
+U+A4AE,U
+U+A4AF,U
+U+A4B0,U
+U+A4B1,U
+U+A4B2,U
+U+A4B3,U
+U+A4B4,U
+U+A4B5,U
+U+A4B6,U
+U+A4B7,U
+U+A4B8,U
+U+A4B9,U
+U+A4BA,U
+U+A4BB,U
+U+A4BC,U
+U+A4BD,U
+U+A4BE,U
+U+A4BF,U
+U+A4C0,U
+U+A4C1,U
+U+A4C2,U
+U+A4C3,U
+U+A4C4,U
+U+A4C5,U
+U+A4C6,U
+U+A4D0,R
+U+A4D1,R
+U+A4D2,R
+U+A4D3,R
+U+A4D4,R
+U+A4D5,R
+U+A4D6,R
+U+A4D7,R
+U+A4D8,R
+U+A4D9,R
+U+A4DA,R
+U+A4DB,R
+U+A4DC,R
+U+A4DD,R
+U+A4DE,R
+U+A4DF,R
+U+A4E0,R
+U+A4E1,R
+U+A4E2,R
+U+A4E3,R
+U+A4E4,R
+U+A4E5,R
+U+A4E6,R
+U+A4E7,R
+U+A4E8,R
+U+A4E9,R
+U+A4EA,R
+U+A4EB,R
+U+A4EC,R
+U+A4ED,R
+U+A4EE,R
+U+A4EF,R
+U+A4F0,R
+U+A4F1,R
+U+A4F2,R
+U+A4F3,R
+U+A4F4,R
+U+A4F5,R
+U+A4F6,R
+U+A4F7,R
+U+A4F8,R
+U+A4F9,R
+U+A4FA,R
+U+A4FB,R
+U+A4FC,R
+U+A4FD,R
+U+A4FE,R
+U+A4FF,R
+U+A500,R
+U+A501,R
+U+A502,R
+U+A503,R
+U+A504,R
+U+A505,R
+U+A506,R
+U+A507,R
+U+A508,R
+U+A509,R
+U+A50A,R
+U+A50B,R
+U+A50C,R
+U+A50D,R
+U+A50E,R
+U+A50F,R
+U+A510,R
+U+A511,R
+U+A512,R
+U+A513,R
+U+A514,R
+U+A515,R
+U+A516,R
+U+A517,R
+U+A518,R
+U+A519,R
+U+A51A,R
+U+A51B,R
+U+A51C,R
+U+A51D,R
+U+A51E,R
+U+A51F,R
+U+A520,R
+U+A521,R
+U+A522,R
+U+A523,R
+U+A524,R
+U+A525,R
+U+A526,R
+U+A527,R
+U+A528,R
+U+A529,R
+U+A52A,R
+U+A52B,R
+U+A52C,R
+U+A52D,R
+U+A52E,R
+U+A52F,R
+U+A530,R
+U+A531,R
+U+A532,R
+U+A533,R
+U+A534,R
+U+A535,R
+U+A536,R
+U+A537,R
+U+A538,R
+U+A539,R
+U+A53A,R
+U+A53B,R
+U+A53C,R
+U+A53D,R
+U+A53E,R
+U+A53F,R
+U+A540,R
+U+A541,R
+U+A542,R
+U+A543,R
+U+A544,R
+U+A545,R
+U+A546,R
+U+A547,R
+U+A548,R
+U+A549,R
+U+A54A,R
+U+A54B,R
+U+A54C,R
+U+A54D,R
+U+A54E,R
+U+A54F,R
+U+A550,R
+U+A551,R
+U+A552,R
+U+A553,R
+U+A554,R
+U+A555,R
+U+A556,R
+U+A557,R
+U+A558,R
+U+A559,R
+U+A55A,R
+U+A55B,R
+U+A55C,R
+U+A55D,R
+U+A55E,R
+U+A55F,R
+U+A560,R
+U+A561,R
+U+A562,R
+U+A563,R
+U+A564,R
+U+A565,R
+U+A566,R
+U+A567,R
+U+A568,R
+U+A569,R
+U+A56A,R
+U+A56B,R
+U+A56C,R
+U+A56D,R
+U+A56E,R
+U+A56F,R
+U+A570,R
+U+A571,R
+U+A572,R
+U+A573,R
+U+A574,R
+U+A575,R
+U+A576,R
+U+A577,R
+U+A578,R
+U+A579,R
+U+A57A,R
+U+A57B,R
+U+A57C,R
+U+A57D,R
+U+A57E,R
+U+A57F,R
+U+A580,R
+U+A581,R
+U+A582,R
+U+A583,R
+U+A584,R
+U+A585,R
+U+A586,R
+U+A587,R
+U+A588,R
+U+A589,R
+U+A58A,R
+U+A58B,R
+U+A58C,R
+U+A58D,R
+U+A58E,R
+U+A58F,R
+U+A590,R
+U+A591,R
+U+A592,R
+U+A593,R
+U+A594,R
+U+A595,R
+U+A596,R
+U+A597,R
+U+A598,R
+U+A599,R
+U+A59A,R
+U+A59B,R
+U+A59C,R
+U+A59D,R
+U+A59E,R
+U+A59F,R
+U+A5A0,R
+U+A5A1,R
+U+A5A2,R
+U+A5A3,R
+U+A5A4,R
+U+A5A5,R
+U+A5A6,R
+U+A5A7,R
+U+A5A8,R
+U+A5A9,R
+U+A5AA,R
+U+A5AB,R
+U+A5AC,R
+U+A5AD,R
+U+A5AE,R
+U+A5AF,R
+U+A5B0,R
+U+A5B1,R
+U+A5B2,R
+U+A5B3,R
+U+A5B4,R
+U+A5B5,R
+U+A5B6,R
+U+A5B7,R
+U+A5B8,R
+U+A5B9,R
+U+A5BA,R
+U+A5BB,R
+U+A5BC,R
+U+A5BD,R
+U+A5BE,R
+U+A5BF,R
+U+A5C0,R
+U+A5C1,R
+U+A5C2,R
+U+A5C3,R
+U+A5C4,R
+U+A5C5,R
+U+A5C6,R
+U+A5C7,R
+U+A5C8,R
+U+A5C9,R
+U+A5CA,R
+U+A5CB,R
+U+A5CC,R
+U+A5CD,R
+U+A5CE,R
+U+A5CF,R
+U+A5D0,R
+U+A5D1,R
+U+A5D2,R
+U+A5D3,R
+U+A5D4,R
+U+A5D5,R
+U+A5D6,R
+U+A5D7,R
+U+A5D8,R
+U+A5D9,R
+U+A5DA,R
+U+A5DB,R
+U+A5DC,R
+U+A5DD,R
+U+A5DE,R
+U+A5DF,R
+U+A5E0,R
+U+A5E1,R
+U+A5E2,R
+U+A5E3,R
+U+A5E4,R
+U+A5E5,R
+U+A5E6,R
+U+A5E7,R
+U+A5E8,R
+U+A5E9,R
+U+A5EA,R
+U+A5EB,R
+U+A5EC,R
+U+A5ED,R
+U+A5EE,R
+U+A5EF,R
+U+A5F0,R
+U+A5F1,R
+U+A5F2,R
+U+A5F3,R
+U+A5F4,R
+U+A5F5,R
+U+A5F6,R
+U+A5F7,R
+U+A5F8,R
+U+A5F9,R
+U+A5FA,R
+U+A5FB,R
+U+A5FC,R
+U+A5FD,R
+U+A5FE,R
+U+A5FF,R
+U+A600,R
+U+A601,R
+U+A602,R
+U+A603,R
+U+A604,R
+U+A605,R
+U+A606,R
+U+A607,R
+U+A608,R
+U+A609,R
+U+A60A,R
+U+A60B,R
+U+A60C,R
+U+A60D,R
+U+A60E,R
+U+A60F,R
+U+A610,R
+U+A611,R
+U+A612,R
+U+A613,R
+U+A614,R
+U+A615,R
+U+A616,R
+U+A617,R
+U+A618,R
+U+A619,R
+U+A61A,R
+U+A61B,R
+U+A61C,R
+U+A61D,R
+U+A61E,R
+U+A61F,R
+U+A620,R
+U+A621,R
+U+A622,R
+U+A623,R
+U+A624,R
+U+A625,R
+U+A626,R
+U+A627,R
+U+A628,R
+U+A629,R
+U+A62A,R
+U+A62B,R
+U+A640,R
+U+A641,R
+U+A642,R
+U+A643,R
+U+A644,R
+U+A645,R
+U+A646,R
+U+A647,R
+U+A648,R
+U+A649,R
+U+A64A,R
+U+A64B,R
+U+A64C,R
+U+A64D,R
+U+A64E,R
+U+A64F,R
+U+A650,R
+U+A651,R
+U+A652,R
+U+A653,R
+U+A654,R
+U+A655,R
+U+A656,R
+U+A657,R
+U+A658,R
+U+A659,R
+U+A65A,R
+U+A65B,R
+U+A65C,R
+U+A65D,R
+U+A65E,R
+U+A65F,R
+U+A660,R
+U+A661,R
+U+A662,R
+U+A663,R
+U+A664,R
+U+A665,R
+U+A666,R
+U+A667,R
+U+A668,R
+U+A669,R
+U+A66A,R
+U+A66B,R
+U+A66C,R
+U+A66D,R
+U+A66E,R
+U+A66F,R
+U+A670,R
+U+A671,R
+U+A672,R
+U+A673,R
+U+A674,R
+U+A675,R
+U+A676,R
+U+A677,R
+U+A678,R
+U+A679,R
+U+A67A,R
+U+A67B,R
+U+A67C,R
+U+A67D,R
+U+A67E,R
+U+A67F,R
+U+A680,R
+U+A681,R
+U+A682,R
+U+A683,R
+U+A684,R
+U+A685,R
+U+A686,R
+U+A687,R
+U+A688,R
+U+A689,R
+U+A68A,R
+U+A68B,R
+U+A68C,R
+U+A68D,R
+U+A68E,R
+U+A68F,R
+U+A690,R
+U+A691,R
+U+A692,R
+U+A693,R
+U+A694,R
+U+A695,R
+U+A696,R
+U+A697,R
+U+A69F,R
+U+A6A0,R
+U+A6A1,R
+U+A6A2,R
+U+A6A3,R
+U+A6A4,R
+U+A6A5,R
+U+A6A6,R
+U+A6A7,R
+U+A6A8,R
+U+A6A9,R
+U+A6AA,R
+U+A6AB,R
+U+A6AC,R
+U+A6AD,R
+U+A6AE,R
+U+A6AF,R
+U+A6B0,R
+U+A6B1,R
+U+A6B2,R
+U+A6B3,R
+U+A6B4,R
+U+A6B5,R
+U+A6B6,R
+U+A6B7,R
+U+A6B8,R
+U+A6B9,R
+U+A6BA,R
+U+A6BB,R
+U+A6BC,R
+U+A6BD,R
+U+A6BE,R
+U+A6BF,R
+U+A6C0,R
+U+A6C1,R
+U+A6C2,R
+U+A6C3,R
+U+A6C4,R
+U+A6C5,R
+U+A6C6,R
+U+A6C7,R
+U+A6C8,R
+U+A6C9,R
+U+A6CA,R
+U+A6CB,R
+U+A6CC,R
+U+A6CD,R
+U+A6CE,R
+U+A6CF,R
+U+A6D0,R
+U+A6D1,R
+U+A6D2,R
+U+A6D3,R
+U+A6D4,R
+U+A6D5,R
+U+A6D6,R
+U+A6D7,R
+U+A6D8,R
+U+A6D9,R
+U+A6DA,R
+U+A6DB,R
+U+A6DC,R
+U+A6DD,R
+U+A6DE,R
+U+A6DF,R
+U+A6E0,R
+U+A6E1,R
+U+A6E2,R
+U+A6E3,R
+U+A6E4,R
+U+A6E5,R
+U+A6E6,R
+U+A6E7,R
+U+A6E8,R
+U+A6E9,R
+U+A6EA,R
+U+A6EB,R
+U+A6EC,R
+U+A6ED,R
+U+A6EE,R
+U+A6EF,R
+U+A6F0,R
+U+A6F1,R
+U+A6F2,R
+U+A6F3,R
+U+A6F4,R
+U+A6F5,R
+U+A6F6,R
+U+A6F7,R
+U+A700,R
+U+A701,R
+U+A702,R
+U+A703,R
+U+A704,R
+U+A705,R
+U+A706,R
+U+A707,R
+U+A708,R
+U+A709,R
+U+A70A,R
+U+A70B,R
+U+A70C,R
+U+A70D,R
+U+A70E,R
+U+A70F,R
+U+A710,R
+U+A711,R
+U+A712,R
+U+A713,R
+U+A714,R
+U+A715,R
+U+A716,R
+U+A717,R
+U+A718,R
+U+A719,R
+U+A71A,R
+U+A71B,R
+U+A71C,R
+U+A71D,R
+U+A71E,R
+U+A71F,R
+U+A720,R
+U+A721,R
+U+A722,R
+U+A723,R
+U+A724,R
+U+A725,R
+U+A726,R
+U+A727,R
+U+A728,R
+U+A729,R
+U+A72A,R
+U+A72B,R
+U+A72C,R
+U+A72D,R
+U+A72E,R
+U+A72F,R
+U+A730,R
+U+A731,R
+U+A732,R
+U+A733,R
+U+A734,R
+U+A735,R
+U+A736,R
+U+A737,R
+U+A738,R
+U+A739,R
+U+A73A,R
+U+A73B,R
+U+A73C,R
+U+A73D,R
+U+A73E,R
+U+A73F,R
+U+A740,R
+U+A741,R
+U+A742,R
+U+A743,R
+U+A744,R
+U+A745,R
+U+A746,R
+U+A747,R
+U+A748,R
+U+A749,R
+U+A74A,R
+U+A74B,R
+U+A74C,R
+U+A74D,R
+U+A74E,R
+U+A74F,R
+U+A750,R
+U+A751,R
+U+A752,R
+U+A753,R
+U+A754,R
+U+A755,R
+U+A756,R
+U+A757,R
+U+A758,R
+U+A759,R
+U+A75A,R
+U+A75B,R
+U+A75C,R
+U+A75D,R
+U+A75E,R
+U+A75F,R
+U+A760,R
+U+A761,R
+U+A762,R
+U+A763,R
+U+A764,R
+U+A765,R
+U+A766,R
+U+A767,R
+U+A768,R
+U+A769,R
+U+A76A,R
+U+A76B,R
+U+A76C,R
+U+A76D,R
+U+A76E,R
+U+A76F,R
+U+A770,R
+U+A771,R
+U+A772,R
+U+A773,R
+U+A774,R
+U+A775,R
+U+A776,R
+U+A777,R
+U+A778,R
+U+A779,R
+U+A77A,R
+U+A77B,R
+U+A77C,R
+U+A77D,R
+U+A77E,R
+U+A77F,R
+U+A780,R
+U+A781,R
+U+A782,R
+U+A783,R
+U+A784,R
+U+A785,R
+U+A786,R
+U+A787,R
+U+A788,R
+U+A789,R
+U+A78A,R
+U+A78B,R
+U+A78C,R
+U+A78D,R
+U+A78E,R
+U+A790,R
+U+A791,R
+U+A792,R
+U+A793,R
+U+A7A0,R
+U+A7A1,R
+U+A7A2,R
+U+A7A3,R
+U+A7A4,R
+U+A7A5,R
+U+A7A6,R
+U+A7A7,R
+U+A7A8,R
+U+A7A9,R
+U+A7AA,R
+U+A7F8,R
+U+A7F9,R
+U+A7FA,R
+U+A7FB,R
+U+A7FC,R
+U+A7FD,R
+U+A7FE,R
+U+A7FF,R
+U+A800,R
+U+A801,R
+U+A802,R
+U+A803,R
+U+A804,R
+U+A805,R
+U+A806,R
+U+A807,R
+U+A808,R
+U+A809,R
+U+A80A,R
+U+A80B,R
+U+A80C,R
+U+A80D,R
+U+A80E,R
+U+A80F,R
+U+A810,R
+U+A811,R
+U+A812,R
+U+A813,R
+U+A814,R
+U+A815,R
+U+A816,R
+U+A817,R
+U+A818,R
+U+A819,R
+U+A81A,R
+U+A81B,R
+U+A81C,R
+U+A81D,R
+U+A81E,R
+U+A81F,R
+U+A820,R
+U+A821,R
+U+A822,R
+U+A823,R
+U+A824,R
+U+A825,R
+U+A826,R
+U+A827,R
+U+A828,R
+U+A829,R
+U+A82A,R
+U+A82B,R
+U+A830,R
+U+A831,R
+U+A832,R
+U+A833,R
+U+A834,R
+U+A835,R
+U+A836,R
+U+A837,R
+U+A838,R
+U+A839,R
+U+A840,R
+U+A841,R
+U+A842,R
+U+A843,R
+U+A844,R
+U+A845,R
+U+A846,R
+U+A847,R
+U+A848,R
+U+A849,R
+U+A84A,R
+U+A84B,R
+U+A84C,R
+U+A84D,R
+U+A84E,R
+U+A84F,R
+U+A850,R
+U+A851,R
+U+A852,R
+U+A853,R
+U+A854,R
+U+A855,R
+U+A856,R
+U+A857,R
+U+A858,R
+U+A859,R
+U+A85A,R
+U+A85B,R
+U+A85C,R
+U+A85D,R
+U+A85E,R
+U+A85F,R
+U+A860,R
+U+A861,R
+U+A862,R
+U+A863,R
+U+A864,R
+U+A865,R
+U+A866,R
+U+A867,R
+U+A868,R
+U+A869,R
+U+A86A,R
+U+A86B,R
+U+A86C,R
+U+A86D,R
+U+A86E,R
+U+A86F,R
+U+A870,R
+U+A871,R
+U+A872,R
+U+A873,R
+U+A874,R
+U+A875,R
+U+A876,R
+U+A877,R
+U+A880,R
+U+A881,R
+U+A882,R
+U+A883,R
+U+A884,R
+U+A885,R
+U+A886,R
+U+A887,R
+U+A888,R
+U+A889,R
+U+A88A,R
+U+A88B,R
+U+A88C,R
+U+A88D,R
+U+A88E,R
+U+A88F,R
+U+A890,R
+U+A891,R
+U+A892,R
+U+A893,R
+U+A894,R
+U+A895,R
+U+A896,R
+U+A897,R
+U+A898,R
+U+A899,R
+U+A89A,R
+U+A89B,R
+U+A89C,R
+U+A89D,R
+U+A89E,R
+U+A89F,R
+U+A8A0,R
+U+A8A1,R
+U+A8A2,R
+U+A8A3,R
+U+A8A4,R
+U+A8A5,R
+U+A8A6,R
+U+A8A7,R
+U+A8A8,R
+U+A8A9,R
+U+A8AA,R
+U+A8AB,R
+U+A8AC,R
+U+A8AD,R
+U+A8AE,R
+U+A8AF,R
+U+A8B0,R
+U+A8B1,R
+U+A8B2,R
+U+A8B3,R
+U+A8B4,R
+U+A8B5,R
+U+A8B6,R
+U+A8B7,R
+U+A8B8,R
+U+A8B9,R
+U+A8BA,R
+U+A8BB,R
+U+A8BC,R
+U+A8BD,R
+U+A8BE,R
+U+A8BF,R
+U+A8C0,R
+U+A8C1,R
+U+A8C2,R
+U+A8C3,R
+U+A8C4,R
+U+A8CE,R
+U+A8CF,R
+U+A8D0,R
+U+A8D1,R
+U+A8D2,R
+U+A8D3,R
+U+A8D4,R
+U+A8D5,R
+U+A8D6,R
+U+A8D7,R
+U+A8D8,R
+U+A8D9,R
+U+A8E0,R
+U+A8E1,R
+U+A8E2,R
+U+A8E3,R
+U+A8E4,R
+U+A8E5,R
+U+A8E6,R
+U+A8E7,R
+U+A8E8,R
+U+A8E9,R
+U+A8EA,R
+U+A8EB,R
+U+A8EC,R
+U+A8ED,R
+U+A8EE,R
+U+A8EF,R
+U+A8F0,R
+U+A8F1,R
+U+A8F2,R
+U+A8F3,R
+U+A8F4,R
+U+A8F5,R
+U+A8F6,R
+U+A8F7,R
+U+A8F8,R
+U+A8F9,R
+U+A8FA,R
+U+A8FB,R
+U+A900,R
+U+A901,R
+U+A902,R
+U+A903,R
+U+A904,R
+U+A905,R
+U+A906,R
+U+A907,R
+U+A908,R
+U+A909,R
+U+A90A,R
+U+A90B,R
+U+A90C,R
+U+A90D,R
+U+A90E,R
+U+A90F,R
+U+A910,R
+U+A911,R
+U+A912,R
+U+A913,R
+U+A914,R
+U+A915,R
+U+A916,R
+U+A917,R
+U+A918,R
+U+A919,R
+U+A91A,R
+U+A91B,R
+U+A91C,R
+U+A91D,R
+U+A91E,R
+U+A91F,R
+U+A920,R
+U+A921,R
+U+A922,R
+U+A923,R
+U+A924,R
+U+A925,R
+U+A926,R
+U+A927,R
+U+A928,R
+U+A929,R
+U+A92A,R
+U+A92B,R
+U+A92C,R
+U+A92D,R
+U+A92E,R
+U+A92F,R
+U+A930,R
+U+A931,R
+U+A932,R
+U+A933,R
+U+A934,R
+U+A935,R
+U+A936,R
+U+A937,R
+U+A938,R
+U+A939,R
+U+A93A,R
+U+A93B,R
+U+A93C,R
+U+A93D,R
+U+A93E,R
+U+A93F,R
+U+A940,R
+U+A941,R
+U+A942,R
+U+A943,R
+U+A944,R
+U+A945,R
+U+A946,R
+U+A947,R
+U+A948,R
+U+A949,R
+U+A94A,R
+U+A94B,R
+U+A94C,R
+U+A94D,R
+U+A94E,R
+U+A94F,R
+U+A950,R
+U+A951,R
+U+A952,R
+U+A953,R
+U+A95F,R
+U+A960,U
+U+A961,U
+U+A962,U
+U+A963,U
+U+A964,U
+U+A965,U
+U+A966,U
+U+A967,U
+U+A968,U
+U+A969,U
+U+A96A,U
+U+A96B,U
+U+A96C,U
+U+A96D,U
+U+A96E,U
+U+A96F,U
+U+A970,U
+U+A971,U
+U+A972,U
+U+A973,U
+U+A974,U
+U+A975,U
+U+A976,U
+U+A977,U
+U+A978,U
+U+A979,U
+U+A97A,U
+U+A97B,U
+U+A97C,U
+U+A980,R
+U+A981,R
+U+A982,R
+U+A983,R
+U+A984,R
+U+A985,R
+U+A986,R
+U+A987,R
+U+A988,R
+U+A989,R
+U+A98A,R
+U+A98B,R
+U+A98C,R
+U+A98D,R
+U+A98E,R
+U+A98F,R
+U+A990,R
+U+A991,R
+U+A992,R
+U+A993,R
+U+A994,R
+U+A995,R
+U+A996,R
+U+A997,R
+U+A998,R
+U+A999,R
+U+A99A,R
+U+A99B,R
+U+A99C,R
+U+A99D,R
+U+A99E,R
+U+A99F,R
+U+A9A0,R
+U+A9A1,R
+U+A9A2,R
+U+A9A3,R
+U+A9A4,R
+U+A9A5,R
+U+A9A6,R
+U+A9A7,R
+U+A9A8,R
+U+A9A9,R
+U+A9AA,R
+U+A9AB,R
+U+A9AC,R
+U+A9AD,R
+U+A9AE,R
+U+A9AF,R
+U+A9B0,R
+U+A9B1,R
+U+A9B2,R
+U+A9B3,R
+U+A9B4,R
+U+A9B5,R
+U+A9B6,R
+U+A9B7,R
+U+A9B8,R
+U+A9B9,R
+U+A9BA,R
+U+A9BB,R
+U+A9BC,R
+U+A9BD,R
+U+A9BE,R
+U+A9BF,R
+U+A9C0,R
+U+A9C1,R
+U+A9C2,R
+U+A9C3,R
+U+A9C4,R
+U+A9C5,R
+U+A9C6,R
+U+A9C7,R
+U+A9C8,R
+U+A9C9,R
+U+A9CA,R
+U+A9CB,R
+U+A9CC,R
+U+A9CD,R
+U+A9CF,R
+U+A9D0,R
+U+A9D1,R
+U+A9D2,R
+U+A9D3,R
+U+A9D4,R
+U+A9D5,R
+U+A9D6,R
+U+A9D7,R
+U+A9D8,R
+U+A9D9,R
+U+A9DE,R
+U+A9DF,R
+U+AA00,R
+U+AA01,R
+U+AA02,R
+U+AA03,R
+U+AA04,R
+U+AA05,R
+U+AA06,R
+U+AA07,R
+U+AA08,R
+U+AA09,R
+U+AA0A,R
+U+AA0B,R
+U+AA0C,R
+U+AA0D,R
+U+AA0E,R
+U+AA0F,R
+U+AA10,R
+U+AA11,R
+U+AA12,R
+U+AA13,R
+U+AA14,R
+U+AA15,R
+U+AA16,R
+U+AA17,R
+U+AA18,R
+U+AA19,R
+U+AA1A,R
+U+AA1B,R
+U+AA1C,R
+U+AA1D,R
+U+AA1E,R
+U+AA1F,R
+U+AA20,R
+U+AA21,R
+U+AA22,R
+U+AA23,R
+U+AA24,R
+U+AA25,R
+U+AA26,R
+U+AA27,R
+U+AA28,R
+U+AA29,R
+U+AA2A,R
+U+AA2B,R
+U+AA2C,R
+U+AA2D,R
+U+AA2E,R
+U+AA2F,R
+U+AA30,R
+U+AA31,R
+U+AA32,R
+U+AA33,R
+U+AA34,R
+U+AA35,R
+U+AA36,R
+U+AA40,R
+U+AA41,R
+U+AA42,R
+U+AA43,R
+U+AA44,R
+U+AA45,R
+U+AA46,R
+U+AA47,R
+U+AA48,R
+U+AA49,R
+U+AA4A,R
+U+AA4B,R
+U+AA4C,R
+U+AA4D,R
+U+AA50,R
+U+AA51,R
+U+AA52,R
+U+AA53,R
+U+AA54,R
+U+AA55,R
+U+AA56,R
+U+AA57,R
+U+AA58,R
+U+AA59,R
+U+AA5C,R
+U+AA5D,R
+U+AA5E,R
+U+AA5F,R
+U+AA60,R
+U+AA61,R
+U+AA62,R
+U+AA63,R
+U+AA64,R
+U+AA65,R
+U+AA66,R
+U+AA67,R
+U+AA68,R
+U+AA69,R
+U+AA6A,R
+U+AA6B,R
+U+AA6C,R
+U+AA6D,R
+U+AA6E,R
+U+AA6F,R
+U+AA70,R
+U+AA71,R
+U+AA72,R
+U+AA73,R
+U+AA74,R
+U+AA75,R
+U+AA76,R
+U+AA77,R
+U+AA78,R
+U+AA79,R
+U+AA7A,R
+U+AA7B,R
+U+AA80,R
+U+AA81,R
+U+AA82,R
+U+AA83,R
+U+AA84,R
+U+AA85,R
+U+AA86,R
+U+AA87,R
+U+AA88,R
+U+AA89,R
+U+AA8A,R
+U+AA8B,R
+U+AA8C,R
+U+AA8D,R
+U+AA8E,R
+U+AA8F,R
+U+AA90,R
+U+AA91,R
+U+AA92,R
+U+AA93,R
+U+AA94,R
+U+AA95,R
+U+AA96,R
+U+AA97,R
+U+AA98,R
+U+AA99,R
+U+AA9A,R
+U+AA9B,R
+U+AA9C,R
+U+AA9D,R
+U+AA9E,R
+U+AA9F,R
+U+AAA0,R
+U+AAA1,R
+U+AAA2,R
+U+AAA3,R
+U+AAA4,R
+U+AAA5,R
+U+AAA6,R
+U+AAA7,R
+U+AAA8,R
+U+AAA9,R
+U+AAAA,R
+U+AAAB,R
+U+AAAC,R
+U+AAAD,R
+U+AAAE,R
+U+AAAF,R
+U+AAB0,R
+U+AAB1,R
+U+AAB2,R
+U+AAB3,R
+U+AAB4,R
+U+AAB5,R
+U+AAB6,R
+U+AAB7,R
+U+AAB8,R
+U+AAB9,R
+U+AABA,R
+U+AABB,R
+U+AABC,R
+U+AABD,R
+U+AABE,R
+U+AABF,R
+U+AAC0,R
+U+AAC1,R
+U+AAC2,R
+U+AADB,R
+U+AADC,R
+U+AADD,R
+U+AADE,R
+U+AADF,R
+U+AAE0,R
+U+AAE1,R
+U+AAE2,R
+U+AAE3,R
+U+AAE4,R
+U+AAE5,R
+U+AAE6,R
+U+AAE7,R
+U+AAE8,R
+U+AAE9,R
+U+AAEA,R
+U+AAEB,R
+U+AAEC,R
+U+AAED,R
+U+AAEE,R
+U+AAEF,R
+U+AAF0,R
+U+AAF1,R
+U+AAF2,R
+U+AAF3,R
+U+AAF4,R
+U+AAF5,R
+U+AAF6,R
+U+AB01,R
+U+AB02,R
+U+AB03,R
+U+AB04,R
+U+AB05,R
+U+AB06,R
+U+AB09,R
+U+AB0A,R
+U+AB0B,R
+U+AB0C,R
+U+AB0D,R
+U+AB0E,R
+U+AB11,R
+U+AB12,R
+U+AB13,R
+U+AB14,R
+U+AB15,R
+U+AB16,R
+U+AB20,R
+U+AB21,R
+U+AB22,R
+U+AB23,R
+U+AB24,R
+U+AB25,R
+U+AB26,R
+U+AB28,R
+U+AB29,R
+U+AB2A,R
+U+AB2B,R
+U+AB2C,R
+U+AB2D,R
+U+AB2E,R
+U+ABC0,R
+U+ABC1,R
+U+ABC2,R
+U+ABC3,R
+U+ABC4,R
+U+ABC5,R
+U+ABC6,R
+U+ABC7,R
+U+ABC8,R
+U+ABC9,R
+U+ABCA,R
+U+ABCB,R
+U+ABCC,R
+U+ABCD,R
+U+ABCE,R
+U+ABCF,R
+U+ABD0,R
+U+ABD1,R
+U+ABD2,R
+U+ABD3,R
+U+ABD4,R
+U+ABD5,R
+U+ABD6,R
+U+ABD7,R
+U+ABD8,R
+U+ABD9,R
+U+ABDA,R
+U+ABDB,R
+U+ABDC,R
+U+ABDD,R
+U+ABDE,R
+U+ABDF,R
+U+ABE0,R
+U+ABE1,R
+U+ABE2,R
+U+ABE3,R
+U+ABE4,R
+U+ABE5,R
+U+ABE6,R
+U+ABE7,R
+U+ABE8,R
+U+ABE9,R
+U+ABEA,R
+U+ABEB,R
+U+ABEC,R
+U+ABED,R
+U+ABF0,R
+U+ABF1,R
+U+ABF2,R
+U+ABF3,R
+U+ABF4,R
+U+ABF5,R
+U+ABF6,R
+U+ABF7,R
+U+ABF8,R
+U+ABF9,R
+U+AC00,U
+U+D7A3,U
+U+D7B0,U
+U+D7B1,U
+U+D7B2,U
+U+D7B3,U
+U+D7B4,U
+U+D7B5,U
+U+D7B6,U
+U+D7B7,U
+U+D7B8,U
+U+D7B9,U
+U+D7BA,U
+U+D7BB,U
+U+D7BC,U
+U+D7BD,U
+U+D7BE,U
+U+D7BF,U
+U+D7C0,U
+U+D7C1,U
+U+D7C2,U
+U+D7C3,U
+U+D7C4,U
+U+D7C5,U
+U+D7C6,U
+U+D7CB,U
+U+D7CC,U
+U+D7CD,U
+U+D7CE,U
+U+D7CF,U
+U+D7D0,U
+U+D7D1,U
+U+D7D2,U
+U+D7D3,U
+U+D7D4,U
+U+D7D5,U
+U+D7D6,U
+U+D7D7,U
+U+D7D8,U
+U+D7D9,U
+U+D7DA,U
+U+D7DB,U
+U+D7DC,U
+U+D7DD,U
+U+D7DE,U
+U+D7DF,U
+U+D7E0,U
+U+D7E1,U
+U+D7E2,U
+U+D7E3,U
+U+D7E4,U
+U+D7E5,U
+U+D7E6,U
+U+D7E7,U
+U+D7E8,U
+U+D7E9,U
+U+D7EA,U
+U+D7EB,U
+U+D7EC,U
+U+D7ED,U
+U+D7EE,U
+U+D7EF,U
+U+D7F0,U
+U+D7F1,U
+U+D7F2,U
+U+D7F3,U
+U+D7F4,U
+U+D7F5,U
+U+D7F6,U
+U+D7F7,U
+U+D7F8,U
+U+D7F9,U
+U+D7FA,U
+U+D7FB,U
+U+D800,R
+U+DB7F,R
+U+DB80,R
+U+DBFF,R
+U+DC00,R
+U+DFFF,R
+U+E000,U
+U+F8FF,U
+U+F900,U
+U+F901,U
+U+F902,U
+U+F903,U
+U+F904,U
+U+F905,U
+U+F906,U
+U+F907,U
+U+F908,U
+U+F909,U
+U+F90A,U
+U+F90B,U
+U+F90C,U
+U+F90D,U
+U+F90E,U
+U+F90F,U
+U+F910,U
+U+F911,U
+U+F912,U
+U+F913,U
+U+F914,U
+U+F915,U
+U+F916,U
+U+F917,U
+U+F918,U
+U+F919,U
+U+F91A,U
+U+F91B,U
+U+F91C,U
+U+F91D,U
+U+F91E,U
+U+F91F,U
+U+F920,U
+U+F921,U
+U+F922,U
+U+F923,U
+U+F924,U
+U+F925,U
+U+F926,U
+U+F927,U
+U+F928,U
+U+F929,U
+U+F92A,U
+U+F92B,U
+U+F92C,U
+U+F92D,U
+U+F92E,U
+U+F92F,U
+U+F930,U
+U+F931,U
+U+F932,U
+U+F933,U
+U+F934,U
+U+F935,U
+U+F936,U
+U+F937,U
+U+F938,U
+U+F939,U
+U+F93A,U
+U+F93B,U
+U+F93C,U
+U+F93D,U
+U+F93E,U
+U+F93F,U
+U+F940,U
+U+F941,U
+U+F942,U
+U+F943,U
+U+F944,U
+U+F945,U
+U+F946,U
+U+F947,U
+U+F948,U
+U+F949,U
+U+F94A,U
+U+F94B,U
+U+F94C,U
+U+F94D,U
+U+F94E,U
+U+F94F,U
+U+F950,U
+U+F951,U
+U+F952,U
+U+F953,U
+U+F954,U
+U+F955,U
+U+F956,U
+U+F957,U
+U+F958,U
+U+F959,U
+U+F95A,U
+U+F95B,U
+U+F95C,U
+U+F95D,U
+U+F95E,U
+U+F95F,U
+U+F960,U
+U+F961,U
+U+F962,U
+U+F963,U
+U+F964,U
+U+F965,U
+U+F966,U
+U+F967,U
+U+F968,U
+U+F969,U
+U+F96A,U
+U+F96B,U
+U+F96C,U
+U+F96D,U
+U+F96E,U
+U+F96F,U
+U+F970,U
+U+F971,U
+U+F972,U
+U+F973,U
+U+F974,U
+U+F975,U
+U+F976,U
+U+F977,U
+U+F978,U
+U+F979,U
+U+F97A,U
+U+F97B,U
+U+F97C,U
+U+F97D,U
+U+F97E,U
+U+F97F,U
+U+F980,U
+U+F981,U
+U+F982,U
+U+F983,U
+U+F984,U
+U+F985,U
+U+F986,U
+U+F987,U
+U+F988,U
+U+F989,U
+U+F98A,U
+U+F98B,U
+U+F98C,U
+U+F98D,U
+U+F98E,U
+U+F98F,U
+U+F990,U
+U+F991,U
+U+F992,U
+U+F993,U
+U+F994,U
+U+F995,U
+U+F996,U
+U+F997,U
+U+F998,U
+U+F999,U
+U+F99A,U
+U+F99B,U
+U+F99C,U
+U+F99D,U
+U+F99E,U
+U+F99F,U
+U+F9A0,U
+U+F9A1,U
+U+F9A2,U
+U+F9A3,U
+U+F9A4,U
+U+F9A5,U
+U+F9A6,U
+U+F9A7,U
+U+F9A8,U
+U+F9A9,U
+U+F9AA,U
+U+F9AB,U
+U+F9AC,U
+U+F9AD,U
+U+F9AE,U
+U+F9AF,U
+U+F9B0,U
+U+F9B1,U
+U+F9B2,U
+U+F9B3,U
+U+F9B4,U
+U+F9B5,U
+U+F9B6,U
+U+F9B7,U
+U+F9B8,U
+U+F9B9,U
+U+F9BA,U
+U+F9BB,U
+U+F9BC,U
+U+F9BD,U
+U+F9BE,U
+U+F9BF,U
+U+F9C0,U
+U+F9C1,U
+U+F9C2,U
+U+F9C3,U
+U+F9C4,U
+U+F9C5,U
+U+F9C6,U
+U+F9C7,U
+U+F9C8,U
+U+F9C9,U
+U+F9CA,U
+U+F9CB,U
+U+F9CC,U
+U+F9CD,U
+U+F9CE,U
+U+F9CF,U
+U+F9D0,U
+U+F9D1,U
+U+F9D2,U
+U+F9D3,U
+U+F9D4,U
+U+F9D5,U
+U+F9D6,U
+U+F9D7,U
+U+F9D8,U
+U+F9D9,U
+U+F9DA,U
+U+F9DB,U
+U+F9DC,U
+U+F9DD,U
+U+F9DE,U
+U+F9DF,U
+U+F9E0,U
+U+F9E1,U
+U+F9E2,U
+U+F9E3,U
+U+F9E4,U
+U+F9E5,U
+U+F9E6,U
+U+F9E7,U
+U+F9E8,U
+U+F9E9,U
+U+F9EA,U
+U+F9EB,U
+U+F9EC,U
+U+F9ED,U
+U+F9EE,U
+U+F9EF,U
+U+F9F0,U
+U+F9F1,U
+U+F9F2,U
+U+F9F3,U
+U+F9F4,U
+U+F9F5,U
+U+F9F6,U
+U+F9F7,U
+U+F9F8,U
+U+F9F9,U
+U+F9FA,U
+U+F9FB,U
+U+F9FC,U
+U+F9FD,U
+U+F9FE,U
+U+F9FF,U
+U+FA00,U
+U+FA01,U
+U+FA02,U
+U+FA03,U
+U+FA04,U
+U+FA05,U
+U+FA06,U
+U+FA07,U
+U+FA08,U
+U+FA09,U
+U+FA0A,U
+U+FA0B,U
+U+FA0C,U
+U+FA0D,U
+U+FA0E,U
+U+FA0F,U
+U+FA10,U
+U+FA11,U
+U+FA12,U
+U+FA13,U
+U+FA14,U
+U+FA15,U
+U+FA16,U
+U+FA17,U
+U+FA18,U
+U+FA19,U
+U+FA1A,U
+U+FA1B,U
+U+FA1C,U
+U+FA1D,U
+U+FA1E,U
+U+FA1F,U
+U+FA20,U
+U+FA21,U
+U+FA22,U
+U+FA23,U
+U+FA24,U
+U+FA25,U
+U+FA26,U
+U+FA27,U
+U+FA28,U
+U+FA29,U
+U+FA2A,U
+U+FA2B,U
+U+FA2C,U
+U+FA2D,U
+U+FA2E,U
+U+FA2F,U
+U+FA30,U
+U+FA31,U
+U+FA32,U
+U+FA33,U
+U+FA34,U
+U+FA35,U
+U+FA36,U
+U+FA37,U
+U+FA38,U
+U+FA39,U
+U+FA3A,U
+U+FA3B,U
+U+FA3C,U
+U+FA3D,U
+U+FA3E,U
+U+FA3F,U
+U+FA40,U
+U+FA41,U
+U+FA42,U
+U+FA43,U
+U+FA44,U
+U+FA45,U
+U+FA46,U
+U+FA47,U
+U+FA48,U
+U+FA49,U
+U+FA4A,U
+U+FA4B,U
+U+FA4C,U
+U+FA4D,U
+U+FA4E,U
+U+FA4F,U
+U+FA50,U
+U+FA51,U
+U+FA52,U
+U+FA53,U
+U+FA54,U
+U+FA55,U
+U+FA56,U
+U+FA57,U
+U+FA58,U
+U+FA59,U
+U+FA5A,U
+U+FA5B,U
+U+FA5C,U
+U+FA5D,U
+U+FA5E,U
+U+FA5F,U
+U+FA60,U
+U+FA61,U
+U+FA62,U
+U+FA63,U
+U+FA64,U
+U+FA65,U
+U+FA66,U
+U+FA67,U
+U+FA68,U
+U+FA69,U
+U+FA6A,U
+U+FA6B,U
+U+FA6C,U
+U+FA6D,U
+U+FA70,U
+U+FA71,U
+U+FA72,U
+U+FA73,U
+U+FA74,U
+U+FA75,U
+U+FA76,U
+U+FA77,U
+U+FA78,U
+U+FA79,U
+U+FA7A,U
+U+FA7B,U
+U+FA7C,U
+U+FA7D,U
+U+FA7E,U
+U+FA7F,U
+U+FA80,U
+U+FA81,U
+U+FA82,U
+U+FA83,U
+U+FA84,U
+U+FA85,U
+U+FA86,U
+U+FA87,U
+U+FA88,U
+U+FA89,U
+U+FA8A,U
+U+FA8B,U
+U+FA8C,U
+U+FA8D,U
+U+FA8E,U
+U+FA8F,U
+U+FA90,U
+U+FA91,U
+U+FA92,U
+U+FA93,U
+U+FA94,U
+U+FA95,U
+U+FA96,U
+U+FA97,U
+U+FA98,U
+U+FA99,U
+U+FA9A,U
+U+FA9B,U
+U+FA9C,U
+U+FA9D,U
+U+FA9E,U
+U+FA9F,U
+U+FAA0,U
+U+FAA1,U
+U+FAA2,U
+U+FAA3,U
+U+FAA4,U
+U+FAA5,U
+U+FAA6,U
+U+FAA7,U
+U+FAA8,U
+U+FAA9,U
+U+FAAA,U
+U+FAAB,U
+U+FAAC,U
+U+FAAD,U
+U+FAAE,U
+U+FAAF,U
+U+FAB0,U
+U+FAB1,U
+U+FAB2,U
+U+FAB3,U
+U+FAB4,U
+U+FAB5,U
+U+FAB6,U
+U+FAB7,U
+U+FAB8,U
+U+FAB9,U
+U+FABA,U
+U+FABB,U
+U+FABC,U
+U+FABD,U
+U+FABE,U
+U+FABF,U
+U+FAC0,U
+U+FAC1,U
+U+FAC2,U
+U+FAC3,U
+U+FAC4,U
+U+FAC5,U
+U+FAC6,U
+U+FAC7,U
+U+FAC8,U
+U+FAC9,U
+U+FACA,U
+U+FACB,U
+U+FACC,U
+U+FACD,U
+U+FACE,U
+U+FACF,U
+U+FAD0,U
+U+FAD1,U
+U+FAD2,U
+U+FAD3,U
+U+FAD4,U
+U+FAD5,U
+U+FAD6,U
+U+FAD7,U
+U+FAD8,U
+U+FAD9,U
+U+FB00,R
+U+FB01,R
+U+FB02,R
+U+FB03,R
+U+FB04,R
+U+FB05,R
+U+FB06,R
+U+FB13,R
+U+FB14,R
+U+FB15,R
+U+FB16,R
+U+FB17,R
+U+FB1D,R
+U+FB1E,R
+U+FB1F,R
+U+FB20,R
+U+FB21,R
+U+FB22,R
+U+FB23,R
+U+FB24,R
+U+FB25,R
+U+FB26,R
+U+FB27,R
+U+FB28,R
+U+FB29,R
+U+FB2A,R
+U+FB2B,R
+U+FB2C,R
+U+FB2D,R
+U+FB2E,R
+U+FB2F,R
+U+FB30,R
+U+FB31,R
+U+FB32,R
+U+FB33,R
+U+FB34,R
+U+FB35,R
+U+FB36,R
+U+FB38,R
+U+FB39,R
+U+FB3A,R
+U+FB3B,R
+U+FB3C,R
+U+FB3E,R
+U+FB40,R
+U+FB41,R
+U+FB43,R
+U+FB44,R
+U+FB46,R
+U+FB47,R
+U+FB48,R
+U+FB49,R
+U+FB4A,R
+U+FB4B,R
+U+FB4C,R
+U+FB4D,R
+U+FB4E,R
+U+FB4F,R
+U+FB50,R
+U+FB51,R
+U+FB52,R
+U+FB53,R
+U+FB54,R
+U+FB55,R
+U+FB56,R
+U+FB57,R
+U+FB58,R
+U+FB59,R
+U+FB5A,R
+U+FB5B,R
+U+FB5C,R
+U+FB5D,R
+U+FB5E,R
+U+FB5F,R
+U+FB60,R
+U+FB61,R
+U+FB62,R
+U+FB63,R
+U+FB64,R
+U+FB65,R
+U+FB66,R
+U+FB67,R
+U+FB68,R
+U+FB69,R
+U+FB6A,R
+U+FB6B,R
+U+FB6C,R
+U+FB6D,R
+U+FB6E,R
+U+FB6F,R
+U+FB70,R
+U+FB71,R
+U+FB72,R
+U+FB73,R
+U+FB74,R
+U+FB75,R
+U+FB76,R
+U+FB77,R
+U+FB78,R
+U+FB79,R
+U+FB7A,R
+U+FB7B,R
+U+FB7C,R
+U+FB7D,R
+U+FB7E,R
+U+FB7F,R
+U+FB80,R
+U+FB81,R
+U+FB82,R
+U+FB83,R
+U+FB84,R
+U+FB85,R
+U+FB86,R
+U+FB87,R
+U+FB88,R
+U+FB89,R
+U+FB8A,R
+U+FB8B,R
+U+FB8C,R
+U+FB8D,R
+U+FB8E,R
+U+FB8F,R
+U+FB90,R
+U+FB91,R
+U+FB92,R
+U+FB93,R
+U+FB94,R
+U+FB95,R
+U+FB96,R
+U+FB97,R
+U+FB98,R
+U+FB99,R
+U+FB9A,R
+U+FB9B,R
+U+FB9C,R
+U+FB9D,R
+U+FB9E,R
+U+FB9F,R
+U+FBA0,R
+U+FBA1,R
+U+FBA2,R
+U+FBA3,R
+U+FBA4,R
+U+FBA5,R
+U+FBA6,R
+U+FBA7,R
+U+FBA8,R
+U+FBA9,R
+U+FBAA,R
+U+FBAB,R
+U+FBAC,R
+U+FBAD,R
+U+FBAE,R
+U+FBAF,R
+U+FBB0,R
+U+FBB1,R
+U+FBB2,R
+U+FBB3,R
+U+FBB4,R
+U+FBB5,R
+U+FBB6,R
+U+FBB7,R
+U+FBB8,R
+U+FBB9,R
+U+FBBA,R
+U+FBBB,R
+U+FBBC,R
+U+FBBD,R
+U+FBBE,R
+U+FBBF,R
+U+FBC0,R
+U+FBC1,R
+U+FBD3,R
+U+FBD4,R
+U+FBD5,R
+U+FBD6,R
+U+FBD7,R
+U+FBD8,R
+U+FBD9,R
+U+FBDA,R
+U+FBDB,R
+U+FBDC,R
+U+FBDD,R
+U+FBDE,R
+U+FBDF,R
+U+FBE0,R
+U+FBE1,R
+U+FBE2,R
+U+FBE3,R
+U+FBE4,R
+U+FBE5,R
+U+FBE6,R
+U+FBE7,R
+U+FBE8,R
+U+FBE9,R
+U+FBEA,R
+U+FBEB,R
+U+FBEC,R
+U+FBED,R
+U+FBEE,R
+U+FBEF,R
+U+FBF0,R
+U+FBF1,R
+U+FBF2,R
+U+FBF3,R
+U+FBF4,R
+U+FBF5,R
+U+FBF6,R
+U+FBF7,R
+U+FBF8,R
+U+FBF9,R
+U+FBFA,R
+U+FBFB,R
+U+FBFC,R
+U+FBFD,R
+U+FBFE,R
+U+FBFF,R
+U+FC00,R
+U+FC01,R
+U+FC02,R
+U+FC03,R
+U+FC04,R
+U+FC05,R
+U+FC06,R
+U+FC07,R
+U+FC08,R
+U+FC09,R
+U+FC0A,R
+U+FC0B,R
+U+FC0C,R
+U+FC0D,R
+U+FC0E,R
+U+FC0F,R
+U+FC10,R
+U+FC11,R
+U+FC12,R
+U+FC13,R
+U+FC14,R
+U+FC15,R
+U+FC16,R
+U+FC17,R
+U+FC18,R
+U+FC19,R
+U+FC1A,R
+U+FC1B,R
+U+FC1C,R
+U+FC1D,R
+U+FC1E,R
+U+FC1F,R
+U+FC20,R
+U+FC21,R
+U+FC22,R
+U+FC23,R
+U+FC24,R
+U+FC25,R
+U+FC26,R
+U+FC27,R
+U+FC28,R
+U+FC29,R
+U+FC2A,R
+U+FC2B,R
+U+FC2C,R
+U+FC2D,R
+U+FC2E,R
+U+FC2F,R
+U+FC30,R
+U+FC31,R
+U+FC32,R
+U+FC33,R
+U+FC34,R
+U+FC35,R
+U+FC36,R
+U+FC37,R
+U+FC38,R
+U+FC39,R
+U+FC3A,R
+U+FC3B,R
+U+FC3C,R
+U+FC3D,R
+U+FC3E,R
+U+FC3F,R
+U+FC40,R
+U+FC41,R
+U+FC42,R
+U+FC43,R
+U+FC44,R
+U+FC45,R
+U+FC46,R
+U+FC47,R
+U+FC48,R
+U+FC49,R
+U+FC4A,R
+U+FC4B,R
+U+FC4C,R
+U+FC4D,R
+U+FC4E,R
+U+FC4F,R
+U+FC50,R
+U+FC51,R
+U+FC52,R
+U+FC53,R
+U+FC54,R
+U+FC55,R
+U+FC56,R
+U+FC57,R
+U+FC58,R
+U+FC59,R
+U+FC5A,R
+U+FC5B,R
+U+FC5C,R
+U+FC5D,R
+U+FC5E,R
+U+FC5F,R
+U+FC60,R
+U+FC61,R
+U+FC62,R
+U+FC63,R
+U+FC64,R
+U+FC65,R
+U+FC66,R
+U+FC67,R
+U+FC68,R
+U+FC69,R
+U+FC6A,R
+U+FC6B,R
+U+FC6C,R
+U+FC6D,R
+U+FC6E,R
+U+FC6F,R
+U+FC70,R
+U+FC71,R
+U+FC72,R
+U+FC73,R
+U+FC74,R
+U+FC75,R
+U+FC76,R
+U+FC77,R
+U+FC78,R
+U+FC79,R
+U+FC7A,R
+U+FC7B,R
+U+FC7C,R
+U+FC7D,R
+U+FC7E,R
+U+FC7F,R
+U+FC80,R
+U+FC81,R
+U+FC82,R
+U+FC83,R
+U+FC84,R
+U+FC85,R
+U+FC86,R
+U+FC87,R
+U+FC88,R
+U+FC89,R
+U+FC8A,R
+U+FC8B,R
+U+FC8C,R
+U+FC8D,R
+U+FC8E,R
+U+FC8F,R
+U+FC90,R
+U+FC91,R
+U+FC92,R
+U+FC93,R
+U+FC94,R
+U+FC95,R
+U+FC96,R
+U+FC97,R
+U+FC98,R
+U+FC99,R
+U+FC9A,R
+U+FC9B,R
+U+FC9C,R
+U+FC9D,R
+U+FC9E,R
+U+FC9F,R
+U+FCA0,R
+U+FCA1,R
+U+FCA2,R
+U+FCA3,R
+U+FCA4,R
+U+FCA5,R
+U+FCA6,R
+U+FCA7,R
+U+FCA8,R
+U+FCA9,R
+U+FCAA,R
+U+FCAB,R
+U+FCAC,R
+U+FCAD,R
+U+FCAE,R
+U+FCAF,R
+U+FCB0,R
+U+FCB1,R
+U+FCB2,R
+U+FCB3,R
+U+FCB4,R
+U+FCB5,R
+U+FCB6,R
+U+FCB7,R
+U+FCB8,R
+U+FCB9,R
+U+FCBA,R
+U+FCBB,R
+U+FCBC,R
+U+FCBD,R
+U+FCBE,R
+U+FCBF,R
+U+FCC0,R
+U+FCC1,R
+U+FCC2,R
+U+FCC3,R
+U+FCC4,R
+U+FCC5,R
+U+FCC6,R
+U+FCC7,R
+U+FCC8,R
+U+FCC9,R
+U+FCCA,R
+U+FCCB,R
+U+FCCC,R
+U+FCCD,R
+U+FCCE,R
+U+FCCF,R
+U+FCD0,R
+U+FCD1,R
+U+FCD2,R
+U+FCD3,R
+U+FCD4,R
+U+FCD5,R
+U+FCD6,R
+U+FCD7,R
+U+FCD8,R
+U+FCD9,R
+U+FCDA,R
+U+FCDB,R
+U+FCDC,R
+U+FCDD,R
+U+FCDE,R
+U+FCDF,R
+U+FCE0,R
+U+FCE1,R
+U+FCE2,R
+U+FCE3,R
+U+FCE4,R
+U+FCE5,R
+U+FCE6,R
+U+FCE7,R
+U+FCE8,R
+U+FCE9,R
+U+FCEA,R
+U+FCEB,R
+U+FCEC,R
+U+FCED,R
+U+FCEE,R
+U+FCEF,R
+U+FCF0,R
+U+FCF1,R
+U+FCF2,R
+U+FCF3,R
+U+FCF4,R
+U+FCF5,R
+U+FCF6,R
+U+FCF7,R
+U+FCF8,R
+U+FCF9,R
+U+FCFA,R
+U+FCFB,R
+U+FCFC,R
+U+FCFD,R
+U+FCFE,R
+U+FCFF,R
+U+FD00,R
+U+FD01,R
+U+FD02,R
+U+FD03,R
+U+FD04,R
+U+FD05,R
+U+FD06,R
+U+FD07,R
+U+FD08,R
+U+FD09,R
+U+FD0A,R
+U+FD0B,R
+U+FD0C,R
+U+FD0D,R
+U+FD0E,R
+U+FD0F,R
+U+FD10,R
+U+FD11,R
+U+FD12,R
+U+FD13,R
+U+FD14,R
+U+FD15,R
+U+FD16,R
+U+FD17,R
+U+FD18,R
+U+FD19,R
+U+FD1A,R
+U+FD1B,R
+U+FD1C,R
+U+FD1D,R
+U+FD1E,R
+U+FD1F,R
+U+FD20,R
+U+FD21,R
+U+FD22,R
+U+FD23,R
+U+FD24,R
+U+FD25,R
+U+FD26,R
+U+FD27,R
+U+FD28,R
+U+FD29,R
+U+FD2A,R
+U+FD2B,R
+U+FD2C,R
+U+FD2D,R
+U+FD2E,R
+U+FD2F,R
+U+FD30,R
+U+FD31,R
+U+FD32,R
+U+FD33,R
+U+FD34,R
+U+FD35,R
+U+FD36,R
+U+FD37,R
+U+FD38,R
+U+FD39,R
+U+FD3A,R
+U+FD3B,R
+U+FD3C,R
+U+FD3D,R
+U+FD3E,R
+U+FD3F,R
+U+FD50,R
+U+FD51,R
+U+FD52,R
+U+FD53,R
+U+FD54,R
+U+FD55,R
+U+FD56,R
+U+FD57,R
+U+FD58,R
+U+FD59,R
+U+FD5A,R
+U+FD5B,R
+U+FD5C,R
+U+FD5D,R
+U+FD5E,R
+U+FD5F,R
+U+FD60,R
+U+FD61,R
+U+FD62,R
+U+FD63,R
+U+FD64,R
+U+FD65,R
+U+FD66,R
+U+FD67,R
+U+FD68,R
+U+FD69,R
+U+FD6A,R
+U+FD6B,R
+U+FD6C,R
+U+FD6D,R
+U+FD6E,R
+U+FD6F,R
+U+FD70,R
+U+FD71,R
+U+FD72,R
+U+FD73,R
+U+FD74,R
+U+FD75,R
+U+FD76,R
+U+FD77,R
+U+FD78,R
+U+FD79,R
+U+FD7A,R
+U+FD7B,R
+U+FD7C,R
+U+FD7D,R
+U+FD7E,R
+U+FD7F,R
+U+FD80,R
+U+FD81,R
+U+FD82,R
+U+FD83,R
+U+FD84,R
+U+FD85,R
+U+FD86,R
+U+FD87,R
+U+FD88,R
+U+FD89,R
+U+FD8A,R
+U+FD8B,R
+U+FD8C,R
+U+FD8D,R
+U+FD8E,R
+U+FD8F,R
+U+FD92,R
+U+FD93,R
+U+FD94,R
+U+FD95,R
+U+FD96,R
+U+FD97,R
+U+FD98,R
+U+FD99,R
+U+FD9A,R
+U+FD9B,R
+U+FD9C,R
+U+FD9D,R
+U+FD9E,R
+U+FD9F,R
+U+FDA0,R
+U+FDA1,R
+U+FDA2,R
+U+FDA3,R
+U+FDA4,R
+U+FDA5,R
+U+FDA6,R
+U+FDA7,R
+U+FDA8,R
+U+FDA9,R
+U+FDAA,R
+U+FDAB,R
+U+FDAC,R
+U+FDAD,R
+U+FDAE,R
+U+FDAF,R
+U+FDB0,R
+U+FDB1,R
+U+FDB2,R
+U+FDB3,R
+U+FDB4,R
+U+FDB5,R
+U+FDB6,R
+U+FDB7,R
+U+FDB8,R
+U+FDB9,R
+U+FDBA,R
+U+FDBB,R
+U+FDBC,R
+U+FDBD,R
+U+FDBE,R
+U+FDBF,R
+U+FDC0,R
+U+FDC1,R
+U+FDC2,R
+U+FDC3,R
+U+FDC4,R
+U+FDC5,R
+U+FDC6,R
+U+FDC7,R
+U+FDF0,R
+U+FDF1,R
+U+FDF2,R
+U+FDF3,R
+U+FDF4,R
+U+FDF5,R
+U+FDF6,R
+U+FDF7,R
+U+FDF8,R
+U+FDF9,R
+U+FDFA,R
+U+FDFB,R
+U+FDFC,R
+U+FDFD,R
+U+FE00,R
+U+FE01,R
+U+FE02,R
+U+FE03,R
+U+FE04,R
+U+FE05,R
+U+FE06,R
+U+FE07,R
+U+FE08,R
+U+FE09,R
+U+FE0A,R
+U+FE0B,R
+U+FE0C,R
+U+FE0D,R
+U+FE0E,R
+U+FE0F,R
+U+FE10,U
+U+FE11,U
+U+FE12,U
+U+FE13,U
+U+FE14,U
+U+FE15,U
+U+FE16,U
+U+FE17,U
+U+FE18,U
+U+FE19,U
+U+FE20,R
+U+FE21,R
+U+FE22,R
+U+FE23,R
+U+FE24,R
+U+FE25,R
+U+FE26,R
+U+FE30,U
+U+FE31,U
+U+FE32,U
+U+FE33,U
+U+FE34,U
+U+FE35,U
+U+FE36,U
+U+FE37,U
+U+FE38,U
+U+FE39,U
+U+FE3A,U
+U+FE3B,U
+U+FE3C,U
+U+FE3D,U
+U+FE3E,U
+U+FE3F,U
+U+FE40,U
+U+FE41,U
+U+FE42,U
+U+FE43,U
+U+FE44,U
+U+FE45,U
+U+FE46,U
+U+FE47,U
+U+FE48,U
+U+FE49,R
+U+FE4A,R
+U+FE4B,R
+U+FE4C,R
+U+FE4D,R
+U+FE4E,R
+U+FE4F,R
+U+FE50,U
+U+FE51,U
+U+FE52,U
+U+FE54,U
+U+FE55,U
+U+FE56,U
+U+FE57,U
+U+FE58,R
+U+FE59,R
+U+FE5A,R
+U+FE5B,R
+U+FE5C,R
+U+FE5D,R
+U+FE5E,R
+U+FE5F,U
+U+FE60,U
+U+FE61,U
+U+FE62,U
+U+FE63,R
+U+FE64,R
+U+FE65,R
+U+FE66,R
+U+FE68,U
+U+FE69,U
+U+FE6A,U
+U+FE6B,U
+U+FE70,R
+U+FE71,R
+U+FE72,R
+U+FE73,R
+U+FE74,R
+U+FE76,R
+U+FE77,R
+U+FE78,R
+U+FE79,R
+U+FE7A,R
+U+FE7B,R
+U+FE7C,R
+U+FE7D,R
+U+FE7E,R
+U+FE7F,R
+U+FE80,R
+U+FE81,R
+U+FE82,R
+U+FE83,R
+U+FE84,R
+U+FE85,R
+U+FE86,R
+U+FE87,R
+U+FE88,R
+U+FE89,R
+U+FE8A,R
+U+FE8B,R
+U+FE8C,R
+U+FE8D,R
+U+FE8E,R
+U+FE8F,R
+U+FE90,R
+U+FE91,R
+U+FE92,R
+U+FE93,R
+U+FE94,R
+U+FE95,R
+U+FE96,R
+U+FE97,R
+U+FE98,R
+U+FE99,R
+U+FE9A,R
+U+FE9B,R
+U+FE9C,R
+U+FE9D,R
+U+FE9E,R
+U+FE9F,R
+U+FEA0,R
+U+FEA1,R
+U+FEA2,R
+U+FEA3,R
+U+FEA4,R
+U+FEA5,R
+U+FEA6,R
+U+FEA7,R
+U+FEA8,R
+U+FEA9,R
+U+FEAA,R
+U+FEAB,R
+U+FEAC,R
+U+FEAD,R
+U+FEAE,R
+U+FEAF,R
+U+FEB0,R
+U+FEB1,R
+U+FEB2,R
+U+FEB3,R
+U+FEB4,R
+U+FEB5,R
+U+FEB6,R
+U+FEB7,R
+U+FEB8,R
+U+FEB9,R
+U+FEBA,R
+U+FEBB,R
+U+FEBC,R
+U+FEBD,R
+U+FEBE,R
+U+FEBF,R
+U+FEC0,R
+U+FEC1,R
+U+FEC2,R
+U+FEC3,R
+U+FEC4,R
+U+FEC5,R
+U+FEC6,R
+U+FEC7,R
+U+FEC8,R
+U+FEC9,R
+U+FECA,R
+U+FECB,R
+U+FECC,R
+U+FECD,R
+U+FECE,R
+U+FECF,R
+U+FED0,R
+U+FED1,R
+U+FED2,R
+U+FED3,R
+U+FED4,R
+U+FED5,R
+U+FED6,R
+U+FED7,R
+U+FED8,R
+U+FED9,R
+U+FEDA,R
+U+FEDB,R
+U+FEDC,R
+U+FEDD,R
+U+FEDE,R
+U+FEDF,R
+U+FEE0,R
+U+FEE1,R
+U+FEE2,R
+U+FEE3,R
+U+FEE4,R
+U+FEE5,R
+U+FEE6,R
+U+FEE7,R
+U+FEE8,R
+U+FEE9,R
+U+FEEA,R
+U+FEEB,R
+U+FEEC,R
+U+FEED,R
+U+FEEE,R
+U+FEEF,R
+U+FEF0,R
+U+FEF1,R
+U+FEF2,R
+U+FEF3,R
+U+FEF4,R
+U+FEF5,R
+U+FEF6,R
+U+FEF7,R
+U+FEF8,R
+U+FEF9,R
+U+FEFA,R
+U+FEFB,R
+U+FEFC,R
+U+FEFF,R
+U+FF01,U
+U+FF02,U
+U+FF03,U
+U+FF04,U
+U+FF05,U
+U+FF06,U
+U+FF07,U
+U+FF08,U
+U+FF09,U
+U+FF0A,U
+U+FF0B,U
+U+FF0C,U
+U+FF0D,R
+U+FF0E,U
+U+FF0F,U
+U+FF10,U
+U+FF11,U
+U+FF12,U
+U+FF13,U
+U+FF14,U
+U+FF15,U
+U+FF16,U
+U+FF17,U
+U+FF18,U
+U+FF19,U
+U+FF1A,U
+U+FF1B,U
+U+FF1C,R
+U+FF1D,R
+U+FF1E,R
+U+FF1F,U
+U+FF20,U
+U+FF21,U
+U+FF22,U
+U+FF23,U
+U+FF24,U
+U+FF25,U
+U+FF26,U
+U+FF27,U
+U+FF28,U
+U+FF29,U
+U+FF2A,U
+U+FF2B,U
+U+FF2C,U
+U+FF2D,U
+U+FF2E,U
+U+FF2F,U
+U+FF30,U
+U+FF31,U
+U+FF32,U
+U+FF33,U
+U+FF34,U
+U+FF35,U
+U+FF36,U
+U+FF37,U
+U+FF38,U
+U+FF39,U
+U+FF3A,U
+U+FF3B,U
+U+FF3C,U
+U+FF3D,U
+U+FF3E,U
+U+FF3F,U
+U+FF40,U
+U+FF41,U
+U+FF42,U
+U+FF43,U
+U+FF44,U
+U+FF45,U
+U+FF46,U
+U+FF47,U
+U+FF48,U
+U+FF49,U
+U+FF4A,U
+U+FF4B,U
+U+FF4C,U
+U+FF4D,U
+U+FF4E,U
+U+FF4F,U
+U+FF50,U
+U+FF51,U
+U+FF52,U
+U+FF53,U
+U+FF54,U
+U+FF55,U
+U+FF56,U
+U+FF57,U
+U+FF58,U
+U+FF59,U
+U+FF5A,U
+U+FF5B,U
+U+FF5C,U
+U+FF5D,U
+U+FF5E,U
+U+FF5F,U
+U+FF60,U
+U+FF61,R
+U+FF62,R
+U+FF63,R
+U+FF64,R
+U+FF65,R
+U+FF66,R
+U+FF67,R
+U+FF68,R
+U+FF69,R
+U+FF6A,R
+U+FF6B,R
+U+FF6C,R
+U+FF6D,R
+U+FF6E,R
+U+FF6F,R
+U+FF70,R
+U+FF71,R
+U+FF72,R
+U+FF73,R
+U+FF74,R
+U+FF75,R
+U+FF76,R
+U+FF77,R
+U+FF78,R
+U+FF79,R
+U+FF7A,R
+U+FF7B,R
+U+FF7C,R
+U+FF7D,R
+U+FF7E,R
+U+FF7F,R
+U+FF80,R
+U+FF81,R
+U+FF82,R
+U+FF83,R
+U+FF84,R
+U+FF85,R
+U+FF86,R
+U+FF87,R
+U+FF88,R
+U+FF89,R
+U+FF8A,R
+U+FF8B,R
+U+FF8C,R
+U+FF8D,R
+U+FF8E,R
+U+FF8F,R
+U+FF90,R
+U+FF91,R
+U+FF92,R
+U+FF93,R
+U+FF94,R
+U+FF95,R
+U+FF96,R
+U+FF97,R
+U+FF98,R
+U+FF99,R
+U+FF9A,R
+U+FF9B,R
+U+FF9C,R
+U+FF9D,R
+U+FF9E,R
+U+FF9F,R
+U+FFA0,R
+U+FFA1,R
+U+FFA2,R
+U+FFA3,R
+U+FFA4,R
+U+FFA5,R
+U+FFA6,R
+U+FFA7,R
+U+FFA8,R
+U+FFA9,R
+U+FFAA,R
+U+FFAB,R
+U+FFAC,R
+U+FFAD,R
+U+FFAE,R
+U+FFAF,R
+U+FFB0,R
+U+FFB1,R
+U+FFB2,R
+U+FFB3,R
+U+FFB4,R
+U+FFB5,R
+U+FFB6,R
+U+FFB7,R
+U+FFB8,R
+U+FFB9,R
+U+FFBA,R
+U+FFBB,R
+U+FFBC,R
+U+FFBD,R
+U+FFBE,R
+U+FFC2,R
+U+FFC3,R
+U+FFC4,R
+U+FFC5,R
+U+FFC6,R
+U+FFC7,R
+U+FFCA,R
+U+FFCB,R
+U+FFCC,R
+U+FFCD,R
+U+FFCE,R
+U+FFCF,R
+U+FFD2,R
+U+FFD3,R
+U+FFD4,R
+U+FFD5,R
+U+FFD6,R
+U+FFD7,R
+U+FFDA,R
+U+FFDB,R
+U+FFDC,R
+U+FFE0,U
+U+FFE1,U
+U+FFE2,U
+U+FFE3,U
+U+FFE4,U
+U+FFE5,U
+U+FFE6,U
+U+FFE8,R
+U+FFE9,R
+U+FFEA,R
+U+FFEB,R
+U+FFEC,R
+U+FFED,R
+U+FFEE,R
+U+FFF9,R
+U+FFFA,R
+U+FFFB,R
+U+FFFD,U
+U+10000,R
+U+10001,R
+U+10002,R
+U+10003,R
+U+10004,R
+U+10005,R
+U+10006,R
+U+10007,R
+U+10008,R
+U+10009,R
+U+1000A,R
+U+1000B,R
+U+1000D,R
+U+1000E,R
+U+1000F,R
+U+10010,R
+U+10011,R
+U+10012,R
+U+10013,R
+U+10014,R
+U+10015,R
+U+10016,R
+U+10017,R
+U+10018,R
+U+10019,R
+U+1001A,R
+U+1001B,R
+U+1001C,R
+U+1001D,R
+U+1001E,R
+U+1001F,R
+U+10020,R
+U+10021,R
+U+10022,R
+U+10023,R
+U+10024,R
+U+10025,R
+U+10026,R
+U+10028,R
+U+10029,R
+U+1002A,R
+U+1002B,R
+U+1002C,R
+U+1002D,R
+U+1002E,R
+U+1002F,R
+U+10030,R
+U+10031,R
+U+10032,R
+U+10033,R
+U+10034,R
+U+10035,R
+U+10036,R
+U+10037,R
+U+10038,R
+U+10039,R
+U+1003A,R
+U+1003C,R
+U+1003D,R
+U+1003F,R
+U+10040,R
+U+10041,R
+U+10042,R
+U+10043,R
+U+10044,R
+U+10045,R
+U+10046,R
+U+10047,R
+U+10048,R
+U+10049,R
+U+1004A,R
+U+1004B,R
+U+1004C,R
+U+1004D,R
+U+10050,R
+U+10051,R
+U+10052,R
+U+10053,R
+U+10054,R
+U+10055,R
+U+10056,R
+U+10057,R
+U+10058,R
+U+10059,R
+U+1005A,R
+U+1005B,R
+U+1005C,R
+U+1005D,R
+U+10080,R
+U+10081,R
+U+10082,R
+U+10083,R
+U+10084,R
+U+10085,R
+U+10086,R
+U+10087,R
+U+10088,R
+U+10089,R
+U+1008A,R
+U+1008B,R
+U+1008C,R
+U+1008D,R
+U+1008E,R
+U+1008F,R
+U+10090,R
+U+10091,R
+U+10092,R
+U+10093,R
+U+10094,R
+U+10095,R
+U+10096,R
+U+10097,R
+U+10098,R
+U+10099,R
+U+1009A,R
+U+1009B,R
+U+1009C,R
+U+1009D,R
+U+1009E,R
+U+1009F,R
+U+100A0,R
+U+100A1,R
+U+100A2,R
+U+100A3,R
+U+100A4,R
+U+100A5,R
+U+100A6,R
+U+100A7,R
+U+100A8,R
+U+100A9,R
+U+100AA,R
+U+100AB,R
+U+100AC,R
+U+100AD,R
+U+100AE,R
+U+100AF,R
+U+100B0,R
+U+100B1,R
+U+100B2,R
+U+100B3,R
+U+100B4,R
+U+100B5,R
+U+100B6,R
+U+100B7,R
+U+100B8,R
+U+100B9,R
+U+100BA,R
+U+100BB,R
+U+100BC,R
+U+100BD,R
+U+100BE,R
+U+100BF,R
+U+100C0,R
+U+100C1,R
+U+100C2,R
+U+100C3,R
+U+100C4,R
+U+100C5,R
+U+100C6,R
+U+100C7,R
+U+100C8,R
+U+100C9,R
+U+100CA,R
+U+100CB,R
+U+100CC,R
+U+100CD,R
+U+100CE,R
+U+100CF,R
+U+100D0,R
+U+100D1,R
+U+100D2,R
+U+100D3,R
+U+100D4,R
+U+100D5,R
+U+100D6,R
+U+100D7,R
+U+100D8,R
+U+100D9,R
+U+100DA,R
+U+100DB,R
+U+100DC,R
+U+100DD,R
+U+100DE,R
+U+100DF,R
+U+100E0,R
+U+100E1,R
+U+100E2,R
+U+100E3,R
+U+100E4,R
+U+100E5,R
+U+100E6,R
+U+100E7,R
+U+100E8,R
+U+100E9,R
+U+100EA,R
+U+100EB,R
+U+100EC,R
+U+100ED,R
+U+100EE,R
+U+100EF,R
+U+100F0,R
+U+100F1,R
+U+100F2,R
+U+100F3,R
+U+100F4,R
+U+100F5,R
+U+100F6,R
+U+100F7,R
+U+100F8,R
+U+100F9,R
+U+100FA,R
+U+10100,R
+U+10101,R
+U+10102,R
+U+10107,R
+U+10108,R
+U+10109,R
+U+1010A,R
+U+1010B,R
+U+1010C,R
+U+1010D,R
+U+1010E,R
+U+1010F,R
+U+10110,R
+U+10111,R
+U+10112,R
+U+10113,R
+U+10114,R
+U+10115,R
+U+10116,R
+U+10117,R
+U+10118,R
+U+10119,R
+U+1011A,R
+U+1011B,R
+U+1011C,R
+U+1011D,R
+U+1011E,R
+U+1011F,R
+U+10120,R
+U+10121,R
+U+10122,R
+U+10123,R
+U+10124,R
+U+10125,R
+U+10126,R
+U+10127,R
+U+10128,R
+U+10129,R
+U+1012A,R
+U+1012B,R
+U+1012C,R
+U+1012D,R
+U+1012E,R
+U+1012F,R
+U+10130,R
+U+10131,R
+U+10132,R
+U+10133,R
+U+10137,R
+U+10138,R
+U+10139,R
+U+1013A,R
+U+1013B,R
+U+1013C,R
+U+1013D,R
+U+1013E,R
+U+1013F,R
+U+10140,R
+U+10141,R
+U+10142,R
+U+10143,R
+U+10144,R
+U+10145,R
+U+10146,R
+U+10147,R
+U+10148,R
+U+10149,R
+U+1014A,R
+U+1014B,R
+U+1014C,R
+U+1014D,R
+U+1014E,R
+U+1014F,R
+U+10150,R
+U+10151,R
+U+10152,R
+U+10153,R
+U+10154,R
+U+10155,R
+U+10156,R
+U+10157,R
+U+10158,R
+U+10159,R
+U+1015A,R
+U+1015B,R
+U+1015C,R
+U+1015D,R
+U+1015E,R
+U+1015F,R
+U+10160,R
+U+10161,R
+U+10162,R
+U+10163,R
+U+10164,R
+U+10165,R
+U+10166,R
+U+10167,R
+U+10168,R
+U+10169,R
+U+1016A,R
+U+1016B,R
+U+1016C,R
+U+1016D,R
+U+1016E,R
+U+1016F,R
+U+10170,R
+U+10171,R
+U+10172,R
+U+10173,R
+U+10174,R
+U+10175,R
+U+10176,R
+U+10177,R
+U+10178,R
+U+10179,R
+U+1017A,R
+U+1017B,R
+U+1017C,R
+U+1017D,R
+U+1017E,R
+U+1017F,R
+U+10180,R
+U+10181,R
+U+10182,R
+U+10183,R
+U+10184,R
+U+10185,R
+U+10186,R
+U+10187,R
+U+10188,R
+U+10189,R
+U+1018A,R
+U+10190,R
+U+10191,R
+U+10192,R
+U+10193,R
+U+10194,R
+U+10195,R
+U+10196,R
+U+10197,R
+U+10198,R
+U+10199,R
+U+1019A,R
+U+1019B,R
+U+101D0,R
+U+101D1,R
+U+101D2,R
+U+101D3,R
+U+101D4,R
+U+101D5,R
+U+101D6,R
+U+101D7,R
+U+101D8,R
+U+101D9,R
+U+101DA,R
+U+101DB,R
+U+101DC,R
+U+101DD,R
+U+101DE,R
+U+101DF,R
+U+101E0,R
+U+101E1,R
+U+101E2,R
+U+101E3,R
+U+101E4,R
+U+101E5,R
+U+101E6,R
+U+101E7,R
+U+101E8,R
+U+101E9,R
+U+101EA,R
+U+101EB,R
+U+101EC,R
+U+101ED,R
+U+101EE,R
+U+101EF,R
+U+101F0,R
+U+101F1,R
+U+101F2,R
+U+101F3,R
+U+101F4,R
+U+101F5,R
+U+101F6,R
+U+101F7,R
+U+101F8,R
+U+101F9,R
+U+101FA,R
+U+101FB,R
+U+101FC,R
+U+101FD,R
+U+10280,R
+U+10281,R
+U+10282,R
+U+10283,R
+U+10284,R
+U+10285,R
+U+10286,R
+U+10287,R
+U+10288,R
+U+10289,R
+U+1028A,R
+U+1028B,R
+U+1028C,R
+U+1028D,R
+U+1028E,R
+U+1028F,R
+U+10290,R
+U+10291,R
+U+10292,R
+U+10293,R
+U+10294,R
+U+10295,R
+U+10296,R
+U+10297,R
+U+10298,R
+U+10299,R
+U+1029A,R
+U+1029B,R
+U+1029C,R
+U+102A0,R
+U+102A1,R
+U+102A2,R
+U+102A3,R
+U+102A4,R
+U+102A5,R
+U+102A6,R
+U+102A7,R
+U+102A8,R
+U+102A9,R
+U+102AA,R
+U+102AB,R
+U+102AC,R
+U+102AD,R
+U+102AE,R
+U+102AF,R
+U+102B0,R
+U+102B1,R
+U+102B2,R
+U+102B3,R
+U+102B4,R
+U+102B5,R
+U+102B6,R
+U+102B7,R
+U+102B8,R
+U+102B9,R
+U+102BA,R
+U+102BB,R
+U+102BC,R
+U+102BD,R
+U+102BE,R
+U+102BF,R
+U+102C0,R
+U+102C1,R
+U+102C2,R
+U+102C3,R
+U+102C4,R
+U+102C5,R
+U+102C6,R
+U+102C7,R
+U+102C8,R
+U+102C9,R
+U+102CA,R
+U+102CB,R
+U+102CC,R
+U+102CD,R
+U+102CE,R
+U+102CF,R
+U+102D0,R
+U+10300,R
+U+10301,R
+U+10302,R
+U+10303,R
+U+10304,R
+U+10305,R
+U+10306,R
+U+10307,R
+U+10308,R
+U+10309,R
+U+1030A,R
+U+1030B,R
+U+1030C,R
+U+1030D,R
+U+1030E,R
+U+1030F,R
+U+10310,R
+U+10311,R
+U+10312,R
+U+10313,R
+U+10314,R
+U+10315,R
+U+10316,R
+U+10317,R
+U+10318,R
+U+10319,R
+U+1031A,R
+U+1031B,R
+U+1031C,R
+U+1031D,R
+U+1031E,R
+U+10320,R
+U+10321,R
+U+10322,R
+U+10323,R
+U+10330,R
+U+10331,R
+U+10332,R
+U+10333,R
+U+10334,R
+U+10335,R
+U+10336,R
+U+10337,R
+U+10338,R
+U+10339,R
+U+1033A,R
+U+1033B,R
+U+1033C,R
+U+1033D,R
+U+1033E,R
+U+1033F,R
+U+10340,R
+U+10341,R
+U+10342,R
+U+10343,R
+U+10344,R
+U+10345,R
+U+10346,R
+U+10347,R
+U+10348,R
+U+10349,R
+U+1034A,R
+U+10380,R
+U+10381,R
+U+10382,R
+U+10383,R
+U+10384,R
+U+10385,R
+U+10386,R
+U+10387,R
+U+10388,R
+U+10389,R
+U+1038A,R
+U+1038B,R
+U+1038C,R
+U+1038D,R
+U+1038E,R
+U+1038F,R
+U+10390,R
+U+10391,R
+U+10392,R
+U+10393,R
+U+10394,R
+U+10395,R
+U+10396,R
+U+10397,R
+U+10398,R
+U+10399,R
+U+1039A,R
+U+1039B,R
+U+1039C,R
+U+1039D,R
+U+1039F,R
+U+103A0,R
+U+103A1,R
+U+103A2,R
+U+103A3,R
+U+103A4,R
+U+103A5,R
+U+103A6,R
+U+103A7,R
+U+103A8,R
+U+103A9,R
+U+103AA,R
+U+103AB,R
+U+103AC,R
+U+103AD,R
+U+103AE,R
+U+103AF,R
+U+103B0,R
+U+103B1,R
+U+103B2,R
+U+103B3,R
+U+103B4,R
+U+103B5,R
+U+103B6,R
+U+103B7,R
+U+103B8,R
+U+103B9,R
+U+103BA,R
+U+103BB,R
+U+103BC,R
+U+103BD,R
+U+103BE,R
+U+103BF,R
+U+103C0,R
+U+103C1,R
+U+103C2,R
+U+103C3,R
+U+103C8,R
+U+103C9,R
+U+103CA,R
+U+103CB,R
+U+103CC,R
+U+103CD,R
+U+103CE,R
+U+103CF,R
+U+103D0,R
+U+103D1,R
+U+103D2,R
+U+103D3,R
+U+103D4,R
+U+103D5,R
+U+10400,R
+U+10401,R
+U+10402,R
+U+10403,R
+U+10404,R
+U+10405,R
+U+10406,R
+U+10407,R
+U+10408,R
+U+10409,R
+U+1040A,R
+U+1040B,R
+U+1040C,R
+U+1040D,R
+U+1040E,R
+U+1040F,R
+U+10410,R
+U+10411,R
+U+10412,R
+U+10413,R
+U+10414,R
+U+10415,R
+U+10416,R
+U+10417,R
+U+10418,R
+U+10419,R
+U+1041A,R
+U+1041B,R
+U+1041C,R
+U+1041D,R
+U+1041E,R
+U+1041F,R
+U+10420,R
+U+10421,R
+U+10422,R
+U+10423,R
+U+10424,R
+U+10425,R
+U+10426,R
+U+10427,R
+U+10428,R
+U+10429,R
+U+1042A,R
+U+1042B,R
+U+1042C,R
+U+1042D,R
+U+1042E,R
+U+1042F,R
+U+10430,R
+U+10431,R
+U+10432,R
+U+10433,R
+U+10434,R
+U+10435,R
+U+10436,R
+U+10437,R
+U+10438,R
+U+10439,R
+U+1043A,R
+U+1043B,R
+U+1043C,R
+U+1043D,R
+U+1043E,R
+U+1043F,R
+U+10440,R
+U+10441,R
+U+10442,R
+U+10443,R
+U+10444,R
+U+10445,R
+U+10446,R
+U+10447,R
+U+10448,R
+U+10449,R
+U+1044A,R
+U+1044B,R
+U+1044C,R
+U+1044D,R
+U+1044E,R
+U+1044F,R
+U+10450,R
+U+10451,R
+U+10452,R
+U+10453,R
+U+10454,R
+U+10455,R
+U+10456,R
+U+10457,R
+U+10458,R
+U+10459,R
+U+1045A,R
+U+1045B,R
+U+1045C,R
+U+1045D,R
+U+1045E,R
+U+1045F,R
+U+10460,R
+U+10461,R
+U+10462,R
+U+10463,R
+U+10464,R
+U+10465,R
+U+10466,R
+U+10467,R
+U+10468,R
+U+10469,R
+U+1046A,R
+U+1046B,R
+U+1046C,R
+U+1046D,R
+U+1046E,R
+U+1046F,R
+U+10470,R
+U+10471,R
+U+10472,R
+U+10473,R
+U+10474,R
+U+10475,R
+U+10476,R
+U+10477,R
+U+10478,R
+U+10479,R
+U+1047A,R
+U+1047B,R
+U+1047C,R
+U+1047D,R
+U+1047E,R
+U+1047F,R
+U+10480,R
+U+10481,R
+U+10482,R
+U+10483,R
+U+10484,R
+U+10485,R
+U+10486,R
+U+10487,R
+U+10488,R
+U+10489,R
+U+1048A,R
+U+1048B,R
+U+1048C,R
+U+1048D,R
+U+1048E,R
+U+1048F,R
+U+10490,R
+U+10491,R
+U+10492,R
+U+10493,R
+U+10494,R
+U+10495,R
+U+10496,R
+U+10497,R
+U+10498,R
+U+10499,R
+U+1049A,R
+U+1049B,R
+U+1049C,R
+U+1049D,R
+U+104A0,R
+U+104A1,R
+U+104A2,R
+U+104A3,R
+U+104A4,R
+U+104A5,R
+U+104A6,R
+U+104A7,R
+U+104A8,R
+U+104A9,R
+U+10800,R
+U+10801,R
+U+10802,R
+U+10803,R
+U+10804,R
+U+10805,R
+U+10808,R
+U+1080A,R
+U+1080B,R
+U+1080C,R
+U+1080D,R
+U+1080E,R
+U+1080F,R
+U+10810,R
+U+10811,R
+U+10812,R
+U+10813,R
+U+10814,R
+U+10815,R
+U+10816,R
+U+10817,R
+U+10818,R
+U+10819,R
+U+1081A,R
+U+1081B,R
+U+1081C,R
+U+1081D,R
+U+1081E,R
+U+1081F,R
+U+10820,R
+U+10821,R
+U+10822,R
+U+10823,R
+U+10824,R
+U+10825,R
+U+10826,R
+U+10827,R
+U+10828,R
+U+10829,R
+U+1082A,R
+U+1082B,R
+U+1082C,R
+U+1082D,R
+U+1082E,R
+U+1082F,R
+U+10830,R
+U+10831,R
+U+10832,R
+U+10833,R
+U+10834,R
+U+10835,R
+U+10837,R
+U+10838,R
+U+1083C,R
+U+1083F,R
+U+10840,R
+U+10841,R
+U+10842,R
+U+10843,R
+U+10844,R
+U+10845,R
+U+10846,R
+U+10847,R
+U+10848,R
+U+10849,R
+U+1084A,R
+U+1084B,R
+U+1084C,R
+U+1084D,R
+U+1084E,R
+U+1084F,R
+U+10850,R
+U+10851,R
+U+10852,R
+U+10853,R
+U+10854,R
+U+10855,R
+U+10857,R
+U+10858,R
+U+10859,R
+U+1085A,R
+U+1085B,R
+U+1085C,R
+U+1085D,R
+U+1085E,R
+U+1085F,R
+U+10900,R
+U+10901,R
+U+10902,R
+U+10903,R
+U+10904,R
+U+10905,R
+U+10906,R
+U+10907,R
+U+10908,R
+U+10909,R
+U+1090A,R
+U+1090B,R
+U+1090C,R
+U+1090D,R
+U+1090E,R
+U+1090F,R
+U+10910,R
+U+10911,R
+U+10912,R
+U+10913,R
+U+10914,R
+U+10915,R
+U+10916,R
+U+10917,R
+U+10918,R
+U+10919,R
+U+1091A,R
+U+1091B,R
+U+1091F,R
+U+10920,R
+U+10921,R
+U+10922,R
+U+10923,R
+U+10924,R
+U+10925,R
+U+10926,R
+U+10927,R
+U+10928,R
+U+10929,R
+U+1092A,R
+U+1092B,R
+U+1092C,R
+U+1092D,R
+U+1092E,R
+U+1092F,R
+U+10930,R
+U+10931,R
+U+10932,R
+U+10933,R
+U+10934,R
+U+10935,R
+U+10936,R
+U+10937,R
+U+10938,R
+U+10939,R
+U+1093F,R
+U+10980,R
+U+10981,R
+U+10982,R
+U+10983,R
+U+10984,R
+U+10985,R
+U+10986,R
+U+10987,R
+U+10988,R
+U+10989,R
+U+1098A,R
+U+1098B,R
+U+1098C,R
+U+1098D,R
+U+1098E,R
+U+1098F,R
+U+10990,R
+U+10991,R
+U+10992,R
+U+10993,R
+U+10994,R
+U+10995,R
+U+10996,R
+U+10997,R
+U+10998,R
+U+10999,R
+U+1099A,R
+U+1099B,R
+U+1099C,R
+U+1099D,R
+U+1099E,R
+U+1099F,R
+U+109A0,R
+U+109A1,R
+U+109A2,R
+U+109A3,R
+U+109A4,R
+U+109A5,R
+U+109A6,R
+U+109A7,R
+U+109A8,R
+U+109A9,R
+U+109AA,R
+U+109AB,R
+U+109AC,R
+U+109AD,R
+U+109AE,R
+U+109AF,R
+U+109B0,R
+U+109B1,R
+U+109B2,R
+U+109B3,R
+U+109B4,R
+U+109B5,R
+U+109B6,R
+U+109B7,R
+U+109BE,R
+U+109BF,R
+U+10A00,R
+U+10A01,R
+U+10A02,R
+U+10A03,R
+U+10A05,R
+U+10A06,R
+U+10A0C,R
+U+10A0D,R
+U+10A0E,R
+U+10A0F,R
+U+10A10,R
+U+10A11,R
+U+10A12,R
+U+10A13,R
+U+10A15,R
+U+10A16,R
+U+10A17,R
+U+10A19,R
+U+10A1A,R
+U+10A1B,R
+U+10A1C,R
+U+10A1D,R
+U+10A1E,R
+U+10A1F,R
+U+10A20,R
+U+10A21,R
+U+10A22,R
+U+10A23,R
+U+10A24,R
+U+10A25,R
+U+10A26,R
+U+10A27,R
+U+10A28,R
+U+10A29,R
+U+10A2A,R
+U+10A2B,R
+U+10A2C,R
+U+10A2D,R
+U+10A2E,R
+U+10A2F,R
+U+10A30,R
+U+10A31,R
+U+10A32,R
+U+10A33,R
+U+10A38,R
+U+10A39,R
+U+10A3A,R
+U+10A3F,R
+U+10A40,R
+U+10A41,R
+U+10A42,R
+U+10A43,R
+U+10A44,R
+U+10A45,R
+U+10A46,R
+U+10A47,R
+U+10A50,R
+U+10A51,R
+U+10A52,R
+U+10A53,R
+U+10A54,R
+U+10A55,R
+U+10A56,R
+U+10A57,R
+U+10A58,R
+U+10A60,R
+U+10A61,R
+U+10A62,R
+U+10A63,R
+U+10A64,R
+U+10A65,R
+U+10A66,R
+U+10A67,R
+U+10A68,R
+U+10A69,R
+U+10A6A,R
+U+10A6B,R
+U+10A6C,R
+U+10A6D,R
+U+10A6E,R
+U+10A6F,R
+U+10A70,R
+U+10A71,R
+U+10A72,R
+U+10A73,R
+U+10A74,R
+U+10A75,R
+U+10A76,R
+U+10A77,R
+U+10A78,R
+U+10A79,R
+U+10A7A,R
+U+10A7B,R
+U+10A7C,R
+U+10A7D,R
+U+10A7E,R
+U+10A7F,R
+U+10B00,R
+U+10B01,R
+U+10B02,R
+U+10B03,R
+U+10B04,R
+U+10B05,R
+U+10B06,R
+U+10B07,R
+U+10B08,R
+U+10B09,R
+U+10B0A,R
+U+10B0B,R
+U+10B0C,R
+U+10B0D,R
+U+10B0E,R
+U+10B0F,R
+U+10B10,R
+U+10B11,R
+U+10B12,R
+U+10B13,R
+U+10B14,R
+U+10B15,R
+U+10B16,R
+U+10B17,R
+U+10B18,R
+U+10B19,R
+U+10B1A,R
+U+10B1B,R
+U+10B1C,R
+U+10B1D,R
+U+10B1E,R
+U+10B1F,R
+U+10B20,R
+U+10B21,R
+U+10B22,R
+U+10B23,R
+U+10B24,R
+U+10B25,R
+U+10B26,R
+U+10B27,R
+U+10B28,R
+U+10B29,R
+U+10B2A,R
+U+10B2B,R
+U+10B2C,R
+U+10B2D,R
+U+10B2E,R
+U+10B2F,R
+U+10B30,R
+U+10B31,R
+U+10B32,R
+U+10B33,R
+U+10B34,R
+U+10B35,R
+U+10B39,R
+U+10B3A,R
+U+10B3B,R
+U+10B3C,R
+U+10B3D,R
+U+10B3E,R
+U+10B3F,R
+U+10B40,R
+U+10B41,R
+U+10B42,R
+U+10B43,R
+U+10B44,R
+U+10B45,R
+U+10B46,R
+U+10B47,R
+U+10B48,R
+U+10B49,R
+U+10B4A,R
+U+10B4B,R
+U+10B4C,R
+U+10B4D,R
+U+10B4E,R
+U+10B4F,R
+U+10B50,R
+U+10B51,R
+U+10B52,R
+U+10B53,R
+U+10B54,R
+U+10B55,R
+U+10B58,R
+U+10B59,R
+U+10B5A,R
+U+10B5B,R
+U+10B5C,R
+U+10B5D,R
+U+10B5E,R
+U+10B5F,R
+U+10B60,R
+U+10B61,R
+U+10B62,R
+U+10B63,R
+U+10B64,R
+U+10B65,R
+U+10B66,R
+U+10B67,R
+U+10B68,R
+U+10B69,R
+U+10B6A,R
+U+10B6B,R
+U+10B6C,R
+U+10B6D,R
+U+10B6E,R
+U+10B6F,R
+U+10B70,R
+U+10B71,R
+U+10B72,R
+U+10B78,R
+U+10B79,R
+U+10B7A,R
+U+10B7B,R
+U+10B7C,R
+U+10B7D,R
+U+10B7E,R
+U+10B7F,R
+U+10C00,R
+U+10C01,R
+U+10C02,R
+U+10C03,R
+U+10C04,R
+U+10C05,R
+U+10C06,R
+U+10C07,R
+U+10C08,R
+U+10C09,R
+U+10C0A,R
+U+10C0B,R
+U+10C0C,R
+U+10C0D,R
+U+10C0E,R
+U+10C0F,R
+U+10C10,R
+U+10C11,R
+U+10C12,R
+U+10C13,R
+U+10C14,R
+U+10C15,R
+U+10C16,R
+U+10C17,R
+U+10C18,R
+U+10C19,R
+U+10C1A,R
+U+10C1B,R
+U+10C1C,R
+U+10C1D,R
+U+10C1E,R
+U+10C1F,R
+U+10C20,R
+U+10C21,R
+U+10C22,R
+U+10C23,R
+U+10C24,R
+U+10C25,R
+U+10C26,R
+U+10C27,R
+U+10C28,R
+U+10C29,R
+U+10C2A,R
+U+10C2B,R
+U+10C2C,R
+U+10C2D,R
+U+10C2E,R
+U+10C2F,R
+U+10C30,R
+U+10C31,R
+U+10C32,R
+U+10C33,R
+U+10C34,R
+U+10C35,R
+U+10C36,R
+U+10C37,R
+U+10C38,R
+U+10C39,R
+U+10C3A,R
+U+10C3B,R
+U+10C3C,R
+U+10C3D,R
+U+10C3E,R
+U+10C3F,R
+U+10C40,R
+U+10C41,R
+U+10C42,R
+U+10C43,R
+U+10C44,R
+U+10C45,R
+U+10C46,R
+U+10C47,R
+U+10C48,R
+U+10E60,R
+U+10E61,R
+U+10E62,R
+U+10E63,R
+U+10E64,R
+U+10E65,R
+U+10E66,R
+U+10E67,R
+U+10E68,R
+U+10E69,R
+U+10E6A,R
+U+10E6B,R
+U+10E6C,R
+U+10E6D,R
+U+10E6E,R
+U+10E6F,R
+U+10E70,R
+U+10E71,R
+U+10E72,R
+U+10E73,R
+U+10E74,R
+U+10E75,R
+U+10E76,R
+U+10E77,R
+U+10E78,R
+U+10E79,R
+U+10E7A,R
+U+10E7B,R
+U+10E7C,R
+U+10E7D,R
+U+10E7E,R
+U+11000,R
+U+11001,R
+U+11002,R
+U+11003,R
+U+11004,R
+U+11005,R
+U+11006,R
+U+11007,R
+U+11008,R
+U+11009,R
+U+1100A,R
+U+1100B,R
+U+1100C,R
+U+1100D,R
+U+1100E,R
+U+1100F,R
+U+11010,R
+U+11011,R
+U+11012,R
+U+11013,R
+U+11014,R
+U+11015,R
+U+11016,R
+U+11017,R
+U+11018,R
+U+11019,R
+U+1101A,R
+U+1101B,R
+U+1101C,R
+U+1101D,R
+U+1101E,R
+U+1101F,R
+U+11020,R
+U+11021,R
+U+11022,R
+U+11023,R
+U+11024,R
+U+11025,R
+U+11026,R
+U+11027,R
+U+11028,R
+U+11029,R
+U+1102A,R
+U+1102B,R
+U+1102C,R
+U+1102D,R
+U+1102E,R
+U+1102F,R
+U+11030,R
+U+11031,R
+U+11032,R
+U+11033,R
+U+11034,R
+U+11035,R
+U+11036,R
+U+11037,R
+U+11038,R
+U+11039,R
+U+1103A,R
+U+1103B,R
+U+1103C,R
+U+1103D,R
+U+1103E,R
+U+1103F,R
+U+11040,R
+U+11041,R
+U+11042,R
+U+11043,R
+U+11044,R
+U+11045,R
+U+11046,R
+U+11047,R
+U+11048,R
+U+11049,R
+U+1104A,R
+U+1104B,R
+U+1104C,R
+U+1104D,R
+U+11052,R
+U+11053,R
+U+11054,R
+U+11055,R
+U+11056,R
+U+11057,R
+U+11058,R
+U+11059,R
+U+1105A,R
+U+1105B,R
+U+1105C,R
+U+1105D,R
+U+1105E,R
+U+1105F,R
+U+11060,R
+U+11061,R
+U+11062,R
+U+11063,R
+U+11064,R
+U+11065,R
+U+11066,R
+U+11067,R
+U+11068,R
+U+11069,R
+U+1106A,R
+U+1106B,R
+U+1106C,R
+U+1106D,R
+U+1106E,R
+U+1106F,R
+U+11080,R
+U+11081,R
+U+11082,R
+U+11083,R
+U+11084,R
+U+11085,R
+U+11086,R
+U+11087,R
+U+11088,R
+U+11089,R
+U+1108A,R
+U+1108B,R
+U+1108C,R
+U+1108D,R
+U+1108E,R
+U+1108F,R
+U+11090,R
+U+11091,R
+U+11092,R
+U+11093,R
+U+11094,R
+U+11095,R
+U+11096,R
+U+11097,R
+U+11098,R
+U+11099,R
+U+1109A,R
+U+1109B,R
+U+1109C,R
+U+1109D,R
+U+1109E,R
+U+1109F,R
+U+110A0,R
+U+110A1,R
+U+110A2,R
+U+110A3,R
+U+110A4,R
+U+110A5,R
+U+110A6,R
+U+110A7,R
+U+110A8,R
+U+110A9,R
+U+110AA,R
+U+110AB,R
+U+110AC,R
+U+110AD,R
+U+110AE,R
+U+110AF,R
+U+110B0,R
+U+110B1,R
+U+110B2,R
+U+110B3,R
+U+110B4,R
+U+110B5,R
+U+110B6,R
+U+110B7,R
+U+110B8,R
+U+110B9,R
+U+110BA,R
+U+110BB,R
+U+110BC,R
+U+110BD,R
+U+110BE,R
+U+110BF,R
+U+110C0,R
+U+110C1,R
+U+110D0,R
+U+110D1,R
+U+110D2,R
+U+110D3,R
+U+110D4,R
+U+110D5,R
+U+110D6,R
+U+110D7,R
+U+110D8,R
+U+110D9,R
+U+110DA,R
+U+110DB,R
+U+110DC,R
+U+110DD,R
+U+110DE,R
+U+110DF,R
+U+110E0,R
+U+110E1,R
+U+110E2,R
+U+110E3,R
+U+110E4,R
+U+110E5,R
+U+110E6,R
+U+110E7,R
+U+110E8,R
+U+110F0,R
+U+110F1,R
+U+110F2,R
+U+110F3,R
+U+110F4,R
+U+110F5,R
+U+110F6,R
+U+110F7,R
+U+110F8,R
+U+110F9,R
+U+11100,R
+U+11101,R
+U+11102,R
+U+11103,R
+U+11104,R
+U+11105,R
+U+11106,R
+U+11107,R
+U+11108,R
+U+11109,R
+U+1110A,R
+U+1110B,R
+U+1110C,R
+U+1110D,R
+U+1110E,R
+U+1110F,R
+U+11110,R
+U+11111,R
+U+11112,R
+U+11113,R
+U+11114,R
+U+11115,R
+U+11116,R
+U+11117,R
+U+11118,R
+U+11119,R
+U+1111A,R
+U+1111B,R
+U+1111C,R
+U+1111D,R
+U+1111E,R
+U+1111F,R
+U+11120,R
+U+11121,R
+U+11122,R
+U+11123,R
+U+11124,R
+U+11125,R
+U+11126,R
+U+11127,R
+U+11128,R
+U+11129,R
+U+1112A,R
+U+1112B,R
+U+1112C,R
+U+1112D,R
+U+1112E,R
+U+1112F,R
+U+11130,R
+U+11131,R
+U+11132,R
+U+11133,R
+U+11134,R
+U+11136,R
+U+11137,R
+U+11138,R
+U+11139,R
+U+1113A,R
+U+1113B,R
+U+1113C,R
+U+1113D,R
+U+1113E,R
+U+1113F,R
+U+11140,R
+U+11141,R
+U+11142,R
+U+11143,R
+U+11180,R
+U+11181,R
+U+11182,R
+U+11183,R
+U+11184,R
+U+11185,R
+U+11186,R
+U+11187,R
+U+11188,R
+U+11189,R
+U+1118A,R
+U+1118B,R
+U+1118C,R
+U+1118D,R
+U+1118E,R
+U+1118F,R
+U+11190,R
+U+11191,R
+U+11192,R
+U+11193,R
+U+11194,R
+U+11195,R
+U+11196,R
+U+11197,R
+U+11198,R
+U+11199,R
+U+1119A,R
+U+1119B,R
+U+1119C,R
+U+1119D,R
+U+1119E,R
+U+1119F,R
+U+111A0,R
+U+111A1,R
+U+111A2,R
+U+111A3,R
+U+111A4,R
+U+111A5,R
+U+111A6,R
+U+111A7,R
+U+111A8,R
+U+111A9,R
+U+111AA,R
+U+111AB,R
+U+111AC,R
+U+111AD,R
+U+111AE,R
+U+111AF,R
+U+111B0,R
+U+111B1,R
+U+111B2,R
+U+111B3,R
+U+111B4,R
+U+111B5,R
+U+111B6,R
+U+111B7,R
+U+111B8,R
+U+111B9,R
+U+111BA,R
+U+111BB,R
+U+111BC,R
+U+111BD,R
+U+111BE,R
+U+111BF,R
+U+111C0,R
+U+111C1,R
+U+111C2,R
+U+111C3,R
+U+111C4,R
+U+111C5,R
+U+111C6,R
+U+111C7,R
+U+111C8,R
+U+111D0,R
+U+111D1,R
+U+111D2,R
+U+111D3,R
+U+111D4,R
+U+111D5,R
+U+111D6,R
+U+111D7,R
+U+111D8,R
+U+111D9,R
+U+11680,R
+U+11681,R
+U+11682,R
+U+11683,R
+U+11684,R
+U+11685,R
+U+11686,R
+U+11687,R
+U+11688,R
+U+11689,R
+U+1168A,R
+U+1168B,R
+U+1168C,R
+U+1168D,R
+U+1168E,R
+U+1168F,R
+U+11690,R
+U+11691,R
+U+11692,R
+U+11693,R
+U+11694,R
+U+11695,R
+U+11696,R
+U+11697,R
+U+11698,R
+U+11699,R
+U+1169A,R
+U+1169B,R
+U+1169C,R
+U+1169D,R
+U+1169E,R
+U+1169F,R
+U+116A0,R
+U+116A1,R
+U+116A2,R
+U+116A3,R
+U+116A4,R
+U+116A5,R
+U+116A6,R
+U+116A7,R
+U+116A8,R
+U+116A9,R
+U+116AA,R
+U+116AB,R
+U+116AC,R
+U+116AD,R
+U+116AE,R
+U+116AF,R
+U+116B0,R
+U+116B1,R
+U+116B2,R
+U+116B3,R
+U+116B4,R
+U+116B5,R
+U+116B6,R
+U+116B7,R
+U+116C0,R
+U+116C1,R
+U+116C2,R
+U+116C3,R
+U+116C4,R
+U+116C5,R
+U+116C6,R
+U+116C7,R
+U+116C8,R
+U+116C9,R
+U+12000,R
+U+12001,R
+U+12002,R
+U+12003,R
+U+12004,R
+U+12005,R
+U+12006,R
+U+12007,R
+U+12008,R
+U+12009,R
+U+1200A,R
+U+1200B,R
+U+1200C,R
+U+1200D,R
+U+1200E,R
+U+1200F,R
+U+12010,R
+U+12011,R
+U+12012,R
+U+12013,R
+U+12014,R
+U+12015,R
+U+12016,R
+U+12017,R
+U+12018,R
+U+12019,R
+U+1201A,R
+U+1201B,R
+U+1201C,R
+U+1201D,R
+U+1201E,R
+U+1201F,R
+U+12020,R
+U+12021,R
+U+12022,R
+U+12023,R
+U+12024,R
+U+12025,R
+U+12026,R
+U+12027,R
+U+12028,R
+U+12029,R
+U+1202A,R
+U+1202B,R
+U+1202C,R
+U+1202D,R
+U+1202E,R
+U+1202F,R
+U+12030,R
+U+12031,R
+U+12032,R
+U+12033,R
+U+12034,R
+U+12035,R
+U+12036,R
+U+12037,R
+U+12038,R
+U+12039,R
+U+1203A,R
+U+1203B,R
+U+1203C,R
+U+1203D,R
+U+1203E,R
+U+1203F,R
+U+12040,R
+U+12041,R
+U+12042,R
+U+12043,R
+U+12044,R
+U+12045,R
+U+12046,R
+U+12047,R
+U+12048,R
+U+12049,R
+U+1204A,R
+U+1204B,R
+U+1204C,R
+U+1204D,R
+U+1204E,R
+U+1204F,R
+U+12050,R
+U+12051,R
+U+12052,R
+U+12053,R
+U+12054,R
+U+12055,R
+U+12056,R
+U+12057,R
+U+12058,R
+U+12059,R
+U+1205A,R
+U+1205B,R
+U+1205C,R
+U+1205D,R
+U+1205E,R
+U+1205F,R
+U+12060,R
+U+12061,R
+U+12062,R
+U+12063,R
+U+12064,R
+U+12065,R
+U+12066,R
+U+12067,R
+U+12068,R
+U+12069,R
+U+1206A,R
+U+1206B,R
+U+1206C,R
+U+1206D,R
+U+1206E,R
+U+1206F,R
+U+12070,R
+U+12071,R
+U+12072,R
+U+12073,R
+U+12074,R
+U+12075,R
+U+12076,R
+U+12077,R
+U+12078,R
+U+12079,R
+U+1207A,R
+U+1207B,R
+U+1207C,R
+U+1207D,R
+U+1207E,R
+U+1207F,R
+U+12080,R
+U+12081,R
+U+12082,R
+U+12083,R
+U+12084,R
+U+12085,R
+U+12086,R
+U+12087,R
+U+12088,R
+U+12089,R
+U+1208A,R
+U+1208B,R
+U+1208C,R
+U+1208D,R
+U+1208E,R
+U+1208F,R
+U+12090,R
+U+12091,R
+U+12092,R
+U+12093,R
+U+12094,R
+U+12095,R
+U+12096,R
+U+12097,R
+U+12098,R
+U+12099,R
+U+1209A,R
+U+1209B,R
+U+1209C,R
+U+1209D,R
+U+1209E,R
+U+1209F,R
+U+120A0,R
+U+120A1,R
+U+120A2,R
+U+120A3,R
+U+120A4,R
+U+120A5,R
+U+120A6,R
+U+120A7,R
+U+120A8,R
+U+120A9,R
+U+120AA,R
+U+120AB,R
+U+120AC,R
+U+120AD,R
+U+120AE,R
+U+120AF,R
+U+120B0,R
+U+120B1,R
+U+120B2,R
+U+120B3,R
+U+120B4,R
+U+120B5,R
+U+120B6,R
+U+120B7,R
+U+120B8,R
+U+120B9,R
+U+120BA,R
+U+120BB,R
+U+120BC,R
+U+120BD,R
+U+120BE,R
+U+120BF,R
+U+120C0,R
+U+120C1,R
+U+120C2,R
+U+120C3,R
+U+120C4,R
+U+120C5,R
+U+120C6,R
+U+120C7,R
+U+120C8,R
+U+120C9,R
+U+120CA,R
+U+120CB,R
+U+120CC,R
+U+120CD,R
+U+120CE,R
+U+120CF,R
+U+120D0,R
+U+120D1,R
+U+120D2,R
+U+120D3,R
+U+120D4,R
+U+120D5,R
+U+120D6,R
+U+120D7,R
+U+120D8,R
+U+120D9,R
+U+120DA,R
+U+120DB,R
+U+120DC,R
+U+120DD,R
+U+120DE,R
+U+120DF,R
+U+120E0,R
+U+120E1,R
+U+120E2,R
+U+120E3,R
+U+120E4,R
+U+120E5,R
+U+120E6,R
+U+120E7,R
+U+120E8,R
+U+120E9,R
+U+120EA,R
+U+120EB,R
+U+120EC,R
+U+120ED,R
+U+120EE,R
+U+120EF,R
+U+120F0,R
+U+120F1,R
+U+120F2,R
+U+120F3,R
+U+120F4,R
+U+120F5,R
+U+120F6,R
+U+120F7,R
+U+120F8,R
+U+120F9,R
+U+120FA,R
+U+120FB,R
+U+120FC,R
+U+120FD,R
+U+120FE,R
+U+120FF,R
+U+12100,R
+U+12101,R
+U+12102,R
+U+12103,R
+U+12104,R
+U+12105,R
+U+12106,R
+U+12107,R
+U+12108,R
+U+12109,R
+U+1210A,R
+U+1210B,R
+U+1210C,R
+U+1210D,R
+U+1210E,R
+U+1210F,R
+U+12110,R
+U+12111,R
+U+12112,R
+U+12113,R
+U+12114,R
+U+12115,R
+U+12116,R
+U+12117,R
+U+12118,R
+U+12119,R
+U+1211A,R
+U+1211B,R
+U+1211C,R
+U+1211D,R
+U+1211E,R
+U+1211F,R
+U+12120,R
+U+12121,R
+U+12122,R
+U+12123,R
+U+12124,R
+U+12125,R
+U+12126,R
+U+12127,R
+U+12128,R
+U+12129,R
+U+1212A,R
+U+1212B,R
+U+1212C,R
+U+1212D,R
+U+1212E,R
+U+1212F,R
+U+12130,R
+U+12131,R
+U+12132,R
+U+12133,R
+U+12134,R
+U+12135,R
+U+12136,R
+U+12137,R
+U+12138,R
+U+12139,R
+U+1213A,R
+U+1213B,R
+U+1213C,R
+U+1213D,R
+U+1213E,R
+U+1213F,R
+U+12140,R
+U+12141,R
+U+12142,R
+U+12143,R
+U+12144,R
+U+12145,R
+U+12146,R
+U+12147,R
+U+12148,R
+U+12149,R
+U+1214A,R
+U+1214B,R
+U+1214C,R
+U+1214D,R
+U+1214E,R
+U+1214F,R
+U+12150,R
+U+12151,R
+U+12152,R
+U+12153,R
+U+12154,R
+U+12155,R
+U+12156,R
+U+12157,R
+U+12158,R
+U+12159,R
+U+1215A,R
+U+1215B,R
+U+1215C,R
+U+1215D,R
+U+1215E,R
+U+1215F,R
+U+12160,R
+U+12161,R
+U+12162,R
+U+12163,R
+U+12164,R
+U+12165,R
+U+12166,R
+U+12167,R
+U+12168,R
+U+12169,R
+U+1216A,R
+U+1216B,R
+U+1216C,R
+U+1216D,R
+U+1216E,R
+U+1216F,R
+U+12170,R
+U+12171,R
+U+12172,R
+U+12173,R
+U+12174,R
+U+12175,R
+U+12176,R
+U+12177,R
+U+12178,R
+U+12179,R
+U+1217A,R
+U+1217B,R
+U+1217C,R
+U+1217D,R
+U+1217E,R
+U+1217F,R
+U+12180,R
+U+12181,R
+U+12182,R
+U+12183,R
+U+12184,R
+U+12185,R
+U+12186,R
+U+12187,R
+U+12188,R
+U+12189,R
+U+1218A,R
+U+1218B,R
+U+1218C,R
+U+1218D,R
+U+1218E,R
+U+1218F,R
+U+12190,R
+U+12191,R
+U+12192,R
+U+12193,R
+U+12194,R
+U+12195,R
+U+12196,R
+U+12197,R
+U+12198,R
+U+12199,R
+U+1219A,R
+U+1219B,R
+U+1219C,R
+U+1219D,R
+U+1219E,R
+U+1219F,R
+U+121A0,R
+U+121A1,R
+U+121A2,R
+U+121A3,R
+U+121A4,R
+U+121A5,R
+U+121A6,R
+U+121A7,R
+U+121A8,R
+U+121A9,R
+U+121AA,R
+U+121AB,R
+U+121AC,R
+U+121AD,R
+U+121AE,R
+U+121AF,R
+U+121B0,R
+U+121B1,R
+U+121B2,R
+U+121B3,R
+U+121B4,R
+U+121B5,R
+U+121B6,R
+U+121B7,R
+U+121B8,R
+U+121B9,R
+U+121BA,R
+U+121BB,R
+U+121BC,R
+U+121BD,R
+U+121BE,R
+U+121BF,R
+U+121C0,R
+U+121C1,R
+U+121C2,R
+U+121C3,R
+U+121C4,R
+U+121C5,R
+U+121C6,R
+U+121C7,R
+U+121C8,R
+U+121C9,R
+U+121CA,R
+U+121CB,R
+U+121CC,R
+U+121CD,R
+U+121CE,R
+U+121CF,R
+U+121D0,R
+U+121D1,R
+U+121D2,R
+U+121D3,R
+U+121D4,R
+U+121D5,R
+U+121D6,R
+U+121D7,R
+U+121D8,R
+U+121D9,R
+U+121DA,R
+U+121DB,R
+U+121DC,R
+U+121DD,R
+U+121DE,R
+U+121DF,R
+U+121E0,R
+U+121E1,R
+U+121E2,R
+U+121E3,R
+U+121E4,R
+U+121E5,R
+U+121E6,R
+U+121E7,R
+U+121E8,R
+U+121E9,R
+U+121EA,R
+U+121EB,R
+U+121EC,R
+U+121ED,R
+U+121EE,R
+U+121EF,R
+U+121F0,R
+U+121F1,R
+U+121F2,R
+U+121F3,R
+U+121F4,R
+U+121F5,R
+U+121F6,R
+U+121F7,R
+U+121F8,R
+U+121F9,R
+U+121FA,R
+U+121FB,R
+U+121FC,R
+U+121FD,R
+U+121FE,R
+U+121FF,R
+U+12200,R
+U+12201,R
+U+12202,R
+U+12203,R
+U+12204,R
+U+12205,R
+U+12206,R
+U+12207,R
+U+12208,R
+U+12209,R
+U+1220A,R
+U+1220B,R
+U+1220C,R
+U+1220D,R
+U+1220E,R
+U+1220F,R
+U+12210,R
+U+12211,R
+U+12212,R
+U+12213,R
+U+12214,R
+U+12215,R
+U+12216,R
+U+12217,R
+U+12218,R
+U+12219,R
+U+1221A,R
+U+1221B,R
+U+1221C,R
+U+1221D,R
+U+1221E,R
+U+1221F,R
+U+12220,R
+U+12221,R
+U+12222,R
+U+12223,R
+U+12224,R
+U+12225,R
+U+12226,R
+U+12227,R
+U+12228,R
+U+12229,R
+U+1222A,R
+U+1222B,R
+U+1222C,R
+U+1222D,R
+U+1222E,R
+U+1222F,R
+U+12230,R
+U+12231,R
+U+12232,R
+U+12233,R
+U+12234,R
+U+12235,R
+U+12236,R
+U+12237,R
+U+12238,R
+U+12239,R
+U+1223A,R
+U+1223B,R
+U+1223C,R
+U+1223D,R
+U+1223E,R
+U+1223F,R
+U+12240,R
+U+12241,R
+U+12242,R
+U+12243,R
+U+12244,R
+U+12245,R
+U+12246,R
+U+12247,R
+U+12248,R
+U+12249,R
+U+1224A,R
+U+1224B,R
+U+1224C,R
+U+1224D,R
+U+1224E,R
+U+1224F,R
+U+12250,R
+U+12251,R
+U+12252,R
+U+12253,R
+U+12254,R
+U+12255,R
+U+12256,R
+U+12257,R
+U+12258,R
+U+12259,R
+U+1225A,R
+U+1225B,R
+U+1225C,R
+U+1225D,R
+U+1225E,R
+U+1225F,R
+U+12260,R
+U+12261,R
+U+12262,R
+U+12263,R
+U+12264,R
+U+12265,R
+U+12266,R
+U+12267,R
+U+12268,R
+U+12269,R
+U+1226A,R
+U+1226B,R
+U+1226C,R
+U+1226D,R
+U+1226E,R
+U+1226F,R
+U+12270,R
+U+12271,R
+U+12272,R
+U+12273,R
+U+12274,R
+U+12275,R
+U+12276,R
+U+12277,R
+U+12278,R
+U+12279,R
+U+1227A,R
+U+1227B,R
+U+1227C,R
+U+1227D,R
+U+1227E,R
+U+1227F,R
+U+12280,R
+U+12281,R
+U+12282,R
+U+12283,R
+U+12284,R
+U+12285,R
+U+12286,R
+U+12287,R
+U+12288,R
+U+12289,R
+U+1228A,R
+U+1228B,R
+U+1228C,R
+U+1228D,R
+U+1228E,R
+U+1228F,R
+U+12290,R
+U+12291,R
+U+12292,R
+U+12293,R
+U+12294,R
+U+12295,R
+U+12296,R
+U+12297,R
+U+12298,R
+U+12299,R
+U+1229A,R
+U+1229B,R
+U+1229C,R
+U+1229D,R
+U+1229E,R
+U+1229F,R
+U+122A0,R
+U+122A1,R
+U+122A2,R
+U+122A3,R
+U+122A4,R
+U+122A5,R
+U+122A6,R
+U+122A7,R
+U+122A8,R
+U+122A9,R
+U+122AA,R
+U+122AB,R
+U+122AC,R
+U+122AD,R
+U+122AE,R
+U+122AF,R
+U+122B0,R
+U+122B1,R
+U+122B2,R
+U+122B3,R
+U+122B4,R
+U+122B5,R
+U+122B6,R
+U+122B7,R
+U+122B8,R
+U+122B9,R
+U+122BA,R
+U+122BB,R
+U+122BC,R
+U+122BD,R
+U+122BE,R
+U+122BF,R
+U+122C0,R
+U+122C1,R
+U+122C2,R
+U+122C3,R
+U+122C4,R
+U+122C5,R
+U+122C6,R
+U+122C7,R
+U+122C8,R
+U+122C9,R
+U+122CA,R
+U+122CB,R
+U+122CC,R
+U+122CD,R
+U+122CE,R
+U+122CF,R
+U+122D0,R
+U+122D1,R
+U+122D2,R
+U+122D3,R
+U+122D4,R
+U+122D5,R
+U+122D6,R
+U+122D7,R
+U+122D8,R
+U+122D9,R
+U+122DA,R
+U+122DB,R
+U+122DC,R
+U+122DD,R
+U+122DE,R
+U+122DF,R
+U+122E0,R
+U+122E1,R
+U+122E2,R
+U+122E3,R
+U+122E4,R
+U+122E5,R
+U+122E6,R
+U+122E7,R
+U+122E8,R
+U+122E9,R
+U+122EA,R
+U+122EB,R
+U+122EC,R
+U+122ED,R
+U+122EE,R
+U+122EF,R
+U+122F0,R
+U+122F1,R
+U+122F2,R
+U+122F3,R
+U+122F4,R
+U+122F5,R
+U+122F6,R
+U+122F7,R
+U+122F8,R
+U+122F9,R
+U+122FA,R
+U+122FB,R
+U+122FC,R
+U+122FD,R
+U+122FE,R
+U+122FF,R
+U+12300,R
+U+12301,R
+U+12302,R
+U+12303,R
+U+12304,R
+U+12305,R
+U+12306,R
+U+12307,R
+U+12308,R
+U+12309,R
+U+1230A,R
+U+1230B,R
+U+1230C,R
+U+1230D,R
+U+1230E,R
+U+1230F,R
+U+12310,R
+U+12311,R
+U+12312,R
+U+12313,R
+U+12314,R
+U+12315,R
+U+12316,R
+U+12317,R
+U+12318,R
+U+12319,R
+U+1231A,R
+U+1231B,R
+U+1231C,R
+U+1231D,R
+U+1231E,R
+U+1231F,R
+U+12320,R
+U+12321,R
+U+12322,R
+U+12323,R
+U+12324,R
+U+12325,R
+U+12326,R
+U+12327,R
+U+12328,R
+U+12329,R
+U+1232A,R
+U+1232B,R
+U+1232C,R
+U+1232D,R
+U+1232E,R
+U+1232F,R
+U+12330,R
+U+12331,R
+U+12332,R
+U+12333,R
+U+12334,R
+U+12335,R
+U+12336,R
+U+12337,R
+U+12338,R
+U+12339,R
+U+1233A,R
+U+1233B,R
+U+1233C,R
+U+1233D,R
+U+1233E,R
+U+1233F,R
+U+12340,R
+U+12341,R
+U+12342,R
+U+12343,R
+U+12344,R
+U+12345,R
+U+12346,R
+U+12347,R
+U+12348,R
+U+12349,R
+U+1234A,R
+U+1234B,R
+U+1234C,R
+U+1234D,R
+U+1234E,R
+U+1234F,R
+U+12350,R
+U+12351,R
+U+12352,R
+U+12353,R
+U+12354,R
+U+12355,R
+U+12356,R
+U+12357,R
+U+12358,R
+U+12359,R
+U+1235A,R
+U+1235B,R
+U+1235C,R
+U+1235D,R
+U+1235E,R
+U+1235F,R
+U+12360,R
+U+12361,R
+U+12362,R
+U+12363,R
+U+12364,R
+U+12365,R
+U+12366,R
+U+12367,R
+U+12368,R
+U+12369,R
+U+1236A,R
+U+1236B,R
+U+1236C,R
+U+1236D,R
+U+1236E,R
+U+12400,R
+U+12401,R
+U+12402,R
+U+12403,R
+U+12404,R
+U+12405,R
+U+12406,R
+U+12407,R
+U+12408,R
+U+12409,R
+U+1240A,R
+U+1240B,R
+U+1240C,R
+U+1240D,R
+U+1240E,R
+U+1240F,R
+U+12410,R
+U+12411,R
+U+12412,R
+U+12413,R
+U+12414,R
+U+12415,R
+U+12416,R
+U+12417,R
+U+12418,R
+U+12419,R
+U+1241A,R
+U+1241B,R
+U+1241C,R
+U+1241D,R
+U+1241E,R
+U+1241F,R
+U+12420,R
+U+12421,R
+U+12422,R
+U+12423,R
+U+12424,R
+U+12425,R
+U+12426,R
+U+12427,R
+U+12428,R
+U+12429,R
+U+1242A,R
+U+1242B,R
+U+1242C,R
+U+1242D,R
+U+1242E,R
+U+1242F,R
+U+12430,R
+U+12431,R
+U+12432,R
+U+12433,R
+U+12434,R
+U+12435,R
+U+12436,R
+U+12437,R
+U+12438,R
+U+12439,R
+U+1243A,R
+U+1243B,R
+U+1243C,R
+U+1243D,R
+U+1243E,R
+U+1243F,R
+U+12440,R
+U+12441,R
+U+12442,R
+U+12443,R
+U+12444,R
+U+12445,R
+U+12446,R
+U+12447,R
+U+12448,R
+U+12449,R
+U+1244A,R
+U+1244B,R
+U+1244C,R
+U+1244D,R
+U+1244E,R
+U+1244F,R
+U+12450,R
+U+12451,R
+U+12452,R
+U+12453,R
+U+12454,R
+U+12455,R
+U+12456,R
+U+12457,R
+U+12458,R
+U+12459,R
+U+1245A,R
+U+1245B,R
+U+1245C,R
+U+1245D,R
+U+1245E,R
+U+1245F,R
+U+12460,R
+U+12461,R
+U+12462,R
+U+12470,R
+U+12471,R
+U+12472,R
+U+12473,R
+U+13000,U
+U+13001,U
+U+13002,U
+U+13003,U
+U+13004,U
+U+13005,U
+U+13006,U
+U+13007,U
+U+13008,U
+U+13009,U
+U+1300A,U
+U+1300B,U
+U+1300C,U
+U+1300D,U
+U+1300E,U
+U+1300F,U
+U+13010,U
+U+13011,U
+U+13012,U
+U+13013,U
+U+13014,U
+U+13015,U
+U+13016,U
+U+13017,U
+U+13018,U
+U+13019,U
+U+1301A,U
+U+1301B,U
+U+1301C,U
+U+1301D,U
+U+1301E,U
+U+1301F,U
+U+13020,U
+U+13021,U
+U+13022,U
+U+13023,U
+U+13024,U
+U+13025,U
+U+13026,U
+U+13027,U
+U+13028,U
+U+13029,U
+U+1302A,U
+U+1302B,U
+U+1302C,U
+U+1302D,U
+U+1302E,U
+U+1302F,U
+U+13030,U
+U+13031,U
+U+13032,U
+U+13033,U
+U+13034,U
+U+13035,U
+U+13036,U
+U+13037,U
+U+13038,U
+U+13039,U
+U+1303A,U
+U+1303B,U
+U+1303C,U
+U+1303D,U
+U+1303E,U
+U+1303F,U
+U+13040,U
+U+13041,U
+U+13042,U
+U+13043,U
+U+13044,U
+U+13045,U
+U+13046,U
+U+13047,U
+U+13048,U
+U+13049,U
+U+1304A,U
+U+1304B,U
+U+1304C,U
+U+1304D,U
+U+1304E,U
+U+1304F,U
+U+13050,U
+U+13051,U
+U+13052,U
+U+13053,U
+U+13054,U
+U+13055,U
+U+13056,U
+U+13057,U
+U+13058,U
+U+13059,U
+U+1305A,U
+U+1305B,U
+U+1305C,U
+U+1305D,U
+U+1305E,U
+U+1305F,U
+U+13060,U
+U+13061,U
+U+13062,U
+U+13063,U
+U+13064,U
+U+13065,U
+U+13066,U
+U+13067,U
+U+13068,U
+U+13069,U
+U+1306A,U
+U+1306B,U
+U+1306C,U
+U+1306D,U
+U+1306E,U
+U+1306F,U
+U+13070,U
+U+13071,U
+U+13072,U
+U+13073,U
+U+13074,U
+U+13075,U
+U+13076,U
+U+13077,U
+U+13078,U
+U+13079,U
+U+1307A,U
+U+1307B,U
+U+1307C,U
+U+1307D,U
+U+1307E,U
+U+1307F,U
+U+13080,U
+U+13081,U
+U+13082,U
+U+13083,U
+U+13084,U
+U+13085,U
+U+13086,U
+U+13087,U
+U+13088,U
+U+13089,U
+U+1308A,U
+U+1308B,U
+U+1308C,U
+U+1308D,U
+U+1308E,U
+U+1308F,U
+U+13090,U
+U+13091,U
+U+13092,U
+U+13093,U
+U+13094,U
+U+13095,U
+U+13096,U
+U+13097,U
+U+13098,U
+U+13099,U
+U+1309A,U
+U+1309B,U
+U+1309C,U
+U+1309D,U
+U+1309E,U
+U+1309F,U
+U+130A0,U
+U+130A1,U
+U+130A2,U
+U+130A3,U
+U+130A4,U
+U+130A5,U
+U+130A6,U
+U+130A7,U
+U+130A8,U
+U+130A9,U
+U+130AA,U
+U+130AB,U
+U+130AC,U
+U+130AD,U
+U+130AE,U
+U+130AF,U
+U+130B0,U
+U+130B1,U
+U+130B2,U
+U+130B3,U
+U+130B4,U
+U+130B5,U
+U+130B6,U
+U+130B7,U
+U+130B8,U
+U+130B9,U
+U+130BA,U
+U+130BB,U
+U+130BC,U
+U+130BD,U
+U+130BE,U
+U+130BF,U
+U+130C0,U
+U+130C1,U
+U+130C2,U
+U+130C3,U
+U+130C4,U
+U+130C5,U
+U+130C6,U
+U+130C7,U
+U+130C8,U
+U+130C9,U
+U+130CA,U
+U+130CB,U
+U+130CC,U
+U+130CD,U
+U+130CE,U
+U+130CF,U
+U+130D0,U
+U+130D1,U
+U+130D2,U
+U+130D3,U
+U+130D4,U
+U+130D5,U
+U+130D6,U
+U+130D7,U
+U+130D8,U
+U+130D9,U
+U+130DA,U
+U+130DB,U
+U+130DC,U
+U+130DD,U
+U+130DE,U
+U+130DF,U
+U+130E0,U
+U+130E1,U
+U+130E2,U
+U+130E3,U
+U+130E4,U
+U+130E5,U
+U+130E6,U
+U+130E7,U
+U+130E8,U
+U+130E9,U
+U+130EA,U
+U+130EB,U
+U+130EC,U
+U+130ED,U
+U+130EE,U
+U+130EF,U
+U+130F0,U
+U+130F1,U
+U+130F2,U
+U+130F3,U
+U+130F4,U
+U+130F5,U
+U+130F6,U
+U+130F7,U
+U+130F8,U
+U+130F9,U
+U+130FA,U
+U+130FB,U
+U+130FC,U
+U+130FD,U
+U+130FE,U
+U+130FF,U
+U+13100,U
+U+13101,U
+U+13102,U
+U+13103,U
+U+13104,U
+U+13105,U
+U+13106,U
+U+13107,U
+U+13108,U
+U+13109,U
+U+1310A,U
+U+1310B,U
+U+1310C,U
+U+1310D,U
+U+1310E,U
+U+1310F,U
+U+13110,U
+U+13111,U
+U+13112,U
+U+13113,U
+U+13114,U
+U+13115,U
+U+13116,U
+U+13117,U
+U+13118,U
+U+13119,U
+U+1311A,U
+U+1311B,U
+U+1311C,U
+U+1311D,U
+U+1311E,U
+U+1311F,U
+U+13120,U
+U+13121,U
+U+13122,U
+U+13123,U
+U+13124,U
+U+13125,U
+U+13126,U
+U+13127,U
+U+13128,U
+U+13129,U
+U+1312A,U
+U+1312B,U
+U+1312C,U
+U+1312D,U
+U+1312E,U
+U+1312F,U
+U+13130,U
+U+13131,U
+U+13132,U
+U+13133,U
+U+13134,U
+U+13135,U
+U+13136,U
+U+13137,U
+U+13138,U
+U+13139,U
+U+1313A,U
+U+1313B,U
+U+1313C,U
+U+1313D,U
+U+1313E,U
+U+1313F,U
+U+13140,U
+U+13141,U
+U+13142,U
+U+13143,U
+U+13144,U
+U+13145,U
+U+13146,U
+U+13147,U
+U+13148,U
+U+13149,U
+U+1314A,U
+U+1314B,U
+U+1314C,U
+U+1314D,U
+U+1314E,U
+U+1314F,U
+U+13150,U
+U+13151,U
+U+13152,U
+U+13153,U
+U+13154,U
+U+13155,U
+U+13156,U
+U+13157,U
+U+13158,U
+U+13159,U
+U+1315A,U
+U+1315B,U
+U+1315C,U
+U+1315D,U
+U+1315E,U
+U+1315F,U
+U+13160,U
+U+13161,U
+U+13162,U
+U+13163,U
+U+13164,U
+U+13165,U
+U+13166,U
+U+13167,U
+U+13168,U
+U+13169,U
+U+1316A,U
+U+1316B,U
+U+1316C,U
+U+1316D,U
+U+1316E,U
+U+1316F,U
+U+13170,U
+U+13171,U
+U+13172,U
+U+13173,U
+U+13174,U
+U+13175,U
+U+13176,U
+U+13177,U
+U+13178,U
+U+13179,U
+U+1317A,U
+U+1317B,U
+U+1317C,U
+U+1317D,U
+U+1317E,U
+U+1317F,U
+U+13180,U
+U+13181,U
+U+13182,U
+U+13183,U
+U+13184,U
+U+13185,U
+U+13186,U
+U+13187,U
+U+13188,U
+U+13189,U
+U+1318A,U
+U+1318B,U
+U+1318C,U
+U+1318D,U
+U+1318E,U
+U+1318F,U
+U+13190,U
+U+13191,U
+U+13192,U
+U+13193,U
+U+13194,U
+U+13195,U
+U+13196,U
+U+13197,U
+U+13198,U
+U+13199,U
+U+1319A,U
+U+1319B,U
+U+1319C,U
+U+1319D,U
+U+1319E,U
+U+1319F,U
+U+131A0,U
+U+131A1,U
+U+131A2,U
+U+131A3,U
+U+131A4,U
+U+131A5,U
+U+131A6,U
+U+131A7,U
+U+131A8,U
+U+131A9,U
+U+131AA,U
+U+131AB,U
+U+131AC,U
+U+131AD,U
+U+131AE,U
+U+131AF,U
+U+131B0,U
+U+131B1,U
+U+131B2,U
+U+131B3,U
+U+131B4,U
+U+131B5,U
+U+131B6,U
+U+131B7,U
+U+131B8,U
+U+131B9,U
+U+131BA,U
+U+131BB,U
+U+131BC,U
+U+131BD,U
+U+131BE,U
+U+131BF,U
+U+131C0,U
+U+131C1,U
+U+131C2,U
+U+131C3,U
+U+131C4,U
+U+131C5,U
+U+131C6,U
+U+131C7,U
+U+131C8,U
+U+131C9,U
+U+131CA,U
+U+131CB,U
+U+131CC,U
+U+131CD,U
+U+131CE,U
+U+131CF,U
+U+131D0,U
+U+131D1,U
+U+131D2,U
+U+131D3,U
+U+131D4,U
+U+131D5,U
+U+131D6,U
+U+131D7,U
+U+131D8,U
+U+131D9,U
+U+131DA,U
+U+131DB,U
+U+131DC,U
+U+131DD,U
+U+131DE,U
+U+131DF,U
+U+131E0,U
+U+131E1,U
+U+131E2,U
+U+131E3,U
+U+131E4,U
+U+131E5,U
+U+131E6,U
+U+131E7,U
+U+131E8,U
+U+131E9,U
+U+131EA,U
+U+131EB,U
+U+131EC,U
+U+131ED,U
+U+131EE,U
+U+131EF,U
+U+131F0,U
+U+131F1,U
+U+131F2,U
+U+131F3,U
+U+131F4,U
+U+131F5,U
+U+131F6,U
+U+131F7,U
+U+131F8,U
+U+131F9,U
+U+131FA,U
+U+131FB,U
+U+131FC,U
+U+131FD,U
+U+131FE,U
+U+131FF,U
+U+13200,U
+U+13201,U
+U+13202,U
+U+13203,U
+U+13204,U
+U+13205,U
+U+13206,U
+U+13207,U
+U+13208,U
+U+13209,U
+U+1320A,U
+U+1320B,U
+U+1320C,U
+U+1320D,U
+U+1320E,U
+U+1320F,U
+U+13210,U
+U+13211,U
+U+13212,U
+U+13213,U
+U+13214,U
+U+13215,U
+U+13216,U
+U+13217,U
+U+13218,U
+U+13219,U
+U+1321A,U
+U+1321B,U
+U+1321C,U
+U+1321D,U
+U+1321E,U
+U+1321F,U
+U+13220,U
+U+13221,U
+U+13222,U
+U+13223,U
+U+13224,U
+U+13225,U
+U+13226,U
+U+13227,U
+U+13228,U
+U+13229,U
+U+1322A,U
+U+1322B,U
+U+1322C,U
+U+1322D,U
+U+1322E,U
+U+1322F,U
+U+13230,U
+U+13231,U
+U+13232,U
+U+13233,U
+U+13234,U
+U+13235,U
+U+13236,U
+U+13237,U
+U+13238,U
+U+13239,U
+U+1323A,U
+U+1323B,U
+U+1323C,U
+U+1323D,U
+U+1323E,U
+U+1323F,U
+U+13240,U
+U+13241,U
+U+13242,U
+U+13243,U
+U+13244,U
+U+13245,U
+U+13246,U
+U+13247,U
+U+13248,U
+U+13249,U
+U+1324A,U
+U+1324B,U
+U+1324C,U
+U+1324D,U
+U+1324E,U
+U+1324F,U
+U+13250,U
+U+13251,U
+U+13252,U
+U+13253,U
+U+13254,U
+U+13255,U
+U+13256,U
+U+13257,U
+U+13258,U
+U+13259,U
+U+1325A,U
+U+1325B,U
+U+1325C,U
+U+1325D,U
+U+1325E,U
+U+1325F,U
+U+13260,U
+U+13261,U
+U+13262,U
+U+13263,U
+U+13264,U
+U+13265,U
+U+13266,U
+U+13267,U
+U+13268,U
+U+13269,U
+U+1326A,U
+U+1326B,U
+U+1326C,U
+U+1326D,U
+U+1326E,U
+U+1326F,U
+U+13270,U
+U+13271,U
+U+13272,U
+U+13273,U
+U+13274,U
+U+13275,U
+U+13276,U
+U+13277,U
+U+13278,U
+U+13279,U
+U+1327A,U
+U+1327B,U
+U+1327C,U
+U+1327D,U
+U+1327E,U
+U+1327F,U
+U+13280,U
+U+13281,U
+U+13282,U
+U+13283,U
+U+13284,U
+U+13285,U
+U+13286,U
+U+13287,U
+U+13288,U
+U+13289,U
+U+1328A,U
+U+1328B,U
+U+1328C,U
+U+1328D,U
+U+1328E,U
+U+1328F,U
+U+13290,U
+U+13291,U
+U+13292,U
+U+13293,U
+U+13294,U
+U+13295,U
+U+13296,U
+U+13297,U
+U+13298,U
+U+13299,U
+U+1329A,U
+U+1329B,U
+U+1329C,U
+U+1329D,U
+U+1329E,U
+U+1329F,U
+U+132A0,U
+U+132A1,U
+U+132A2,U
+U+132A3,U
+U+132A4,U
+U+132A5,U
+U+132A6,U
+U+132A7,U
+U+132A8,U
+U+132A9,U
+U+132AA,U
+U+132AB,U
+U+132AC,U
+U+132AD,U
+U+132AE,U
+U+132AF,U
+U+132B0,U
+U+132B1,U
+U+132B2,U
+U+132B3,U
+U+132B4,U
+U+132B5,U
+U+132B6,U
+U+132B7,U
+U+132B8,U
+U+132B9,U
+U+132BA,U
+U+132BB,U
+U+132BC,U
+U+132BD,U
+U+132BE,U
+U+132BF,U
+U+132C0,U
+U+132C1,U
+U+132C2,U
+U+132C3,U
+U+132C4,U
+U+132C5,U
+U+132C6,U
+U+132C7,U
+U+132C8,U
+U+132C9,U
+U+132CA,U
+U+132CB,U
+U+132CC,U
+U+132CD,U
+U+132CE,U
+U+132CF,U
+U+132D0,U
+U+132D1,U
+U+132D2,U
+U+132D3,U
+U+132D4,U
+U+132D5,U
+U+132D6,U
+U+132D7,U
+U+132D8,U
+U+132D9,U
+U+132DA,U
+U+132DB,U
+U+132DC,U
+U+132DD,U
+U+132DE,U
+U+132DF,U
+U+132E0,U
+U+132E1,U
+U+132E2,U
+U+132E3,U
+U+132E4,U
+U+132E5,U
+U+132E6,U
+U+132E7,U
+U+132E8,U
+U+132E9,U
+U+132EA,U
+U+132EB,U
+U+132EC,U
+U+132ED,U
+U+132EE,U
+U+132EF,U
+U+132F0,U
+U+132F1,U
+U+132F2,U
+U+132F3,U
+U+132F4,U
+U+132F5,U
+U+132F6,U
+U+132F7,U
+U+132F8,U
+U+132F9,U
+U+132FA,U
+U+132FB,U
+U+132FC,U
+U+132FD,U
+U+132FE,U
+U+132FF,U
+U+13300,U
+U+13301,U
+U+13302,U
+U+13303,U
+U+13304,U
+U+13305,U
+U+13306,U
+U+13307,U
+U+13308,U
+U+13309,U
+U+1330A,U
+U+1330B,U
+U+1330C,U
+U+1330D,U
+U+1330E,U
+U+1330F,U
+U+13310,U
+U+13311,U
+U+13312,U
+U+13313,U
+U+13314,U
+U+13315,U
+U+13316,U
+U+13317,U
+U+13318,U
+U+13319,U
+U+1331A,U
+U+1331B,U
+U+1331C,U
+U+1331D,U
+U+1331E,U
+U+1331F,U
+U+13320,U
+U+13321,U
+U+13322,U
+U+13323,U
+U+13324,U
+U+13325,U
+U+13326,U
+U+13327,U
+U+13328,U
+U+13329,U
+U+1332A,U
+U+1332B,U
+U+1332C,U
+U+1332D,U
+U+1332E,U
+U+1332F,U
+U+13330,U
+U+13331,U
+U+13332,U
+U+13333,U
+U+13334,U
+U+13335,U
+U+13336,U
+U+13337,U
+U+13338,U
+U+13339,U
+U+1333A,U
+U+1333B,U
+U+1333C,U
+U+1333D,U
+U+1333E,U
+U+1333F,U
+U+13340,U
+U+13341,U
+U+13342,U
+U+13343,U
+U+13344,U
+U+13345,U
+U+13346,U
+U+13347,U
+U+13348,U
+U+13349,U
+U+1334A,U
+U+1334B,U
+U+1334C,U
+U+1334D,U
+U+1334E,U
+U+1334F,U
+U+13350,U
+U+13351,U
+U+13352,U
+U+13353,U
+U+13354,U
+U+13355,U
+U+13356,U
+U+13357,U
+U+13358,U
+U+13359,U
+U+1335A,U
+U+1335B,U
+U+1335C,U
+U+1335D,U
+U+1335E,U
+U+1335F,U
+U+13360,U
+U+13361,U
+U+13362,U
+U+13363,U
+U+13364,U
+U+13365,U
+U+13366,U
+U+13367,U
+U+13368,U
+U+13369,U
+U+1336A,U
+U+1336B,U
+U+1336C,U
+U+1336D,U
+U+1336E,U
+U+1336F,U
+U+13370,U
+U+13371,U
+U+13372,U
+U+13373,U
+U+13374,U
+U+13375,U
+U+13376,U
+U+13377,U
+U+13378,U
+U+13379,U
+U+1337A,U
+U+1337B,U
+U+1337C,U
+U+1337D,U
+U+1337E,U
+U+1337F,U
+U+13380,U
+U+13381,U
+U+13382,U
+U+13383,U
+U+13384,U
+U+13385,U
+U+13386,U
+U+13387,U
+U+13388,U
+U+13389,U
+U+1338A,U
+U+1338B,U
+U+1338C,U
+U+1338D,U
+U+1338E,U
+U+1338F,U
+U+13390,U
+U+13391,U
+U+13392,U
+U+13393,U
+U+13394,U
+U+13395,U
+U+13396,U
+U+13397,U
+U+13398,U
+U+13399,U
+U+1339A,U
+U+1339B,U
+U+1339C,U
+U+1339D,U
+U+1339E,U
+U+1339F,U
+U+133A0,U
+U+133A1,U
+U+133A2,U
+U+133A3,U
+U+133A4,U
+U+133A5,U
+U+133A6,U
+U+133A7,U
+U+133A8,U
+U+133A9,U
+U+133AA,U
+U+133AB,U
+U+133AC,U
+U+133AD,U
+U+133AE,U
+U+133AF,U
+U+133B0,U
+U+133B1,U
+U+133B2,U
+U+133B3,U
+U+133B4,U
+U+133B5,U
+U+133B6,U
+U+133B7,U
+U+133B8,U
+U+133B9,U
+U+133BA,U
+U+133BB,U
+U+133BC,U
+U+133BD,U
+U+133BE,U
+U+133BF,U
+U+133C0,U
+U+133C1,U
+U+133C2,U
+U+133C3,U
+U+133C4,U
+U+133C5,U
+U+133C6,U
+U+133C7,U
+U+133C8,U
+U+133C9,U
+U+133CA,U
+U+133CB,U
+U+133CC,U
+U+133CD,U
+U+133CE,U
+U+133CF,U
+U+133D0,U
+U+133D1,U
+U+133D2,U
+U+133D3,U
+U+133D4,U
+U+133D5,U
+U+133D6,U
+U+133D7,U
+U+133D8,U
+U+133D9,U
+U+133DA,U
+U+133DB,U
+U+133DC,U
+U+133DD,U
+U+133DE,U
+U+133DF,U
+U+133E0,U
+U+133E1,U
+U+133E2,U
+U+133E3,U
+U+133E4,U
+U+133E5,U
+U+133E6,U
+U+133E7,U
+U+133E8,U
+U+133E9,U
+U+133EA,U
+U+133EB,U
+U+133EC,U
+U+133ED,U
+U+133EE,U
+U+133EF,U
+U+133F0,U
+U+133F1,U
+U+133F2,U
+U+133F3,U
+U+133F4,U
+U+133F5,U
+U+133F6,U
+U+133F7,U
+U+133F8,U
+U+133F9,U
+U+133FA,U
+U+133FB,U
+U+133FC,U
+U+133FD,U
+U+133FE,U
+U+133FF,U
+U+13400,U
+U+13401,U
+U+13402,U
+U+13403,U
+U+13404,U
+U+13405,U
+U+13406,U
+U+13407,U
+U+13408,U
+U+13409,U
+U+1340A,U
+U+1340B,U
+U+1340C,U
+U+1340D,U
+U+1340E,U
+U+1340F,U
+U+13410,U
+U+13411,U
+U+13412,U
+U+13413,U
+U+13414,U
+U+13415,U
+U+13416,U
+U+13417,U
+U+13418,U
+U+13419,U
+U+1341A,U
+U+1341B,U
+U+1341C,U
+U+1341D,U
+U+1341E,U
+U+1341F,U
+U+13420,U
+U+13421,U
+U+13422,U
+U+13423,U
+U+13424,U
+U+13425,U
+U+13426,U
+U+13427,U
+U+13428,U
+U+13429,U
+U+1342A,U
+U+1342B,U
+U+1342C,U
+U+1342D,U
+U+1342E,U
+U+16800,R
+U+16801,R
+U+16802,R
+U+16803,R
+U+16804,R
+U+16805,R
+U+16806,R
+U+16807,R
+U+16808,R
+U+16809,R
+U+1680A,R
+U+1680B,R
+U+1680C,R
+U+1680D,R
+U+1680E,R
+U+1680F,R
+U+16810,R
+U+16811,R
+U+16812,R
+U+16813,R
+U+16814,R
+U+16815,R
+U+16816,R
+U+16817,R
+U+16818,R
+U+16819,R
+U+1681A,R
+U+1681B,R
+U+1681C,R
+U+1681D,R
+U+1681E,R
+U+1681F,R
+U+16820,R
+U+16821,R
+U+16822,R
+U+16823,R
+U+16824,R
+U+16825,R
+U+16826,R
+U+16827,R
+U+16828,R
+U+16829,R
+U+1682A,R
+U+1682B,R
+U+1682C,R
+U+1682D,R
+U+1682E,R
+U+1682F,R
+U+16830,R
+U+16831,R
+U+16832,R
+U+16833,R
+U+16834,R
+U+16835,R
+U+16836,R
+U+16837,R
+U+16838,R
+U+16839,R
+U+1683A,R
+U+1683B,R
+U+1683C,R
+U+1683D,R
+U+1683E,R
+U+1683F,R
+U+16840,R
+U+16841,R
+U+16842,R
+U+16843,R
+U+16844,R
+U+16845,R
+U+16846,R
+U+16847,R
+U+16848,R
+U+16849,R
+U+1684A,R
+U+1684B,R
+U+1684C,R
+U+1684D,R
+U+1684E,R
+U+1684F,R
+U+16850,R
+U+16851,R
+U+16852,R
+U+16853,R
+U+16854,R
+U+16855,R
+U+16856,R
+U+16857,R
+U+16858,R
+U+16859,R
+U+1685A,R
+U+1685B,R
+U+1685C,R
+U+1685D,R
+U+1685E,R
+U+1685F,R
+U+16860,R
+U+16861,R
+U+16862,R
+U+16863,R
+U+16864,R
+U+16865,R
+U+16866,R
+U+16867,R
+U+16868,R
+U+16869,R
+U+1686A,R
+U+1686B,R
+U+1686C,R
+U+1686D,R
+U+1686E,R
+U+1686F,R
+U+16870,R
+U+16871,R
+U+16872,R
+U+16873,R
+U+16874,R
+U+16875,R
+U+16876,R
+U+16877,R
+U+16878,R
+U+16879,R
+U+1687A,R
+U+1687B,R
+U+1687C,R
+U+1687D,R
+U+1687E,R
+U+1687F,R
+U+16880,R
+U+16881,R
+U+16882,R
+U+16883,R
+U+16884,R
+U+16885,R
+U+16886,R
+U+16887,R
+U+16888,R
+U+16889,R
+U+1688A,R
+U+1688B,R
+U+1688C,R
+U+1688D,R
+U+1688E,R
+U+1688F,R
+U+16890,R
+U+16891,R
+U+16892,R
+U+16893,R
+U+16894,R
+U+16895,R
+U+16896,R
+U+16897,R
+U+16898,R
+U+16899,R
+U+1689A,R
+U+1689B,R
+U+1689C,R
+U+1689D,R
+U+1689E,R
+U+1689F,R
+U+168A0,R
+U+168A1,R
+U+168A2,R
+U+168A3,R
+U+168A4,R
+U+168A5,R
+U+168A6,R
+U+168A7,R
+U+168A8,R
+U+168A9,R
+U+168AA,R
+U+168AB,R
+U+168AC,R
+U+168AD,R
+U+168AE,R
+U+168AF,R
+U+168B0,R
+U+168B1,R
+U+168B2,R
+U+168B3,R
+U+168B4,R
+U+168B5,R
+U+168B6,R
+U+168B7,R
+U+168B8,R
+U+168B9,R
+U+168BA,R
+U+168BB,R
+U+168BC,R
+U+168BD,R
+U+168BE,R
+U+168BF,R
+U+168C0,R
+U+168C1,R
+U+168C2,R
+U+168C3,R
+U+168C4,R
+U+168C5,R
+U+168C6,R
+U+168C7,R
+U+168C8,R
+U+168C9,R
+U+168CA,R
+U+168CB,R
+U+168CC,R
+U+168CD,R
+U+168CE,R
+U+168CF,R
+U+168D0,R
+U+168D1,R
+U+168D2,R
+U+168D3,R
+U+168D4,R
+U+168D5,R
+U+168D6,R
+U+168D7,R
+U+168D8,R
+U+168D9,R
+U+168DA,R
+U+168DB,R
+U+168DC,R
+U+168DD,R
+U+168DE,R
+U+168DF,R
+U+168E0,R
+U+168E1,R
+U+168E2,R
+U+168E3,R
+U+168E4,R
+U+168E5,R
+U+168E6,R
+U+168E7,R
+U+168E8,R
+U+168E9,R
+U+168EA,R
+U+168EB,R
+U+168EC,R
+U+168ED,R
+U+168EE,R
+U+168EF,R
+U+168F0,R
+U+168F1,R
+U+168F2,R
+U+168F3,R
+U+168F4,R
+U+168F5,R
+U+168F6,R
+U+168F7,R
+U+168F8,R
+U+168F9,R
+U+168FA,R
+U+168FB,R
+U+168FC,R
+U+168FD,R
+U+168FE,R
+U+168FF,R
+U+16900,R
+U+16901,R
+U+16902,R
+U+16903,R
+U+16904,R
+U+16905,R
+U+16906,R
+U+16907,R
+U+16908,R
+U+16909,R
+U+1690A,R
+U+1690B,R
+U+1690C,R
+U+1690D,R
+U+1690E,R
+U+1690F,R
+U+16910,R
+U+16911,R
+U+16912,R
+U+16913,R
+U+16914,R
+U+16915,R
+U+16916,R
+U+16917,R
+U+16918,R
+U+16919,R
+U+1691A,R
+U+1691B,R
+U+1691C,R
+U+1691D,R
+U+1691E,R
+U+1691F,R
+U+16920,R
+U+16921,R
+U+16922,R
+U+16923,R
+U+16924,R
+U+16925,R
+U+16926,R
+U+16927,R
+U+16928,R
+U+16929,R
+U+1692A,R
+U+1692B,R
+U+1692C,R
+U+1692D,R
+U+1692E,R
+U+1692F,R
+U+16930,R
+U+16931,R
+U+16932,R
+U+16933,R
+U+16934,R
+U+16935,R
+U+16936,R
+U+16937,R
+U+16938,R
+U+16939,R
+U+1693A,R
+U+1693B,R
+U+1693C,R
+U+1693D,R
+U+1693E,R
+U+1693F,R
+U+16940,R
+U+16941,R
+U+16942,R
+U+16943,R
+U+16944,R
+U+16945,R
+U+16946,R
+U+16947,R
+U+16948,R
+U+16949,R
+U+1694A,R
+U+1694B,R
+U+1694C,R
+U+1694D,R
+U+1694E,R
+U+1694F,R
+U+16950,R
+U+16951,R
+U+16952,R
+U+16953,R
+U+16954,R
+U+16955,R
+U+16956,R
+U+16957,R
+U+16958,R
+U+16959,R
+U+1695A,R
+U+1695B,R
+U+1695C,R
+U+1695D,R
+U+1695E,R
+U+1695F,R
+U+16960,R
+U+16961,R
+U+16962,R
+U+16963,R
+U+16964,R
+U+16965,R
+U+16966,R
+U+16967,R
+U+16968,R
+U+16969,R
+U+1696A,R
+U+1696B,R
+U+1696C,R
+U+1696D,R
+U+1696E,R
+U+1696F,R
+U+16970,R
+U+16971,R
+U+16972,R
+U+16973,R
+U+16974,R
+U+16975,R
+U+16976,R
+U+16977,R
+U+16978,R
+U+16979,R
+U+1697A,R
+U+1697B,R
+U+1697C,R
+U+1697D,R
+U+1697E,R
+U+1697F,R
+U+16980,R
+U+16981,R
+U+16982,R
+U+16983,R
+U+16984,R
+U+16985,R
+U+16986,R
+U+16987,R
+U+16988,R
+U+16989,R
+U+1698A,R
+U+1698B,R
+U+1698C,R
+U+1698D,R
+U+1698E,R
+U+1698F,R
+U+16990,R
+U+16991,R
+U+16992,R
+U+16993,R
+U+16994,R
+U+16995,R
+U+16996,R
+U+16997,R
+U+16998,R
+U+16999,R
+U+1699A,R
+U+1699B,R
+U+1699C,R
+U+1699D,R
+U+1699E,R
+U+1699F,R
+U+169A0,R
+U+169A1,R
+U+169A2,R
+U+169A3,R
+U+169A4,R
+U+169A5,R
+U+169A6,R
+U+169A7,R
+U+169A8,R
+U+169A9,R
+U+169AA,R
+U+169AB,R
+U+169AC,R
+U+169AD,R
+U+169AE,R
+U+169AF,R
+U+169B0,R
+U+169B1,R
+U+169B2,R
+U+169B3,R
+U+169B4,R
+U+169B5,R
+U+169B6,R
+U+169B7,R
+U+169B8,R
+U+169B9,R
+U+169BA,R
+U+169BB,R
+U+169BC,R
+U+169BD,R
+U+169BE,R
+U+169BF,R
+U+169C0,R
+U+169C1,R
+U+169C2,R
+U+169C3,R
+U+169C4,R
+U+169C5,R
+U+169C6,R
+U+169C7,R
+U+169C8,R
+U+169C9,R
+U+169CA,R
+U+169CB,R
+U+169CC,R
+U+169CD,R
+U+169CE,R
+U+169CF,R
+U+169D0,R
+U+169D1,R
+U+169D2,R
+U+169D3,R
+U+169D4,R
+U+169D5,R
+U+169D6,R
+U+169D7,R
+U+169D8,R
+U+169D9,R
+U+169DA,R
+U+169DB,R
+U+169DC,R
+U+169DD,R
+U+169DE,R
+U+169DF,R
+U+169E0,R
+U+169E1,R
+U+169E2,R
+U+169E3,R
+U+169E4,R
+U+169E5,R
+U+169E6,R
+U+169E7,R
+U+169E8,R
+U+169E9,R
+U+169EA,R
+U+169EB,R
+U+169EC,R
+U+169ED,R
+U+169EE,R
+U+169EF,R
+U+169F0,R
+U+169F1,R
+U+169F2,R
+U+169F3,R
+U+169F4,R
+U+169F5,R
+U+169F6,R
+U+169F7,R
+U+169F8,R
+U+169F9,R
+U+169FA,R
+U+169FB,R
+U+169FC,R
+U+169FD,R
+U+169FE,R
+U+169FF,R
+U+16A00,R
+U+16A01,R
+U+16A02,R
+U+16A03,R
+U+16A04,R
+U+16A05,R
+U+16A06,R
+U+16A07,R
+U+16A08,R
+U+16A09,R
+U+16A0A,R
+U+16A0B,R
+U+16A0C,R
+U+16A0D,R
+U+16A0E,R
+U+16A0F,R
+U+16A10,R
+U+16A11,R
+U+16A12,R
+U+16A13,R
+U+16A14,R
+U+16A15,R
+U+16A16,R
+U+16A17,R
+U+16A18,R
+U+16A19,R
+U+16A1A,R
+U+16A1B,R
+U+16A1C,R
+U+16A1D,R
+U+16A1E,R
+U+16A1F,R
+U+16A20,R
+U+16A21,R
+U+16A22,R
+U+16A23,R
+U+16A24,R
+U+16A25,R
+U+16A26,R
+U+16A27,R
+U+16A28,R
+U+16A29,R
+U+16A2A,R
+U+16A2B,R
+U+16A2C,R
+U+16A2D,R
+U+16A2E,R
+U+16A2F,R
+U+16A30,R
+U+16A31,R
+U+16A32,R
+U+16A33,R
+U+16A34,R
+U+16A35,R
+U+16A36,R
+U+16A37,R
+U+16A38,R
+U+16F00,R
+U+16F01,R
+U+16F02,R
+U+16F03,R
+U+16F04,R
+U+16F05,R
+U+16F06,R
+U+16F07,R
+U+16F08,R
+U+16F09,R
+U+16F0A,R
+U+16F0B,R
+U+16F0C,R
+U+16F0D,R
+U+16F0E,R
+U+16F0F,R
+U+16F10,R
+U+16F11,R
+U+16F12,R
+U+16F13,R
+U+16F14,R
+U+16F15,R
+U+16F16,R
+U+16F17,R
+U+16F18,R
+U+16F19,R
+U+16F1A,R
+U+16F1B,R
+U+16F1C,R
+U+16F1D,R
+U+16F1E,R
+U+16F1F,R
+U+16F20,R
+U+16F21,R
+U+16F22,R
+U+16F23,R
+U+16F24,R
+U+16F25,R
+U+16F26,R
+U+16F27,R
+U+16F28,R
+U+16F29,R
+U+16F2A,R
+U+16F2B,R
+U+16F2C,R
+U+16F2D,R
+U+16F2E,R
+U+16F2F,R
+U+16F30,R
+U+16F31,R
+U+16F32,R
+U+16F33,R
+U+16F34,R
+U+16F35,R
+U+16F36,R
+U+16F37,R
+U+16F38,R
+U+16F39,R
+U+16F3A,R
+U+16F3B,R
+U+16F3C,R
+U+16F3D,R
+U+16F3E,R
+U+16F3F,R
+U+16F40,R
+U+16F41,R
+U+16F42,R
+U+16F43,R
+U+16F44,R
+U+16F50,R
+U+16F51,R
+U+16F52,R
+U+16F53,R
+U+16F54,R
+U+16F55,R
+U+16F56,R
+U+16F57,R
+U+16F58,R
+U+16F59,R
+U+16F5A,R
+U+16F5B,R
+U+16F5C,R
+U+16F5D,R
+U+16F5E,R
+U+16F5F,R
+U+16F60,R
+U+16F61,R
+U+16F62,R
+U+16F63,R
+U+16F64,R
+U+16F65,R
+U+16F66,R
+U+16F67,R
+U+16F68,R
+U+16F69,R
+U+16F6A,R
+U+16F6B,R
+U+16F6C,R
+U+16F6D,R
+U+16F6E,R
+U+16F6F,R
+U+16F70,R
+U+16F71,R
+U+16F72,R
+U+16F73,R
+U+16F74,R
+U+16F75,R
+U+16F76,R
+U+16F77,R
+U+16F78,R
+U+16F79,R
+U+16F7A,R
+U+16F7B,R
+U+16F7C,R
+U+16F7D,R
+U+16F7E,R
+U+16F8F,R
+U+16F90,R
+U+16F91,R
+U+16F92,R
+U+16F93,R
+U+16F94,R
+U+16F95,R
+U+16F96,R
+U+16F97,R
+U+16F98,R
+U+16F99,R
+U+16F9A,R
+U+16F9B,R
+U+16F9C,R
+U+16F9D,R
+U+16F9E,R
+U+16F9F,R
+U+1B000,U
+U+1B001,U
+U+1D000,U
+U+1D001,U
+U+1D002,U
+U+1D003,U
+U+1D004,U
+U+1D005,U
+U+1D006,U
+U+1D007,U
+U+1D008,U
+U+1D009,U
+U+1D00A,U
+U+1D00B,U
+U+1D00C,U
+U+1D00D,U
+U+1D00E,U
+U+1D00F,U
+U+1D010,U
+U+1D011,U
+U+1D012,U
+U+1D013,U
+U+1D014,U
+U+1D015,U
+U+1D016,U
+U+1D017,U
+U+1D018,U
+U+1D019,U
+U+1D01A,U
+U+1D01B,U
+U+1D01C,U
+U+1D01D,U
+U+1D01E,U
+U+1D01F,U
+U+1D020,U
+U+1D021,U
+U+1D022,U
+U+1D023,U
+U+1D024,U
+U+1D025,U
+U+1D026,U
+U+1D027,U
+U+1D028,U
+U+1D029,U
+U+1D02A,U
+U+1D02B,U
+U+1D02C,U
+U+1D02D,U
+U+1D02E,U
+U+1D02F,U
+U+1D030,U
+U+1D031,U
+U+1D032,U
+U+1D033,U
+U+1D034,U
+U+1D035,U
+U+1D036,U
+U+1D037,U
+U+1D038,U
+U+1D039,U
+U+1D03A,U
+U+1D03B,U
+U+1D03C,U
+U+1D03D,U
+U+1D03E,U
+U+1D03F,U
+U+1D040,U
+U+1D041,U
+U+1D042,U
+U+1D043,U
+U+1D044,U
+U+1D045,U
+U+1D046,U
+U+1D047,U
+U+1D048,U
+U+1D049,U
+U+1D04A,U
+U+1D04B,U
+U+1D04C,U
+U+1D04D,U
+U+1D04E,U
+U+1D04F,U
+U+1D050,U
+U+1D051,U
+U+1D052,U
+U+1D053,U
+U+1D054,U
+U+1D055,U
+U+1D056,U
+U+1D057,U
+U+1D058,U
+U+1D059,U
+U+1D05A,U
+U+1D05B,U
+U+1D05C,U
+U+1D05D,U
+U+1D05E,U
+U+1D05F,U
+U+1D060,U
+U+1D061,U
+U+1D062,U
+U+1D063,U
+U+1D064,U
+U+1D065,U
+U+1D066,U
+U+1D067,U
+U+1D068,U
+U+1D069,U
+U+1D06A,U
+U+1D06B,U
+U+1D06C,U
+U+1D06D,U
+U+1D06E,U
+U+1D06F,U
+U+1D070,U
+U+1D071,U
+U+1D072,U
+U+1D073,U
+U+1D074,U
+U+1D075,U
+U+1D076,U
+U+1D077,U
+U+1D078,U
+U+1D079,U
+U+1D07A,U
+U+1D07B,U
+U+1D07C,U
+U+1D07D,U
+U+1D07E,U
+U+1D07F,U
+U+1D080,U
+U+1D081,U
+U+1D082,U
+U+1D083,U
+U+1D084,U
+U+1D085,U
+U+1D086,U
+U+1D087,U
+U+1D088,U
+U+1D089,U
+U+1D08A,U
+U+1D08B,U
+U+1D08C,U
+U+1D08D,U
+U+1D08E,U
+U+1D08F,U
+U+1D090,U
+U+1D091,U
+U+1D092,U
+U+1D093,U
+U+1D094,U
+U+1D095,U
+U+1D096,U
+U+1D097,U
+U+1D098,U
+U+1D099,U
+U+1D09A,U
+U+1D09B,U
+U+1D09C,U
+U+1D09D,U
+U+1D09E,U
+U+1D09F,U
+U+1D0A0,U
+U+1D0A1,U
+U+1D0A2,U
+U+1D0A3,U
+U+1D0A4,U
+U+1D0A5,U
+U+1D0A6,U
+U+1D0A7,U
+U+1D0A8,U
+U+1D0A9,U
+U+1D0AA,U
+U+1D0AB,U
+U+1D0AC,U
+U+1D0AD,U
+U+1D0AE,U
+U+1D0AF,U
+U+1D0B0,U
+U+1D0B1,U
+U+1D0B2,U
+U+1D0B3,U
+U+1D0B4,U
+U+1D0B5,U
+U+1D0B6,U
+U+1D0B7,U
+U+1D0B8,U
+U+1D0B9,U
+U+1D0BA,U
+U+1D0BB,U
+U+1D0BC,U
+U+1D0BD,U
+U+1D0BE,U
+U+1D0BF,U
+U+1D0C0,U
+U+1D0C1,U
+U+1D0C2,U
+U+1D0C3,U
+U+1D0C4,U
+U+1D0C5,U
+U+1D0C6,U
+U+1D0C7,U
+U+1D0C8,U
+U+1D0C9,U
+U+1D0CA,U
+U+1D0CB,U
+U+1D0CC,U
+U+1D0CD,U
+U+1D0CE,U
+U+1D0CF,U
+U+1D0D0,U
+U+1D0D1,U
+U+1D0D2,U
+U+1D0D3,U
+U+1D0D4,U
+U+1D0D5,U
+U+1D0D6,U
+U+1D0D7,U
+U+1D0D8,U
+U+1D0D9,U
+U+1D0DA,U
+U+1D0DB,U
+U+1D0DC,U
+U+1D0DD,U
+U+1D0DE,U
+U+1D0DF,U
+U+1D0E0,U
+U+1D0E1,U
+U+1D0E2,U
+U+1D0E3,U
+U+1D0E4,U
+U+1D0E5,U
+U+1D0E6,U
+U+1D0E7,U
+U+1D0E8,U
+U+1D0E9,U
+U+1D0EA,U
+U+1D0EB,U
+U+1D0EC,U
+U+1D0ED,U
+U+1D0EE,U
+U+1D0EF,U
+U+1D0F0,U
+U+1D0F1,U
+U+1D0F2,U
+U+1D0F3,U
+U+1D0F4,U
+U+1D0F5,U
+U+1D100,U
+U+1D101,U
+U+1D102,U
+U+1D103,U
+U+1D104,U
+U+1D105,U
+U+1D106,U
+U+1D107,U
+U+1D108,U
+U+1D109,U
+U+1D10A,U
+U+1D10B,U
+U+1D10C,U
+U+1D10D,U
+U+1D10E,U
+U+1D10F,U
+U+1D110,U
+U+1D111,U
+U+1D112,U
+U+1D113,U
+U+1D114,U
+U+1D115,U
+U+1D116,U
+U+1D117,U
+U+1D118,U
+U+1D119,U
+U+1D11A,U
+U+1D11B,U
+U+1D11C,U
+U+1D11D,U
+U+1D11E,U
+U+1D11F,U
+U+1D120,U
+U+1D121,U
+U+1D122,U
+U+1D123,U
+U+1D124,U
+U+1D125,U
+U+1D126,U
+U+1D129,U
+U+1D12A,U
+U+1D12B,U
+U+1D12C,U
+U+1D12D,U
+U+1D12E,U
+U+1D12F,U
+U+1D130,U
+U+1D131,U
+U+1D132,U
+U+1D133,U
+U+1D134,U
+U+1D135,U
+U+1D136,U
+U+1D137,U
+U+1D138,U
+U+1D139,U
+U+1D13A,U
+U+1D13B,U
+U+1D13C,U
+U+1D13D,U
+U+1D13E,U
+U+1D13F,U
+U+1D140,U
+U+1D141,U
+U+1D142,U
+U+1D143,U
+U+1D144,U
+U+1D145,U
+U+1D146,U
+U+1D147,U
+U+1D148,U
+U+1D149,U
+U+1D14A,U
+U+1D14B,U
+U+1D14C,U
+U+1D14D,U
+U+1D14E,U
+U+1D14F,U
+U+1D150,U
+U+1D151,U
+U+1D152,U
+U+1D153,U
+U+1D154,U
+U+1D155,U
+U+1D156,U
+U+1D157,U
+U+1D158,U
+U+1D159,U
+U+1D15A,U
+U+1D15B,U
+U+1D15C,U
+U+1D15D,U
+U+1D15E,U
+U+1D15F,U
+U+1D160,U
+U+1D161,U
+U+1D162,U
+U+1D163,U
+U+1D164,U
+U+1D165,U
+U+1D166,U
+U+1D167,U
+U+1D168,U
+U+1D169,U
+U+1D16A,U
+U+1D16B,U
+U+1D16C,U
+U+1D16D,U
+U+1D16E,U
+U+1D16F,U
+U+1D170,U
+U+1D171,U
+U+1D172,U
+U+1D173,U
+U+1D174,U
+U+1D175,U
+U+1D176,U
+U+1D177,U
+U+1D178,U
+U+1D179,U
+U+1D17A,U
+U+1D17B,U
+U+1D17C,U
+U+1D17D,U
+U+1D17E,U
+U+1D17F,U
+U+1D180,U
+U+1D181,U
+U+1D182,U
+U+1D183,U
+U+1D184,U
+U+1D185,U
+U+1D186,U
+U+1D187,U
+U+1D188,U
+U+1D189,U
+U+1D18A,U
+U+1D18B,U
+U+1D18C,U
+U+1D18D,U
+U+1D18E,U
+U+1D18F,U
+U+1D190,U
+U+1D191,U
+U+1D192,U
+U+1D193,U
+U+1D194,U
+U+1D195,U
+U+1D196,U
+U+1D197,U
+U+1D198,U
+U+1D199,U
+U+1D19A,U
+U+1D19B,U
+U+1D19C,U
+U+1D19D,U
+U+1D19E,U
+U+1D19F,U
+U+1D1A0,U
+U+1D1A1,U
+U+1D1A2,U
+U+1D1A3,U
+U+1D1A4,U
+U+1D1A5,U
+U+1D1A6,U
+U+1D1A7,U
+U+1D1A8,U
+U+1D1A9,U
+U+1D1AA,U
+U+1D1AB,U
+U+1D1AC,U
+U+1D1AD,U
+U+1D1AE,U
+U+1D1AF,U
+U+1D1B0,U
+U+1D1B1,U
+U+1D1B2,U
+U+1D1B3,U
+U+1D1B4,U
+U+1D1B5,U
+U+1D1B6,U
+U+1D1B7,U
+U+1D1B8,U
+U+1D1B9,U
+U+1D1BA,U
+U+1D1BB,U
+U+1D1BC,U
+U+1D1BD,U
+U+1D1BE,U
+U+1D1BF,U
+U+1D1C0,U
+U+1D1C1,U
+U+1D1C2,U
+U+1D1C3,U
+U+1D1C4,U
+U+1D1C5,U
+U+1D1C6,U
+U+1D1C7,U
+U+1D1C8,U
+U+1D1C9,U
+U+1D1CA,U
+U+1D1CB,U
+U+1D1CC,U
+U+1D1CD,U
+U+1D1CE,U
+U+1D1CF,U
+U+1D1D0,U
+U+1D1D1,U
+U+1D1D2,U
+U+1D1D3,U
+U+1D1D4,U
+U+1D1D5,U
+U+1D1D6,U
+U+1D1D7,U
+U+1D1D8,U
+U+1D1D9,U
+U+1D1DA,U
+U+1D1DB,U
+U+1D1DC,U
+U+1D1DD,U
+U+1D200,U
+U+1D201,U
+U+1D202,U
+U+1D203,U
+U+1D204,U
+U+1D205,U
+U+1D206,U
+U+1D207,U
+U+1D208,U
+U+1D209,U
+U+1D20A,U
+U+1D20B,U
+U+1D20C,U
+U+1D20D,U
+U+1D20E,U
+U+1D20F,U
+U+1D210,U
+U+1D211,U
+U+1D212,U
+U+1D213,U
+U+1D214,U
+U+1D215,U
+U+1D216,U
+U+1D217,U
+U+1D218,U
+U+1D219,U
+U+1D21A,U
+U+1D21B,U
+U+1D21C,U
+U+1D21D,U
+U+1D21E,U
+U+1D21F,U
+U+1D220,U
+U+1D221,U
+U+1D222,U
+U+1D223,U
+U+1D224,U
+U+1D225,U
+U+1D226,U
+U+1D227,U
+U+1D228,U
+U+1D229,U
+U+1D22A,U
+U+1D22B,U
+U+1D22C,U
+U+1D22D,U
+U+1D22E,U
+U+1D22F,U
+U+1D230,U
+U+1D231,U
+U+1D232,U
+U+1D233,U
+U+1D234,U
+U+1D235,U
+U+1D236,U
+U+1D237,U
+U+1D238,U
+U+1D239,U
+U+1D23A,U
+U+1D23B,U
+U+1D23C,U
+U+1D23D,U
+U+1D23E,U
+U+1D23F,U
+U+1D240,U
+U+1D241,U
+U+1D242,U
+U+1D243,U
+U+1D244,U
+U+1D245,U
+U+1D300,U
+U+1D301,U
+U+1D302,U
+U+1D303,U
+U+1D304,U
+U+1D305,U
+U+1D306,U
+U+1D307,U
+U+1D308,U
+U+1D309,U
+U+1D30A,U
+U+1D30B,U
+U+1D30C,U
+U+1D30D,U
+U+1D30E,U
+U+1D30F,U
+U+1D310,U
+U+1D311,U
+U+1D312,U
+U+1D313,U
+U+1D314,U
+U+1D315,U
+U+1D316,U
+U+1D317,U
+U+1D318,U
+U+1D319,U
+U+1D31A,U
+U+1D31B,U
+U+1D31C,U
+U+1D31D,U
+U+1D31E,U
+U+1D31F,U
+U+1D320,U
+U+1D321,U
+U+1D322,U
+U+1D323,U
+U+1D324,U
+U+1D325,U
+U+1D326,U
+U+1D327,U
+U+1D328,U
+U+1D329,U
+U+1D32A,U
+U+1D32B,U
+U+1D32C,U
+U+1D32D,U
+U+1D32E,U
+U+1D32F,U
+U+1D330,U
+U+1D331,U
+U+1D332,U
+U+1D333,U
+U+1D334,U
+U+1D335,U
+U+1D336,U
+U+1D337,U
+U+1D338,U
+U+1D339,U
+U+1D33A,U
+U+1D33B,U
+U+1D33C,U
+U+1D33D,U
+U+1D33E,U
+U+1D33F,U
+U+1D340,U
+U+1D341,U
+U+1D342,U
+U+1D343,U
+U+1D344,U
+U+1D345,U
+U+1D346,U
+U+1D347,U
+U+1D348,U
+U+1D349,U
+U+1D34A,U
+U+1D34B,U
+U+1D34C,U
+U+1D34D,U
+U+1D34E,U
+U+1D34F,U
+U+1D350,U
+U+1D351,U
+U+1D352,U
+U+1D353,U
+U+1D354,U
+U+1D355,U
+U+1D356,U
+U+1D360,U
+U+1D361,U
+U+1D362,U
+U+1D363,U
+U+1D364,U
+U+1D365,U
+U+1D366,U
+U+1D367,U
+U+1D368,U
+U+1D369,U
+U+1D36A,U
+U+1D36B,U
+U+1D36C,U
+U+1D36D,U
+U+1D36E,U
+U+1D36F,U
+U+1D370,U
+U+1D371,U
+U+1D400,R
+U+1D401,R
+U+1D402,R
+U+1D403,R
+U+1D404,R
+U+1D405,R
+U+1D406,R
+U+1D407,R
+U+1D408,R
+U+1D409,R
+U+1D40A,R
+U+1D40B,R
+U+1D40C,R
+U+1D40D,R
+U+1D40E,R
+U+1D40F,R
+U+1D410,R
+U+1D411,R
+U+1D412,R
+U+1D413,R
+U+1D414,R
+U+1D415,R
+U+1D416,R
+U+1D417,R
+U+1D418,R
+U+1D419,R
+U+1D41A,R
+U+1D41B,R
+U+1D41C,R
+U+1D41D,R
+U+1D41E,R
+U+1D41F,R
+U+1D420,R
+U+1D421,R
+U+1D422,R
+U+1D423,R
+U+1D424,R
+U+1D425,R
+U+1D426,R
+U+1D427,R
+U+1D428,R
+U+1D429,R
+U+1D42A,R
+U+1D42B,R
+U+1D42C,R
+U+1D42D,R
+U+1D42E,R
+U+1D42F,R
+U+1D430,R
+U+1D431,R
+U+1D432,R
+U+1D433,R
+U+1D434,R
+U+1D435,R
+U+1D436,R
+U+1D437,R
+U+1D438,R
+U+1D439,R
+U+1D43A,R
+U+1D43B,R
+U+1D43C,R
+U+1D43D,R
+U+1D43E,R
+U+1D43F,R
+U+1D440,R
+U+1D441,R
+U+1D442,R
+U+1D443,R
+U+1D444,R
+U+1D445,R
+U+1D446,R
+U+1D447,R
+U+1D448,R
+U+1D449,R
+U+1D44A,R
+U+1D44B,R
+U+1D44C,R
+U+1D44D,R
+U+1D44E,R
+U+1D44F,R
+U+1D450,R
+U+1D451,R
+U+1D452,R
+U+1D453,R
+U+1D454,R
+U+1D456,R
+U+1D457,R
+U+1D458,R
+U+1D459,R
+U+1D45A,R
+U+1D45B,R
+U+1D45C,R
+U+1D45D,R
+U+1D45E,R
+U+1D45F,R
+U+1D460,R
+U+1D461,R
+U+1D462,R
+U+1D463,R
+U+1D464,R
+U+1D465,R
+U+1D466,R
+U+1D467,R
+U+1D468,R
+U+1D469,R
+U+1D46A,R
+U+1D46B,R
+U+1D46C,R
+U+1D46D,R
+U+1D46E,R
+U+1D46F,R
+U+1D470,R
+U+1D471,R
+U+1D472,R
+U+1D473,R
+U+1D474,R
+U+1D475,R
+U+1D476,R
+U+1D477,R
+U+1D478,R
+U+1D479,R
+U+1D47A,R
+U+1D47B,R
+U+1D47C,R
+U+1D47D,R
+U+1D47E,R
+U+1D47F,R
+U+1D480,R
+U+1D481,R
+U+1D482,R
+U+1D483,R
+U+1D484,R
+U+1D485,R
+U+1D486,R
+U+1D487,R
+U+1D488,R
+U+1D489,R
+U+1D48A,R
+U+1D48B,R
+U+1D48C,R
+U+1D48D,R
+U+1D48E,R
+U+1D48F,R
+U+1D490,R
+U+1D491,R
+U+1D492,R
+U+1D493,R
+U+1D494,R
+U+1D495,R
+U+1D496,R
+U+1D497,R
+U+1D498,R
+U+1D499,R
+U+1D49A,R
+U+1D49B,R
+U+1D49C,R
+U+1D49E,R
+U+1D49F,R
+U+1D4A2,R
+U+1D4A5,R
+U+1D4A6,R
+U+1D4A9,R
+U+1D4AA,R
+U+1D4AB,R
+U+1D4AC,R
+U+1D4AE,R
+U+1D4AF,R
+U+1D4B0,R
+U+1D4B1,R
+U+1D4B2,R
+U+1D4B3,R
+U+1D4B4,R
+U+1D4B5,R
+U+1D4B6,R
+U+1D4B7,R
+U+1D4B8,R
+U+1D4B9,R
+U+1D4BB,R
+U+1D4BD,R
+U+1D4BE,R
+U+1D4BF,R
+U+1D4C0,R
+U+1D4C1,R
+U+1D4C2,R
+U+1D4C3,R
+U+1D4C5,R
+U+1D4C6,R
+U+1D4C7,R
+U+1D4C8,R
+U+1D4C9,R
+U+1D4CA,R
+U+1D4CB,R
+U+1D4CC,R
+U+1D4CD,R
+U+1D4CE,R
+U+1D4CF,R
+U+1D4D0,R
+U+1D4D1,R
+U+1D4D2,R
+U+1D4D3,R
+U+1D4D4,R
+U+1D4D5,R
+U+1D4D6,R
+U+1D4D7,R
+U+1D4D8,R
+U+1D4D9,R
+U+1D4DA,R
+U+1D4DB,R
+U+1D4DC,R
+U+1D4DD,R
+U+1D4DE,R
+U+1D4DF,R
+U+1D4E0,R
+U+1D4E1,R
+U+1D4E2,R
+U+1D4E3,R
+U+1D4E4,R
+U+1D4E5,R
+U+1D4E6,R
+U+1D4E7,R
+U+1D4E8,R
+U+1D4E9,R
+U+1D4EA,R
+U+1D4EB,R
+U+1D4EC,R
+U+1D4ED,R
+U+1D4EE,R
+U+1D4EF,R
+U+1D4F0,R
+U+1D4F1,R
+U+1D4F2,R
+U+1D4F3,R
+U+1D4F4,R
+U+1D4F5,R
+U+1D4F6,R
+U+1D4F7,R
+U+1D4F8,R
+U+1D4F9,R
+U+1D4FA,R
+U+1D4FB,R
+U+1D4FC,R
+U+1D4FD,R
+U+1D4FE,R
+U+1D4FF,R
+U+1D500,R
+U+1D501,R
+U+1D502,R
+U+1D503,R
+U+1D504,R
+U+1D505,R
+U+1D507,R
+U+1D508,R
+U+1D509,R
+U+1D50A,R
+U+1D50D,R
+U+1D50E,R
+U+1D50F,R
+U+1D510,R
+U+1D511,R
+U+1D512,R
+U+1D513,R
+U+1D514,R
+U+1D516,R
+U+1D517,R
+U+1D518,R
+U+1D519,R
+U+1D51A,R
+U+1D51B,R
+U+1D51C,R
+U+1D51E,R
+U+1D51F,R
+U+1D520,R
+U+1D521,R
+U+1D522,R
+U+1D523,R
+U+1D524,R
+U+1D525,R
+U+1D526,R
+U+1D527,R
+U+1D528,R
+U+1D529,R
+U+1D52A,R
+U+1D52B,R
+U+1D52C,R
+U+1D52D,R
+U+1D52E,R
+U+1D52F,R
+U+1D530,R
+U+1D531,R
+U+1D532,R
+U+1D533,R
+U+1D534,R
+U+1D535,R
+U+1D536,R
+U+1D537,R
+U+1D538,R
+U+1D539,R
+U+1D53B,R
+U+1D53C,R
+U+1D53D,R
+U+1D53E,R
+U+1D540,R
+U+1D541,R
+U+1D542,R
+U+1D543,R
+U+1D544,R
+U+1D546,R
+U+1D54A,R
+U+1D54B,R
+U+1D54C,R
+U+1D54D,R
+U+1D54E,R
+U+1D54F,R
+U+1D550,R
+U+1D552,R
+U+1D553,R
+U+1D554,R
+U+1D555,R
+U+1D556,R
+U+1D557,R
+U+1D558,R
+U+1D559,R
+U+1D55A,R
+U+1D55B,R
+U+1D55C,R
+U+1D55D,R
+U+1D55E,R
+U+1D55F,R
+U+1D560,R
+U+1D561,R
+U+1D562,R
+U+1D563,R
+U+1D564,R
+U+1D565,R
+U+1D566,R
+U+1D567,R
+U+1D568,R
+U+1D569,R
+U+1D56A,R
+U+1D56B,R
+U+1D56C,R
+U+1D56D,R
+U+1D56E,R
+U+1D56F,R
+U+1D570,R
+U+1D571,R
+U+1D572,R
+U+1D573,R
+U+1D574,R
+U+1D575,R
+U+1D576,R
+U+1D577,R
+U+1D578,R
+U+1D579,R
+U+1D57A,R
+U+1D57B,R
+U+1D57C,R
+U+1D57D,R
+U+1D57E,R
+U+1D57F,R
+U+1D580,R
+U+1D581,R
+U+1D582,R
+U+1D583,R
+U+1D584,R
+U+1D585,R
+U+1D586,R
+U+1D587,R
+U+1D588,R
+U+1D589,R
+U+1D58A,R
+U+1D58B,R
+U+1D58C,R
+U+1D58D,R
+U+1D58E,R
+U+1D58F,R
+U+1D590,R
+U+1D591,R
+U+1D592,R
+U+1D593,R
+U+1D594,R
+U+1D595,R
+U+1D596,R
+U+1D597,R
+U+1D598,R
+U+1D599,R
+U+1D59A,R
+U+1D59B,R
+U+1D59C,R
+U+1D59D,R
+U+1D59E,R
+U+1D59F,R
+U+1D5A0,R
+U+1D5A1,R
+U+1D5A2,R
+U+1D5A3,R
+U+1D5A4,R
+U+1D5A5,R
+U+1D5A6,R
+U+1D5A7,R
+U+1D5A8,R
+U+1D5A9,R
+U+1D5AA,R
+U+1D5AB,R
+U+1D5AC,R
+U+1D5AD,R
+U+1D5AE,R
+U+1D5AF,R
+U+1D5B0,R
+U+1D5B1,R
+U+1D5B2,R
+U+1D5B3,R
+U+1D5B4,R
+U+1D5B5,R
+U+1D5B6,R
+U+1D5B7,R
+U+1D5B8,R
+U+1D5B9,R
+U+1D5BA,R
+U+1D5BB,R
+U+1D5BC,R
+U+1D5BD,R
+U+1D5BE,R
+U+1D5BF,R
+U+1D5C0,R
+U+1D5C1,R
+U+1D5C2,R
+U+1D5C3,R
+U+1D5C4,R
+U+1D5C5,R
+U+1D5C6,R
+U+1D5C7,R
+U+1D5C8,R
+U+1D5C9,R
+U+1D5CA,R
+U+1D5CB,R
+U+1D5CC,R
+U+1D5CD,R
+U+1D5CE,R
+U+1D5CF,R
+U+1D5D0,R
+U+1D5D1,R
+U+1D5D2,R
+U+1D5D3,R
+U+1D5D4,R
+U+1D5D5,R
+U+1D5D6,R
+U+1D5D7,R
+U+1D5D8,R
+U+1D5D9,R
+U+1D5DA,R
+U+1D5DB,R
+U+1D5DC,R
+U+1D5DD,R
+U+1D5DE,R
+U+1D5DF,R
+U+1D5E0,R
+U+1D5E1,R
+U+1D5E2,R
+U+1D5E3,R
+U+1D5E4,R
+U+1D5E5,R
+U+1D5E6,R
+U+1D5E7,R
+U+1D5E8,R
+U+1D5E9,R
+U+1D5EA,R
+U+1D5EB,R
+U+1D5EC,R
+U+1D5ED,R
+U+1D5EE,R
+U+1D5EF,R
+U+1D5F0,R
+U+1D5F1,R
+U+1D5F2,R
+U+1D5F3,R
+U+1D5F4,R
+U+1D5F5,R
+U+1D5F6,R
+U+1D5F7,R
+U+1D5F8,R
+U+1D5F9,R
+U+1D5FA,R
+U+1D5FB,R
+U+1D5FC,R
+U+1D5FD,R
+U+1D5FE,R
+U+1D5FF,R
+U+1D600,R
+U+1D601,R
+U+1D602,R
+U+1D603,R
+U+1D604,R
+U+1D605,R
+U+1D606,R
+U+1D607,R
+U+1D608,R
+U+1D609,R
+U+1D60A,R
+U+1D60B,R
+U+1D60C,R
+U+1D60D,R
+U+1D60E,R
+U+1D60F,R
+U+1D610,R
+U+1D611,R
+U+1D612,R
+U+1D613,R
+U+1D614,R
+U+1D615,R
+U+1D616,R
+U+1D617,R
+U+1D618,R
+U+1D619,R
+U+1D61A,R
+U+1D61B,R
+U+1D61C,R
+U+1D61D,R
+U+1D61E,R
+U+1D61F,R
+U+1D620,R
+U+1D621,R
+U+1D622,R
+U+1D623,R
+U+1D624,R
+U+1D625,R
+U+1D626,R
+U+1D627,R
+U+1D628,R
+U+1D629,R
+U+1D62A,R
+U+1D62B,R
+U+1D62C,R
+U+1D62D,R
+U+1D62E,R
+U+1D62F,R
+U+1D630,R
+U+1D631,R
+U+1D632,R
+U+1D633,R
+U+1D634,R
+U+1D635,R
+U+1D636,R
+U+1D637,R
+U+1D638,R
+U+1D639,R
+U+1D63A,R
+U+1D63B,R
+U+1D63C,R
+U+1D63D,R
+U+1D63E,R
+U+1D63F,R
+U+1D640,R
+U+1D641,R
+U+1D642,R
+U+1D643,R
+U+1D644,R
+U+1D645,R
+U+1D646,R
+U+1D647,R
+U+1D648,R
+U+1D649,R
+U+1D64A,R
+U+1D64B,R
+U+1D64C,R
+U+1D64D,R
+U+1D64E,R
+U+1D64F,R
+U+1D650,R
+U+1D651,R
+U+1D652,R
+U+1D653,R
+U+1D654,R
+U+1D655,R
+U+1D656,R
+U+1D657,R
+U+1D658,R
+U+1D659,R
+U+1D65A,R
+U+1D65B,R
+U+1D65C,R
+U+1D65D,R
+U+1D65E,R
+U+1D65F,R
+U+1D660,R
+U+1D661,R
+U+1D662,R
+U+1D663,R
+U+1D664,R
+U+1D665,R
+U+1D666,R
+U+1D667,R
+U+1D668,R
+U+1D669,R
+U+1D66A,R
+U+1D66B,R
+U+1D66C,R
+U+1D66D,R
+U+1D66E,R
+U+1D66F,R
+U+1D670,R
+U+1D671,R
+U+1D672,R
+U+1D673,R
+U+1D674,R
+U+1D675,R
+U+1D676,R
+U+1D677,R
+U+1D678,R
+U+1D679,R
+U+1D67A,R
+U+1D67B,R
+U+1D67C,R
+U+1D67D,R
+U+1D67E,R
+U+1D67F,R
+U+1D680,R
+U+1D681,R
+U+1D682,R
+U+1D683,R
+U+1D684,R
+U+1D685,R
+U+1D686,R
+U+1D687,R
+U+1D688,R
+U+1D689,R
+U+1D68A,R
+U+1D68B,R
+U+1D68C,R
+U+1D68D,R
+U+1D68E,R
+U+1D68F,R
+U+1D690,R
+U+1D691,R
+U+1D692,R
+U+1D693,R
+U+1D694,R
+U+1D695,R
+U+1D696,R
+U+1D697,R
+U+1D698,R
+U+1D699,R
+U+1D69A,R
+U+1D69B,R
+U+1D69C,R
+U+1D69D,R
+U+1D69E,R
+U+1D69F,R
+U+1D6A0,R
+U+1D6A1,R
+U+1D6A2,R
+U+1D6A3,R
+U+1D6A4,R
+U+1D6A5,R
+U+1D6A8,R
+U+1D6A9,R
+U+1D6AA,R
+U+1D6AB,R
+U+1D6AC,R
+U+1D6AD,R
+U+1D6AE,R
+U+1D6AF,R
+U+1D6B0,R
+U+1D6B1,R
+U+1D6B2,R
+U+1D6B3,R
+U+1D6B4,R
+U+1D6B5,R
+U+1D6B6,R
+U+1D6B7,R
+U+1D6B8,R
+U+1D6B9,R
+U+1D6BA,R
+U+1D6BB,R
+U+1D6BC,R
+U+1D6BD,R
+U+1D6BE,R
+U+1D6BF,R
+U+1D6C0,R
+U+1D6C1,R
+U+1D6C2,R
+U+1D6C3,R
+U+1D6C4,R
+U+1D6C5,R
+U+1D6C6,R
+U+1D6C7,R
+U+1D6C8,R
+U+1D6C9,R
+U+1D6CA,R
+U+1D6CB,R
+U+1D6CC,R
+U+1D6CD,R
+U+1D6CE,R
+U+1D6CF,R
+U+1D6D0,R
+U+1D6D1,R
+U+1D6D2,R
+U+1D6D3,R
+U+1D6D4,R
+U+1D6D5,R
+U+1D6D6,R
+U+1D6D7,R
+U+1D6D8,R
+U+1D6D9,R
+U+1D6DA,R
+U+1D6DB,R
+U+1D6DC,R
+U+1D6DD,R
+U+1D6DE,R
+U+1D6DF,R
+U+1D6E0,R
+U+1D6E1,R
+U+1D6E2,R
+U+1D6E3,R
+U+1D6E4,R
+U+1D6E5,R
+U+1D6E6,R
+U+1D6E7,R
+U+1D6E8,R
+U+1D6E9,R
+U+1D6EA,R
+U+1D6EB,R
+U+1D6EC,R
+U+1D6ED,R
+U+1D6EE,R
+U+1D6EF,R
+U+1D6F0,R
+U+1D6F1,R
+U+1D6F2,R
+U+1D6F3,R
+U+1D6F4,R
+U+1D6F5,R
+U+1D6F6,R
+U+1D6F7,R
+U+1D6F8,R
+U+1D6F9,R
+U+1D6FA,R
+U+1D6FB,R
+U+1D6FC,R
+U+1D6FD,R
+U+1D6FE,R
+U+1D6FF,R
+U+1D700,R
+U+1D701,R
+U+1D702,R
+U+1D703,R
+U+1D704,R
+U+1D705,R
+U+1D706,R
+U+1D707,R
+U+1D708,R
+U+1D709,R
+U+1D70A,R
+U+1D70B,R
+U+1D70C,R
+U+1D70D,R
+U+1D70E,R
+U+1D70F,R
+U+1D710,R
+U+1D711,R
+U+1D712,R
+U+1D713,R
+U+1D714,R
+U+1D715,R
+U+1D716,R
+U+1D717,R
+U+1D718,R
+U+1D719,R
+U+1D71A,R
+U+1D71B,R
+U+1D71C,R
+U+1D71D,R
+U+1D71E,R
+U+1D71F,R
+U+1D720,R
+U+1D721,R
+U+1D722,R
+U+1D723,R
+U+1D724,R
+U+1D725,R
+U+1D726,R
+U+1D727,R
+U+1D728,R
+U+1D729,R
+U+1D72A,R
+U+1D72B,R
+U+1D72C,R
+U+1D72D,R
+U+1D72E,R
+U+1D72F,R
+U+1D730,R
+U+1D731,R
+U+1D732,R
+U+1D733,R
+U+1D734,R
+U+1D735,R
+U+1D736,R
+U+1D737,R
+U+1D738,R
+U+1D739,R
+U+1D73A,R
+U+1D73B,R
+U+1D73C,R
+U+1D73D,R
+U+1D73E,R
+U+1D73F,R
+U+1D740,R
+U+1D741,R
+U+1D742,R
+U+1D743,R
+U+1D744,R
+U+1D745,R
+U+1D746,R
+U+1D747,R
+U+1D748,R
+U+1D749,R
+U+1D74A,R
+U+1D74B,R
+U+1D74C,R
+U+1D74D,R
+U+1D74E,R
+U+1D74F,R
+U+1D750,R
+U+1D751,R
+U+1D752,R
+U+1D753,R
+U+1D754,R
+U+1D755,R
+U+1D756,R
+U+1D757,R
+U+1D758,R
+U+1D759,R
+U+1D75A,R
+U+1D75B,R
+U+1D75C,R
+U+1D75D,R
+U+1D75E,R
+U+1D75F,R
+U+1D760,R
+U+1D761,R
+U+1D762,R
+U+1D763,R
+U+1D764,R
+U+1D765,R
+U+1D766,R
+U+1D767,R
+U+1D768,R
+U+1D769,R
+U+1D76A,R
+U+1D76B,R
+U+1D76C,R
+U+1D76D,R
+U+1D76E,R
+U+1D76F,R
+U+1D770,R
+U+1D771,R
+U+1D772,R
+U+1D773,R
+U+1D774,R
+U+1D775,R
+U+1D776,R
+U+1D777,R
+U+1D778,R
+U+1D779,R
+U+1D77A,R
+U+1D77B,R
+U+1D77C,R
+U+1D77D,R
+U+1D77E,R
+U+1D77F,R
+U+1D780,R
+U+1D781,R
+U+1D782,R
+U+1D783,R
+U+1D784,R
+U+1D785,R
+U+1D786,R
+U+1D787,R
+U+1D788,R
+U+1D789,R
+U+1D78A,R
+U+1D78B,R
+U+1D78C,R
+U+1D78D,R
+U+1D78E,R
+U+1D78F,R
+U+1D790,R
+U+1D791,R
+U+1D792,R
+U+1D793,R
+U+1D794,R
+U+1D795,R
+U+1D796,R
+U+1D797,R
+U+1D798,R
+U+1D799,R
+U+1D79A,R
+U+1D79B,R
+U+1D79C,R
+U+1D79D,R
+U+1D79E,R
+U+1D79F,R
+U+1D7A0,R
+U+1D7A1,R
+U+1D7A2,R
+U+1D7A3,R
+U+1D7A4,R
+U+1D7A5,R
+U+1D7A6,R
+U+1D7A7,R
+U+1D7A8,R
+U+1D7A9,R
+U+1D7AA,R
+U+1D7AB,R
+U+1D7AC,R
+U+1D7AD,R
+U+1D7AE,R
+U+1D7AF,R
+U+1D7B0,R
+U+1D7B1,R
+U+1D7B2,R
+U+1D7B3,R
+U+1D7B4,R
+U+1D7B5,R
+U+1D7B6,R
+U+1D7B7,R
+U+1D7B8,R
+U+1D7B9,R
+U+1D7BA,R
+U+1D7BB,R
+U+1D7BC,R
+U+1D7BD,R
+U+1D7BE,R
+U+1D7BF,R
+U+1D7C0,R
+U+1D7C1,R
+U+1D7C2,R
+U+1D7C3,R
+U+1D7C4,R
+U+1D7C5,R
+U+1D7C6,R
+U+1D7C7,R
+U+1D7C8,R
+U+1D7C9,R
+U+1D7CA,R
+U+1D7CB,R
+U+1D7CE,R
+U+1D7CF,R
+U+1D7D0,R
+U+1D7D1,R
+U+1D7D2,R
+U+1D7D3,R
+U+1D7D4,R
+U+1D7D5,R
+U+1D7D6,R
+U+1D7D7,R
+U+1D7D8,R
+U+1D7D9,R
+U+1D7DA,R
+U+1D7DB,R
+U+1D7DC,R
+U+1D7DD,R
+U+1D7DE,R
+U+1D7DF,R
+U+1D7E0,R
+U+1D7E1,R
+U+1D7E2,R
+U+1D7E3,R
+U+1D7E4,R
+U+1D7E5,R
+U+1D7E6,R
+U+1D7E7,R
+U+1D7E8,R
+U+1D7E9,R
+U+1D7EA,R
+U+1D7EB,R
+U+1D7EC,R
+U+1D7ED,R
+U+1D7EE,R
+U+1D7EF,R
+U+1D7F0,R
+U+1D7F1,R
+U+1D7F2,R
+U+1D7F3,R
+U+1D7F4,R
+U+1D7F5,R
+U+1D7F6,R
+U+1D7F7,R
+U+1D7F8,R
+U+1D7F9,R
+U+1D7FA,R
+U+1D7FB,R
+U+1D7FC,R
+U+1D7FD,R
+U+1D7FE,R
+U+1D7FF,R
+U+1EE00,R
+U+1EE01,R
+U+1EE02,R
+U+1EE03,R
+U+1EE05,R
+U+1EE06,R
+U+1EE07,R
+U+1EE08,R
+U+1EE09,R
+U+1EE0A,R
+U+1EE0B,R
+U+1EE0C,R
+U+1EE0D,R
+U+1EE0E,R
+U+1EE0F,R
+U+1EE10,R
+U+1EE11,R
+U+1EE12,R
+U+1EE13,R
+U+1EE14,R
+U+1EE15,R
+U+1EE16,R
+U+1EE17,R
+U+1EE18,R
+U+1EE19,R
+U+1EE1A,R
+U+1EE1B,R
+U+1EE1C,R
+U+1EE1D,R
+U+1EE1E,R
+U+1EE1F,R
+U+1EE21,R
+U+1EE22,R
+U+1EE24,R
+U+1EE27,R
+U+1EE29,R
+U+1EE2A,R
+U+1EE2B,R
+U+1EE2C,R
+U+1EE2D,R
+U+1EE2E,R
+U+1EE2F,R
+U+1EE30,R
+U+1EE31,R
+U+1EE32,R
+U+1EE34,R
+U+1EE35,R
+U+1EE36,R
+U+1EE37,R
+U+1EE39,R
+U+1EE3B,R
+U+1EE42,R
+U+1EE47,R
+U+1EE49,R
+U+1EE4B,R
+U+1EE4D,R
+U+1EE4E,R
+U+1EE4F,R
+U+1EE51,R
+U+1EE52,R
+U+1EE54,R
+U+1EE57,R
+U+1EE59,R
+U+1EE5B,R
+U+1EE5D,R
+U+1EE5F,R
+U+1EE61,R
+U+1EE62,R
+U+1EE64,R
+U+1EE67,R
+U+1EE68,R
+U+1EE69,R
+U+1EE6A,R
+U+1EE6C,R
+U+1EE6D,R
+U+1EE6E,R
+U+1EE6F,R
+U+1EE70,R
+U+1EE71,R
+U+1EE72,R
+U+1EE74,R
+U+1EE75,R
+U+1EE76,R
+U+1EE77,R
+U+1EE79,R
+U+1EE7A,R
+U+1EE7B,R
+U+1EE7C,R
+U+1EE7E,R
+U+1EE80,R
+U+1EE81,R
+U+1EE82,R
+U+1EE83,R
+U+1EE84,R
+U+1EE85,R
+U+1EE86,R
+U+1EE87,R
+U+1EE88,R
+U+1EE89,R
+U+1EE8B,R
+U+1EE8C,R
+U+1EE8D,R
+U+1EE8E,R
+U+1EE8F,R
+U+1EE90,R
+U+1EE91,R
+U+1EE92,R
+U+1EE93,R
+U+1EE94,R
+U+1EE95,R
+U+1EE96,R
+U+1EE97,R
+U+1EE98,R
+U+1EE99,R
+U+1EE9A,R
+U+1EE9B,R
+U+1EEA1,R
+U+1EEA2,R
+U+1EEA3,R
+U+1EEA5,R
+U+1EEA6,R
+U+1EEA7,R
+U+1EEA8,R
+U+1EEA9,R
+U+1EEAB,R
+U+1EEAC,R
+U+1EEAD,R
+U+1EEAE,R
+U+1EEAF,R
+U+1EEB0,R
+U+1EEB1,R
+U+1EEB2,R
+U+1EEB3,R
+U+1EEB4,R
+U+1EEB5,R
+U+1EEB6,R
+U+1EEB7,R
+U+1EEB8,R
+U+1EEB9,R
+U+1EEBA,R
+U+1EEBB,R
+U+1EEF0,R
+U+1EEF1,R
+U+1F000,U
+U+1F001,U
+U+1F002,U
+U+1F003,U
+U+1F004,U
+U+1F005,U
+U+1F006,U
+U+1F007,U
+U+1F008,U
+U+1F009,U
+U+1F00A,U
+U+1F00B,U
+U+1F00C,U
+U+1F00D,U
+U+1F00E,U
+U+1F00F,U
+U+1F010,U
+U+1F011,U
+U+1F012,U
+U+1F013,U
+U+1F014,U
+U+1F015,U
+U+1F016,U
+U+1F017,U
+U+1F018,U
+U+1F019,U
+U+1F01A,U
+U+1F01B,U
+U+1F01C,U
+U+1F01D,U
+U+1F01E,U
+U+1F01F,U
+U+1F020,U
+U+1F021,U
+U+1F022,U
+U+1F023,U
+U+1F024,U
+U+1F025,U
+U+1F026,U
+U+1F027,U
+U+1F028,U
+U+1F029,U
+U+1F02A,U
+U+1F02B,U
+U+1F030,U
+U+1F031,U
+U+1F032,U
+U+1F033,U
+U+1F034,U
+U+1F035,U
+U+1F036,U
+U+1F037,U
+U+1F038,U
+U+1F039,U
+U+1F03A,U
+U+1F03B,U
+U+1F03C,U
+U+1F03D,U
+U+1F03E,U
+U+1F03F,U
+U+1F040,U
+U+1F041,U
+U+1F042,U
+U+1F043,U
+U+1F044,U
+U+1F045,U
+U+1F046,U
+U+1F047,U
+U+1F048,U
+U+1F049,U
+U+1F04A,U
+U+1F04B,U
+U+1F04C,U
+U+1F04D,U
+U+1F04E,U
+U+1F04F,U
+U+1F050,U
+U+1F051,U
+U+1F052,U
+U+1F053,U
+U+1F054,U
+U+1F055,U
+U+1F056,U
+U+1F057,U
+U+1F058,U
+U+1F059,U
+U+1F05A,U
+U+1F05B,U
+U+1F05C,U
+U+1F05D,U
+U+1F05E,U
+U+1F05F,U
+U+1F060,U
+U+1F061,U
+U+1F062,U
+U+1F063,U
+U+1F064,U
+U+1F065,U
+U+1F066,U
+U+1F067,U
+U+1F068,U
+U+1F069,U
+U+1F06A,U
+U+1F06B,U
+U+1F06C,U
+U+1F06D,U
+U+1F06E,U
+U+1F06F,U
+U+1F070,U
+U+1F071,U
+U+1F072,U
+U+1F073,U
+U+1F074,U
+U+1F075,U
+U+1F076,U
+U+1F077,U
+U+1F078,U
+U+1F079,U
+U+1F07A,U
+U+1F07B,U
+U+1F07C,U
+U+1F07D,U
+U+1F07E,U
+U+1F07F,U
+U+1F080,U
+U+1F081,U
+U+1F082,U
+U+1F083,U
+U+1F084,U
+U+1F085,U
+U+1F086,U
+U+1F087,U
+U+1F088,U
+U+1F089,U
+U+1F08A,U
+U+1F08B,U
+U+1F08C,U
+U+1F08D,U
+U+1F08E,U
+U+1F08F,U
+U+1F090,U
+U+1F091,U
+U+1F092,U
+U+1F093,U
+U+1F0A0,U
+U+1F0A1,U
+U+1F0A2,U
+U+1F0A3,U
+U+1F0A4,U
+U+1F0A5,U
+U+1F0A6,U
+U+1F0A7,U
+U+1F0A8,U
+U+1F0A9,U
+U+1F0AA,U
+U+1F0AB,U
+U+1F0AC,U
+U+1F0AD,U
+U+1F0AE,U
+U+1F0B1,U
+U+1F0B2,U
+U+1F0B3,U
+U+1F0B4,U
+U+1F0B5,U
+U+1F0B6,U
+U+1F0B7,U
+U+1F0B8,U
+U+1F0B9,U
+U+1F0BA,U
+U+1F0BB,U
+U+1F0BC,U
+U+1F0BD,U
+U+1F0BE,U
+U+1F0C1,U
+U+1F0C2,U
+U+1F0C3,U
+U+1F0C4,U
+U+1F0C5,U
+U+1F0C6,U
+U+1F0C7,U
+U+1F0C8,U
+U+1F0C9,U
+U+1F0CA,U
+U+1F0CB,U
+U+1F0CC,U
+U+1F0CD,U
+U+1F0CE,U
+U+1F0CF,U
+U+1F0D1,U
+U+1F0D2,U
+U+1F0D3,U
+U+1F0D4,U
+U+1F0D5,U
+U+1F0D6,U
+U+1F0D7,U
+U+1F0D8,U
+U+1F0D9,U
+U+1F0DA,U
+U+1F0DB,U
+U+1F0DC,U
+U+1F0DD,U
+U+1F0DE,U
+U+1F0DF,U
+U+1F100,U
+U+1F101,U
+U+1F102,U
+U+1F103,U
+U+1F104,U
+U+1F105,U
+U+1F106,U
+U+1F107,U
+U+1F108,U
+U+1F109,U
+U+1F10A,U
+U+1F110,U
+U+1F111,U
+U+1F112,U
+U+1F113,U
+U+1F114,U
+U+1F115,U
+U+1F116,U
+U+1F117,U
+U+1F118,U
+U+1F119,U
+U+1F11A,U
+U+1F11B,U
+U+1F11C,U
+U+1F11D,U
+U+1F11E,U
+U+1F11F,U
+U+1F120,U
+U+1F121,U
+U+1F122,U
+U+1F123,U
+U+1F124,U
+U+1F125,U
+U+1F126,U
+U+1F127,U
+U+1F128,U
+U+1F129,U
+U+1F12A,U
+U+1F12B,U
+U+1F12C,U
+U+1F12D,U
+U+1F12E,U
+U+1F130,U
+U+1F131,U
+U+1F132,U
+U+1F133,U
+U+1F134,U
+U+1F135,U
+U+1F136,U
+U+1F137,U
+U+1F138,U
+U+1F139,U
+U+1F13A,U
+U+1F13B,U
+U+1F13C,U
+U+1F13D,U
+U+1F13E,U
+U+1F13F,U
+U+1F140,U
+U+1F141,U
+U+1F142,U
+U+1F143,U
+U+1F144,U
+U+1F145,U
+U+1F146,U
+U+1F147,U
+U+1F148,U
+U+1F149,U
+U+1F14A,U
+U+1F14B,U
+U+1F14C,U
+U+1F14D,U
+U+1F14E,U
+U+1F14F,U
+U+1F150,U
+U+1F151,U
+U+1F152,U
+U+1F153,U
+U+1F154,U
+U+1F155,U
+U+1F156,U
+U+1F157,U
+U+1F158,U
+U+1F159,U
+U+1F15A,U
+U+1F15B,U
+U+1F15C,U
+U+1F15D,U
+U+1F15E,U
+U+1F15F,U
+U+1F160,U
+U+1F161,U
+U+1F162,U
+U+1F163,U
+U+1F164,U
+U+1F165,U
+U+1F166,U
+U+1F167,U
+U+1F168,U
+U+1F169,U
+U+1F16A,U
+U+1F16B,U
+U+1F170,U
+U+1F171,U
+U+1F172,U
+U+1F173,U
+U+1F174,U
+U+1F175,U
+U+1F176,U
+U+1F177,U
+U+1F178,U
+U+1F179,U
+U+1F17A,U
+U+1F17B,U
+U+1F17C,U
+U+1F17D,U
+U+1F17E,U
+U+1F17F,U
+U+1F180,U
+U+1F181,U
+U+1F182,U
+U+1F183,U
+U+1F184,U
+U+1F185,U
+U+1F186,U
+U+1F187,U
+U+1F188,U
+U+1F189,U
+U+1F18A,U
+U+1F18B,U
+U+1F18C,U
+U+1F18D,U
+U+1F18E,U
+U+1F18F,U
+U+1F190,U
+U+1F191,U
+U+1F192,U
+U+1F193,U
+U+1F194,U
+U+1F195,U
+U+1F196,U
+U+1F197,U
+U+1F198,U
+U+1F199,U
+U+1F19A,U
+U+1F1E6,U
+U+1F1E7,U
+U+1F1E8,U
+U+1F1E9,U
+U+1F1EA,U
+U+1F1EB,U
+U+1F1EC,U
+U+1F1ED,U
+U+1F1EE,U
+U+1F1EF,U
+U+1F1F0,U
+U+1F1F1,U
+U+1F1F2,U
+U+1F1F3,U
+U+1F1F4,U
+U+1F1F5,U
+U+1F1F6,U
+U+1F1F7,U
+U+1F1F8,U
+U+1F1F9,U
+U+1F1FA,U
+U+1F1FB,U
+U+1F1FC,U
+U+1F1FD,U
+U+1F1FE,U
+U+1F1FF,U
+U+1F200,U
+U+1F201,U
+U+1F202,U
+U+1F210,U
+U+1F211,U
+U+1F212,U
+U+1F213,U
+U+1F214,U
+U+1F215,U
+U+1F216,U
+U+1F217,U
+U+1F218,U
+U+1F219,U
+U+1F21A,U
+U+1F21B,U
+U+1F21C,U
+U+1F21D,U
+U+1F21E,U
+U+1F21F,U
+U+1F220,U
+U+1F221,U
+U+1F222,U
+U+1F223,U
+U+1F224,U
+U+1F225,U
+U+1F226,U
+U+1F227,U
+U+1F228,U
+U+1F229,U
+U+1F22A,U
+U+1F22B,U
+U+1F22C,U
+U+1F22D,U
+U+1F22E,U
+U+1F22F,U
+U+1F230,U
+U+1F231,U
+U+1F232,U
+U+1F233,U
+U+1F234,U
+U+1F235,U
+U+1F236,U
+U+1F237,U
+U+1F238,U
+U+1F239,U
+U+1F23A,U
+U+1F240,U
+U+1F241,U
+U+1F242,U
+U+1F243,U
+U+1F244,U
+U+1F245,U
+U+1F246,U
+U+1F247,U
+U+1F248,U
+U+1F250,U
+U+1F251,U
+U+1F300,U
+U+1F301,U
+U+1F302,U
+U+1F303,U
+U+1F304,U
+U+1F305,U
+U+1F306,U
+U+1F307,U
+U+1F308,U
+U+1F309,U
+U+1F30A,U
+U+1F30B,U
+U+1F30C,U
+U+1F30D,U
+U+1F30E,U
+U+1F30F,U
+U+1F310,U
+U+1F311,U
+U+1F312,U
+U+1F313,U
+U+1F314,U
+U+1F315,U
+U+1F316,U
+U+1F317,U
+U+1F318,U
+U+1F319,U
+U+1F31A,U
+U+1F31B,U
+U+1F31C,U
+U+1F31D,U
+U+1F31E,U
+U+1F31F,U
+U+1F320,U
+U+1F330,U
+U+1F331,U
+U+1F332,U
+U+1F333,U
+U+1F334,U
+U+1F335,U
+U+1F337,U
+U+1F338,U
+U+1F339,U
+U+1F33A,U
+U+1F33B,U
+U+1F33C,U
+U+1F33D,U
+U+1F33E,U
+U+1F33F,U
+U+1F340,U
+U+1F341,U
+U+1F342,U
+U+1F343,U
+U+1F344,U
+U+1F345,U
+U+1F346,U
+U+1F347,U
+U+1F348,U
+U+1F349,U
+U+1F34A,U
+U+1F34B,U
+U+1F34C,U
+U+1F34D,U
+U+1F34E,U
+U+1F34F,U
+U+1F350,U
+U+1F351,U
+U+1F352,U
+U+1F353,U
+U+1F354,U
+U+1F355,U
+U+1F356,U
+U+1F357,U
+U+1F358,U
+U+1F359,U
+U+1F35A,U
+U+1F35B,U
+U+1F35C,U
+U+1F35D,U
+U+1F35E,U
+U+1F35F,U
+U+1F360,U
+U+1F361,U
+U+1F362,U
+U+1F363,U
+U+1F364,U
+U+1F365,U
+U+1F366,U
+U+1F367,U
+U+1F368,U
+U+1F369,U
+U+1F36A,U
+U+1F36B,U
+U+1F36C,U
+U+1F36D,U
+U+1F36E,U
+U+1F36F,U
+U+1F370,U
+U+1F371,U
+U+1F372,U
+U+1F373,U
+U+1F374,U
+U+1F375,U
+U+1F376,U
+U+1F377,U
+U+1F378,U
+U+1F379,U
+U+1F37A,U
+U+1F37B,U
+U+1F37C,U
+U+1F380,U
+U+1F381,U
+U+1F382,U
+U+1F383,U
+U+1F384,U
+U+1F385,U
+U+1F386,U
+U+1F387,U
+U+1F388,U
+U+1F389,U
+U+1F38A,U
+U+1F38B,U
+U+1F38C,U
+U+1F38D,U
+U+1F38E,U
+U+1F38F,U
+U+1F390,U
+U+1F391,U
+U+1F392,U
+U+1F393,U
+U+1F3A0,U
+U+1F3A1,U
+U+1F3A2,U
+U+1F3A3,U
+U+1F3A4,U
+U+1F3A5,U
+U+1F3A6,U
+U+1F3A7,U
+U+1F3A8,U
+U+1F3A9,U
+U+1F3AA,U
+U+1F3AB,U
+U+1F3AC,U
+U+1F3AD,U
+U+1F3AE,U
+U+1F3AF,U
+U+1F3B0,U
+U+1F3B1,U
+U+1F3B2,U
+U+1F3B3,U
+U+1F3B4,U
+U+1F3B5,U
+U+1F3B6,U
+U+1F3B7,U
+U+1F3B8,U
+U+1F3B9,U
+U+1F3BA,U
+U+1F3BB,U
+U+1F3BC,U
+U+1F3BD,U
+U+1F3BE,U
+U+1F3BF,U
+U+1F3C0,U
+U+1F3C1,U
+U+1F3C2,U
+U+1F3C3,U
+U+1F3C4,U
+U+1F3C6,U
+U+1F3C7,U
+U+1F3C8,U
+U+1F3C9,U
+U+1F3CA,U
+U+1F3E0,U
+U+1F3E1,U
+U+1F3E2,U
+U+1F3E3,U
+U+1F3E4,U
+U+1F3E5,U
+U+1F3E6,U
+U+1F3E7,U
+U+1F3E8,U
+U+1F3E9,U
+U+1F3EA,U
+U+1F3EB,U
+U+1F3EC,U
+U+1F3ED,U
+U+1F3EE,U
+U+1F3EF,U
+U+1F3F0,U
+U+1F400,U
+U+1F401,U
+U+1F402,U
+U+1F403,U
+U+1F404,U
+U+1F405,U
+U+1F406,U
+U+1F407,U
+U+1F408,U
+U+1F409,U
+U+1F40A,U
+U+1F40B,U
+U+1F40C,U
+U+1F40D,U
+U+1F40E,U
+U+1F40F,U
+U+1F410,U
+U+1F411,U
+U+1F412,U
+U+1F413,U
+U+1F414,U
+U+1F415,U
+U+1F416,U
+U+1F417,U
+U+1F418,U
+U+1F419,U
+U+1F41A,U
+U+1F41B,U
+U+1F41C,U
+U+1F41D,U
+U+1F41E,U
+U+1F41F,U
+U+1F420,U
+U+1F421,U
+U+1F422,U
+U+1F423,U
+U+1F424,U
+U+1F425,U
+U+1F426,U
+U+1F427,U
+U+1F428,U
+U+1F429,U
+U+1F42A,U
+U+1F42B,U
+U+1F42C,U
+U+1F42D,U
+U+1F42E,U
+U+1F42F,U
+U+1F430,U
+U+1F431,U
+U+1F432,U
+U+1F433,U
+U+1F434,U
+U+1F435,U
+U+1F436,U
+U+1F437,U
+U+1F438,U
+U+1F439,U
+U+1F43A,U
+U+1F43B,U
+U+1F43C,U
+U+1F43D,U
+U+1F43E,U
+U+1F440,U
+U+1F442,U
+U+1F443,U
+U+1F444,U
+U+1F445,U
+U+1F446,U
+U+1F447,U
+U+1F448,U
+U+1F449,U
+U+1F44A,U
+U+1F44B,U
+U+1F44C,U
+U+1F44D,U
+U+1F44E,U
+U+1F44F,U
+U+1F450,U
+U+1F451,U
+U+1F452,U
+U+1F453,U
+U+1F454,U
+U+1F455,U
+U+1F456,U
+U+1F457,U
+U+1F458,U
+U+1F459,U
+U+1F45A,U
+U+1F45B,U
+U+1F45C,U
+U+1F45D,U
+U+1F45E,U
+U+1F45F,U
+U+1F460,U
+U+1F461,U
+U+1F462,U
+U+1F463,U
+U+1F464,U
+U+1F465,U
+U+1F466,U
+U+1F467,U
+U+1F468,U
+U+1F469,U
+U+1F46A,U
+U+1F46B,U
+U+1F46C,U
+U+1F46D,U
+U+1F46E,U
+U+1F46F,U
+U+1F470,U
+U+1F471,U
+U+1F472,U
+U+1F473,U
+U+1F474,U
+U+1F475,U
+U+1F476,U
+U+1F477,U
+U+1F478,U
+U+1F479,U
+U+1F47A,U
+U+1F47B,U
+U+1F47C,U
+U+1F47D,U
+U+1F47E,U
+U+1F47F,U
+U+1F480,U
+U+1F481,U
+U+1F482,U
+U+1F483,U
+U+1F484,U
+U+1F485,U
+U+1F486,U
+U+1F487,U
+U+1F488,U
+U+1F489,U
+U+1F48A,U
+U+1F48B,U
+U+1F48C,U
+U+1F48D,U
+U+1F48E,U
+U+1F48F,U
+U+1F490,U
+U+1F491,U
+U+1F492,U
+U+1F493,U
+U+1F494,U
+U+1F495,U
+U+1F496,U
+U+1F497,U
+U+1F498,U
+U+1F499,U
+U+1F49A,U
+U+1F49B,U
+U+1F49C,U
+U+1F49D,U
+U+1F49E,U
+U+1F49F,U
+U+1F4A0,U
+U+1F4A1,U
+U+1F4A2,U
+U+1F4A3,U
+U+1F4A4,U
+U+1F4A5,U
+U+1F4A6,U
+U+1F4A7,U
+U+1F4A8,U
+U+1F4A9,U
+U+1F4AA,U
+U+1F4AB,U
+U+1F4AC,U
+U+1F4AD,U
+U+1F4AE,U
+U+1F4AF,U
+U+1F4B0,U
+U+1F4B1,U
+U+1F4B2,U
+U+1F4B3,U
+U+1F4B4,U
+U+1F4B5,U
+U+1F4B6,U
+U+1F4B7,U
+U+1F4B8,U
+U+1F4B9,U
+U+1F4BA,U
+U+1F4BB,U
+U+1F4BC,U
+U+1F4BD,U
+U+1F4BE,U
+U+1F4BF,U
+U+1F4C0,U
+U+1F4C1,U
+U+1F4C2,U
+U+1F4C3,U
+U+1F4C4,U
+U+1F4C5,U
+U+1F4C6,U
+U+1F4C7,U
+U+1F4C8,U
+U+1F4C9,U
+U+1F4CA,U
+U+1F4CB,U
+U+1F4CC,U
+U+1F4CD,U
+U+1F4CE,U
+U+1F4CF,U
+U+1F4D0,U
+U+1F4D1,U
+U+1F4D2,U
+U+1F4D3,U
+U+1F4D4,U
+U+1F4D5,U
+U+1F4D6,U
+U+1F4D7,U
+U+1F4D8,U
+U+1F4D9,U
+U+1F4DA,U
+U+1F4DB,U
+U+1F4DC,U
+U+1F4DD,U
+U+1F4DE,U
+U+1F4DF,U
+U+1F4E0,U
+U+1F4E1,U
+U+1F4E2,U
+U+1F4E3,U
+U+1F4E4,U
+U+1F4E5,U
+U+1F4E6,U
+U+1F4E7,U
+U+1F4E8,U
+U+1F4E9,U
+U+1F4EA,U
+U+1F4EB,U
+U+1F4EC,U
+U+1F4ED,U
+U+1F4EE,U
+U+1F4EF,U
+U+1F4F0,U
+U+1F4F1,U
+U+1F4F2,U
+U+1F4F3,U
+U+1F4F4,U
+U+1F4F5,U
+U+1F4F6,U
+U+1F4F7,U
+U+1F4F9,U
+U+1F4FA,U
+U+1F4FB,U
+U+1F4FC,U
+U+1F500,U
+U+1F501,U
+U+1F502,U
+U+1F503,U
+U+1F504,U
+U+1F505,U
+U+1F506,U
+U+1F507,U
+U+1F508,U
+U+1F509,U
+U+1F50A,U
+U+1F50B,U
+U+1F50C,U
+U+1F50D,U
+U+1F50E,U
+U+1F50F,U
+U+1F510,U
+U+1F511,U
+U+1F512,U
+U+1F513,U
+U+1F514,U
+U+1F515,U
+U+1F516,U
+U+1F517,U
+U+1F518,U
+U+1F519,U
+U+1F51A,U
+U+1F51B,U
+U+1F51C,U
+U+1F51D,U
+U+1F51E,U
+U+1F51F,U
+U+1F520,U
+U+1F521,U
+U+1F522,U
+U+1F523,U
+U+1F524,U
+U+1F525,U
+U+1F526,U
+U+1F527,U
+U+1F528,U
+U+1F529,U
+U+1F52A,U
+U+1F52B,U
+U+1F52C,U
+U+1F52D,U
+U+1F52E,U
+U+1F52F,U
+U+1F530,U
+U+1F531,U
+U+1F532,U
+U+1F533,U
+U+1F534,U
+U+1F535,U
+U+1F536,U
+U+1F537,U
+U+1F538,U
+U+1F539,U
+U+1F53A,U
+U+1F53B,U
+U+1F53C,U
+U+1F53D,U
+U+1F540,U
+U+1F541,U
+U+1F542,U
+U+1F543,U
+U+1F550,U
+U+1F551,U
+U+1F552,U
+U+1F553,U
+U+1F554,U
+U+1F555,U
+U+1F556,U
+U+1F557,U
+U+1F558,U
+U+1F559,U
+U+1F55A,U
+U+1F55B,U
+U+1F55C,U
+U+1F55D,U
+U+1F55E,U
+U+1F55F,U
+U+1F560,U
+U+1F561,U
+U+1F562,U
+U+1F563,U
+U+1F564,U
+U+1F565,U
+U+1F566,U
+U+1F567,U
+U+1F5FB,U
+U+1F5FC,U
+U+1F5FD,U
+U+1F5FE,U
+U+1F5FF,U
+U+1F600,U
+U+1F601,U
+U+1F602,U
+U+1F603,U
+U+1F604,U
+U+1F605,U
+U+1F606,U
+U+1F607,U
+U+1F608,U
+U+1F609,U
+U+1F60A,U
+U+1F60B,U
+U+1F60C,U
+U+1F60D,U
+U+1F60E,U
+U+1F60F,U
+U+1F610,U
+U+1F611,U
+U+1F612,U
+U+1F613,U
+U+1F614,U
+U+1F615,U
+U+1F616,U
+U+1F617,U
+U+1F618,U
+U+1F619,U
+U+1F61A,U
+U+1F61B,U
+U+1F61C,U
+U+1F61D,U
+U+1F61E,U
+U+1F61F,U
+U+1F620,U
+U+1F621,U
+U+1F622,U
+U+1F623,U
+U+1F624,U
+U+1F625,U
+U+1F626,U
+U+1F627,U
+U+1F628,U
+U+1F629,U
+U+1F62A,U
+U+1F62B,U
+U+1F62C,U
+U+1F62D,U
+U+1F62E,U
+U+1F62F,U
+U+1F630,U
+U+1F631,U
+U+1F632,U
+U+1F633,U
+U+1F634,U
+U+1F635,U
+U+1F636,U
+U+1F637,U
+U+1F638,U
+U+1F639,U
+U+1F63A,U
+U+1F63B,U
+U+1F63C,U
+U+1F63D,U
+U+1F63E,U
+U+1F63F,U
+U+1F640,U
+U+1F645,U
+U+1F646,U
+U+1F647,U
+U+1F648,U
+U+1F649,U
+U+1F64A,U
+U+1F64B,U
+U+1F64C,U
+U+1F64D,U
+U+1F64E,U
+U+1F64F,U
+U+1F680,U
+U+1F681,U
+U+1F682,U
+U+1F683,U
+U+1F684,U
+U+1F685,U
+U+1F686,U
+U+1F687,U
+U+1F688,U
+U+1F689,U
+U+1F68A,U
+U+1F68B,U
+U+1F68C,U
+U+1F68D,U
+U+1F68E,U
+U+1F68F,U
+U+1F690,U
+U+1F691,U
+U+1F692,U
+U+1F693,U
+U+1F694,U
+U+1F695,U
+U+1F696,U
+U+1F697,U
+U+1F698,U
+U+1F699,U
+U+1F69A,U
+U+1F69B,U
+U+1F69C,U
+U+1F69D,U
+U+1F69E,U
+U+1F69F,U
+U+1F6A0,U
+U+1F6A1,U
+U+1F6A2,U
+U+1F6A3,U
+U+1F6A4,U
+U+1F6A5,U
+U+1F6A6,U
+U+1F6A7,U
+U+1F6A8,U
+U+1F6A9,U
+U+1F6AA,U
+U+1F6AB,U
+U+1F6AC,U
+U+1F6AD,U
+U+1F6AE,U
+U+1F6AF,U
+U+1F6B0,U
+U+1F6B1,U
+U+1F6B2,U
+U+1F6B3,U
+U+1F6B4,U
+U+1F6B5,U
+U+1F6B6,U
+U+1F6B7,U
+U+1F6B8,U
+U+1F6B9,U
+U+1F6BA,U
+U+1F6BB,U
+U+1F6BC,U
+U+1F6BD,U
+U+1F6BE,U
+U+1F6BF,U
+U+1F6C0,U
+U+1F6C1,U
+U+1F6C2,U
+U+1F6C3,U
+U+1F6C4,U
+U+1F6C5,U
+U+1F700,U
+U+1F701,U
+U+1F702,U
+U+1F703,U
+U+1F704,U
+U+1F705,U
+U+1F706,U
+U+1F707,U
+U+1F708,U
+U+1F709,U
+U+1F70A,U
+U+1F70B,U
+U+1F70C,U
+U+1F70D,U
+U+1F70E,U
+U+1F70F,U
+U+1F710,U
+U+1F711,U
+U+1F712,U
+U+1F713,U
+U+1F714,U
+U+1F715,U
+U+1F716,U
+U+1F717,U
+U+1F718,U
+U+1F719,U
+U+1F71A,U
+U+1F71B,U
+U+1F71C,U
+U+1F71D,U
+U+1F71E,U
+U+1F71F,U
+U+1F720,U
+U+1F721,U
+U+1F722,U
+U+1F723,U
+U+1F724,U
+U+1F725,U
+U+1F726,U
+U+1F727,U
+U+1F728,U
+U+1F729,U
+U+1F72A,U
+U+1F72B,U
+U+1F72C,U
+U+1F72D,U
+U+1F72E,U
+U+1F72F,U
+U+1F730,U
+U+1F731,U
+U+1F732,U
+U+1F733,U
+U+1F734,U
+U+1F735,U
+U+1F736,U
+U+1F737,U
+U+1F738,U
+U+1F739,U
+U+1F73A,U
+U+1F73B,U
+U+1F73C,U
+U+1F73D,U
+U+1F73E,U
+U+1F73F,U
+U+1F740,U
+U+1F741,U
+U+1F742,U
+U+1F743,U
+U+1F744,U
+U+1F745,U
+U+1F746,U
+U+1F747,U
+U+1F748,U
+U+1F749,U
+U+1F74A,U
+U+1F74B,U
+U+1F74C,U
+U+1F74D,U
+U+1F74E,U
+U+1F74F,U
+U+1F750,U
+U+1F751,U
+U+1F752,U
+U+1F753,U
+U+1F754,U
+U+1F755,U
+U+1F756,U
+U+1F757,U
+U+1F758,U
+U+1F759,U
+U+1F75A,U
+U+1F75B,U
+U+1F75C,U
+U+1F75D,U
+U+1F75E,U
+U+1F75F,U
+U+1F760,U
+U+1F761,U
+U+1F762,U
+U+1F763,U
+U+1F764,U
+U+1F765,U
+U+1F766,U
+U+1F767,U
+U+1F768,U
+U+1F769,U
+U+1F76A,U
+U+1F76B,U
+U+1F76C,U
+U+1F76D,U
+U+1F76E,U
+U+1F76F,U
+U+1F770,U
+U+1F771,U
+U+1F772,U
+U+1F773,U
+U+20000,U
+U+2A6D6,U
+U+2A700,U
+U+2B734,U
+U+2B740,U
+U+2B81D,U
+U+2F800,U
+U+2F801,U
+U+2F802,U
+U+2F803,U
+U+2F804,U
+U+2F805,U
+U+2F806,U
+U+2F807,U
+U+2F808,U
+U+2F809,U
+U+2F80A,U
+U+2F80B,U
+U+2F80C,U
+U+2F80D,U
+U+2F80E,U
+U+2F80F,U
+U+2F810,U
+U+2F811,U
+U+2F812,U
+U+2F813,U
+U+2F814,U
+U+2F815,U
+U+2F816,U
+U+2F817,U
+U+2F818,U
+U+2F819,U
+U+2F81A,U
+U+2F81B,U
+U+2F81C,U
+U+2F81D,U
+U+2F81E,U
+U+2F81F,U
+U+2F820,U
+U+2F821,U
+U+2F822,U
+U+2F823,U
+U+2F824,U
+U+2F825,U
+U+2F826,U
+U+2F827,U
+U+2F828,U
+U+2F829,U
+U+2F82A,U
+U+2F82B,U
+U+2F82C,U
+U+2F82D,U
+U+2F82E,U
+U+2F82F,U
+U+2F830,U
+U+2F831,U
+U+2F832,U
+U+2F833,U
+U+2F834,U
+U+2F835,U
+U+2F836,U
+U+2F837,U
+U+2F838,U
+U+2F839,U
+U+2F83A,U
+U+2F83B,U
+U+2F83C,U
+U+2F83D,U
+U+2F83E,U
+U+2F83F,U
+U+2F840,U
+U+2F841,U
+U+2F842,U
+U+2F843,U
+U+2F844,U
+U+2F845,U
+U+2F846,U
+U+2F847,U
+U+2F848,U
+U+2F849,U
+U+2F84A,U
+U+2F84B,U
+U+2F84C,U
+U+2F84D,U
+U+2F84E,U
+U+2F84F,U
+U+2F850,U
+U+2F851,U
+U+2F852,U
+U+2F853,U
+U+2F854,U
+U+2F855,U
+U+2F856,U
+U+2F857,U
+U+2F858,U
+U+2F859,U
+U+2F85A,U
+U+2F85B,U
+U+2F85C,U
+U+2F85D,U
+U+2F85E,U
+U+2F85F,U
+U+2F860,U
+U+2F861,U
+U+2F862,U
+U+2F863,U
+U+2F864,U
+U+2F865,U
+U+2F866,U
+U+2F867,U
+U+2F868,U
+U+2F869,U
+U+2F86A,U
+U+2F86B,U
+U+2F86C,U
+U+2F86D,U
+U+2F86E,U
+U+2F86F,U
+U+2F870,U
+U+2F871,U
+U+2F872,U
+U+2F873,U
+U+2F874,U
+U+2F875,U
+U+2F876,U
+U+2F877,U
+U+2F878,U
+U+2F879,U
+U+2F87A,U
+U+2F87B,U
+U+2F87C,U
+U+2F87D,U
+U+2F87E,U
+U+2F87F,U
+U+2F880,U
+U+2F881,U
+U+2F882,U
+U+2F883,U
+U+2F884,U
+U+2F885,U
+U+2F886,U
+U+2F887,U
+U+2F888,U
+U+2F889,U
+U+2F88A,U
+U+2F88B,U
+U+2F88C,U
+U+2F88D,U
+U+2F88E,U
+U+2F88F,U
+U+2F890,U
+U+2F891,U
+U+2F892,U
+U+2F893,U
+U+2F894,U
+U+2F895,U
+U+2F896,U
+U+2F897,U
+U+2F898,U
+U+2F899,U
+U+2F89A,U
+U+2F89B,U
+U+2F89C,U
+U+2F89D,U
+U+2F89E,U
+U+2F89F,U
+U+2F8A0,U
+U+2F8A1,U
+U+2F8A2,U
+U+2F8A3,U
+U+2F8A4,U
+U+2F8A5,U
+U+2F8A6,U
+U+2F8A7,U
+U+2F8A8,U
+U+2F8A9,U
+U+2F8AA,U
+U+2F8AB,U
+U+2F8AC,U
+U+2F8AD,U
+U+2F8AE,U
+U+2F8AF,U
+U+2F8B0,U
+U+2F8B1,U
+U+2F8B2,U
+U+2F8B3,U
+U+2F8B4,U
+U+2F8B5,U
+U+2F8B6,U
+U+2F8B7,U
+U+2F8B8,U
+U+2F8B9,U
+U+2F8BA,U
+U+2F8BB,U
+U+2F8BC,U
+U+2F8BD,U
+U+2F8BE,U
+U+2F8BF,U
+U+2F8C0,U
+U+2F8C1,U
+U+2F8C2,U
+U+2F8C3,U
+U+2F8C4,U
+U+2F8C5,U
+U+2F8C6,U
+U+2F8C7,U
+U+2F8C8,U
+U+2F8C9,U
+U+2F8CA,U
+U+2F8CB,U
+U+2F8CC,U
+U+2F8CD,U
+U+2F8CE,U
+U+2F8CF,U
+U+2F8D0,U
+U+2F8D1,U
+U+2F8D2,U
+U+2F8D3,U
+U+2F8D4,U
+U+2F8D5,U
+U+2F8D6,U
+U+2F8D7,U
+U+2F8D8,U
+U+2F8D9,U
+U+2F8DA,U
+U+2F8DB,U
+U+2F8DC,U
+U+2F8DD,U
+U+2F8DE,U
+U+2F8DF,U
+U+2F8E0,U
+U+2F8E1,U
+U+2F8E2,U
+U+2F8E3,U
+U+2F8E4,U
+U+2F8E5,U
+U+2F8E6,U
+U+2F8E7,U
+U+2F8E8,U
+U+2F8E9,U
+U+2F8EA,U
+U+2F8EB,U
+U+2F8EC,U
+U+2F8ED,U
+U+2F8EE,U
+U+2F8EF,U
+U+2F8F0,U
+U+2F8F1,U
+U+2F8F2,U
+U+2F8F3,U
+U+2F8F4,U
+U+2F8F5,U
+U+2F8F6,U
+U+2F8F7,U
+U+2F8F8,U
+U+2F8F9,U
+U+2F8FA,U
+U+2F8FB,U
+U+2F8FC,U
+U+2F8FD,U
+U+2F8FE,U
+U+2F8FF,U
+U+2F900,U
+U+2F901,U
+U+2F902,U
+U+2F903,U
+U+2F904,U
+U+2F905,U
+U+2F906,U
+U+2F907,U
+U+2F908,U
+U+2F909,U
+U+2F90A,U
+U+2F90B,U
+U+2F90C,U
+U+2F90D,U
+U+2F90E,U
+U+2F90F,U
+U+2F910,U
+U+2F911,U
+U+2F912,U
+U+2F913,U
+U+2F914,U
+U+2F915,U
+U+2F916,U
+U+2F917,U
+U+2F918,U
+U+2F919,U
+U+2F91A,U
+U+2F91B,U
+U+2F91C,U
+U+2F91D,U
+U+2F91E,U
+U+2F91F,U
+U+2F920,U
+U+2F921,U
+U+2F922,U
+U+2F923,U
+U+2F924,U
+U+2F925,U
+U+2F926,U
+U+2F927,U
+U+2F928,U
+U+2F929,U
+U+2F92A,U
+U+2F92B,U
+U+2F92C,U
+U+2F92D,U
+U+2F92E,U
+U+2F92F,U
+U+2F930,U
+U+2F931,U
+U+2F932,U
+U+2F933,U
+U+2F934,U
+U+2F935,U
+U+2F936,U
+U+2F937,U
+U+2F938,U
+U+2F939,U
+U+2F93A,U
+U+2F93B,U
+U+2F93C,U
+U+2F93D,U
+U+2F93E,U
+U+2F93F,U
+U+2F940,U
+U+2F941,U
+U+2F942,U
+U+2F943,U
+U+2F944,U
+U+2F945,U
+U+2F946,U
+U+2F947,U
+U+2F948,U
+U+2F949,U
+U+2F94A,U
+U+2F94B,U
+U+2F94C,U
+U+2F94D,U
+U+2F94E,U
+U+2F94F,U
+U+2F950,U
+U+2F951,U
+U+2F952,U
+U+2F953,U
+U+2F954,U
+U+2F955,U
+U+2F956,U
+U+2F957,U
+U+2F958,U
+U+2F959,U
+U+2F95A,U
+U+2F95B,U
+U+2F95C,U
+U+2F95D,U
+U+2F95E,U
+U+2F95F,U
+U+2F960,U
+U+2F961,U
+U+2F962,U
+U+2F963,U
+U+2F964,U
+U+2F965,U
+U+2F966,U
+U+2F967,U
+U+2F968,U
+U+2F969,U
+U+2F96A,U
+U+2F96B,U
+U+2F96C,U
+U+2F96D,U
+U+2F96E,U
+U+2F96F,U
+U+2F970,U
+U+2F971,U
+U+2F972,U
+U+2F973,U
+U+2F974,U
+U+2F975,U
+U+2F976,U
+U+2F977,U
+U+2F978,U
+U+2F979,U
+U+2F97A,U
+U+2F97B,U
+U+2F97C,U
+U+2F97D,U
+U+2F97E,U
+U+2F97F,U
+U+2F980,U
+U+2F981,U
+U+2F982,U
+U+2F983,U
+U+2F984,U
+U+2F985,U
+U+2F986,U
+U+2F987,U
+U+2F988,U
+U+2F989,U
+U+2F98A,U
+U+2F98B,U
+U+2F98C,U
+U+2F98D,U
+U+2F98E,U
+U+2F98F,U
+U+2F990,U
+U+2F991,U
+U+2F992,U
+U+2F993,U
+U+2F994,U
+U+2F995,U
+U+2F996,U
+U+2F997,U
+U+2F998,U
+U+2F999,U
+U+2F99A,U
+U+2F99B,U
+U+2F99C,U
+U+2F99D,U
+U+2F99E,U
+U+2F99F,U
+U+2F9A0,U
+U+2F9A1,U
+U+2F9A2,U
+U+2F9A3,U
+U+2F9A4,U
+U+2F9A5,U
+U+2F9A6,U
+U+2F9A7,U
+U+2F9A8,U
+U+2F9A9,U
+U+2F9AA,U
+U+2F9AB,U
+U+2F9AC,U
+U+2F9AD,U
+U+2F9AE,U
+U+2F9AF,U
+U+2F9B0,U
+U+2F9B1,U
+U+2F9B2,U
+U+2F9B3,U
+U+2F9B4,U
+U+2F9B5,U
+U+2F9B6,U
+U+2F9B7,U
+U+2F9B8,U
+U+2F9B9,U
+U+2F9BA,U
+U+2F9BB,U
+U+2F9BC,U
+U+2F9BD,U
+U+2F9BE,U
+U+2F9BF,U
+U+2F9C0,U
+U+2F9C1,U
+U+2F9C2,U
+U+2F9C3,U
+U+2F9C4,U
+U+2F9C5,U
+U+2F9C6,U
+U+2F9C7,U
+U+2F9C8,U
+U+2F9C9,U
+U+2F9CA,U
+U+2F9CB,U
+U+2F9CC,U
+U+2F9CD,U
+U+2F9CE,U
+U+2F9CF,U
+U+2F9D0,U
+U+2F9D1,U
+U+2F9D2,U
+U+2F9D3,U
+U+2F9D4,U
+U+2F9D5,U
+U+2F9D6,U
+U+2F9D7,U
+U+2F9D8,U
+U+2F9D9,U
+U+2F9DA,U
+U+2F9DB,U
+U+2F9DC,U
+U+2F9DD,U
+U+2F9DE,U
+U+2F9DF,U
+U+2F9E0,U
+U+2F9E1,U
+U+2F9E2,U
+U+2F9E3,U
+U+2F9E4,U
+U+2F9E5,U
+U+2F9E6,U
+U+2F9E7,U
+U+2F9E8,U
+U+2F9E9,U
+U+2F9EA,U
+U+2F9EB,U
+U+2F9EC,U
+U+2F9ED,U
+U+2F9EE,U
+U+2F9EF,U
+U+2F9F0,U
+U+2F9F1,U
+U+2F9F2,U
+U+2F9F3,U
+U+2F9F4,U
+U+2F9F5,U
+U+2F9F6,U
+U+2F9F7,U
+U+2F9F8,U
+U+2F9F9,U
+U+2F9FA,U
+U+2F9FB,U
+U+2F9FC,U
+U+2F9FD,U
+U+2F9FE,U
+U+2F9FF,U
+U+2FA00,U
+U+2FA01,U
+U+2FA02,U
+U+2FA03,U
+U+2FA04,U
+U+2FA05,U
+U+2FA06,U
+U+2FA07,U
+U+2FA08,U
+U+2FA09,U
+U+2FA0A,U
+U+2FA0B,U
+U+2FA0C,U
+U+2FA0D,U
+U+2FA0E,U
+U+2FA0F,U
+U+2FA10,U
+U+2FA11,U
+U+2FA12,U
+U+2FA13,U
+U+2FA14,U
+U+2FA15,U
+U+2FA16,U
+U+2FA17,U
+U+2FA18,U
+U+2FA19,U
+U+2FA1A,U
+U+2FA1B,U
+U+2FA1C,U
+U+2FA1D,U
+U+E0100,R
+U+E0101,R
+U+E0102,R
+U+E0103,R
+U+E0104,R
+U+E0105,R
+U+E0106,R
+U+E0107,R
+U+E0108,R
+U+E0109,R
+U+E010A,R
+U+E010B,R
+U+E010C,R
+U+E010D,R
+U+E010E,R
+U+E010F,R
+U+E0110,R
+U+E0111,R
+U+E0112,R
+U+E0113,R
+U+E0114,R
+U+E0115,R
+U+E0116,R
+U+E0117,R
+U+E0118,R
+U+E0119,R
+U+E011A,R
+U+E011B,R
+U+E011C,R
+U+E011D,R
+U+E011E,R
+U+E011F,R
+U+E0120,R
+U+E0121,R
+U+E0122,R
+U+E0123,R
+U+E0124,R
+U+E0125,R
+U+E0126,R
+U+E0127,R
+U+E0128,R
+U+E0129,R
+U+E012A,R
+U+E012B,R
+U+E012C,R
+U+E012D,R
+U+E012E,R
+U+E012F,R
+U+E0130,R
+U+E0131,R
+U+E0132,R
+U+E0133,R
+U+E0134,R
+U+E0135,R
+U+E0136,R
+U+E0137,R
+U+E0138,R
+U+E0139,R
+U+E013A,R
+U+E013B,R
+U+E013C,R
+U+E013D,R
+U+E013E,R
+U+E013F,R
+U+E0140,R
+U+E0141,R
+U+E0142,R
+U+E0143,R
+U+E0144,R
+U+E0145,R
+U+E0146,R
+U+E0147,R
+U+E0148,R
+U+E0149,R
+U+E014A,R
+U+E014B,R
+U+E014C,R
+U+E014D,R
+U+E014E,R
+U+E014F,R
+U+E0150,R
+U+E0151,R
+U+E0152,R
+U+E0153,R
+U+E0154,R
+U+E0155,R
+U+E0156,R
+U+E0157,R
+U+E0158,R
+U+E0159,R
+U+E015A,R
+U+E015B,R
+U+E015C,R
+U+E015D,R
+U+E015E,R
+U+E015F,R
+U+E0160,R
+U+E0161,R
+U+E0162,R
+U+E0163,R
+U+E0164,R
+U+E0165,R
+U+E0166,R
+U+E0167,R
+U+E0168,R
+U+E0169,R
+U+E016A,R
+U+E016B,R
+U+E016C,R
+U+E016D,R
+U+E016E,R
+U+E016F,R
+U+E0170,R
+U+E0171,R
+U+E0172,R
+U+E0173,R
+U+E0174,R
+U+E0175,R
+U+E0176,R
+U+E0177,R
+U+E0178,R
+U+E0179,R
+U+E017A,R
+U+E017B,R
+U+E017C,R
+U+E017D,R
+U+E017E,R
+U+E017F,R
+U+E0180,R
+U+E0181,R
+U+E0182,R
+U+E0183,R
+U+E0184,R
+U+E0185,R
+U+E0186,R
+U+E0187,R
+U+E0188,R
+U+E0189,R
+U+E018A,R
+U+E018B,R
+U+E018C,R
+U+E018D,R
+U+E018E,R
+U+E018F,R
+U+E0190,R
+U+E0191,R
+U+E0192,R
+U+E0193,R
+U+E0194,R
+U+E0195,R
+U+E0196,R
+U+E0197,R
+U+E0198,R
+U+E0199,R
+U+E019A,R
+U+E019B,R
+U+E019C,R
+U+E019D,R
+U+E019E,R
+U+E019F,R
+U+E01A0,R
+U+E01A1,R
+U+E01A2,R
+U+E01A3,R
+U+E01A4,R
+U+E01A5,R
+U+E01A6,R
+U+E01A7,R
+U+E01A8,R
+U+E01A9,R
+U+E01AA,R
+U+E01AB,R
+U+E01AC,R
+U+E01AD,R
+U+E01AE,R
+U+E01AF,R
+U+E01B0,R
+U+E01B1,R
+U+E01B2,R
+U+E01B3,R
+U+E01B4,R
+U+E01B5,R
+U+E01B6,R
+U+E01B7,R
+U+E01B8,R
+U+E01B9,R
+U+E01BA,R
+U+E01BB,R
+U+E01BC,R
+U+E01BD,R
+U+E01BE,R
+U+E01BF,R
+U+E01C0,R
+U+E01C1,R
+U+E01C2,R
+U+E01C3,R
+U+E01C4,R
+U+E01C5,R
+U+E01C6,R
+U+E01C7,R
+U+E01C8,R
+U+E01C9,R
+U+E01CA,R
+U+E01CB,R
+U+E01CC,R
+U+E01CD,R
+U+E01CE,R
+U+E01CF,R
+U+E01D0,R
+U+E01D1,R
+U+E01D2,R
+U+E01D3,R
+U+E01D4,R
+U+E01D5,R
+U+E01D6,R
+U+E01D7,R
+U+E01D8,R
+U+E01D9,R
+U+E01DA,R
+U+E01DB,R
+U+E01DC,R
+U+E01DD,R
+U+E01DE,R
+U+E01DF,R
+U+E01E0,R
+U+E01E1,R
+U+E01E2,R
+U+E01E3,R
+U+E01E4,R
+U+E01E5,R
+U+E01E6,R
+U+E01E7,R
+U+E01E8,R
+U+E01E9,R
+U+E01EA,R
+U+E01EB,R
+U+E01EC,R
+U+E01ED,R
+U+E01EE,R
+U+E01EF,R
Index: src/3rdparty/webkit/WebKitLibraries/libWebKitSystemInterfaceSnowLeopard.a
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/3rdparty/webkit/WebKitLibraries/libWebKitSystemInterfaceSnowLeopard.a
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/3rdparty/webkit/WebKitLibraries/libWebCoreSQLite3.a
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/3rdparty/webkit/WebKitLibraries/libWebCoreSQLite3.a
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/3rdparty/webkit/WebKitLibraries/libWebKitSystemInterfaceLion.a
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/3rdparty/webkit/WebKitLibraries/libWebKitSystemInterfaceLion.a
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/3rdparty/webkit/WebKitLibraries/libWebKitSystemInterfaceLeopard.a
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/3rdparty/webkit/WebKitLibraries/libWebKitSystemInterfaceLeopard.a
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/3rdparty/accessplugin/accessplugininterface.h
===================================================================
--- src/3rdparty/accessplugin/accessplugininterface.h	(revision 0)
+++ src/3rdparty/accessplugin/accessplugininterface.h	(revision 43814)
@@ -0,0 +1,60 @@
+/****************************************************************************
+** Copyright (C) 2012 ACCESS, CO., LTD
+** All rights reserved.
+****************************************************************************/
+
+#ifndef QACCESSPLUGININTERFACE_H
+#define QACCESSPLUGININTERFACE_H
+
+/* undef for X11 */
+#undef Unsorted
+#undef Bool
+
+#include <QPluginLoader>
+#include <QDir>
+#include <QApplication>
+
+class QRawFontInterface;
+class QRasterPaintEngineInterface;
+class QFontEngineInterface;
+
+class ACCESSPluginInterface
+{
+
+public:
+    virtual ~ACCESSPluginInterface() = 0;
+    virtual QRawFontInterface * rawFontPlugin() = 0;
+    virtual QRasterPaintEngineInterface * rasterFontPlugin() = 0;
+    virtual QFontEngineInterface * fontEnginePlugin() = 0;
+};
+
+
+QT_BEGIN_NAMESPACE
+
+class ACCESSPlugin
+{
+    QStringList list;
+    QDir pluginsDir;
+    int i;
+public:
+    ACCESSPlugin() : i(-1){
+        pluginsDir = QDir(qApp->applicationDirPath());
+        pluginsDir.cd(QString::fromAscii("plugins", 7));
+        list = pluginsDir.entryList(QDir::Files);
+    }
+    QObject * next() {
+        i++;
+        if (i >= list.size())
+            return NULL;
+        QPluginLoader pluginLoader(pluginsDir.absoluteFilePath(list.at(i)));
+        return pluginLoader.instance();
+    }
+};
+
+
+Q_DECLARE_INTERFACE(ACCESSPluginInterface,
+                    "com.access_company.qt.Plugin.ACCESSPluginInterface/1.0");
+
+QT_END_NAMESPACE
+
+#endif
Index: src/3rdparty/harfbuzz/src/harfbuzz-shaper.h
===================================================================
--- src/3rdparty/harfbuzz/src/harfbuzz-shaper.h	(revision 36094)
+++ src/3rdparty/harfbuzz/src/harfbuzz-shaper.h	(revision 43814)
@@ -166,7 +166,8 @@
 typedef enum {
     HB_ShaperFlag_Default = 0,
     HB_ShaperFlag_NoKerning = 1,
-    HB_ShaperFlag_UseDesignMetrics = 2
+    HB_ShaperFlag_UseDesignMetrics = 2,
+    HB_ShaperFlag_VerticalWriting = 3,
 } HB_ShaperFlag;
 
 /* 
Index: src/3rdparty/harfbuzz/src/harfbuzz-shaper.cpp
===================================================================
--- src/3rdparty/harfbuzz/src/harfbuzz-shaper.cpp	(revision 36094)
+++ src/3rdparty/harfbuzz/src/harfbuzz-shaper.cpp	(revision 43814)
@@ -549,7 +549,7 @@
     // TODO: we need to add certain HB_ShaperFlag for vertical
     // writing mode to enable these vertical writing features:
     { HB_MAKE_TAG('v', 'a', 'l', 't'), PositioningProperties },
-    { HB_MAKE_TAG('v', 'h', 'a', 'l'), PositioningProperties },
+    // { HB_MAKE_TAG('v', 'h', 'a', 'l'), PositioningProperties },
     { HB_MAKE_TAG('v', 'k', 'r', 'n'), PositioningProperties },
     { HB_MAKE_TAG('v', 'p', 'a', 'l'), PositioningProperties },
     {0, 0}
@@ -648,7 +648,11 @@
     // Khmer
     { HB_KhmerShape, HB_KhmerAttributes },
     // N'Ko
-    { HB_ArabicShape, 0}
+    { HB_ArabicShape, 0},
+    // CJK Ideograph
+    { HB_BasicShape, 0 },
+    // Hiragana / Katakana
+    { HB_BasicShape, 0 }
 };
 
 void HB_GetCharAttributes(const HB_UChar16 *string, hb_uint32 stringLength,
@@ -891,7 +895,11 @@
     // Khmer
     { HB_MAKE_TAG('k', 'h', 'm', 'r'), 1 },
     // N'Ko
-    { HB_MAKE_TAG('n', 'k', 'o', ' '), 1 }
+    { HB_MAKE_TAG('n', 'k', 'o', ' '), 1 },
+    // CJK Ideograph
+    { HB_MAKE_TAG('h', 'a', 'n', 'i'), 1 },
+    // Hiragana / Katakana
+    { HB_MAKE_TAG('k', 'a', 'n', 'a'), 1 }
 };
 enum { NumOTScripts = sizeof(ot_scripts)/sizeof(OTScripts) };
 
@@ -1093,6 +1101,24 @@
                 }
                 ++features;
             }
+            if (face->current_flags & HB_ShaperFlag_VerticalWriting) {
+                HB_UInt tag = HB_MAKE_TAG('v', 'r', 't', '2');
+                HB_UShort feature_index;
+                error = HB_GSUB_Select_Feature(face->gsub, tag,
+                                               script_index, 0xffff, &feature_index);
+                if (!error) {
+                    DEBUG("  adding vertical feature %s", tag_to_string(tag));
+                    HB_GSUB_Add_Feature(face->gsub, feature_index, 1);
+                } else {
+                    tag = HB_MAKE_TAG('v', 'e', 'r', 't');
+                    error = HB_GSUB_Select_Feature(face->gsub, tag,
+                                                   script_index, 0xffff, &feature_index);
+                    if (!error) {
+                        DEBUG("  adding vertical feature %s", tag_to_string(tag));
+                        HB_GSUB_Add_Feature(face->gsub, feature_index, 1);
+                    }
+                }
+            }
         }
     }
 
@@ -1284,6 +1310,7 @@
         HB_GetGlyphAdvances(item);
         HB_Position positions = face->buffer->positions;
         HB_Fixed *advances = item->advances;
+        bool vertical = face->current_flags & HB_ShaperFlag_VerticalWriting;
 
 //         DEBUG("positioned glyphs:");
         for (unsigned int i = 0; i < face->buffer->in_length; i++) {
@@ -1293,7 +1320,7 @@
 //                    (int)(positions[i].x_pos >> 6), (int)(positions[i].y_pos >> 6),
 //                    positions[i].back, positions[i].new_advance);
 
-            HB_Fixed adjustment = positions[i].x_advance;
+            HB_Fixed adjustment = vertical ? positions[i].y_advance : positions[i].x_advance;
 
             if (!(face->current_flags & HB_ShaperFlag_UseDesignMetrics))
                 adjustment = HB_FIXED_ROUND(adjustment);
Index: tools/qttracereplay/qttracereplay.pro
===================================================================
--- tools/qttracereplay/qttracereplay.pro	(revision 36094)
+++ tools/qttracereplay/qttracereplay.pro	(revision 43814)
@@ -3,7 +3,8 @@
 DESTDIR     = ../../bin
 
 DEPENDPATH += .
-INCLUDEPATH += . ../../src/3rdparty/harfbuzz/src
+INCLUDEPATH += . ../../src/3rdparty/harfbuzz/src \
+                 ../../src/3rdparty/accessplugin
 TARGET = qttracereplay
 
 # Input
Index: tools/makeqpf/qpf2.cpp
===================================================================
--- tools/makeqpf/qpf2.cpp	(revision 36094)
+++ tools/makeqpf/qpf2.cpp	(revision 43814)
@@ -531,15 +531,17 @@
                 glyph->bytesPerLine = img.bytesPerLine();
                 glyph->x = qRound(metrics.x);
                 glyph->y = qRound(metrics.y);
-                glyph->advance = qRound(metrics.xoff);
+                glyph->advanceX = qRound(metrics.xoff);
+                glyph->advanceY = qRound(metrics.yoff);
                 data += sizeof(QFontEngineQPF::Glyph);
 
                 if (debugVerbosity && uc >= 'A' && uc <= 'z' || debugVerbosity > 1) {
                     qDebug() << "adding glyph with index" << glyphIndex << " uc =" << char(uc) << ":\n"
                         << "    glyph->x =" << glyph->x << "rounded from" << metrics.x << "\n"
                         << "    glyph->y =" << glyph->y << "rounded from" << metrics.y << "\n"
-                        << "    width =" << glyph->width << "height =" << glyph->height
-                        << "    advance =" << glyph->advance << "rounded from" << metrics.xoff
+                        << "    width =" << glyph->width << "height =" << glyph->height << "\n"
+                        << "    advanceX =" << glyph->advanceX << "rounded from" << metrics.xoff << "\n"
+                        << "    advanceY =" << glyph->advanceY << "rounded from" << metrics.yoff
                         ;
                 }
 
@@ -739,7 +741,8 @@
             qDebug() << "############: Glyph present in glyph block is not listed in glyph map!";
         qDebug("glyph at offset 0x%x glyphIndex = %u", quint32(glyphOffset), glyphIndex);
         qDebug() << "    width =" << g->width << "height =" << g->height << "x =" << g->x << "y =" << g->y;
-        qDebug() << "    advance =" << g->advance << "bytesPerLine =" << g->bytesPerLine;
+        qDebug() << "    advanceX =" << g->advanceX << "advanceY =" << g->advanceY;
+        qDebug() << "    bytesPerLine =" << g->bytesPerLine;
 
         data += sizeof(*g);
         if (glyphIndex == 0xffffffff || debugVerbosity > 4) {
Index: tools/designer/src/components/formeditor/line_propertysheet.cpp
===================================================================
--- tools/designer/src/components/formeditor/line_propertysheet.cpp	(revision 36094)
+++ tools/designer/src/components/formeditor/line_propertysheet.cpp	(revision 43814)
@@ -54,7 +54,7 @@
 
 using namespace qdesigner_internal;
 
-LinePropertySheet::LinePropertySheet(Line *object, QObject *parent)
+LinePropertySheet::LinePropertySheet(QDesignerLine *object, QObject *parent)
     : QDesignerPropertySheet(object, parent)
 {
     clearFakeProperties();
Index: tools/designer/src/components/formeditor/line_propertysheet.h
===================================================================
--- tools/designer/src/components/formeditor/line_propertysheet.h	(revision 36094)
+++ tools/designer/src/components/formeditor/line_propertysheet.h	(revision 43814)
@@ -55,7 +55,7 @@
     Q_OBJECT
     Q_INTERFACES(QDesignerPropertySheetExtension)
 public:
-    explicit LinePropertySheet(Line *object, QObject *parent = 0);
+    explicit LinePropertySheet(QDesignerLine *object, QObject *parent = 0);
     virtual ~LinePropertySheet();
 
     virtual void setProperty(int index, const QVariant &value);
@@ -63,7 +63,7 @@
     virtual QString propertyGroup(int index) const;
 };
 
-typedef QDesignerPropertySheetFactory<Line, LinePropertySheet> LinePropertySheetFactory;
+typedef QDesignerPropertySheetFactory<QDesignerLine, LinePropertySheet> LinePropertySheetFactory;
 }  // namespace qdesigner_internal
 
 QT_END_NAMESPACE
Index: tools/designer/src/lib/uilib/uilib.pri
===================================================================
--- tools/designer/src/lib/uilib/uilib.pri	(revision 36094)
+++ tools/designer/src/lib/uilib/uilib.pri	(revision 43814)
@@ -30,3 +30,5 @@
     HEADERS += $$PWD/formscriptrunner_p.h
     SOURCES += $$PWD/formscriptrunner.cpp
 }
+
+INCLUDEPATH += ../../../../src/3rdparty/harfbuzz/src ../../../../src/3rdparty/accessplugin
Index: tools/designer/src/lib/shared/qdesigner_widget_p.h
===================================================================
--- tools/designer/src/lib/shared/qdesigner_widget_p.h	(revision 36094)
+++ tools/designer/src/lib/shared/qdesigner_widget_p.h	(revision 43814)
@@ -102,12 +102,12 @@
     qdesigner_internal::FormWindowBase* m_formWindow;
 };
 
-class QDESIGNER_SHARED_EXPORT Line : public QFrame
+class QDESIGNER_SHARED_EXPORT QDesignerLine : public QFrame
 {
     Q_OBJECT
     Q_PROPERTY(Qt::Orientation orientation READ orientation WRITE setOrientation)
 public:
-    explicit Line(QWidget *parent) : QFrame(parent)
+    explicit QDesignerLine(QWidget *parent) : QFrame(parent)
     { setAttribute(Qt::WA_MouseNoMask); setFrameStyle(HLine | Sunken); }
 
     inline void setOrientation(Qt::Orientation orient)
Index: tools/designer/src/lib/shared/widgetfactory.cpp
===================================================================
--- tools/designer/src/lib/shared/widgetfactory.cpp	(revision 36094)
+++ tools/designer/src/lib/shared/widgetfactory.cpp	(revision 43814)
@@ -336,7 +336,7 @@
 
         // 2) Special widgets
         if (widgetName == m_strings.m_line) {
-            w = new Line(parentWidget);
+            w = new QDesignerLine(parentWidget);
         } else if (widgetName == m_strings.m_qDockWidget) {
             w = new QDesignerDockWidget(parentWidget);
         } else if (widgetName == m_strings.m_qMenuBar) {
Index: tools/designer/src/lib/shared/shared.pri
===================================================================
--- tools/designer/src/lib/shared/shared.pri	(revision 36094)
+++ tools/designer/src/lib/shared/shared.pri	(revision 43814)
@@ -197,3 +197,5 @@
     $$PWD/plugindialog.cpp
 
 RESOURCES += $$PWD/shared.qrc
+
+INCLUDEPATH += ../../../../src/3rdparty/harfbuzz/src ../../../../src/3rdparty/accessplugin
Index: tools/shared/deviceskin/skins/KoboTouch.skin/KoboTouch.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: tools/shared/deviceskin/skins/KoboTouch.skin/KoboTouch.png
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: tools/shared/deviceskin/skins/KoboTouch.skin/KoboTouch.skin
===================================================================
--- tools/shared/deviceskin/skins/KoboTouch.skin/KoboTouch.skin	(revision 0)
+++ tools/shared/deviceskin/skins/KoboTouch.skin/KoboTouch.skin	(revision 43814)
@@ -0,0 +1,9 @@
+[SkinFile]
+Up=KoboTouch.png
+Down=KoboTouchDown.png
+Screen=78 93 600 800
+Areas=2
+HasMouseHover=false
+
+"Home"       0x1000010   322 998 431 1013
+"Power"      0x1000000	 594 0 700 32
Index: tools/shared/deviceskin/skins/KoboTouch.skin/KoboTouch.psd
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: tools/shared/deviceskin/skins/KoboTouch.skin/KoboTouch.psd
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: tools/shared/deviceskin/skins/KoboTouch.skin/defaultbuttons.conf
===================================================================
--- tools/shared/deviceskin/skins/KoboTouch.skin/defaultbuttons.conf	(revision 0)
+++ tools/shared/deviceskin/skins/KoboTouch.skin/defaultbuttons.conf	(revision 43814)
@@ -0,0 +1,45 @@
+[Translation]
+File=QtopiaDefaults
+Context=Buttons
+[Menu]
+Rows=4
+Columns=3
+Map=123456789*0#
+Default=5
+1=Applications/camera.desktop
+2=Applications/datebook.desktop
+3=Applications
+4=Applications/qtmail.desktop
+5=Applications/addressbook.desktop
+6=Games
+7=Settings/Beaming.desktop
+8=Applications/simapp.desktop,Applications/calculator.desktop
+9=Settings
+*=Applications/mediarecorder.desktop
+0=Applications/todolist.desktop
+#=Documents
+Animator=Bounce
+AnimatorBackground=Radial
+[SoftKeys]
+Count=3
+Key0=Context1
+Key1=Select
+Key2=Back
+[SystemButtons]
+Count=5
+Key0=Context1
+Key1=Back
+Key2=Select
+Key3=Call
+Key4=Hangup
+[Button]
+Count=1
+[Button0]
+Name=Power Button
+Key=Hangup
+HeldActionService=Launcher
+HeldActionMessage=execute(QString)
+HeldActionArgs=@ByteArray(\0\0\0\x1\0\0\0\n\0\0\0\0\x10\0s\0h\0u\0t\0\x64\0o\0w\0n)
+[Device]
+PrimaryInput=Touchscreen
+
Index: tools/shared/deviceskin/skins/KoboTouch.skin/KoboTouchDown.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: tools/shared/deviceskin/skins/KoboTouch.skin/KoboTouchDown.png
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: include/Qt/qglyphrun.h
===================================================================
--- include/Qt/qglyphrun.h	(revision 36094)
+++ include/Qt/qglyphrun.h	(revision 43814)
@@ -1,9 +0,0 @@
-#ifndef QT_NO_QT_INCLUDE_WARN
-    #if defined(__GNUC__)
-        #warning "Inclusion of header files from include/Qt is deprecated."
-    #elif defined(_MSC_VER)
-        #pragma message("WARNING: Inclusion of header files from include/Qt is deprecated.")
-    #endif
-#endif
-
-#include "../QtGui/qglyphrun.h"
Index: include/QtGui/QGlyphRun
===================================================================
--- include/QtGui/QGlyphRun	(revision 36094)
+++ include/QtGui/QGlyphRun	(revision 43814)
@@ -1 +0,0 @@
-#include "qglyphrun.h"
Index: include/QtGui/qglyphrun.h
===================================================================
--- include/QtGui/qglyphrun.h	(revision 36094)
+++ include/QtGui/qglyphrun.h	(revision 43814)
@@ -1 +0,0 @@
-#include "../../src/gui/text/qglyphrun.h"
Index: include/QtGui/headers.pri
===================================================================
--- include/QtGui/headers.pri	(revision 36094)
+++ include/QtGui/headers.pri	(revision 43814)
@@ -1,3 +1,3 @@
-SYNCQT.HEADER_FILES = ../gui/painting/qbrush.h ../gui/painting/qcolor.h ../gui/painting/qcolormap.h ../gui/painting/qdrawutil.h ../gui/painting/qgraphicssystemhelper_symbian.h ../gui/painting/qmatrix.h ../gui/painting/qpaintdevice.h ../gui/painting/qpaintengine.h ../gui/painting/qpainter.h ../gui/painting/qpainterpath.h ../gui/painting/qpen.h ../gui/painting/qpolygon.h ../gui/painting/qprintengine.h ../gui/painting/qprinter.h ../gui/painting/qprinterinfo.h ../gui/painting/qregion.h ../gui/painting/qrgb.h ../gui/painting/qstylepainter.h ../gui/painting/qtransform.h ../gui/painting/qwmatrix.h ../gui/kernel/qaction.h ../gui/kernel/qactiongroup.h ../gui/kernel/qapplication.h ../gui/kernel/qboxlayout.h ../gui/kernel/qclipboard.h ../gui/kernel/qcursor.h ../gui/kernel/qdesktopwidget.h ../gui/kernel/qdrag.h ../gui/kernel/qevent.h ../gui/kernel/qformlayout.h ../gui/kernel/qgenericplugin_qpa.h ../gui/kernel/qgenericpluginfactory_qpa.h ../gui/kernel/qgesture.h ../gui/kernel/qgesturerecognizer.h ../gui/kernel/qgridlayout.h ../gui/kernel/qguifunctions_wince.h ../gui/kernel/qkeysequence.h ../gui/kernel/qlayout.h ../gui/kernel/qlayoutitem.h ../gui/kernel/qmacdefines_mac.h ../gui/kernel/qmime.h ../gui/kernel/qpalette.h ../gui/kernel/qplatformclipboard_qpa.h ../gui/kernel/qplatformcursor_qpa.h ../gui/kernel/qplatformeventloopintegration_qpa.h ../gui/kernel/qplatformglcontext_qpa.h ../gui/kernel/qplatformintegration_qpa.h ../gui/kernel/qplatformintegrationplugin_qpa.h ../gui/kernel/qplatformnativeinterface_qpa.h ../gui/kernel/qplatformscreen_qpa.h ../gui/kernel/qplatformwindow_qpa.h ../gui/kernel/qplatformwindowformat_qpa.h ../gui/kernel/qsessionmanager.h ../gui/kernel/qshortcut.h ../gui/kernel/qsizepolicy.h ../gui/kernel/qsound.h ../gui/kernel/qstackedlayout.h ../gui/kernel/qtooltip.h ../gui/kernel/qwhatsthis.h ../gui/kernel/qwidget.h ../gui/kernel/qwidgetaction.h ../gui/kernel/qwindowdefs.h ../gui/kernel/qwindowdefs_win.h ../gui/kernel/qwindowsysteminterface_qpa.h ../gui/kernel/qx11embed_x11.h ../gui/kernel/qx11info_x11.h ../gui/graphicsview/qgraphicsanchorlayout.h ../gui/graphicsview/qgraphicsgridlayout.h ../gui/graphicsview/qgraphicsitem.h ../gui/graphicsview/qgraphicsitemanimation.h ../gui/graphicsview/qgraphicslayout.h ../gui/graphicsview/qgraphicslayoutitem.h ../gui/graphicsview/qgraphicslinearlayout.h ../gui/graphicsview/qgraphicsproxywidget.h ../gui/graphicsview/qgraphicsscene.h ../gui/graphicsview/qgraphicssceneevent.h ../gui/graphicsview/qgraphicstransform.h ../gui/graphicsview/qgraphicsview.h ../gui/graphicsview/qgraphicswidget.h ../gui/statemachine/qkeyeventtransition.h ../gui/statemachine/qmouseeventtransition.h ../gui/image/qbitmap.h ../gui/image/qicon.h ../gui/image/qiconengine.h ../gui/image/qiconengineplugin.h ../gui/image/qimage.h ../gui/image/qimageiohandler.h ../gui/image/qimagereader.h ../gui/image/qimagewriter.h ../gui/image/qmovie.h ../gui/image/qpicture.h ../gui/image/qpictureformatplugin.h ../gui/image/qpixmap.h ../gui/image/qpixmapcache.h ../gui/text/qabstractfontengine_qws.h ../gui/text/qabstracttextdocumentlayout.h ../gui/text/qfont.h ../gui/text/qfontdatabase.h ../gui/text/qfontinfo.h ../gui/text/qfontmetrics.h ../gui/text/qglyphrun.h ../gui/text/qplatformfontdatabase_qpa.h ../gui/text/qrawfont.h ../gui/text/qstatictext.h ../gui/text/qsyntaxhighlighter.h ../gui/text/qtextcursor.h ../gui/text/qtextdocument.h ../gui/text/qtextdocumentfragment.h ../gui/text/qtextdocumentwriter.h ../gui/text/qtextformat.h ../gui/text/qtextlayout.h ../gui/text/qtextlist.h ../gui/text/qtextobject.h ../gui/text/qtextoption.h ../gui/text/qtexttable.h ../gui/math3d/qgenericmatrix.h ../gui/math3d/qmatrix4x4.h ../gui/math3d/qquaternion.h ../gui/math3d/qvector2d.h ../gui/math3d/qvector3d.h ../gui/math3d/qvector4d.h ../gui/widgets/qabstractbutton.h ../gui/widgets/qabstractscrollarea.h ../gui/widgets/qabstractslider.h ../gui/widgets/qabstractspinbox.h ../gui/widgets/qbuttongroup.h ../gui/widgets/qcalendarwidget.h ../gui/widgets/qcheckbox.h ../gui/widgets/qcombobox.h ../gui/widgets/qcommandlinkbutton.h ../gui/widgets/qdatetimeedit.h ../gui/widgets/qdial.h ../gui/widgets/qdialogbuttonbox.h ../gui/widgets/qdockwidget.h ../gui/widgets/qfocusframe.h ../gui/widgets/qfontcombobox.h ../gui/widgets/qframe.h ../gui/widgets/qgroupbox.h ../gui/widgets/qlabel.h ../gui/widgets/qlcdnumber.h ../gui/widgets/qlineedit.h ../gui/widgets/qmaccocoaviewcontainer_mac.h ../gui/widgets/qmacnativewidget_mac.h ../gui/widgets/qmainwindow.h ../gui/widgets/qmdiarea.h ../gui/widgets/qmdisubwindow.h ../gui/widgets/qmenu.h ../gui/widgets/qmenubar.h ../gui/widgets/qmenudata.h ../gui/widgets/qplaintextedit.h ../gui/widgets/qprintpreviewwidget.h ../gui/widgets/qprogressbar.h ../gui/widgets/qpushbutton.h ../gui/widgets/qradiobutton.h ../gui/widgets/qrubberband.h ../gui/widgets/qscrollarea.h ../gui/widgets/qscrollbar.h ../gui/widgets/qsizegrip.h ../gui/widgets/qslider.h ../gui/widgets/qspinbox.h ../gui/widgets/qsplashscreen.h ../gui/widgets/qsplitter.h ../gui/widgets/qstackedwidget.h ../gui/widgets/qstatusbar.h ../gui/widgets/qtabbar.h ../gui/widgets/qtabwidget.h ../gui/widgets/qtextbrowser.h ../gui/widgets/qtextedit.h ../gui/widgets/qtoolbar.h ../gui/widgets/qtoolbox.h ../gui/widgets/qtoolbutton.h ../gui/widgets/qvalidator.h ../gui/widgets/qworkspace.h ../gui/accessible/qaccessible.h ../gui/accessible/qaccessible2.h ../gui/accessible/qaccessiblebridge.h ../gui/accessible/qaccessibleobject.h ../gui/accessible/qaccessibleplugin.h ../gui/accessible/qaccessiblewidget.h ../gui/symbian/qsymbianevent.h ../gui/util/qcompleter.h ../gui/util/qdesktopservices.h ../gui/util/qsystemtrayicon.h ../gui/util/qundogroup.h ../gui/util/qundostack.h ../gui/util/qundoview.h ../gui/styles/qcdestyle.h ../gui/styles/qcleanlooksstyle.h ../gui/styles/qcommonstyle.h ../gui/styles/qgtkstyle.h ../gui/styles/qmacstyle_mac.h ../gui/styles/qmotifstyle.h ../gui/styles/qplastiquestyle.h ../gui/styles/qproxystyle.h ../gui/styles/qs60style.h ../gui/styles/qstyle.h ../gui/styles/qstylefactory.h ../gui/styles/qstyleoption.h ../gui/styles/qstyleplugin.h ../gui/styles/qwindowscestyle.h ../gui/styles/qwindowsmobilestyle.h ../gui/styles/qwindowsstyle.h ../gui/styles/qwindowsvistastyle.h ../gui/styles/qwindowsxpstyle.h ../gui/itemviews/qabstractitemdelegate.h ../gui/itemviews/qabstractitemview.h ../gui/itemviews/qabstractproxymodel.h ../gui/itemviews/qcolumnview.h ../gui/itemviews/qdatawidgetmapper.h ../gui/itemviews/qdirmodel.h ../gui/itemviews/qfileiconprovider.h ../gui/itemviews/qheaderview.h ../gui/itemviews/qidentityproxymodel.h ../gui/itemviews/qitemdelegate.h ../gui/itemviews/qitemeditorfactory.h ../gui/itemviews/qitemselectionmodel.h ../gui/itemviews/qlistview.h ../gui/itemviews/qlistwidget.h ../gui/itemviews/qproxymodel.h ../gui/itemviews/qsortfilterproxymodel.h ../gui/itemviews/qstandarditemmodel.h ../gui/itemviews/qstringlistmodel.h ../gui/itemviews/qstyleditemdelegate.h ../gui/itemviews/qtableview.h ../gui/itemviews/qtablewidget.h ../gui/itemviews/qtreeview.h ../gui/itemviews/qtreewidget.h ../gui/itemviews/qtreewidgetitemiterator.h ../gui/effects/qgraphicseffect.h ../gui/s60framework/qs60mainapplication.h ../gui/s60framework/qs60mainappui.h ../gui/s60framework/qs60maindocument.h ../gui/inputmethod/qinputcontext.h ../gui/inputmethod/qinputcontextfactory.h ../gui/inputmethod/qinputcontextplugin.h ../gui/dialogs/qabstractpagesetupdialog.h ../gui/dialogs/qabstractprintdialog.h ../gui/dialogs/qcolordialog.h ../gui/dialogs/qdialog.h ../gui/dialogs/qerrormessage.h ../gui/dialogs/qfiledialog.h ../gui/dialogs/qfilesystemmodel.h ../gui/dialogs/qfontdialog.h ../gui/dialogs/qinputdialog.h ../gui/dialogs/qmessagebox.h ../gui/dialogs/qpagesetupdialog.h ../gui/dialogs/qprintdialog.h ../gui/dialogs/qprintpreviewdialog.h ../gui/dialogs/qprogressdialog.h ../gui/dialogs/qwizard.h ../gui/embedded/qcopchannel_qws.h ../gui/embedded/qdecoration_qws.h ../gui/embedded/qdecorationdefault_qws.h ../gui/embedded/qdecorationfactory_qws.h ../gui/embedded/qdecorationplugin_qws.h ../gui/embedded/qdecorationstyled_qws.h ../gui/embedded/qdecorationwindows_qws.h ../gui/embedded/qdirectpainter_qws.h ../gui/embedded/qkbd_qws.h ../gui/embedded/qkbddriverfactory_qws.h ../gui/embedded/qkbddriverplugin_qws.h ../gui/embedded/qkbdintegrity_qws.h ../gui/embedded/qkbdlinuxinput_qws.h ../gui/embedded/qkbdqnx_qws.h ../gui/embedded/qkbdtty_qws.h ../gui/embedded/qkbdum_qws.h ../gui/embedded/qkbdvfb_qws.h ../gui/embedded/qmouse_qws.h ../gui/embedded/qmousedriverfactory_qws.h ../gui/embedded/qmousedriverplugin_qws.h ../gui/embedded/qmouseintegrity_qws.h ../gui/embedded/qmouselinuxinput_qws.h ../gui/embedded/qmouselinuxtp_qws.h ../gui/embedded/qmousepc_qws.h ../gui/embedded/qmouseqnx_qws.h ../gui/embedded/qmousetslib_qws.h ../gui/embedded/qmousevfb_qws.h ../gui/embedded/qscreen_qws.h ../gui/embedded/qscreendriverfactory_qws.h ../gui/embedded/qscreendriverplugin_qws.h ../gui/embedded/qscreenintegrityfb_qws.h ../gui/embedded/qscreenlinuxfb_qws.h ../gui/embedded/qscreenproxy_qws.h ../gui/embedded/qscreenqnx_qws.h ../gui/embedded/qscreentransformed_qws.h ../gui/embedded/qscreenvfb_qws.h ../gui/embedded/qsoundqss_qws.h ../gui/embedded/qtransportauth_qws.h ../gui/embedded/qtransportauthdefs_qws.h ../gui/embedded/qvfbhdr.h ../gui/embedded/qwindowsystem_qws.h ../gui/embedded/qwscursor_qws.h ../gui/embedded/qwsdisplay_qws.h ../gui/embedded/qwsembedwidget.h ../gui/embedded/qwsevent_qws.h ../gui/embedded/qwsmanager_qws.h ../gui/embedded/qwsproperty_qws.h ../gui/embedded/qwsprotocolitem_qws.h ../gui/embedded/qwssocket_qws.h ../gui/embedded/qwsutils_qws.h ../../include/QtGui/QtGui 
-SYNCQT.HEADER_CLASSES = ../../include/QtGui/QBrush ../../include/QtGui/QBrushData ../../include/QtGui/QGradientStop ../../include/QtGui/QGradientStops ../../include/QtGui/QGradient ../../include/QtGui/QLinearGradient ../../include/QtGui/QRadialGradient ../../include/QtGui/QConicalGradient ../../include/QtGui/QColor ../../include/QtGui/QColormap ../../include/QtGui/QTileRules ../../include/QtGui/QSymbianGraphicsSystemHelper ../../include/QtGui/QMatrix ../../include/QtGui/QPaintDevice ../../include/QtGui/QTextItem ../../include/QtGui/QPaintEngine ../../include/QtGui/QPaintEngineState ../../include/QtGui/QPainter ../../include/QtGui/QPainterPath ../../include/QtGui/QPainterPathPrivate ../../include/QtGui/QPainterPathStroker ../../include/QtGui/QPen ../../include/QtGui/QPolygon ../../include/QtGui/QPolygonF ../../include/QtGui/QPrintEngine ../../include/QtGui/QPrinter ../../include/QtGui/QPrinterInfo ../../include/QtGui/QRegion ../../include/QtGui/QRgb ../../include/QtGui/QStylePainter ../../include/QtGui/QTransform ../../include/QtGui/QWMatrix ../../include/QtGui/QAction ../../include/QtGui/QActionGroup ../../include/QtGui/QApplication ../../include/QtGui/QBoxLayout ../../include/QtGui/QHBoxLayout ../../include/QtGui/QVBoxLayout ../../include/QtGui/QClipboard ../../include/QtGui/QCursor ../../include/QtGui/QCursorShape ../../include/QtGui/QDesktopWidget ../../include/QtGui/QDrag ../../include/QtGui/QtEvents ../../include/QtGui/QInputEvent ../../include/QtGui/QMouseEvent ../../include/QtGui/QHoverEvent ../../include/QtGui/QWheelEvent ../../include/QtGui/QTabletEvent ../../include/QtGui/QKeyEvent ../../include/QtGui/QFocusEvent ../../include/QtGui/QPaintEvent ../../include/QtGui/QUpdateLaterEvent ../../include/QtGui/QMoveEvent ../../include/QtGui/QResizeEvent ../../include/QtGui/QCloseEvent ../../include/QtGui/QIconDragEvent ../../include/QtGui/QShowEvent ../../include/QtGui/QHideEvent ../../include/QtGui/QContextMenuEvent ../../include/QtGui/QInputMethodEvent ../../include/QtGui/QDropEvent ../../include/QtGui/QDragMoveEvent ../../include/QtGui/QDragEnterEvent ../../include/QtGui/QDragResponseEvent ../../include/QtGui/QDragLeaveEvent ../../include/QtGui/QHelpEvent ../../include/QtGui/QStatusTipEvent ../../include/QtGui/QWhatsThisClickedEvent ../../include/QtGui/QActionEvent ../../include/QtGui/QFileOpenEvent ../../include/QtGui/QToolBarChangeEvent ../../include/QtGui/QShortcutEvent ../../include/QtGui/QClipboardEvent ../../include/QtGui/QWindowStateChangeEvent ../../include/QtGui/QMenubarUpdatedEvent ../../include/QtGui/QTouchEvent ../../include/QtGui/QGestureEvent ../../include/QtGui/QFormLayout ../../include/QtGui/QGenericPluginFactoryInterface ../../include/QtGui/QGenericPlugin ../../include/QtGui/QGenericPluginFactory ../../include/QtGui/QGesture ../../include/QtGui/QPanGesture ../../include/QtGui/QPinchGesture ../../include/QtGui/QSwipeGesture ../../include/QtGui/QTapGesture ../../include/QtGui/QTapAndHoldGesture ../../include/QtGui/QGestureRecognizer ../../include/QtGui/QGridLayout ../../include/QtGui/QKeySequence ../../include/QtGui/QLayoutIterator ../../include/QtGui/QLayout ../../include/QtGui/QLayoutItem ../../include/QtGui/QSpacerItem ../../include/QtGui/QWidgetItem ../../include/QtGui/QWidgetItemV2 ../../include/QtGui/QMimeSource ../../include/QtGui/QWindowsMime ../../include/QtGui/QMacMime ../../include/QtGui/QMacPasteboardMime ../../include/QtGui/QPalette ../../include/QtGui/QColorGroup ../../include/QtGui/QPlatformClipboard ../../include/QtGui/QPlatformCursorImage ../../include/QtGui/QPlatformCursorPrivate ../../include/QtGui/QPlatformCursor ../../include/QtGui/QPlatformEventLoopIntegration ../../include/QtGui/QPlatformGLContext ../../include/QtGui/QPlatformIntegration ../../include/QtGui/QPlatformIntegrationFactoryInterface ../../include/QtGui/QPlatformIntegrationPlugin ../../include/QtGui/QPlatformNativeInterface ../../include/QtGui/QPlatformScreen ../../include/QtGui/QPlatformWindow ../../include/QtGui/QPlatformWindowFormat ../../include/QtGui/QSessionManager ../../include/QtGui/QShortcut ../../include/QtGui/QSizePolicy ../../include/QtGui/QSound ../../include/QtGui/QStackedLayout ../../include/QtGui/QToolTip ../../include/QtGui/QWhatsThis ../../include/QtGui/QWidgetData ../../include/QtGui/QWidget ../../include/QtGui/QWidgetAction ../../include/QtGui/QWidgetList ../../include/QtGui/QWidgetMapper ../../include/QtGui/QWidgetSet ../../include/QtGui/QWindowSystemInterface ../../include/QtGui/QX11EmbedWidget ../../include/QtGui/QX11EmbedContainer ../../include/QtGui/QX11Info ../../include/QtGui/QGraphicsAnchor ../../include/QtGui/QGraphicsAnchorLayout ../../include/QtGui/QGraphicsGridLayout ../../include/QtGui/QGraphicsItem ../../include/QtGui/QGraphicsObject ../../include/QtGui/QAbstractGraphicsShapeItem ../../include/QtGui/QGraphicsPathItem ../../include/QtGui/QGraphicsRectItem ../../include/QtGui/QGraphicsEllipseItem ../../include/QtGui/QGraphicsPolygonItem ../../include/QtGui/QGraphicsLineItem ../../include/QtGui/QGraphicsPixmapItem ../../include/QtGui/QGraphicsTextItem ../../include/QtGui/QGraphicsSimpleTextItem ../../include/QtGui/QGraphicsItemGroup ../../include/QtGui/QGraphicsItemAnimation ../../include/QtGui/QGraphicsLayout ../../include/QtGui/QGraphicsLayoutItem ../../include/QtGui/QGraphicsLinearLayout ../../include/QtGui/QGraphicsProxyWidget ../../include/QtGui/QGraphicsScene ../../include/QtGui/QGraphicsSceneEvent ../../include/QtGui/QGraphicsSceneMouseEvent ../../include/QtGui/QGraphicsSceneWheelEvent ../../include/QtGui/QGraphicsSceneContextMenuEvent ../../include/QtGui/QGraphicsSceneHoverEvent ../../include/QtGui/QGraphicsSceneHelpEvent ../../include/QtGui/QGraphicsSceneDragDropEvent ../../include/QtGui/QGraphicsSceneResizeEvent ../../include/QtGui/QGraphicsSceneMoveEvent ../../include/QtGui/QGraphicsTransform ../../include/QtGui/QGraphicsScale ../../include/QtGui/QGraphicsRotation ../../include/QtGui/QGraphicsView ../../include/QtGui/QGraphicsWidget ../../include/QtGui/QKeyEventTransition ../../include/QtGui/QMouseEventTransition ../../include/QtGui/QBitmap ../../include/QtGui/QIcon ../../include/QtGui/QIconSet ../../include/QtGui/QIconEngine ../../include/QtGui/QIconEngineV2 ../../include/QtGui/QIconEngineFactoryInterface ../../include/QtGui/QIconEnginePlugin ../../include/QtGui/QIconEngineFactoryInterfaceV2 ../../include/QtGui/QIconEnginePluginV2 ../../include/QtGui/QImageTextKeyLang ../../include/QtGui/QImage ../../include/QtGui/QImageIOHandler ../../include/QtGui/QImageIOHandlerFactoryInterface ../../include/QtGui/QImageIOPlugin ../../include/QtGui/QImageReader ../../include/QtGui/QImageWriter ../../include/QtGui/QMovie ../../include/QtGui/QPicture ../../include/QtGui/QPictureIO ../../include/QtGui/QPictureFormatInterface ../../include/QtGui/QPictureFormatPlugin ../../include/QtGui/QPixmap ../../include/QtGui/QPixmapCache ../../include/QtGui/QFontEngineInfo ../../include/QtGui/QFontEngineFactoryInterface ../../include/QtGui/QFontEnginePlugin ../../include/QtGui/QAbstractFontEngine ../../include/QtGui/QAbstractTextDocumentLayout ../../include/QtGui/QTextObjectInterface ../../include/QtGui/QFont ../../include/QtGui/QFontDatabase ../../include/QtGui/QFontInfo ../../include/QtGui/QFontMetrics ../../include/QtGui/QFontMetricsF ../../include/QtGui/QGlyphRun ../../include/QtGui/QSupportedWritingSystems ../../include/QtGui/QPlatformFontDatabase ../../include/QtGui/QRawFont ../../include/QtGui/QStaticText ../../include/QtGui/QSyntaxHighlighter ../../include/QtGui/QTextCursor ../../include/QtGui/QAbstractUndoItem ../../include/QtGui/QTextDocument ../../include/QtGui/QTextDocumentFragment ../../include/QtGui/QTextDocumentWriter ../../include/QtGui/QTextLength ../../include/QtGui/QTextFormat ../../include/QtGui/QTextCharFormat ../../include/QtGui/QTextBlockFormat ../../include/QtGui/QTextListFormat ../../include/QtGui/QTextImageFormat ../../include/QtGui/QTextFrameFormat ../../include/QtGui/QTextTableFormat ../../include/QtGui/QTextTableCellFormat ../../include/QtGui/QTextInlineObject ../../include/QtGui/QTextLayout ../../include/QtGui/QTextLine ../../include/QtGui/QTextList ../../include/QtGui/QTextObject ../../include/QtGui/QTextBlockGroup ../../include/QtGui/QTextFrameLayoutData ../../include/QtGui/QTextFrame ../../include/QtGui/QTextBlockUserData ../../include/QtGui/QTextBlock ../../include/QtGui/QTextFragment ../../include/QtGui/QTextOption ../../include/QtGui/QTextTableCell ../../include/QtGui/QTextTable ../../include/QtGui/QGenericMatrix ../../include/QtGui/QMatrix2x2 ../../include/QtGui/QMatrix2x3 ../../include/QtGui/QMatrix2x4 ../../include/QtGui/QMatrix3x2 ../../include/QtGui/QMatrix3x3 ../../include/QtGui/QMatrix3x4 ../../include/QtGui/QMatrix4x2 ../../include/QtGui/QMatrix4x3 ../../include/QtGui/QMatrix4x4 ../../include/QtGui/QQuaternion ../../include/QtGui/QVector2D ../../include/QtGui/QVector3D ../../include/QtGui/QVector4D ../../include/QtGui/QAbstractButton ../../include/QtGui/QAbstractScrollArea ../../include/QtGui/QAbstractSlider ../../include/QtGui/QAbstractSpinBox ../../include/QtGui/QButtonGroup ../../include/QtGui/QCalendarWidget ../../include/QtGui/QCheckBox ../../include/QtGui/QComboBox ../../include/QtGui/QCommandLinkButton ../../include/QtGui/QDateTimeEdit ../../include/QtGui/QTimeEdit ../../include/QtGui/QDateEdit ../../include/QtGui/QDial ../../include/QtGui/QDialogButtonBox ../../include/QtGui/QDockWidget ../../include/QtGui/QFocusFrame ../../include/QtGui/QFontComboBox ../../include/QtGui/QFrame ../../include/QtGui/QGroupBox ../../include/QtGui/QLabel ../../include/QtGui/QLCDNumber ../../include/QtGui/QLineEdit ../../include/QtGui/QMacCocoaViewContainer ../../include/QtGui/QMacNativeWidget ../../include/QtGui/QMainWindow ../../include/QtGui/QMdiArea ../../include/QtGui/QMdiSubWindow ../../include/QtGui/QMenu ../../include/QtGui/QMenuBar ../../include/QtGui/QMenuItem ../../include/QtGui/QPlainTextEdit ../../include/QtGui/QPlainTextDocumentLayout ../../include/QtGui/QPrintPreviewWidget ../../include/QtGui/QProgressBar ../../include/QtGui/QPushButton ../../include/QtGui/QRadioButton ../../include/QtGui/QRubberBand ../../include/QtGui/QScrollArea ../../include/QtGui/QScrollBar ../../include/QtGui/QSizeGrip ../../include/QtGui/QSlider ../../include/QtGui/QSpinBox ../../include/QtGui/QDoubleSpinBox ../../include/QtGui/QSplashScreen ../../include/QtGui/QSplitter ../../include/QtGui/QSplitterHandle ../../include/QtGui/QStackedWidget ../../include/QtGui/QStatusBar ../../include/QtGui/QTabBar ../../include/QtGui/QTabWidget ../../include/QtGui/QTextBrowser ../../include/QtGui/QTextEdit ../../include/QtGui/QToolBar ../../include/QtGui/QToolBox ../../include/QtGui/QToolButton ../../include/QtGui/QValidator ../../include/QtGui/QIntValidator ../../include/QtGui/QDoubleValidator ../../include/QtGui/QRegExpValidator ../../include/QtGui/QWorkspace ../../include/QtGui/QAccessible ../../include/QtGui/QAccessibleInterface ../../include/QtGui/QAccessibleInterfaceEx ../../include/QtGui/QAccessibleEvent ../../include/QtGui/QAccessible2Interface ../../include/QtGui/QAccessibleTextInterface ../../include/QtGui/QAccessibleEditableTextInterface ../../include/QtGui/QAccessibleSimpleEditableTextInterface ../../include/QtGui/QAccessibleValueInterface ../../include/QtGui/QAccessibleTableInterface ../../include/QtGui/QAccessibleTable2CellInterface ../../include/QtGui/QAccessibleTable2Interface ../../include/QtGui/QAccessibleActionInterface ../../include/QtGui/QAccessibleImageInterface ../../include/QtGui/QAccessibleBridge ../../include/QtGui/QAccessibleBridgeFactoryInterface ../../include/QtGui/QAccessibleBridgePlugin ../../include/QtGui/QAccessibleObject ../../include/QtGui/QAccessibleObjectEx ../../include/QtGui/QAccessibleApplication ../../include/QtGui/QAccessibleFactoryInterface ../../include/QtGui/QAccessiblePlugin ../../include/QtGui/QAccessibleWidget ../../include/QtGui/QAccessibleWidgetEx ../../include/QtGui/QSymbianEvent ../../include/QtGui/QCompleter ../../include/QtGui/QDesktopServices ../../include/QtGui/QSystemTrayIcon ../../include/QtGui/QUndoGroup ../../include/QtGui/QUndoCommand ../../include/QtGui/QUndoStack ../../include/QtGui/QUndoView ../../include/QtGui/QCDEStyle ../../include/QtGui/QCleanlooksStyle ../../include/QtGui/QCommonStyle ../../include/QtGui/QGtkStyle ../../include/QtGui/QMacStyle ../../include/QtGui/QMotifStyle ../../include/QtGui/QPlastiqueStyle ../../include/QtGui/QProxyStyle ../../include/QtGui/QS60Style ../../include/QtGui/QStyle ../../include/QtGui/QStyleFactory ../../include/QtGui/QStyleOption ../../include/QtGui/QStyleOptionFocusRect ../../include/QtGui/QStyleOptionFrame ../../include/QtGui/QStyleOptionFrameV2 ../../include/QtGui/QStyleOptionFrameV3 ../../include/QtGui/QStyleOptionTabWidgetFrame ../../include/QtGui/QStyleOptionTabWidgetFrameV2 ../../include/QtGui/QStyleOptionTabBarBase ../../include/QtGui/QStyleOptionTabBarBaseV2 ../../include/QtGui/QStyleOptionHeader ../../include/QtGui/QStyleOptionButton ../../include/QtGui/QStyleOptionTab ../../include/QtGui/QStyleOptionTabV2 ../../include/QtGui/QStyleOptionTabV3 ../../include/QtGui/QStyleOptionToolBar ../../include/QtGui/QStyleOptionProgressBar ../../include/QtGui/QStyleOptionProgressBarV2 ../../include/QtGui/QStyleOptionMenuItem ../../include/QtGui/QStyleOptionQ3ListViewItem ../../include/QtGui/QStyleOptionQ3DockWindow ../../include/QtGui/QStyleOptionDockWidget ../../include/QtGui/QStyleOptionDockWidgetV2 ../../include/QtGui/QStyleOptionViewItem ../../include/QtGui/QStyleOptionViewItemV2 ../../include/QtGui/QStyleOptionViewItemV3 ../../include/QtGui/QStyleOptionViewItemV4 ../../include/QtGui/QStyleOptionToolBox ../../include/QtGui/QStyleOptionToolBoxV2 ../../include/QtGui/QStyleOptionRubberBand ../../include/QtGui/QStyleOptionComplex ../../include/QtGui/QStyleOptionSlider ../../include/QtGui/QStyleOptionSpinBox ../../include/QtGui/QStyleOptionQ3ListView ../../include/QtGui/QStyleOptionToolButton ../../include/QtGui/QStyleOptionComboBox ../../include/QtGui/QStyleOptionTitleBar ../../include/QtGui/QStyleOptionGroupBox ../../include/QtGui/QStyleOptionSizeGrip ../../include/QtGui/QStyleOptionGraphicsItem ../../include/QtGui/QStyleHintReturn ../../include/QtGui/QStyleHintReturnMask ../../include/QtGui/QStyleHintReturnVariant ../../include/QtGui/QStyleFactoryInterface ../../include/QtGui/QStylePlugin ../../include/QtGui/QWindowsCEStyle ../../include/QtGui/QWindowsMobileStyle ../../include/QtGui/QWindowsStyle ../../include/QtGui/QWindowsVistaStyle ../../include/QtGui/QWindowsXPStyle ../../include/QtGui/QAbstractItemDelegate ../../include/QtGui/QAbstractItemView ../../include/QtGui/QAbstractProxyModel ../../include/QtGui/QColumnView ../../include/QtGui/QDataWidgetMapper ../../include/QtGui/QDirModel ../../include/QtGui/QFileIconProvider ../../include/QtGui/QHeaderView ../../include/QtGui/QIdentityProxyModel ../../include/QtGui/QItemDelegate ../../include/QtGui/QItemEditorCreatorBase ../../include/QtGui/QItemEditorCreator ../../include/QtGui/QStandardItemEditorCreator ../../include/QtGui/QItemEditorFactory ../../include/QtGui/QItemSelectionRange ../../include/QtGui/QItemSelectionModel ../../include/QtGui/QItemSelection ../../include/QtGui/QListView ../../include/QtGui/QListWidgetItem ../../include/QtGui/QListWidget ../../include/QtGui/QProxyModel ../../include/QtGui/QSortFilterProxyModel ../../include/QtGui/QStandardItem ../../include/QtGui/QStandardItemModel ../../include/QtGui/QStringListModel ../../include/QtGui/QStyledItemDelegate ../../include/QtGui/QTableView ../../include/QtGui/QTableWidgetSelectionRange ../../include/QtGui/QTableWidgetItem ../../include/QtGui/QTableWidget ../../include/QtGui/QTreeView ../../include/QtGui/QTreeWidgetItem ../../include/QtGui/QTreeWidget ../../include/QtGui/QTreeWidgetItemIterator ../../include/QtGui/QGraphicsEffect ../../include/QtGui/QGraphicsColorizeEffect ../../include/QtGui/QGraphicsBlurEffect ../../include/QtGui/QGraphicsDropShadowEffect ../../include/QtGui/QGraphicsOpacityEffect ../../include/QtGui/QS60MainApplicationBase ../../include/QtGui/QS60MainApplication ../../include/QtGui/QS60MainAppUiBase ../../include/QtGui/QS60StubAknAppUiBase ../../include/QtGui/QS60StubMEikStatusPaneObserver ../../include/QtGui/QS60StubMAknTouchPaneObserver ../../include/QtGui/QS60StubAknAppUi ../../include/QtGui/QS60MainAppUi ../../include/QtGui/QS60MainDocumentBase ../../include/QtGui/QS60MainDocument ../../include/QtGui/QInputContext ../../include/QtGui/QInputContextFactory ../../include/QtGui/QInputContextFactoryInterface ../../include/QtGui/QInputContextPlugin ../../include/QtGui/QAbstractPageSetupDialog ../../include/QtGui/QAbstractPrintDialog ../../include/QtGui/QColorDialog ../../include/QtGui/QDialog ../../include/QtGui/QErrorMessage ../../include/QtGui/QFileDialog ../../include/QtGui/QFileSystemModel ../../include/QtGui/QFontDialog ../../include/QtGui/QInputDialog ../../include/QtGui/QMessageBox ../../include/QtGui/QPageSetupDialog ../../include/QtGui/QUnixPrintWidget ../../include/QtGui/QPrintDialog ../../include/QtGui/QPrintPreviewDialog ../../include/QtGui/QProgressDialog ../../include/QtGui/QWizard ../../include/QtGui/QWizardPage ../../include/QtGui/QCopChannel ../../include/QtGui/QDecorationAction ../../include/QtGui/QDecoration ../../include/QtGui/QDecorationDefault ../../include/QtGui/QDecorationFactory ../../include/QtGui/QDecorationFactoryInterface ../../include/QtGui/QDecorationPlugin ../../include/QtGui/QDecorationStyled ../../include/QtGui/QDecorationWindows ../../include/QtGui/QDirectPainter ../../include/QtGui/QWSKeyboardHandler ../../include/QtGui/QKbdDriverFactory ../../include/QtGui/QWSKeyboardHandlerFactoryInterface ../../include/QtGui/QKbdDriverPlugin ../../include/QtGui/QWSIntKeyboardHandler ../../include/QtGui/QWSLinuxInputKeyboardHandler ../../include/QtGui/QWSQnxKeyboardHandler ../../include/QtGui/QWSTtyKeyboardHandler ../../include/QtGui/QWSUmKeyboardHandler ../../include/QtGui/QVFbKeyboardHandler ../../include/QtGui/QWSPointerCalibrationData ../../include/QtGui/QWSMouseHandler ../../include/QtGui/QWSCalibratedMouseHandler ../../include/QtGui/QMouseDriverFactory ../../include/QtGui/QWSMouseHandlerFactoryInterface ../../include/QtGui/QMouseDriverPlugin ../../include/QtGui/QIntMouseHandler ../../include/QtGui/QWSLinuxInputMouseHandler ../../include/QtGui/QWSLinuxTPMouseHandler ../../include/QtGui/QWSPcMouseHandler ../../include/QtGui/QQnxMouseHandler ../../include/QtGui/QWSTslibMouseHandler ../../include/QtGui/QVFbMouseHandler ../../include/QtGui/QScreenCursor ../../include/QtGui/QPoolEntry ../../include/QtGui/QScreen ../../include/QtGui/QScreenDriverFactory ../../include/QtGui/QScreenDriverFactoryInterface ../../include/QtGui/QScreenDriverPlugin ../../include/QtGui/QIntfbScreen ../../include/QtGui/QLinuxFb_Shared ../../include/QtGui/QLinuxFbScreen ../../include/QtGui/QProxyScreenCursor ../../include/QtGui/QProxyScreen ../../include/QtGui/QQnxScreen ../../include/QtGui/QTransformedScreen ../../include/QtGui/QVFbScreen ../../include/QtGui/QWSSoundServer ../../include/QtGui/QWSSoundClient ../../include/QtGui/QWSSoundServerSocket ../../include/QtGui/QTransportAuth ../../include/QtGui/QAuthDevice ../../include/QtGui/QVFbHeader ../../include/QtGui/QVFbKeyData ../../include/QtGui/QWSInternalWindowInfo ../../include/QtGui/QWSScreenSaver ../../include/QtGui/QWSWindow ../../include/QtGui/QWSServer ../../include/QtGui/QWSInputMethod ../../include/QtGui/QWSCursorMap ../../include/QtGui/QWSClient ../../include/QtGui/QWSCursor ../../include/QtGui/QWSWindowInfo ../../include/QtGui/QWSDisplay ../../include/QtGui/QWSEmbedWidget ../../include/QtGui/QWSEvent ../../include/QtGui/QWSManager ../../include/QtGui/QWSPropertyManager ../../include/QtGui/QWSProtocolItem ../../include/QtGui/QWSSocket ../../include/QtGui/QWSServerSocket 
-SYNCQT.PRIVATE_HEADER_FILES = ../gui/egl/qegl_p.h ../gui/egl/qeglcontext_p.h ../gui/egl/qeglproperties_p.h ../gui/painting/qbackingstore_p.h ../gui/painting/qbezier_p.h ../gui/painting/qblendfunctions_p.h ../gui/painting/qblittable_p.h ../gui/painting/qcolor_p.h ../gui/painting/qcosmeticstroker_p.h ../gui/painting/qcssutil_p.h ../gui/painting/qcups_p.h ../gui/painting/qdatabuffer_p.h ../gui/painting/qdrawhelper_arm_simd_p.h ../gui/painting/qdrawhelper_mmx_p.h ../gui/painting/qdrawhelper_neon_p.h ../gui/painting/qdrawhelper_p.h ../gui/painting/qdrawhelper_sse_p.h ../gui/painting/qdrawhelper_x86_p.h ../gui/painting/qdrawingprimitive_sse2_p.h ../gui/painting/qemulationpaintengine_p.h ../gui/painting/qfixed_p.h ../gui/painting/qgraphicssystem_mac_p.h ../gui/painting/qgraphicssystem_p.h ../gui/painting/qgraphicssystem_qws_p.h ../gui/painting/qgraphicssystem_raster_p.h ../gui/painting/qgraphicssystem_runtime_p.h ../gui/painting/qgraphicssystemex_p.h ../gui/painting/qgraphicssystemex_symbian_p.h ../gui/painting/qgraphicssystemfactory_p.h ../gui/painting/qgraphicssystemplugin_p.h ../gui/painting/qgrayraster_p.h ../gui/painting/qimagescale_p.h ../gui/painting/qmath_p.h ../gui/painting/qmemrotate_p.h ../gui/painting/qoutlinemapper_p.h ../gui/painting/qpaintbuffer_p.h ../gui/painting/qpaintengine_alpha_p.h ../gui/painting/qpaintengine_blitter_p.h ../gui/painting/qpaintengine_mac_p.h ../gui/painting/qpaintengine_p.h ../gui/painting/qpaintengine_preview_p.h ../gui/painting/qpaintengine_raster_p.h ../gui/painting/qpaintengine_raster_symbian_p.h ../gui/painting/qpaintengine_x11_p.h ../gui/painting/qpaintengineex_p.h ../gui/painting/qpainter_p.h ../gui/painting/qpainterpath_p.h ../gui/painting/qpathclipper_p.h ../gui/painting/qpdf_p.h ../gui/painting/qpen_p.h ../gui/painting/qpolygonclipper_p.h ../gui/painting/qprintengine_mac_p.h ../gui/painting/qprintengine_pdf_p.h ../gui/painting/qprintengine_ps_p.h ../gui/painting/qprintengine_qws_p.h ../gui/painting/qprintengine_win_p.h ../gui/painting/qprinter_p.h ../gui/painting/qprinterinfo_p.h ../gui/painting/qprinterinfo_unix_p.h ../gui/painting/qrasterdefs_p.h ../gui/painting/qrasterizer_p.h ../gui/painting/qstroker_p.h ../gui/painting/qtessellator_p.h ../gui/painting/qtextureglyphcache_p.h ../gui/painting/qunifiedtoolbarsurface_mac_p.h ../gui/painting/qvectorpath_p.h ../gui/painting/qwindowsurface_mac_p.h ../gui/painting/qwindowsurface_p.h ../gui/painting/qwindowsurface_qws_p.h ../gui/painting/qwindowsurface_raster_p.h ../gui/painting/qwindowsurface_s60_p.h ../gui/painting/qwindowsurface_x11_p.h ../gui/kernel/qaction_p.h ../gui/kernel/qapplication_p.h ../gui/kernel/qclipboard_p.h ../gui/kernel/qcocoaapplication_mac_p.h ../gui/kernel/qcocoaapplicationdelegate_mac_p.h ../gui/kernel/qcocoaintrospection_p.h ../gui/kernel/qcocoamenuloader_mac_p.h ../gui/kernel/qcocoapanel_mac_p.h ../gui/kernel/qcocoasharedwindowmethods_mac_p.h ../gui/kernel/qcocoaview_mac_p.h ../gui/kernel/qcocoawindow_mac_p.h ../gui/kernel/qcocoawindowcustomthemeframe_mac_p.h ../gui/kernel/qcocoawindowdelegate_mac_p.h ../gui/kernel/qcursor_p.h ../gui/kernel/qdesktopwidget_mac_p.h ../gui/kernel/qdesktopwidget_qpa_p.h ../gui/kernel/qdnd_p.h ../gui/kernel/qevent_p.h ../gui/kernel/qeventdispatcher_glib_qpa_p.h ../gui/kernel/qeventdispatcher_glib_qws_p.h ../gui/kernel/qeventdispatcher_mac_p.h ../gui/kernel/qeventdispatcher_qpa_p.h ../gui/kernel/qeventdispatcher_qws_p.h ../gui/kernel/qeventdispatcher_s60_p.h ../gui/kernel/qeventdispatcher_x11_p.h ../gui/kernel/qgesture_p.h ../gui/kernel/qgesturemanager_p.h ../gui/kernel/qguieventdispatcher_glib_p.h ../gui/kernel/qguiplatformplugin_p.h ../gui/kernel/qkde_p.h ../gui/kernel/qkeymapper_p.h ../gui/kernel/qkeysequence_p.h ../gui/kernel/qlayout_p.h ../gui/kernel/qlayoutengine_p.h ../gui/kernel/qmacgesturerecognizer_mac_p.h ../gui/kernel/qmultitouch_mac_p.h ../gui/kernel/qnsframeview_mac_p.h ../gui/kernel/qnsthemeframe_mac_p.h ../gui/kernel/qnstitledframe_mac_p.h ../gui/kernel/qplatformintegrationfactory_qpa_p.h ../gui/kernel/qshortcutmap_p.h ../gui/kernel/qsoftkeymanager_common_p.h ../gui/kernel/qsoftkeymanager_p.h ../gui/kernel/qsoftkeymanager_s60_p.h ../gui/kernel/qsound_p.h ../gui/kernel/qstandardgestures_p.h ../gui/kernel/qt_cocoa_helpers_mac_p.h ../gui/kernel/qt_gui_pch.h ../gui/kernel/qt_mac_p.h ../gui/kernel/qt_s60_p.h ../gui/kernel/qt_x11_p.h ../gui/kernel/qwidget_p.h ../gui/kernel/qwidgetaction_p.h ../gui/kernel/qwindowsysteminterface_qpa_p.h ../gui/kernel/qwinnativepangesturerecognizer_win_p.h ../gui/graphicsview/qgraph_p.h ../gui/graphicsview/qgraphicsanchorlayout_p.h ../gui/graphicsview/qgraphicsitem_p.h ../gui/graphicsview/qgraphicslayout_p.h ../gui/graphicsview/qgraphicslayoutitem_p.h ../gui/graphicsview/qgraphicsproxywidget_p.h ../gui/graphicsview/qgraphicsscene_bsp_p.h ../gui/graphicsview/qgraphicsscene_p.h ../gui/graphicsview/qgraphicsscenebsptreeindex_p.h ../gui/graphicsview/qgraphicssceneindex_p.h ../gui/graphicsview/qgraphicsscenelinearindex_p.h ../gui/graphicsview/qgraphicstransform_p.h ../gui/graphicsview/qgraphicsview_p.h ../gui/graphicsview/qgraphicswidget_p.h ../gui/graphicsview/qgridlayoutengine_p.h ../gui/graphicsview/qsimplex_p.h ../gui/statemachine/qbasickeyeventtransition_p.h ../gui/statemachine/qbasicmouseeventtransition_p.h ../gui/image/qbmphandler_p.h ../gui/image/qgifhandler_p.h ../gui/image/qicon_p.h ../gui/image/qiconloader_p.h ../gui/image/qimage_p.h ../gui/image/qimagepixmapcleanuphooks_p.h ../gui/image/qjpeghandler_p.h ../gui/image/qmnghandler_p.h ../gui/image/qnativeimage_p.h ../gui/image/qnativeimagehandleprovider_p.h ../gui/image/qpaintengine_pic_p.h ../gui/image/qpicture_p.h ../gui/image/qpixmap_blitter_p.h ../gui/image/qpixmap_mac_p.h ../gui/image/qpixmap_raster_p.h ../gui/image/qpixmap_raster_symbian_p.h ../gui/image/qpixmap_x11_p.h ../gui/image/qpixmapcache_p.h ../gui/image/qpixmapdata_p.h ../gui/image/qpixmapdatafactory_p.h ../gui/image/qpixmapfilter_p.h ../gui/image/qpnghandler_p.h ../gui/image/qppmhandler_p.h ../gui/image/qtiffhandler_p.h ../gui/image/qvolatileimage_p.h ../gui/image/qvolatileimagedata_p.h ../gui/image/qxbmhandler_p.h ../gui/image/qxpmhandler_p.h ../gui/text/qabstractfontengine_p.h ../gui/text/qabstracttextdocumentlayout_p.h ../gui/text/qcssparser_p.h ../gui/text/qfont_p.h ../gui/text/qfontengine_coretext_p.h ../gui/text/qfontengine_ft_p.h ../gui/text/qfontengine_mac_p.h ../gui/text/qfontengine_p.h ../gui/text/qfontengine_qpa_p.h ../gui/text/qfontengine_qpf_p.h ../gui/text/qfontengine_s60_p.h ../gui/text/qfontengine_win_p.h ../gui/text/qfontengine_x11_p.h ../gui/text/qfontenginedirectwrite_p.h ../gui/text/qfontengineglyphcache_p.h ../gui/text/qfontsubset_p.h ../gui/text/qfragmentmap_p.h ../gui/text/qglyphrun_p.h ../gui/text/qrawfont_p.h ../gui/text/qstatictext_p.h ../gui/text/qtextcontrol_p.h ../gui/text/qtextcontrol_p_p.h ../gui/text/qtextcursor_p.h ../gui/text/qtextdocument_p.h ../gui/text/qtextdocumentfragment_p.h ../gui/text/qtextdocumentlayout_p.h ../gui/text/qtextengine_p.h ../gui/text/qtextformat_p.h ../gui/text/qtexthtmlparser_p.h ../gui/text/qtextimagehandler_p.h ../gui/text/qtextobject_p.h ../gui/text/qtextodfwriter_p.h ../gui/text/qtexttable_p.h ../gui/text/qzipreader_p.h ../gui/text/qzipwriter_p.h ../gui/widgets/qabstractbutton_p.h ../gui/widgets/qabstractplatformmenubar_p.h ../gui/widgets/qabstractscrollarea_p.h ../gui/widgets/qabstractslider_p.h ../gui/widgets/qabstractspinbox_p.h ../gui/widgets/qcalendartextnavigator_p.h ../gui/widgets/qcocoamenu_mac_p.h ../gui/widgets/qcocoatoolbardelegate_mac_p.h ../gui/widgets/qcombobox_p.h ../gui/widgets/qdatetimeedit_p.h ../gui/widgets/qdockarealayout_p.h ../gui/widgets/qdockwidget_p.h ../gui/widgets/qeffects_p.h ../gui/widgets/qframe_p.h ../gui/widgets/qlabel_p.h ../gui/widgets/qlinecontrol_p.h ../gui/widgets/qlineedit_p.h ../gui/widgets/qmainwindowlayout_p.h ../gui/widgets/qmdiarea_p.h ../gui/widgets/qmdisubwindow_p.h ../gui/widgets/qmenu_p.h ../gui/widgets/qmenu_wince_resource_p.h ../gui/widgets/qmenubar_p.h ../gui/widgets/qmenubar_x11_p.h ../gui/widgets/qplaintextedit_p.h ../gui/widgets/qpushbutton_p.h ../gui/widgets/qscrollarea_p.h ../gui/widgets/qsplitter_p.h ../gui/widgets/qtabbar_p.h ../gui/widgets/qtextedit_p.h ../gui/widgets/qtoolbar_p.h ../gui/widgets/qtoolbararealayout_p.h ../gui/widgets/qtoolbarextension_p.h ../gui/widgets/qtoolbarlayout_p.h ../gui/widgets/qtoolbarseparator_p.h ../gui/widgets/qwidgetanimator_p.h ../gui/widgets/qwidgetresizehandler_p.h ../gui/accessible/qaccessible_mac_p.h ../gui/util/qcompleter_p.h ../gui/util/qflickgesture_p.h ../gui/util/qsystemtrayicon_p.h ../gui/util/qundostack_p.h ../gui/styles/qcleanlooksstyle_p.h ../gui/styles/qcommonstyle_p.h ../gui/styles/qcommonstylepixmaps_p.h ../gui/styles/qgtkpainter_p.h ../gui/styles/qgtkstyle_p.h ../gui/styles/qmacstyle_mac_p.h ../gui/styles/qmacstylepixmaps_mac_p.h ../gui/styles/qmotifstyle_p.h ../gui/styles/qproxystyle_p.h ../gui/styles/qs60style_feedbackinterface_p.h ../gui/styles/qs60style_p.h ../gui/styles/qstyle_p.h ../gui/styles/qstylehelper_p.h ../gui/styles/qstylesheetstyle_p.h ../gui/styles/qwindowscestyle_p.h ../gui/styles/qwindowsmobilestyle_p.h ../gui/styles/qwindowsstyle_p.h ../gui/styles/qwindowsvistastyle_p.h ../gui/styles/qwindowsxpstyle_p.h ../gui/itemviews/qabstractitemview_p.h ../gui/itemviews/qabstractproxymodel_p.h ../gui/itemviews/qbsptree_p.h ../gui/itemviews/qcolumnview_p.h ../gui/itemviews/qcolumnviewgrip_p.h ../gui/itemviews/qheaderview_p.h ../gui/itemviews/qitemeditorfactory_p.h ../gui/itemviews/qitemselectionmodel_p.h ../gui/itemviews/qlistview_p.h ../gui/itemviews/qlistwidget_p.h ../gui/itemviews/qproxymodel_p.h ../gui/itemviews/qstandarditemmodel_p.h ../gui/itemviews/qtableview_p.h ../gui/itemviews/qtablewidget_p.h ../gui/itemviews/qtreeview_p.h ../gui/itemviews/qtreewidget_p.h ../gui/itemviews/qtreewidgetitemiterator_p.h ../gui/itemviews/qwidgetitemdata_p.h ../gui/effects/qgraphicseffect_p.h ../gui/s60framework/qs60keycapture_p.h ../gui/s60framework/qs60mainapplication_p.h ../gui/inputmethod/qcoefepinputcontext_p.h ../gui/inputmethod/qinputcontext_p.h ../gui/inputmethod/qmacinputcontext_p.h ../gui/inputmethod/qwininputcontext_p.h ../gui/inputmethod/qwsinputcontext_p.h ../gui/inputmethod/qximinputcontext_p.h ../gui/dialogs/qabstractpagesetupdialog_p.h ../gui/dialogs/qabstractprintdialog_p.h ../gui/dialogs/qcolordialog_p.h ../gui/dialogs/qdialog_p.h ../gui/dialogs/qfiledialog_p.h ../gui/dialogs/qfiledialog_win_p.h ../gui/dialogs/qfileinfogatherer_p.h ../gui/dialogs/qfilesystemmodel_p.h ../gui/dialogs/qfontdialog_p.h ../gui/dialogs/qfscompleter_p.h ../gui/dialogs/qpagesetupdialog_unix_p.h ../gui/dialogs/qsidebar_p.h ../gui/dialogs/qwizard_win_p.h ../gui/embedded/qkbd_defaultmap_qws_p.h ../gui/embedded/qkbd_qws_p.h ../gui/embedded/qlock_p.h ../gui/embedded/qscreenmulti_qws_p.h ../gui/embedded/qtransportauth_qws_p.h ../gui/embedded/qunixsocket_p.h ../gui/embedded/qunixsocketserver_p.h ../gui/embedded/qwindowsystem_p.h ../gui/embedded/qwscommand_qws_p.h ../gui/embedded/qwsdisplay_qws_p.h ../gui/embedded/qwslock_p.h ../gui/embedded/qwsmanager_p.h ../gui/embedded/qwssharedmemory_p.h ../gui/embedded/qwssignalhandler_p.h 
+SYNCQT.HEADER_FILES = ../gui/painting/qbrush.h ../gui/painting/qcolor.h ../gui/painting/qcolormap.h ../gui/painting/qdrawutil.h ../gui/painting/qgraphicssystemhelper_symbian.h ../gui/painting/qmatrix.h ../gui/painting/qpaintdevice.h ../gui/painting/qpaintengine.h ../gui/painting/qpainter.h ../gui/painting/qpainterpath.h ../gui/painting/qpen.h ../gui/painting/qpolygon.h ../gui/painting/qprintengine.h ../gui/painting/qprinter.h ../gui/painting/qprinterinfo.h ../gui/painting/qregion.h ../gui/painting/qrgb.h ../gui/painting/qstylepainter.h ../gui/painting/qtransform.h ../gui/painting/qwmatrix.h ../gui/kernel/qaction.h ../gui/kernel/qactiongroup.h ../gui/kernel/qapplication.h ../gui/kernel/qboxlayout.h ../gui/kernel/qclipboard.h ../gui/kernel/qcursor.h ../gui/kernel/qdesktopwidget.h ../gui/kernel/qdrag.h ../gui/kernel/qevent.h ../gui/kernel/qformlayout.h ../gui/kernel/qgenericplugin_qpa.h ../gui/kernel/qgenericpluginfactory_qpa.h ../gui/kernel/qgesture.h ../gui/kernel/qgesturerecognizer.h ../gui/kernel/qgridlayout.h ../gui/kernel/qguifunctions_wince.h ../gui/kernel/qkeysequence.h ../gui/kernel/qlayout.h ../gui/kernel/qlayoutitem.h ../gui/kernel/qmacdefines_mac.h ../gui/kernel/qmime.h ../gui/kernel/qpalette.h ../gui/kernel/qplatformclipboard_qpa.h ../gui/kernel/qplatformcursor_qpa.h ../gui/kernel/qplatformeventloopintegration_qpa.h ../gui/kernel/qplatformglcontext_qpa.h ../gui/kernel/qplatformintegration_qpa.h ../gui/kernel/qplatformintegrationplugin_qpa.h ../gui/kernel/qplatformnativeinterface_qpa.h ../gui/kernel/qplatformscreen_qpa.h ../gui/kernel/qplatformwindow_qpa.h ../gui/kernel/qplatformwindowformat_qpa.h ../gui/kernel/qsessionmanager.h ../gui/kernel/qshortcut.h ../gui/kernel/qsizepolicy.h ../gui/kernel/qsound.h ../gui/kernel/qstackedlayout.h ../gui/kernel/qtooltip.h ../gui/kernel/qwhatsthis.h ../gui/kernel/qwidget.h ../gui/kernel/qwidgetaction.h ../gui/kernel/qwindowdefs.h ../gui/kernel/qwindowdefs_win.h ../gui/kernel/qwindowsysteminterface_qpa.h ../gui/kernel/qx11embed_x11.h ../gui/kernel/qx11info_x11.h ../gui/graphicsview/qgraphicsanchorlayout.h ../gui/graphicsview/qgraphicsgridlayout.h ../gui/graphicsview/qgraphicsitem.h ../gui/graphicsview/qgraphicsitemanimation.h ../gui/graphicsview/qgraphicslayout.h ../gui/graphicsview/qgraphicslayoutitem.h ../gui/graphicsview/qgraphicslinearlayout.h ../gui/graphicsview/qgraphicsproxywidget.h ../gui/graphicsview/qgraphicsscene.h ../gui/graphicsview/qgraphicssceneevent.h ../gui/graphicsview/qgraphicstransform.h ../gui/graphicsview/qgraphicsview.h ../gui/graphicsview/qgraphicswidget.h ../gui/statemachine/qkeyeventtransition.h ../gui/statemachine/qmouseeventtransition.h ../gui/image/qbitmap.h ../gui/image/qicon.h ../gui/image/qiconengine.h ../gui/image/qiconengineplugin.h ../gui/image/qimage.h ../gui/image/qimageiohandler.h ../gui/image/qimagereader.h ../gui/image/qimagewriter.h ../gui/image/qmovie.h ../gui/image/qpicture.h ../gui/image/qpictureformatplugin.h ../gui/image/qpixmap.h ../gui/image/qpixmapcache.h ../gui/text/qabstractfontengine_qws.h ../gui/text/qabstracttextdocumentlayout.h ../gui/text/qfont.h ../gui/text/qfontdatabase.h ../gui/text/qfontinfo.h ../gui/text/qfontmetrics.h ../gui/text/qplatformfontdatabase_qpa.h ../gui/text/qrawfont.h ../gui/text/qstatictext.h ../gui/text/qsyntaxhighlighter.h ../gui/text/qtextcursor.h ../gui/text/qtextdocument.h ../gui/text/qtextdocumentfragment.h ../gui/text/qtextdocumentwriter.h ../gui/text/qtextformat.h ../gui/text/qtextlayout.h ../gui/text/qtextlist.h ../gui/text/qtextobject.h ../gui/text/qtextoption.h ../gui/text/qtexttable.h ../gui/math3d/qgenericmatrix.h ../gui/math3d/qmatrix4x4.h ../gui/math3d/qquaternion.h ../gui/math3d/qvector2d.h ../gui/math3d/qvector3d.h ../gui/math3d/qvector4d.h ../gui/widgets/qabstractbutton.h ../gui/widgets/qabstractscrollarea.h ../gui/widgets/qabstractslider.h ../gui/widgets/qabstractspinbox.h ../gui/widgets/qbuttongroup.h ../gui/widgets/qcalendarwidget.h ../gui/widgets/qcheckbox.h ../gui/widgets/qcombobox.h ../gui/widgets/qcommandlinkbutton.h ../gui/widgets/qdatetimeedit.h ../gui/widgets/qdial.h ../gui/widgets/qdialogbuttonbox.h ../gui/widgets/qdockwidget.h ../gui/widgets/qfocusframe.h ../gui/widgets/qfontcombobox.h ../gui/widgets/qframe.h ../gui/widgets/qgroupbox.h ../gui/widgets/qlabel.h ../gui/widgets/qlcdnumber.h ../gui/widgets/qlineedit.h ../gui/widgets/qmaccocoaviewcontainer_mac.h ../gui/widgets/qmacnativewidget_mac.h ../gui/widgets/qmainwindow.h ../gui/widgets/qmdiarea.h ../gui/widgets/qmdisubwindow.h ../gui/widgets/qmenu.h ../gui/widgets/qmenubar.h ../gui/widgets/qmenudata.h ../gui/widgets/qplaintextedit.h ../gui/widgets/qprintpreviewwidget.h ../gui/widgets/qprogressbar.h ../gui/widgets/qpushbutton.h ../gui/widgets/qradiobutton.h ../gui/widgets/qrubberband.h ../gui/widgets/qscrollarea.h ../gui/widgets/qscrollbar.h ../gui/widgets/qsizegrip.h ../gui/widgets/qslider.h ../gui/widgets/qspinbox.h ../gui/widgets/qsplashscreen.h ../gui/widgets/qsplitter.h ../gui/widgets/qstackedwidget.h ../gui/widgets/qstatusbar.h ../gui/widgets/qtabbar.h ../gui/widgets/qtabwidget.h ../gui/widgets/qtextbrowser.h ../gui/widgets/qtextedit.h ../gui/widgets/qtoolbar.h ../gui/widgets/qtoolbox.h ../gui/widgets/qtoolbutton.h ../gui/widgets/qvalidator.h ../gui/widgets/qworkspace.h ../gui/accessible/qaccessible.h ../gui/accessible/qaccessible2.h ../gui/accessible/qaccessiblebridge.h ../gui/accessible/qaccessibleobject.h ../gui/accessible/qaccessibleplugin.h ../gui/accessible/qaccessiblewidget.h ../gui/symbian/qsymbianevent.h ../gui/util/qcompleter.h ../gui/util/qdesktopservices.h ../gui/util/qsystemtrayicon.h ../gui/util/qundogroup.h ../gui/util/qundostack.h ../gui/util/qundoview.h ../gui/styles/qcdestyle.h ../gui/styles/qcleanlooksstyle.h ../gui/styles/qcommonstyle.h ../gui/styles/qgtkstyle.h ../gui/styles/qmacstyle_mac.h ../gui/styles/qmotifstyle.h ../gui/styles/qplastiquestyle.h ../gui/styles/qproxystyle.h ../gui/styles/qs60style.h ../gui/styles/qstyle.h ../gui/styles/qstylefactory.h ../gui/styles/qstyleoption.h ../gui/styles/qstyleplugin.h ../gui/styles/qwindowscestyle.h ../gui/styles/qwindowsmobilestyle.h ../gui/styles/qwindowsstyle.h ../gui/styles/qwindowsvistastyle.h ../gui/styles/qwindowsxpstyle.h ../gui/itemviews/qabstractitemdelegate.h ../gui/itemviews/qabstractitemview.h ../gui/itemviews/qabstractproxymodel.h ../gui/itemviews/qcolumnview.h ../gui/itemviews/qdatawidgetmapper.h ../gui/itemviews/qdirmodel.h ../gui/itemviews/qfileiconprovider.h ../gui/itemviews/qheaderview.h ../gui/itemviews/qidentityproxymodel.h ../gui/itemviews/qitemdelegate.h ../gui/itemviews/qitemeditorfactory.h ../gui/itemviews/qitemselectionmodel.h ../gui/itemviews/qlistview.h ../gui/itemviews/qlistwidget.h ../gui/itemviews/qproxymodel.h ../gui/itemviews/qsortfilterproxymodel.h ../gui/itemviews/qstandarditemmodel.h ../gui/itemviews/qstringlistmodel.h ../gui/itemviews/qstyleditemdelegate.h ../gui/itemviews/qtableview.h ../gui/itemviews/qtablewidget.h ../gui/itemviews/qtreeview.h ../gui/itemviews/qtreewidget.h ../gui/itemviews/qtreewidgetitemiterator.h ../gui/effects/qgraphicseffect.h ../gui/s60framework/qs60mainapplication.h ../gui/s60framework/qs60mainappui.h ../gui/s60framework/qs60maindocument.h ../gui/inputmethod/qinputcontext.h ../gui/inputmethod/qinputcontextfactory.h ../gui/inputmethod/qinputcontextplugin.h ../gui/dialogs/qabstractpagesetupdialog.h ../gui/dialogs/qabstractprintdialog.h ../gui/dialogs/qcolordialog.h ../gui/dialogs/qdialog.h ../gui/dialogs/qerrormessage.h ../gui/dialogs/qfiledialog.h ../gui/dialogs/qfilesystemmodel.h ../gui/dialogs/qfontdialog.h ../gui/dialogs/qinputdialog.h ../gui/dialogs/qmessagebox.h ../gui/dialogs/qpagesetupdialog.h ../gui/dialogs/qprintdialog.h ../gui/dialogs/qprintpreviewdialog.h ../gui/dialogs/qprogressdialog.h ../gui/dialogs/qwizard.h ../gui/embedded/qcopchannel_qws.h ../gui/embedded/qdecoration_qws.h ../gui/embedded/qdecorationdefault_qws.h ../gui/embedded/qdecorationfactory_qws.h ../gui/embedded/qdecorationplugin_qws.h ../gui/embedded/qdecorationstyled_qws.h ../gui/embedded/qdecorationwindows_qws.h ../gui/embedded/qdirectpainter_qws.h ../gui/embedded/qkbd_qws.h ../gui/embedded/qkbddriverfactory_qws.h ../gui/embedded/qkbddriverplugin_qws.h ../gui/embedded/qkbdintegrity_qws.h ../gui/embedded/qkbdlinuxinput_qws.h ../gui/embedded/qkbdqnx_qws.h ../gui/embedded/qkbdtty_qws.h ../gui/embedded/qkbdum_qws.h ../gui/embedded/qkbdvfb_qws.h ../gui/embedded/qmouse_qws.h ../gui/embedded/qmousedriverfactory_qws.h ../gui/embedded/qmousedriverplugin_qws.h ../gui/embedded/qmouseintegrity_qws.h ../gui/embedded/qmouselinuxinput_qws.h ../gui/embedded/qmouselinuxtp_qws.h ../gui/embedded/qmousepc_qws.h ../gui/embedded/qmouseqnx_qws.h ../gui/embedded/qmousetslib_qws.h ../gui/embedded/qmousevfb_qws.h ../gui/embedded/qscreen_qws.h ../gui/embedded/qscreendriverfactory_qws.h ../gui/embedded/qscreendriverplugin_qws.h ../gui/embedded/qscreenintegrityfb_qws.h ../gui/embedded/qscreenlinuxfb_qws.h ../gui/embedded/qscreenproxy_qws.h ../gui/embedded/qscreenqnx_qws.h ../gui/embedded/qscreentransformed_qws.h ../gui/embedded/qscreenvfb_qws.h ../gui/embedded/qsoundqss_qws.h ../gui/embedded/qtransportauth_qws.h ../gui/embedded/qtransportauthdefs_qws.h ../gui/embedded/qvfbhdr.h ../gui/embedded/qwindowsystem_qws.h ../gui/embedded/qwscursor_qws.h ../gui/embedded/qwsdisplay_qws.h ../gui/embedded/qwsembedwidget.h ../gui/embedded/qwsevent_qws.h ../gui/embedded/qwsmanager_qws.h ../gui/embedded/qwsproperty_qws.h ../gui/embedded/qwsprotocolitem_qws.h ../gui/embedded/qwssocket_qws.h ../gui/embedded/qwsutils_qws.h ../../include/QtGui/QtGui 
+SYNCQT.HEADER_CLASSES = ../../include/QtGui/QBrush ../../include/QtGui/QBrushData ../../include/QtGui/QGradientStop ../../include/QtGui/QGradientStops ../../include/QtGui/QGradient ../../include/QtGui/QLinearGradient ../../include/QtGui/QRadialGradient ../../include/QtGui/QConicalGradient ../../include/QtGui/QColor ../../include/QtGui/QColormap ../../include/QtGui/QTileRules ../../include/QtGui/QSymbianGraphicsSystemHelper ../../include/QtGui/QMatrix ../../include/QtGui/QPaintDevice ../../include/QtGui/QTextItem ../../include/QtGui/QPaintEngine ../../include/QtGui/QPaintEngineState ../../include/QtGui/QPainter ../../include/QtGui/QPainterPath ../../include/QtGui/QPainterPathPrivate ../../include/QtGui/QPainterPathStroker ../../include/QtGui/QPen ../../include/QtGui/QPolygon ../../include/QtGui/QPolygonF ../../include/QtGui/QPrintEngine ../../include/QtGui/QPrinter ../../include/QtGui/QPrinterInfo ../../include/QtGui/QRegion ../../include/QtGui/QRgb ../../include/QtGui/QStylePainter ../../include/QtGui/QTransform ../../include/QtGui/QWMatrix ../../include/QtGui/QAction ../../include/QtGui/QActionGroup ../../include/QtGui/QApplication ../../include/QtGui/QBoxLayout ../../include/QtGui/QHBoxLayout ../../include/QtGui/QVBoxLayout ../../include/QtGui/QClipboard ../../include/QtGui/QCursor ../../include/QtGui/QCursorShape ../../include/QtGui/QDesktopWidget ../../include/QtGui/QDrag ../../include/QtGui/QtEvents ../../include/QtGui/QInputEvent ../../include/QtGui/QMouseEvent ../../include/QtGui/QHoverEvent ../../include/QtGui/QWheelEvent ../../include/QtGui/QTabletEvent ../../include/QtGui/QKeyEvent ../../include/QtGui/QFocusEvent ../../include/QtGui/QPaintEvent ../../include/QtGui/QUpdateLaterEvent ../../include/QtGui/QMoveEvent ../../include/QtGui/QResizeEvent ../../include/QtGui/QCloseEvent ../../include/QtGui/QIconDragEvent ../../include/QtGui/QShowEvent ../../include/QtGui/QHideEvent ../../include/QtGui/QContextMenuEvent ../../include/QtGui/QInputMethodEvent ../../include/QtGui/QDropEvent ../../include/QtGui/QDragMoveEvent ../../include/QtGui/QDragEnterEvent ../../include/QtGui/QDragResponseEvent ../../include/QtGui/QDragLeaveEvent ../../include/QtGui/QHelpEvent ../../include/QtGui/QStatusTipEvent ../../include/QtGui/QWhatsThisClickedEvent ../../include/QtGui/QActionEvent ../../include/QtGui/QFileOpenEvent ../../include/QtGui/QToolBarChangeEvent ../../include/QtGui/QShortcutEvent ../../include/QtGui/QClipboardEvent ../../include/QtGui/QWindowStateChangeEvent ../../include/QtGui/QMenubarUpdatedEvent ../../include/QtGui/QTouchEvent ../../include/QtGui/QGestureEvent ../../include/QtGui/QFormLayout ../../include/QtGui/QGenericPluginFactoryInterface ../../include/QtGui/QGenericPlugin ../../include/QtGui/QGenericPluginFactory ../../include/QtGui/QGesture ../../include/QtGui/QPanGesture ../../include/QtGui/QPinchGesture ../../include/QtGui/QSwipeGesture ../../include/QtGui/QTapGesture ../../include/QtGui/QTapAndHoldGesture ../../include/QtGui/QGestureRecognizer ../../include/QtGui/QGridLayout ../../include/QtGui/QKeySequence ../../include/QtGui/QLayoutIterator ../../include/QtGui/QLayout ../../include/QtGui/QLayoutItem ../../include/QtGui/QSpacerItem ../../include/QtGui/QWidgetItem ../../include/QtGui/QWidgetItemV2 ../../include/QtGui/QMimeSource ../../include/QtGui/QWindowsMime ../../include/QtGui/QMacMime ../../include/QtGui/QMacPasteboardMime ../../include/QtGui/QPalette ../../include/QtGui/QColorGroup ../../include/QtGui/QPlatformClipboard ../../include/QtGui/QPlatformCursorImage ../../include/QtGui/QPlatformCursorPrivate ../../include/QtGui/QPlatformCursor ../../include/QtGui/QPlatformEventLoopIntegration ../../include/QtGui/QPlatformGLContext ../../include/QtGui/QPlatformIntegration ../../include/QtGui/QPlatformIntegrationFactoryInterface ../../include/QtGui/QPlatformIntegrationPlugin ../../include/QtGui/QPlatformNativeInterface ../../include/QtGui/QPlatformScreen ../../include/QtGui/QPlatformWindow ../../include/QtGui/QPlatformWindowFormat ../../include/QtGui/QSessionManager ../../include/QtGui/QShortcut ../../include/QtGui/QSizePolicy ../../include/QtGui/QSound ../../include/QtGui/QStackedLayout ../../include/QtGui/QToolTip ../../include/QtGui/QWhatsThis ../../include/QtGui/QWidgetData ../../include/QtGui/QWidget ../../include/QtGui/QWidgetAction ../../include/QtGui/QWidgetList ../../include/QtGui/QWidgetMapper ../../include/QtGui/QWidgetSet ../../include/QtGui/QWindowSystemInterface ../../include/QtGui/QX11EmbedWidget ../../include/QtGui/QX11EmbedContainer ../../include/QtGui/QX11Info ../../include/QtGui/QGraphicsAnchor ../../include/QtGui/QGraphicsAnchorLayout ../../include/QtGui/QGraphicsGridLayout ../../include/QtGui/QGraphicsItem ../../include/QtGui/QGraphicsObject ../../include/QtGui/QAbstractGraphicsShapeItem ../../include/QtGui/QGraphicsPathItem ../../include/QtGui/QGraphicsRectItem ../../include/QtGui/QGraphicsEllipseItem ../../include/QtGui/QGraphicsPolygonItem ../../include/QtGui/QGraphicsLineItem ../../include/QtGui/QGraphicsPixmapItem ../../include/QtGui/QGraphicsTextItem ../../include/QtGui/QGraphicsSimpleTextItem ../../include/QtGui/QGraphicsItemGroup ../../include/QtGui/QGraphicsItemAnimation ../../include/QtGui/QGraphicsLayout ../../include/QtGui/QGraphicsLayoutItem ../../include/QtGui/QGraphicsLinearLayout ../../include/QtGui/QGraphicsProxyWidget ../../include/QtGui/QGraphicsScene ../../include/QtGui/QGraphicsSceneEvent ../../include/QtGui/QGraphicsSceneMouseEvent ../../include/QtGui/QGraphicsSceneWheelEvent ../../include/QtGui/QGraphicsSceneContextMenuEvent ../../include/QtGui/QGraphicsSceneHoverEvent ../../include/QtGui/QGraphicsSceneHelpEvent ../../include/QtGui/QGraphicsSceneDragDropEvent ../../include/QtGui/QGraphicsSceneResizeEvent ../../include/QtGui/QGraphicsSceneMoveEvent ../../include/QtGui/QGraphicsTransform ../../include/QtGui/QGraphicsScale ../../include/QtGui/QGraphicsRotation ../../include/QtGui/QGraphicsView ../../include/QtGui/QGraphicsWidget ../../include/QtGui/QKeyEventTransition ../../include/QtGui/QMouseEventTransition ../../include/QtGui/QBitmap ../../include/QtGui/QIcon ../../include/QtGui/QIconSet ../../include/QtGui/QIconEngine ../../include/QtGui/QIconEngineV2 ../../include/QtGui/QIconEngineFactoryInterface ../../include/QtGui/QIconEnginePlugin ../../include/QtGui/QIconEngineFactoryInterfaceV2 ../../include/QtGui/QIconEnginePluginV2 ../../include/QtGui/QImageTextKeyLang ../../include/QtGui/QImage ../../include/QtGui/QImageIOHandler ../../include/QtGui/QImageIOHandlerFactoryInterface ../../include/QtGui/QImageIOPlugin ../../include/QtGui/QImageReader ../../include/QtGui/QImageWriter ../../include/QtGui/QMovie ../../include/QtGui/QPicture ../../include/QtGui/QPictureIO ../../include/QtGui/QPictureFormatInterface ../../include/QtGui/QPictureFormatPlugin ../../include/QtGui/QPixmap ../../include/QtGui/QPixmapCache ../../include/QtGui/QFontEngineInfo ../../include/QtGui/QFontEngineFactoryInterface ../../include/QtGui/QFontEnginePlugin ../../include/QtGui/QAbstractFontEngine ../../include/QtGui/QAbstractTextDocumentLayout ../../include/QtGui/QTextObjectInterface ../../include/QtGui/QFont ../../include/QtGui/QFontDatabase ../../include/QtGui/QFontInfo ../../include/QtGui/QFontMetrics ../../include/QtGui/QFontMetricsF ../../include/QtGui/QSupportedWritingSystems ../../include/QtGui/QPlatformFontDatabase ../../include/QtGui/QRawFont ../../include/QtGui/QStaticText ../../include/QtGui/QSyntaxHighlighter ../../include/QtGui/QTextCursor ../../include/QtGui/QAbstractUndoItem ../../include/QtGui/QTextDocument ../../include/QtGui/QTextDocumentFragment ../../include/QtGui/QTextDocumentWriter ../../include/QtGui/QTextLength ../../include/QtGui/QTextFormat ../../include/QtGui/QTextCharFormat ../../include/QtGui/QTextBlockFormat ../../include/QtGui/QTextListFormat ../../include/QtGui/QTextImageFormat ../../include/QtGui/QTextFrameFormat ../../include/QtGui/QTextTableFormat ../../include/QtGui/QTextTableCellFormat ../../include/QtGui/QTextInlineObject ../../include/QtGui/QTextLayout ../../include/QtGui/QTextLine ../../include/QtGui/QTextList ../../include/QtGui/QTextObject ../../include/QtGui/QTextBlockGroup ../../include/QtGui/QTextFrameLayoutData ../../include/QtGui/QTextFrame ../../include/QtGui/QTextBlockUserData ../../include/QtGui/QTextBlock ../../include/QtGui/QTextFragment ../../include/QtGui/QTextOption ../../include/QtGui/QTextTableCell ../../include/QtGui/QTextTable ../../include/QtGui/QGenericMatrix ../../include/QtGui/QMatrix2x2 ../../include/QtGui/QMatrix2x3 ../../include/QtGui/QMatrix2x4 ../../include/QtGui/QMatrix3x2 ../../include/QtGui/QMatrix3x3 ../../include/QtGui/QMatrix3x4 ../../include/QtGui/QMatrix4x2 ../../include/QtGui/QMatrix4x3 ../../include/QtGui/QMatrix4x4 ../../include/QtGui/QQuaternion ../../include/QtGui/QVector2D ../../include/QtGui/QVector3D ../../include/QtGui/QVector4D ../../include/QtGui/QAbstractButton ../../include/QtGui/QAbstractScrollArea ../../include/QtGui/QAbstractSlider ../../include/QtGui/QAbstractSpinBox ../../include/QtGui/QButtonGroup ../../include/QtGui/QCalendarWidget ../../include/QtGui/QCheckBox ../../include/QtGui/QComboBox ../../include/QtGui/QCommandLinkButton ../../include/QtGui/QDateTimeEdit ../../include/QtGui/QTimeEdit ../../include/QtGui/QDateEdit ../../include/QtGui/QDial ../../include/QtGui/QDialogButtonBox ../../include/QtGui/QDockWidget ../../include/QtGui/QFocusFrame ../../include/QtGui/QFontComboBox ../../include/QtGui/QFrame ../../include/QtGui/QGroupBox ../../include/QtGui/QLabel ../../include/QtGui/QLCDNumber ../../include/QtGui/QLineEdit ../../include/QtGui/QMacCocoaViewContainer ../../include/QtGui/QMacNativeWidget ../../include/QtGui/QMainWindow ../../include/QtGui/QMdiArea ../../include/QtGui/QMdiSubWindow ../../include/QtGui/QMenu ../../include/QtGui/QMenuBar ../../include/QtGui/QMenuItem ../../include/QtGui/QPlainTextEdit ../../include/QtGui/QPlainTextDocumentLayout ../../include/QtGui/QPrintPreviewWidget ../../include/QtGui/QProgressBar ../../include/QtGui/QPushButton ../../include/QtGui/QRadioButton ../../include/QtGui/QRubberBand ../../include/QtGui/QScrollArea ../../include/QtGui/QScrollBar ../../include/QtGui/QSizeGrip ../../include/QtGui/QSlider ../../include/QtGui/QSpinBox ../../include/QtGui/QDoubleSpinBox ../../include/QtGui/QSplashScreen ../../include/QtGui/QSplitter ../../include/QtGui/QSplitterHandle ../../include/QtGui/QStackedWidget ../../include/QtGui/QStatusBar ../../include/QtGui/QTabBar ../../include/QtGui/QTabWidget ../../include/QtGui/QTextBrowser ../../include/QtGui/QTextEdit ../../include/QtGui/QToolBar ../../include/QtGui/QToolBox ../../include/QtGui/QToolButton ../../include/QtGui/QValidator ../../include/QtGui/QIntValidator ../../include/QtGui/QDoubleValidator ../../include/QtGui/QRegExpValidator ../../include/QtGui/QWorkspace ../../include/QtGui/QAccessible ../../include/QtGui/QAccessibleInterface ../../include/QtGui/QAccessibleInterfaceEx ../../include/QtGui/QAccessibleEvent ../../include/QtGui/QAccessible2Interface ../../include/QtGui/QAccessibleTextInterface ../../include/QtGui/QAccessibleEditableTextInterface ../../include/QtGui/QAccessibleSimpleEditableTextInterface ../../include/QtGui/QAccessibleValueInterface ../../include/QtGui/QAccessibleTableInterface ../../include/QtGui/QAccessibleTable2CellInterface ../../include/QtGui/QAccessibleTable2Interface ../../include/QtGui/QAccessibleActionInterface ../../include/QtGui/QAccessibleImageInterface ../../include/QtGui/QAccessibleBridge ../../include/QtGui/QAccessibleBridgeFactoryInterface ../../include/QtGui/QAccessibleBridgePlugin ../../include/QtGui/QAccessibleObject ../../include/QtGui/QAccessibleObjectEx ../../include/QtGui/QAccessibleApplication ../../include/QtGui/QAccessibleFactoryInterface ../../include/QtGui/QAccessiblePlugin ../../include/QtGui/QAccessibleWidget ../../include/QtGui/QAccessibleWidgetEx ../../include/QtGui/QSymbianEvent ../../include/QtGui/QCompleter ../../include/QtGui/QDesktopServices ../../include/QtGui/QSystemTrayIcon ../../include/QtGui/QUndoGroup ../../include/QtGui/QUndoCommand ../../include/QtGui/QUndoStack ../../include/QtGui/QUndoView ../../include/QtGui/QCDEStyle ../../include/QtGui/QCleanlooksStyle ../../include/QtGui/QCommonStyle ../../include/QtGui/QGtkStyle ../../include/QtGui/QMacStyle ../../include/QtGui/QMotifStyle ../../include/QtGui/QPlastiqueStyle ../../include/QtGui/QProxyStyle ../../include/QtGui/QS60Style ../../include/QtGui/QStyle ../../include/QtGui/QStyleFactory ../../include/QtGui/QStyleOption ../../include/QtGui/QStyleOptionFocusRect ../../include/QtGui/QStyleOptionFrame ../../include/QtGui/QStyleOptionFrameV2 ../../include/QtGui/QStyleOptionFrameV3 ../../include/QtGui/QStyleOptionTabWidgetFrame ../../include/QtGui/QStyleOptionTabWidgetFrameV2 ../../include/QtGui/QStyleOptionTabBarBase ../../include/QtGui/QStyleOptionTabBarBaseV2 ../../include/QtGui/QStyleOptionHeader ../../include/QtGui/QStyleOptionButton ../../include/QtGui/QStyleOptionTab ../../include/QtGui/QStyleOptionTabV2 ../../include/QtGui/QStyleOptionTabV3 ../../include/QtGui/QStyleOptionToolBar ../../include/QtGui/QStyleOptionProgressBar ../../include/QtGui/QStyleOptionProgressBarV2 ../../include/QtGui/QStyleOptionMenuItem ../../include/QtGui/QStyleOptionQ3ListViewItem ../../include/QtGui/QStyleOptionQ3DockWindow ../../include/QtGui/QStyleOptionDockWidget ../../include/QtGui/QStyleOptionDockWidgetV2 ../../include/QtGui/QStyleOptionViewItem ../../include/QtGui/QStyleOptionViewItemV2 ../../include/QtGui/QStyleOptionViewItemV3 ../../include/QtGui/QStyleOptionViewItemV4 ../../include/QtGui/QStyleOptionToolBox ../../include/QtGui/QStyleOptionToolBoxV2 ../../include/QtGui/QStyleOptionRubberBand ../../include/QtGui/QStyleOptionComplex ../../include/QtGui/QStyleOptionSlider ../../include/QtGui/QStyleOptionSpinBox ../../include/QtGui/QStyleOptionQ3ListView ../../include/QtGui/QStyleOptionToolButton ../../include/QtGui/QStyleOptionComboBox ../../include/QtGui/QStyleOptionTitleBar ../../include/QtGui/QStyleOptionGroupBox ../../include/QtGui/QStyleOptionSizeGrip ../../include/QtGui/QStyleOptionGraphicsItem ../../include/QtGui/QStyleHintReturn ../../include/QtGui/QStyleHintReturnMask ../../include/QtGui/QStyleHintReturnVariant ../../include/QtGui/QStyleFactoryInterface ../../include/QtGui/QStylePlugin ../../include/QtGui/QWindowsCEStyle ../../include/QtGui/QWindowsMobileStyle ../../include/QtGui/QWindowsStyle ../../include/QtGui/QWindowsVistaStyle ../../include/QtGui/QWindowsXPStyle ../../include/QtGui/QAbstractItemDelegate ../../include/QtGui/QAbstractItemView ../../include/QtGui/QAbstractProxyModel ../../include/QtGui/QColumnView ../../include/QtGui/QDataWidgetMapper ../../include/QtGui/QDirModel ../../include/QtGui/QFileIconProvider ../../include/QtGui/QHeaderView ../../include/QtGui/QIdentityProxyModel ../../include/QtGui/QItemDelegate ../../include/QtGui/QItemEditorCreatorBase ../../include/QtGui/QItemEditorCreator ../../include/QtGui/QStandardItemEditorCreator ../../include/QtGui/QItemEditorFactory ../../include/QtGui/QItemSelectionRange ../../include/QtGui/QItemSelectionModel ../../include/QtGui/QItemSelection ../../include/QtGui/QListView ../../include/QtGui/QListWidgetItem ../../include/QtGui/QListWidget ../../include/QtGui/QProxyModel ../../include/QtGui/QSortFilterProxyModel ../../include/QtGui/QStandardItem ../../include/QtGui/QStandardItemModel ../../include/QtGui/QStringListModel ../../include/QtGui/QStyledItemDelegate ../../include/QtGui/QTableView ../../include/QtGui/QTableWidgetSelectionRange ../../include/QtGui/QTableWidgetItem ../../include/QtGui/QTableWidget ../../include/QtGui/QTreeView ../../include/QtGui/QTreeWidgetItem ../../include/QtGui/QTreeWidget ../../include/QtGui/QTreeWidgetItemIterator ../../include/QtGui/QGraphicsEffect ../../include/QtGui/QGraphicsColorizeEffect ../../include/QtGui/QGraphicsBlurEffect ../../include/QtGui/QGraphicsDropShadowEffect ../../include/QtGui/QGraphicsOpacityEffect ../../include/QtGui/QS60MainApplicationBase ../../include/QtGui/QS60MainApplication ../../include/QtGui/QS60MainAppUiBase ../../include/QtGui/QS60StubAknAppUiBase ../../include/QtGui/QS60StubMEikStatusPaneObserver ../../include/QtGui/QS60StubMAknTouchPaneObserver ../../include/QtGui/QS60StubAknAppUi ../../include/QtGui/QS60MainAppUi ../../include/QtGui/QS60MainDocumentBase ../../include/QtGui/QS60MainDocument ../../include/QtGui/QInputContext ../../include/QtGui/QInputContextFactory ../../include/QtGui/QInputContextFactoryInterface ../../include/QtGui/QInputContextPlugin ../../include/QtGui/QAbstractPageSetupDialog ../../include/QtGui/QAbstractPrintDialog ../../include/QtGui/QColorDialog ../../include/QtGui/QDialog ../../include/QtGui/QErrorMessage ../../include/QtGui/QFileDialog ../../include/QtGui/QFileSystemModel ../../include/QtGui/QFontDialog ../../include/QtGui/QInputDialog ../../include/QtGui/QMessageBox ../../include/QtGui/QPageSetupDialog ../../include/QtGui/QUnixPrintWidget ../../include/QtGui/QPrintDialog ../../include/QtGui/QPrintPreviewDialog ../../include/QtGui/QProgressDialog ../../include/QtGui/QWizard ../../include/QtGui/QWizardPage ../../include/QtGui/QCopChannel ../../include/QtGui/QDecorationAction ../../include/QtGui/QDecoration ../../include/QtGui/QDecorationDefault ../../include/QtGui/QDecorationFactory ../../include/QtGui/QDecorationFactoryInterface ../../include/QtGui/QDecorationPlugin ../../include/QtGui/QDecorationStyled ../../include/QtGui/QDecorationWindows ../../include/QtGui/QDirectPainter ../../include/QtGui/QWSKeyboardHandler ../../include/QtGui/QKbdDriverFactory ../../include/QtGui/QWSKeyboardHandlerFactoryInterface ../../include/QtGui/QKbdDriverPlugin ../../include/QtGui/QWSIntKeyboardHandler ../../include/QtGui/QWSLinuxInputKeyboardHandler ../../include/QtGui/QWSQnxKeyboardHandler ../../include/QtGui/QWSTtyKeyboardHandler ../../include/QtGui/QWSUmKeyboardHandler ../../include/QtGui/QVFbKeyboardHandler ../../include/QtGui/QWSPointerCalibrationData ../../include/QtGui/QWSMouseHandler ../../include/QtGui/QWSCalibratedMouseHandler ../../include/QtGui/QMouseDriverFactory ../../include/QtGui/QWSMouseHandlerFactoryInterface ../../include/QtGui/QMouseDriverPlugin ../../include/QtGui/QIntMouseHandler ../../include/QtGui/QWSLinuxInputMouseHandler ../../include/QtGui/QWSLinuxTPMouseHandler ../../include/QtGui/QWSPcMouseHandler ../../include/QtGui/QQnxMouseHandler ../../include/QtGui/QWSTslibMouseHandler ../../include/QtGui/QVFbMouseHandler ../../include/QtGui/QScreenCursor ../../include/QtGui/QPoolEntry ../../include/QtGui/QScreen ../../include/QtGui/QScreenDriverFactory ../../include/QtGui/QScreenDriverFactoryInterface ../../include/QtGui/QScreenDriverPlugin ../../include/QtGui/QIntfbScreen ../../include/QtGui/QLinuxFb_Shared ../../include/QtGui/QLinuxFbScreen ../../include/QtGui/QProxyScreenCursor ../../include/QtGui/QProxyScreen ../../include/QtGui/QQnxScreen ../../include/QtGui/QTransformedScreen ../../include/QtGui/QVFbScreen ../../include/QtGui/QWSSoundServer ../../include/QtGui/QWSSoundClient ../../include/QtGui/QWSSoundServerSocket ../../include/QtGui/QTransportAuth ../../include/QtGui/QAuthDevice ../../include/QtGui/QVFbHeader ../../include/QtGui/QVFbKeyData ../../include/QtGui/QWSInternalWindowInfo ../../include/QtGui/QWSScreenSaver ../../include/QtGui/QWSWindow ../../include/QtGui/QWSServer ../../include/QtGui/QWSInputMethod ../../include/QtGui/QWSCursorMap ../../include/QtGui/QWSClient ../../include/QtGui/QWSCursor ../../include/QtGui/QWSWindowInfo ../../include/QtGui/QWSDisplay ../../include/QtGui/QWSEmbedWidget ../../include/QtGui/QWSEvent ../../include/QtGui/QWSManager ../../include/QtGui/QWSPropertyManager ../../include/QtGui/QWSProtocolItem ../../include/QtGui/QWSSocket ../../include/QtGui/QWSServerSocket 
+SYNCQT.PRIVATE_HEADER_FILES = ../gui/egl/qegl_p.h ../gui/egl/qeglcontext_p.h ../gui/egl/qeglproperties_p.h ../gui/painting/qbackingstore_p.h ../gui/painting/qbezier_p.h ../gui/painting/qblendfunctions_p.h ../gui/painting/qblittable_p.h ../gui/painting/qcolor_p.h ../gui/painting/qcosmeticstroker_p.h ../gui/painting/qcssutil_p.h ../gui/painting/qcups_p.h ../gui/painting/qdatabuffer_p.h ../gui/painting/qdrawhelper_arm_simd_p.h ../gui/painting/qdrawhelper_mmx_p.h ../gui/painting/qdrawhelper_neon_p.h ../gui/painting/qdrawhelper_p.h ../gui/painting/qdrawhelper_sse_p.h ../gui/painting/qdrawhelper_x86_p.h ../gui/painting/qdrawingprimitive_sse2_p.h ../gui/painting/qemulationpaintengine_p.h ../gui/painting/qfixed_p.h ../gui/painting/qgraphicssystem_mac_p.h ../gui/painting/qgraphicssystem_p.h ../gui/painting/qgraphicssystem_qws_p.h ../gui/painting/qgraphicssystem_raster_p.h ../gui/painting/qgraphicssystem_runtime_p.h ../gui/painting/qgraphicssystemex_p.h ../gui/painting/qgraphicssystemex_symbian_p.h ../gui/painting/qgraphicssystemfactory_p.h ../gui/painting/qgraphicssystemplugin_p.h ../gui/painting/qgrayraster_p.h ../gui/painting/qimagescale_p.h ../gui/painting/qmath_p.h ../gui/painting/qmemrotate_p.h ../gui/painting/qoutlinemapper_p.h ../gui/painting/qpaintbuffer_p.h ../gui/painting/qpaintengine_alpha_p.h ../gui/painting/qpaintengine_blitter_p.h ../gui/painting/qpaintengine_mac_p.h ../gui/painting/qpaintengine_p.h ../gui/painting/qpaintengine_preview_p.h ../gui/painting/qpaintengine_raster_p.h ../gui/painting/qpaintengine_raster_symbian_p.h ../gui/painting/qpaintengine_x11_p.h ../gui/painting/qpaintengineex_p.h ../gui/painting/qpainter_p.h ../gui/painting/qpainterpath_p.h ../gui/painting/qpathclipper_p.h ../gui/painting/qpdf_p.h ../gui/painting/qpen_p.h ../gui/painting/qpolygonclipper_p.h ../gui/painting/qprintengine_mac_p.h ../gui/painting/qprintengine_pdf_p.h ../gui/painting/qprintengine_ps_p.h ../gui/painting/qprintengine_qws_p.h ../gui/painting/qprintengine_win_p.h ../gui/painting/qprinter_p.h ../gui/painting/qprinterinfo_p.h ../gui/painting/qprinterinfo_unix_p.h ../gui/painting/qrasterdefs_p.h ../gui/painting/qrasterizer_p.h ../gui/painting/qstroker_p.h ../gui/painting/qtessellator_p.h ../gui/painting/qtextureglyphcache_p.h ../gui/painting/qunifiedtoolbarsurface_mac_p.h ../gui/painting/qvectorpath_p.h ../gui/painting/qwindowsurface_mac_p.h ../gui/painting/qwindowsurface_p.h ../gui/painting/qwindowsurface_qws_p.h ../gui/painting/qwindowsurface_raster_p.h ../gui/painting/qwindowsurface_s60_p.h ../gui/painting/qwindowsurface_x11_p.h ../gui/kernel/qaction_p.h ../gui/kernel/qapplication_p.h ../gui/kernel/qclipboard_p.h ../gui/kernel/qcocoaapplication_mac_p.h ../gui/kernel/qcocoaapplicationdelegate_mac_p.h ../gui/kernel/qcocoaintrospection_p.h ../gui/kernel/qcocoamenuloader_mac_p.h ../gui/kernel/qcocoapanel_mac_p.h ../gui/kernel/qcocoasharedwindowmethods_mac_p.h ../gui/kernel/qcocoaview_mac_p.h ../gui/kernel/qcocoawindow_mac_p.h ../gui/kernel/qcocoawindowcustomthemeframe_mac_p.h ../gui/kernel/qcocoawindowdelegate_mac_p.h ../gui/kernel/qcursor_p.h ../gui/kernel/qdesktopwidget_mac_p.h ../gui/kernel/qdesktopwidget_qpa_p.h ../gui/kernel/qdnd_p.h ../gui/kernel/qevent_p.h ../gui/kernel/qeventdispatcher_glib_qpa_p.h ../gui/kernel/qeventdispatcher_glib_qws_p.h ../gui/kernel/qeventdispatcher_mac_p.h ../gui/kernel/qeventdispatcher_qpa_p.h ../gui/kernel/qeventdispatcher_qws_p.h ../gui/kernel/qeventdispatcher_s60_p.h ../gui/kernel/qeventdispatcher_x11_p.h ../gui/kernel/qgesture_p.h ../gui/kernel/qgesturemanager_p.h ../gui/kernel/qguieventdispatcher_glib_p.h ../gui/kernel/qguiplatformplugin_p.h ../gui/kernel/qkde_p.h ../gui/kernel/qkeymapper_p.h ../gui/kernel/qkeysequence_p.h ../gui/kernel/qlayout_p.h ../gui/kernel/qlayoutengine_p.h ../gui/kernel/qmacgesturerecognizer_mac_p.h ../gui/kernel/qmultitouch_mac_p.h ../gui/kernel/qnsframeview_mac_p.h ../gui/kernel/qnsthemeframe_mac_p.h ../gui/kernel/qnstitledframe_mac_p.h ../gui/kernel/qplatformintegrationfactory_qpa_p.h ../gui/kernel/qshortcutmap_p.h ../gui/kernel/qsoftkeymanager_common_p.h ../gui/kernel/qsoftkeymanager_p.h ../gui/kernel/qsoftkeymanager_s60_p.h ../gui/kernel/qsound_p.h ../gui/kernel/qstandardgestures_p.h ../gui/kernel/qt_cocoa_helpers_mac_p.h ../gui/kernel/qt_gui_pch.h ../gui/kernel/qt_mac_p.h ../gui/kernel/qt_s60_p.h ../gui/kernel/qt_x11_p.h ../gui/kernel/qwidget_p.h ../gui/kernel/qwidgetaction_p.h ../gui/kernel/qwindowsysteminterface_qpa_p.h ../gui/kernel/qwinnativepangesturerecognizer_win_p.h ../gui/graphicsview/qgraph_p.h ../gui/graphicsview/qgraphicsanchorlayout_p.h ../gui/graphicsview/qgraphicsitem_p.h ../gui/graphicsview/qgraphicslayout_p.h ../gui/graphicsview/qgraphicslayoutitem_p.h ../gui/graphicsview/qgraphicsproxywidget_p.h ../gui/graphicsview/qgraphicsscene_bsp_p.h ../gui/graphicsview/qgraphicsscene_p.h ../gui/graphicsview/qgraphicsscenebsptreeindex_p.h ../gui/graphicsview/qgraphicssceneindex_p.h ../gui/graphicsview/qgraphicsscenelinearindex_p.h ../gui/graphicsview/qgraphicstransform_p.h ../gui/graphicsview/qgraphicsview_p.h ../gui/graphicsview/qgraphicswidget_p.h ../gui/graphicsview/qgridlayoutengine_p.h ../gui/graphicsview/qsimplex_p.h ../gui/statemachine/qbasickeyeventtransition_p.h ../gui/statemachine/qbasicmouseeventtransition_p.h ../gui/image/qbmphandler_p.h ../gui/image/qgifhandler_p.h ../gui/image/qicon_p.h ../gui/image/qiconloader_p.h ../gui/image/qimage_p.h ../gui/image/qimagepixmapcleanuphooks_p.h ../gui/image/qjpeghandler_p.h ../gui/image/qmnghandler_p.h ../gui/image/qnativeimage_p.h ../gui/image/qnativeimagehandleprovider_p.h ../gui/image/qpaintengine_pic_p.h ../gui/image/qpicture_p.h ../gui/image/qpixmap_blitter_p.h ../gui/image/qpixmap_mac_p.h ../gui/image/qpixmap_raster_p.h ../gui/image/qpixmap_raster_symbian_p.h ../gui/image/qpixmap_x11_p.h ../gui/image/qpixmapcache_p.h ../gui/image/qpixmapdata_p.h ../gui/image/qpixmapdatafactory_p.h ../gui/image/qpixmapfilter_p.h ../gui/image/qpnghandler_p.h ../gui/image/qppmhandler_p.h ../gui/image/qtiffhandler_p.h ../gui/image/qvolatileimage_p.h ../gui/image/qvolatileimagedata_p.h ../gui/image/qxbmhandler_p.h ../gui/image/qxpmhandler_p.h ../gui/text/qabstractfontengine_p.h ../gui/text/qabstracttextdocumentlayout_p.h ../gui/text/qcssparser_p.h ../gui/text/qfont_p.h ../gui/text/qfontengine_coretext_p.h ../gui/text/qfontengine_ft_p.h ../gui/text/qfontengine_mac_p.h ../gui/text/qfontengine_p.h ../gui/text/qfontengine_qpa_p.h ../gui/text/qfontengine_qpf_p.h ../gui/text/qfontengine_s60_p.h ../gui/text/qfontengine_win_p.h ../gui/text/qfontengine_x11_p.h ../gui/text/qfontenginedirectwrite_p.h ../gui/text/qfontengineglyphcache_p.h ../gui/text/qfontsubset_p.h ../gui/text/qfragmentmap_p.h ../gui/text/qrawfont_p.h ../gui/text/qstatictext_p.h ../gui/text/qtextcontrol_p.h ../gui/text/qtextcontrol_p_p.h ../gui/text/qtextcursor_p.h ../gui/text/qtextdocument_p.h ../gui/text/qtextdocumentfragment_p.h ../gui/text/qtextdocumentlayout_p.h ../gui/text/qtextengine_p.h ../gui/text/qtextformat_p.h ../gui/text/qtexthtmlparser_p.h ../gui/text/qtextimagehandler_p.h ../gui/text/qtextobject_p.h ../gui/text/qtextodfwriter_p.h ../gui/text/qtexttable_p.h ../gui/text/qzipreader_p.h ../gui/text/qzipwriter_p.h ../gui/widgets/qabstractbutton_p.h ../gui/widgets/qabstractplatformmenubar_p.h ../gui/widgets/qabstractscrollarea_p.h ../gui/widgets/qabstractslider_p.h ../gui/widgets/qabstractspinbox_p.h ../gui/widgets/qcalendartextnavigator_p.h ../gui/widgets/qcocoamenu_mac_p.h ../gui/widgets/qcocoatoolbardelegate_mac_p.h ../gui/widgets/qcombobox_p.h ../gui/widgets/qdatetimeedit_p.h ../gui/widgets/qdockarealayout_p.h ../gui/widgets/qdockwidget_p.h ../gui/widgets/qeffects_p.h ../gui/widgets/qframe_p.h ../gui/widgets/qlabel_p.h ../gui/widgets/qlinecontrol_p.h ../gui/widgets/qlineedit_p.h ../gui/widgets/qmainwindowlayout_p.h ../gui/widgets/qmdiarea_p.h ../gui/widgets/qmdisubwindow_p.h ../gui/widgets/qmenu_p.h ../gui/widgets/qmenu_wince_resource_p.h ../gui/widgets/qmenubar_p.h ../gui/widgets/qmenubar_x11_p.h ../gui/widgets/qplaintextedit_p.h ../gui/widgets/qpushbutton_p.h ../gui/widgets/qscrollarea_p.h ../gui/widgets/qsplitter_p.h ../gui/widgets/qtabbar_p.h ../gui/widgets/qtextedit_p.h ../gui/widgets/qtoolbar_p.h ../gui/widgets/qtoolbararealayout_p.h ../gui/widgets/qtoolbarextension_p.h ../gui/widgets/qtoolbarlayout_p.h ../gui/widgets/qtoolbarseparator_p.h ../gui/widgets/qwidgetanimator_p.h ../gui/widgets/qwidgetresizehandler_p.h ../gui/accessible/qaccessible_mac_p.h ../gui/util/qcompleter_p.h ../gui/util/qflickgesture_p.h ../gui/util/qsystemtrayicon_p.h ../gui/util/qundostack_p.h ../gui/styles/qcleanlooksstyle_p.h ../gui/styles/qcommonstyle_p.h ../gui/styles/qcommonstylepixmaps_p.h ../gui/styles/qgtkpainter_p.h ../gui/styles/qgtkstyle_p.h ../gui/styles/qmacstyle_mac_p.h ../gui/styles/qmacstylepixmaps_mac_p.h ../gui/styles/qmotifstyle_p.h ../gui/styles/qproxystyle_p.h ../gui/styles/qs60style_feedbackinterface_p.h ../gui/styles/qs60style_p.h ../gui/styles/qstyle_p.h ../gui/styles/qstylehelper_p.h ../gui/styles/qstylesheetstyle_p.h ../gui/styles/qwindowscestyle_p.h ../gui/styles/qwindowsmobilestyle_p.h ../gui/styles/qwindowsstyle_p.h ../gui/styles/qwindowsvistastyle_p.h ../gui/styles/qwindowsxpstyle_p.h ../gui/itemviews/qabstractitemview_p.h ../gui/itemviews/qabstractproxymodel_p.h ../gui/itemviews/qbsptree_p.h ../gui/itemviews/qcolumnview_p.h ../gui/itemviews/qcolumnviewgrip_p.h ../gui/itemviews/qheaderview_p.h ../gui/itemviews/qitemeditorfactory_p.h ../gui/itemviews/qitemselectionmodel_p.h ../gui/itemviews/qlistview_p.h ../gui/itemviews/qlistwidget_p.h ../gui/itemviews/qproxymodel_p.h ../gui/itemviews/qstandarditemmodel_p.h ../gui/itemviews/qtableview_p.h ../gui/itemviews/qtablewidget_p.h ../gui/itemviews/qtreeview_p.h ../gui/itemviews/qtreewidget_p.h ../gui/itemviews/qtreewidgetitemiterator_p.h ../gui/itemviews/qwidgetitemdata_p.h ../gui/effects/qgraphicseffect_p.h ../gui/s60framework/qs60keycapture_p.h ../gui/s60framework/qs60mainapplication_p.h ../gui/inputmethod/qcoefepinputcontext_p.h ../gui/inputmethod/qinputcontext_p.h ../gui/inputmethod/qmacinputcontext_p.h ../gui/inputmethod/qwininputcontext_p.h ../gui/inputmethod/qwsinputcontext_p.h ../gui/inputmethod/qximinputcontext_p.h ../gui/dialogs/qabstractpagesetupdialog_p.h ../gui/dialogs/qabstractprintdialog_p.h ../gui/dialogs/qcolordialog_p.h ../gui/dialogs/qdialog_p.h ../gui/dialogs/qfiledialog_p.h ../gui/dialogs/qfiledialog_win_p.h ../gui/dialogs/qfileinfogatherer_p.h ../gui/dialogs/qfilesystemmodel_p.h ../gui/dialogs/qfontdialog_p.h ../gui/dialogs/qfscompleter_p.h ../gui/dialogs/qpagesetupdialog_unix_p.h ../gui/dialogs/qsidebar_p.h ../gui/dialogs/qwizard_win_p.h ../gui/embedded/qkbd_defaultmap_qws_p.h ../gui/embedded/qkbd_qws_p.h ../gui/embedded/qlock_p.h ../gui/embedded/qscreenmulti_qws_p.h ../gui/embedded/qtransportauth_qws_p.h ../gui/embedded/qunixsocket_p.h ../gui/embedded/qunixsocketserver_p.h ../gui/embedded/qwindowsystem_p.h ../gui/embedded/qwscommand_qws_p.h ../gui/embedded/qwsdisplay_qws_p.h ../gui/embedded/qwslock_p.h ../gui/embedded/qwsmanager_p.h ../gui/embedded/qwssharedmemory_p.h ../gui/embedded/qwssignalhandler_p.h 
Index: include/QtGui/qglyphs.h
===================================================================
--- include/QtGui/qglyphs.h	(revision 0)
+++ include/QtGui/qglyphs.h	(revision 43814)
@@ -0,0 +1 @@
+#include "../../src/gui/text/qglyphs.h"
Index: include/QtGui/private/qglyphrun_p.h
===================================================================
--- include/QtGui/private/qglyphrun_p.h	(revision 36094)
+++ include/QtGui/private/qglyphrun_p.h	(revision 43814)
@@ -1 +0,0 @@
-#include "../../../src/gui/text/qglyphrun_p.h"
Index: include/QtGui/private/qglyphs_p.h
===================================================================
--- include/QtGui/private/qglyphs_p.h	(revision 0)
+++ include/QtGui/private/qglyphs_p.h	(revision 43814)
@@ -0,0 +1 @@
+#include "../../../src/gui/text/qglyphs_p.h"
Index: include/QtGui/QtGui
===================================================================
--- include/QtGui/QtGui	(revision 36094)
+++ include/QtGui/QtGui	(revision 43814)
@@ -81,7 +81,7 @@
 #include "qfontdatabase.h"
 #include "qfontinfo.h"
 #include "qfontmetrics.h"
-#include "qglyphrun.h"
+#include "qglyphs.h"
 #include "qrawfont.h"
 #include "qstatictext.h"
 #include "qsyntaxhighlighter.h"
Index: examples/webkit/fancybrowser/mainwindow.cpp
===================================================================
--- examples/webkit/fancybrowser/mainwindow.cpp	(revision 36094)
+++ examples/webkit/fancybrowser/mainwindow.cpp	(revision 43814)
@@ -141,9 +141,9 @@
 void MainWindow::adjustTitle()
 {
     if (progress <= 0 || progress >= 100)
-        setWindowTitle(view->title());
+        setWindowTitle(QString("%1 [%2]").arg(view->title()).arg(qWebKitEngineVersion()));
     else
-        setWindowTitle(QString("%1 (%2%)").arg(view->title()).arg(progress));
+        setWindowTitle(QString("%1 (%2%) [%3]").arg(view->title()).arg(progress).arg(qWebKitEngineVersion()));
 }
 
 void MainWindow::setProgress(int p)
